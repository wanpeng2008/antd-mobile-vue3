module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "00fd":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "014b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__("e53d");
var has = __webpack_require__("07e3");
var DESCRIPTORS = __webpack_require__("8e60");
var $export = __webpack_require__("63b6");
var redefine = __webpack_require__("9138");
var META = __webpack_require__("ebfd").KEY;
var $fails = __webpack_require__("294c");
var shared = __webpack_require__("dbdb");
var setToStringTag = __webpack_require__("45f2");
var uid = __webpack_require__("62a0");
var wks = __webpack_require__("5168");
var wksExt = __webpack_require__("ccb9");
var wksDefine = __webpack_require__("6718");
var enumKeys = __webpack_require__("47ee");
var isArray = __webpack_require__("9003");
var anObject = __webpack_require__("e4ae");
var isObject = __webpack_require__("f772");
var toIObject = __webpack_require__("36c3");
var toPrimitive = __webpack_require__("1bc3");
var createDesc = __webpack_require__("aebd");
var _create = __webpack_require__("a159");
var gOPNExt = __webpack_require__("0395");
var $GOPD = __webpack_require__("bf0b");
var $DP = __webpack_require__("d9f6");
var $keys = __webpack_require__("c3a1");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__("6abf").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__("355d").f = $propertyIsEnumerable;
  __webpack_require__("9aa9").f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__("b8e3")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__("35e8")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "014d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating whitespace.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function whitespace(rule, value, source, errors, options) {
  if (/^\s+$/.test(value) || value === '') {
    errors.push(util.format(options.messages.whitespace, rule.fullField));
  }
}

exports['default'] = whitespace;

/***/ }),

/***/ "01f9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("2d00");
var $export = __webpack_require__("5ca1");
var redefine = __webpack_require__("2aba");
var hide = __webpack_require__("32e9");
var Iterators = __webpack_require__("84f2");
var $iterCreate = __webpack_require__("41a0");
var setToStringTag = __webpack_require__("7f20");
var getPrototypeOf = __webpack_require__("38fd");
var ITERATOR = __webpack_require__("2b4c")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "0293":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__("241e");
var $getPrototypeOf = __webpack_require__("53e2");

__webpack_require__("ce7e")('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),

/***/ "02f4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var defined = __webpack_require__("be13");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "02f8":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "0390":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__("02f4")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "0395":
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__("36c3");
var gOPN = __webpack_require__("6abf").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "03dd":
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__("eac5"),
    nativeKeys = __webpack_require__("57a5");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),

/***/ "03ee":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "0422":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Checkbox = __webpack_require__("2d38");

var _Checkbox2 = _interopRequireDefault(_Checkbox);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = _Checkbox2['default'];

/***/ }),

/***/ "061b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("fa99");

/***/ }),

/***/ "0644":
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__("3818");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;


/***/ }),

/***/ "07c7":
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ "07e3":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "087d":
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),

/***/ "0a0d":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("e829");

/***/ }),

/***/ "0a49":
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__("9b43");
var IObject = __webpack_require__("626a");
var toObject = __webpack_require__("4bf8");
var toLength = __webpack_require__("9def");
var asc = __webpack_require__("cd1c");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "0a90":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("63b6");
var $parseFloat = __webpack_require__("10ff");
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });


/***/ }),

/***/ "0b07":
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__("34ac"),
    getValue = __webpack_require__("3698");

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ "0b64":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
var isArray = __webpack_require__("9003");
var SPECIES = __webpack_require__("5168")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "0bfb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__("cb7c");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "0ca5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = getRequestAnimationFrame;
exports.cancelRequestAnimationFrame = cancelRequestAnimationFrame;
var availablePrefixs = ['moz', 'ms', 'webkit'];

function requestAnimationFramePolyfill() {
  var lastTime = 0;
  return function (callback) {
    var currTime = new Date().getTime();
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
    var id = window.setTimeout(function () {
      callback(currTime + timeToCall);
    }, timeToCall);
    lastTime = currTime + timeToCall;
    return id;
  };
}

function getRequestAnimationFrame() {
  if (typeof window === 'undefined') {
    return function () {};
  }
  if (window.requestAnimationFrame) {
    // https://github.com/vuejs/vue/issues/4465
    return window.requestAnimationFrame.bind(window);
  }

  var prefix = availablePrefixs.filter(function (key) {
    return key + 'RequestAnimationFrame' in window;
  })[0];

  return prefix ? window[prefix + 'RequestAnimationFrame'] : requestAnimationFramePolyfill();
}

function cancelRequestAnimationFrame(id) {
  if (typeof window === 'undefined') {
    return null;
  }
  if (window.cancelAnimationFrame) {
    return window.cancelAnimationFrame(id);
  }
  var prefix = availablePrefixs.filter(function (key) {
    return key + 'CancelAnimationFrame' in window || key + 'CancelRequestAnimationFrame' in window;
  })[0];

  return prefix ? (window[prefix + 'CancelAnimationFrame'] || window[prefix + 'CancelRequestAnimationFrame']).call(this, id) : clearTimeout(id);
}

/***/ }),

/***/ "0d24":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__("2b3e"),
    stubFalse = __webpack_require__("07c7");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("62e4")(module)))

/***/ }),

/***/ "0d58":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("ce10");
var enumBugKeys = __webpack_require__("e11e");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "0f0f":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    keysIn = __webpack_require__("9934");

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),

/***/ "0fc5":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "0fc9":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("3a38");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "1041":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    getSymbolsIn = __webpack_require__("a029");

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),

/***/ "104d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("1b4c");

__webpack_require__("55af");

/***/ }),

/***/ "1098":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__("17ed");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__("f893");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),

/***/ "10ff":
/***/ (function(module, exports, __webpack_require__) {

var $parseFloat = __webpack_require__("e53d").parseFloat;
var $trim = __webpack_require__("a1ce").trim;

module.exports = 1 / $parseFloat(__webpack_require__("e692") + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;


/***/ }),

/***/ "1169":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("2d95");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "1173":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "11e9":
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__("52a7");
var createDesc = __webpack_require__("4630");
var toIObject = __webpack_require__("6821");
var toPrimitive = __webpack_require__("6a99");
var has = __webpack_require__("69a8");
var IE8_DOM_DEFINE = __webpack_require__("c69a");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__("9e1e") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "123a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a number is a floating point number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function floatFn(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = floatFn;

/***/ }),

/***/ "1290":
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),

/***/ "12d4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a boolean.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function boolean(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = boolean;

/***/ }),

/***/ "1310":
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "1318":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = __webpack_require__("8e8e");

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _Dialog = __webpack_require__("9517");

var _Dialog2 = _interopRequireDefault(_Dialog);

var _ContainerRender = __webpack_require__("f772d");

var _ContainerRender2 = _interopRequireDefault(_ContainerRender);

var _IDialogPropTypes = __webpack_require__("9a8b");

var _IDialogPropTypes2 = _interopRequireDefault(_IDialogPropTypes);

var _propsUtil = __webpack_require__("73c8");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var IDialogPropTypes = (0, _IDialogPropTypes2['default'])();
var DialogWrap = {
  props: (0, _extends3['default'])({}, IDialogPropTypes, {
    visible: IDialogPropTypes.visible.def(false)
  }),
  data: function data() {
    this.renderComponent = function () {};
    this.removeContainer = function () {};
    return {};
  },
  beforeDestroy: function beforeDestroy() {
    if (this.visible) {
      this.renderComponent({
        afterClose: this.removeContainer,
        visible: false,
        on: {
          close: function close() {}
        }
      });
    } else {
      this.removeContainer();
    }
  },

  methods: {
    getComponent: function getComponent() {
      var extra = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var h = this.$createElement;
      var $attrs = this.$attrs,
          $listeners = this.$listeners,
          $props = this.$props,
          $slots = this.$slots;
      var on = extra.on,
          otherProps = (0, _objectWithoutProperties3['default'])(extra, ['on']);

      var dialogProps = {
        props: (0, _extends3['default'])({}, $props, {
          dialogClass: (0, _propsUtil.getClass)(this),
          dialogStyle: (0, _propsUtil.getStyle)(this)
        }, otherProps),
        attrs: $attrs,
        ref: '_component',
        key: 'dialog',
        on: (0, _extends3['default'])({}, $listeners, on)
      };
      return h(
        _Dialog2['default'],
        dialogProps,
        [$slots['default']]
      );
    },
    getContainer2: function getContainer2() {
      var container = document.createElement('div');
      if (this.getContainer) {
        this.getContainer().appendChild(container);
      } else {
        document.body.appendChild(container);
      }
      return container;
    }
  },

  render: function render() {
    var _this = this;

    var h = arguments[0];
    var visible = this.visible;

    return h(_ContainerRender2['default'], {
      attrs: {
        parent: this,
        visible: visible,
        autoDestroy: false,
        getComponent: this.getComponent,
        getContainer: this.getContainer2,
        children: function children(_ref) {
          var renderComponent = _ref.renderComponent,
              removeContainer = _ref.removeContainer;

          _this.renderComponent = renderComponent;
          _this.removeContainer = removeContainer;
          return null;
        }
      }
    });
  }
};

exports['default'] = DialogWrap;

/***/ }),

/***/ "134b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @ignore
 * event object for dom
 * @author yiminghe@gmail.com
 */



Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _EventBaseObject = __webpack_require__("4039");

var _EventBaseObject2 = _interopRequireDefault(_EventBaseObject);

var _objectAssign = __webpack_require__("320c");

var _objectAssign2 = _interopRequireDefault(_objectAssign);

var TRUE = true;
var FALSE = false;
var commonProps = ['altKey', 'bubbles', 'cancelable', 'ctrlKey', 'currentTarget', 'eventPhase', 'metaKey', 'shiftKey', 'target', 'timeStamp', 'view', 'type'];

function isNullOrUndefined(w) {
  return w === null || w === undefined;
}

var eventNormalizers = [{
  reg: /^key/,
  props: ['char', 'charCode', 'key', 'keyCode', 'which'],
  fix: function fix(event, nativeEvent) {
    if (isNullOrUndefined(event.which)) {
      event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;
    }

    // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
    if (event.metaKey === undefined) {
      event.metaKey = event.ctrlKey;
    }
  }
}, {
  reg: /^touch/,
  props: ['touches', 'changedTouches', 'targetTouches']
}, {
  reg: /^hashchange$/,
  props: ['newURL', 'oldURL']
}, {
  reg: /^gesturechange$/i,
  props: ['rotation', 'scale']
}, {
  reg: /^(mousewheel|DOMMouseScroll)$/,
  props: [],
  fix: function fix(event, nativeEvent) {
    var deltaX = undefined;
    var deltaY = undefined;
    var delta = undefined;
    var wheelDelta = nativeEvent.wheelDelta;
    var axis = nativeEvent.axis;
    var wheelDeltaY = nativeEvent.wheelDeltaY;
    var wheelDeltaX = nativeEvent.wheelDeltaX;
    var detail = nativeEvent.detail;

    // ie/webkit
    if (wheelDelta) {
      delta = wheelDelta / 120;
    }

    // gecko
    if (detail) {
      // press control e.detail == 1 else e.detail == 3
      delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
    }

    // Gecko
    if (axis !== undefined) {
      if (axis === event.HORIZONTAL_AXIS) {
        deltaY = 0;
        deltaX = 0 - delta;
      } else if (axis === event.VERTICAL_AXIS) {
        deltaX = 0;
        deltaY = delta;
      }
    }

    // Webkit
    if (wheelDeltaY !== undefined) {
      deltaY = wheelDeltaY / 120;
    }
    if (wheelDeltaX !== undefined) {
      deltaX = -1 * wheelDeltaX / 120;
    }

    // 默认 deltaY (ie)
    if (!deltaX && !deltaY) {
      deltaY = delta;
    }

    if (deltaX !== undefined) {
      /**
       * deltaX of mousewheel event
       * @property deltaX
       * @member Event.DomEvent.Object
       */
      event.deltaX = deltaX;
    }

    if (deltaY !== undefined) {
      /**
       * deltaY of mousewheel event
       * @property deltaY
       * @member Event.DomEvent.Object
       */
      event.deltaY = deltaY;
    }

    if (delta !== undefined) {
      /**
       * delta of mousewheel event
       * @property delta
       * @member Event.DomEvent.Object
       */
      event.delta = delta;
    }
  }
}, {
  reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
  props: ['buttons', 'clientX', 'clientY', 'button', 'offsetX', 'relatedTarget', 'which', 'fromElement', 'toElement', 'offsetY', 'pageX', 'pageY', 'screenX', 'screenY'],
  fix: function fix(event, nativeEvent) {
    var eventDoc = undefined;
    var doc = undefined;
    var body = undefined;
    var target = event.target;
    var button = nativeEvent.button;

    // Calculate pageX/Y if missing and clientX/Y available
    if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
      eventDoc = target.ownerDocument || document;
      doc = eventDoc.documentElement;
      body = eventDoc.body;
      event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
      event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
    }

    // which for click: 1 === left; 2 === middle; 3 === right
    // do not use button
    if (!event.which && button !== undefined) {
      if (button & 1) {
        event.which = 1;
      } else if (button & 2) {
        event.which = 3;
      } else if (button & 4) {
        event.which = 2;
      } else {
        event.which = 0;
      }
    }

    // add relatedTarget, if necessary
    if (!event.relatedTarget && event.fromElement) {
      event.relatedTarget = event.fromElement === target ? event.toElement : event.fromElement;
    }

    return event;
  }
}];

function retTrue() {
  return TRUE;
}

function retFalse() {
  return FALSE;
}

function DomEventObject(nativeEvent) {
  var type = nativeEvent.type;

  var isNative = typeof nativeEvent.stopPropagation === 'function' || typeof nativeEvent.cancelBubble === 'boolean';

  _EventBaseObject2['default'].call(this);

  this.nativeEvent = nativeEvent;

  // in case dom event has been mark as default prevented by lower dom node
  var isDefaultPrevented = retFalse;
  if ('defaultPrevented' in nativeEvent) {
    isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;
  } else if ('getPreventDefault' in nativeEvent) {
    // https://bugzilla.mozilla.org/show_bug.cgi?id=691151
    isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;
  } else if ('returnValue' in nativeEvent) {
    isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;
  }

  this.isDefaultPrevented = isDefaultPrevented;

  var fixFns = [];
  var fixFn = undefined;
  var l = undefined;
  var prop = undefined;
  var props = commonProps.concat();

  eventNormalizers.forEach(function (normalizer) {
    if (type.match(normalizer.reg)) {
      props = props.concat(normalizer.props);
      if (normalizer.fix) {
        fixFns.push(normalizer.fix);
      }
    }
  });

  l = props.length;

  // clone properties of the original event object
  while (l) {
    prop = props[--l];
    this[prop] = nativeEvent[prop];
  }

  // fix target property, if necessary
  if (!this.target && isNative) {
    this.target = nativeEvent.srcElement || document; // srcElement might not be defined either
  }

  // check if target is a text node (safari)
  if (this.target && this.target.nodeType === 3) {
    this.target = this.target.parentNode;
  }

  l = fixFns.length;

  while (l) {
    fixFn = fixFns[--l];
    fixFn(this, nativeEvent);
  }

  this.timeStamp = nativeEvent.timeStamp || Date.now();
}

var EventBaseObjectProto = _EventBaseObject2['default'].prototype;

(0, _objectAssign2['default'])(DomEventObject.prototype, EventBaseObjectProto, {
  constructor: DomEventObject,

  preventDefault: function preventDefault() {
    var e = this.nativeEvent;

    // if preventDefault exists run it on the original event
    if (e.preventDefault) {
      e.preventDefault();
    } else {
      // otherwise set the returnValue property of the original event to FALSE (IE)
      e.returnValue = FALSE;
    }

    EventBaseObjectProto.preventDefault.call(this);
  },

  stopPropagation: function stopPropagation() {
    var e = this.nativeEvent;

    // if stopPropagation exists run it on the original event
    if (e.stopPropagation) {
      e.stopPropagation();
    } else {
      // otherwise set the cancelBubble property of the original event to TRUE (IE)
      e.cancelBubble = TRUE;
    }

    EventBaseObjectProto.stopPropagation.call(this);
  }
});

exports['default'] = DomEventObject;
module.exports = exports['default'];

/***/ }),

/***/ "1368":
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__("da03");

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ "13c8":
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__("c3a1");
var toIObject = __webpack_require__("36c3");
var isEnum = __webpack_require__("355d").f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};


/***/ }),

/***/ "1495":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc");
var anObject = __webpack_require__("cb7c");
var getKeys = __webpack_require__("0d58");

module.exports = __webpack_require__("9e1e") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "1654":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__("71c1")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__("30f1")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "1683":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _vmc_date_picker_locale_zh_CN__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ffc9");

/* harmony default export */ __webpack_exports__["default"] = (_vmc_date_picker_locale_zh_CN__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]);

/***/ }),

/***/ "1691":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "1727":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("469f"), __esModule: true };

/***/ }),

/***/ "17ed":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("d8d6"), __esModule: true };

/***/ }),

/***/ "1907":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("8aae"), __esModule: true };

/***/ }),

/***/ "1996":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var ENUM = 'enum';

/**
 *  Rule for validating a value exists in an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enumerable(rule, value, source, errors, options) {
  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
  if (rule[ENUM].indexOf(value) === -1) {
    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));
  }
}

exports['default'] = enumerable;

/***/ }),

/***/ "19dd":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "1a2d":
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__("42a2"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),

/***/ "1a8c":
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "1af6":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__("63b6");

$export($export.S, 'Array', { isArray: __webpack_require__("9003") });


/***/ }),

/***/ "1af7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = __webpack_require__("8e8e");

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _vue = __webpack_require__("8bbf");

var _vue2 = _interopRequireDefault(_vue);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

var _propsUtil = __webpack_require__("73c8");

var _BaseMixin = __webpack_require__("48bb");

var _BaseMixin2 = _interopRequireDefault(_BaseMixin);

var _createChainedFunction = __webpack_require__("a5a7");

var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

var _getTransitionProps = __webpack_require__("5c25");

var _getTransitionProps2 = _interopRequireDefault(_getTransitionProps);

var _Notice = __webpack_require__("9d03");

var _Notice2 = _interopRequireDefault(_Notice);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function noop() {}

var seed = 0;
var now = Date.now();

function getUuid() {
  return 'rcNotification_' + now + '_' + seed++;
}

var Notification = {
  mixins: [_BaseMixin2['default']],
  props: {
    prefixCls: _vueTypes2['default'].string.def('rc-notification'),
    transitionName: _vueTypes2['default'].string,
    animation: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].object]).def('fade'),
    maxCount: _vueTypes2['default'].number,
    closeIcon: _vueTypes2['default'].any
  },
  data: function data() {
    return {
      notices: []
    };
  },

  methods: {
    getTransitionName: function getTransitionName() {
      var props = this.$props;
      var transitionName = props.transitionName;
      if (!transitionName && props.animation) {
        transitionName = props.prefixCls + '-' + props.animation;
      }
      return transitionName;
    },
    add: function add(notice) {
      var key = notice.key = notice.key || getUuid();
      var maxCount = this.$props.maxCount;

      this.setState(function (previousState) {
        var notices = previousState.notices;
        var noticeIndex = notices.map(function (v) {
          return v.key;
        }).indexOf(key);
        var updatedNotices = notices.concat();
        if (noticeIndex !== -1) {
          updatedNotices.splice(noticeIndex, 1, notice);
        } else {
          if (maxCount && notices.length >= maxCount) {
            // XXX, use key of first item to update new added (let React to move exsiting
            // instead of remove and mount). Same key was used before for both a) external
            // manual control and b) internal react 'key' prop , which is not that good.
            notice.updateKey = updatedNotices[0].updateKey || updatedNotices[0].key;
            updatedNotices.shift();
          }
          updatedNotices.push(notice);
        }
        return {
          notices: updatedNotices
        };
      });
    },
    remove: function remove(key) {
      this.setState(function (previousState) {
        return {
          notices: previousState.notices.filter(function (notice) {
            return notice.key !== key;
          })
        };
      });
    }
  },

  render: function render(h) {
    var _this = this;

    var prefixCls = this.prefixCls,
        notices = this.notices,
        remove = this.remove,
        getTransitionName = this.getTransitionName;

    var transitionProps = (0, _getTransitionProps2['default'])(getTransitionName());
    var noticeNodes = notices.map(function (notice, index) {
      var update = Boolean(index === notices.length - 1 && notice.updateKey);
      var key = notice.updateKey ? notice.updateKey : notice.key;

      var content = notice.content,
          duration = notice.duration,
          closable = notice.closable,
          onClose = notice.onClose,
          style = notice.style,
          className = notice['class'];

      var close = (0, _createChainedFunction2['default'])(remove.bind(_this, notice.key), onClose);
      var noticeProps = {
        props: {
          prefixCls: prefixCls,
          duration: duration,
          closable: closable,
          update: update,
          closeIcon: (0, _propsUtil.getComponentFromProp)(_this, 'closeIcon')
        },
        on: {
          close: close,
          click: notice.onClick || noop
        },
        style: style,
        'class': className,
        key: key
      };
      return h(
        _Notice2['default'],
        noticeProps,
        [typeof content === 'function' ? content(h) : content]
      );
    });
    var className = (0, _defineProperty3['default'])({}, prefixCls, 1);
    var style = (0, _propsUtil.getStyle)(this);
    return h(
      'div',
      {
        'class': className,
        style: style || {
          top: '65px',
          left: '50%'
        }
      },
      [h(
        'transition-group',
        transitionProps,
        [noticeNodes]
      )]
    );
  }
};

Notification.newInstance = function newNotificationInstance(properties, callback) {
  var _ref = properties || {},
      getContainer = _ref.getContainer,
      style = _ref.style,
      className = _ref['class'],
      props = (0, _objectWithoutProperties3['default'])(_ref, ['getContainer', 'style', 'class']);

  var div = document.createElement('div');
  if (getContainer) {
    var root = getContainer();
    root.appendChild(div);
  } else {
    document.body.appendChild(div);
  }
  new _vue2['default']({
    el: div,
    mounted: function mounted() {
      var self = this;
      this.$nextTick(function () {
        callback({
          notice: function notice(noticeProps) {
            self.$refs.notification.add(noticeProps);
          },
          removeNotice: function removeNotice(key) {
            self.$refs.notification.remove(key);
          },

          component: self,
          destroy: function destroy() {
            self.$destroy();
            self.$el.parentNode.removeChild(self.$el);
          }
        });
      });
    },
    render: function render() {
      var h = arguments[0];

      var p = {
        props: props,
        ref: 'notification',
        style: style,
        'class': className
      };
      return h(Notification, p);
    }
  });
};

exports['default'] = Notification;

/***/ }),

/***/ "1afe":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _required = __webpack_require__("975a");

var _required2 = _interopRequireDefault(_required);

var _whitespace = __webpack_require__("014d");

var _whitespace2 = _interopRequireDefault(_whitespace);

var _type = __webpack_require__("a043");

var _type2 = _interopRequireDefault(_type);

var _range = __webpack_require__("97c3");

var _range2 = _interopRequireDefault(_range);

var _enum = __webpack_require__("1996");

var _enum2 = _interopRequireDefault(_enum);

var _pattern = __webpack_require__("9a85");

var _pattern2 = _interopRequireDefault(_pattern);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  required: _required2['default'],
  whitespace: _whitespace2['default'],
  type: _type2['default'],
  range: _range2['default'],
  'enum': _enum2['default'],
  pattern: _pattern2['default']
};

/***/ }),

/***/ "1b4c":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "1bac":
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__("7d1f"),
    getSymbolsIn = __webpack_require__("a029"),
    keysIn = __webpack_require__("9934");

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),

/***/ "1bc3":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("f772");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "1ce5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates the regular expression type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function regexp(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (!(0, _util.isEmptyValue)(value)) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = regexp;

/***/ }),

/***/ "1cec":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),

/***/ "1df8":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__("63b6");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__("ead6").set });


/***/ }),

/***/ "1ec9":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
var document = __webpack_require__("e53d").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "1efc":
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),

/***/ "1fc8":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),

/***/ "2045":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (false) {}

module.exports = warning;


/***/ }),

/***/ "2095":
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 140);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview Utility for F2
 * @author dxq613 @gmail.com
 * @author sima.zhang1990@gmail.com
 */
var DomUtil = __webpack_require__(47);

var Util = {
  upperFirst: __webpack_require__(48),
  lowerFirst: __webpack_require__(49),
  isString: __webpack_require__(50),
  isNumber: __webpack_require__(51),
  isBoolean: __webpack_require__(52),
  isFunction: __webpack_require__(53),
  isDate: __webpack_require__(54),
  isArray: __webpack_require__(20),
  isNil: __webpack_require__(30),
  isObject: __webpack_require__(31),
  isPlainObject: __webpack_require__(32),
  deepMix: __webpack_require__(56),
  mix: __webpack_require__(57),
  each: __webpack_require__(33),
  uniq: __webpack_require__(58),
  isObjectValueEqual: function isObjectValueEqual(a, b) {
    // for vue.js
    a = Object.assign({}, a);
    b = Object.assign({}, b);
    var aProps = Object.getOwnPropertyNames(a);
    var bProps = Object.getOwnPropertyNames(b);

    if (aProps.length !== bProps.length) {
      return false;
    }

    for (var i = 0, len = aProps.length; i < len; i++) {
      var propName = aProps[i];

      if (a[propName] !== b[propName]) {
        return false;
      }
    }

    return true;
  },
  wrapBehavior: function wrapBehavior(obj, action) {
    if (obj['_wrap_' + action]) {
      return obj['_wrap_' + action];
    }

    var method = function method(e) {
      obj[action](e);
    };

    obj['_wrap_' + action] = method;
    return method;
  },
  getWrapBehavior: function getWrapBehavior(obj, action) {
    return obj['_wrap_' + action];
  },
  parsePadding: function parsePadding(padding) {
    var top;
    var right;
    var bottom;
    var left;

    if (Util.isNumber(padding) || Util.isString(padding)) {
      top = bottom = left = right = padding;
    } else if (Util.isArray(padding)) {
      top = padding[0];
      right = !Util.isNil(padding[1]) ? padding[1] : padding[0];
      bottom = !Util.isNil(padding[2]) ? padding[2] : padding[0];
      left = !Util.isNil(padding[3]) ? padding[3] : right;
    }

    return [top, right, bottom, left];
  },
  directionEnabled: function directionEnabled(mode, dir) {
    if (mode === undefined) {
      return true;
    } else if (typeof mode === 'string') {
      return mode.indexOf(dir) !== -1;
    }

    return false;
  }
};
Util.Array = {
  merge: function merge(dataArray) {
    var rst = [];

    for (var i = 0, len = dataArray.length; i < len; i++) {
      rst = rst.concat(dataArray[i]);
    }

    return rst;
  },
  values: function values(data, name) {
    var rst = [];
    var tmpMap = {};

    for (var i = 0, len = data.length; i < len; i++) {
      var obj = data[i];
      var value = obj[name];

      if (!Util.isNil(value)) {
        if (!Util.isArray(value)) {
          if (!tmpMap[value]) {
            rst.push(value);
            tmpMap[value] = true;
          }
        } else {
          Util.each(value, function (val) {
            if (!tmpMap[val]) {
              rst.push(val);
              tmpMap[val] = true;
            }
          });
        }
      }
    }

    return rst;
  },
  firstValue: function firstValue(data, name) {
    var rst = null;

    for (var i = 0, len = data.length; i < len; i++) {
      var obj = data[i];
      var value = obj[name];

      if (!Util.isNil(value)) {
        if (Util.isArray(value)) {
          rst = value[0];
        } else {
          rst = value;
        }

        break;
      }
    }

    return rst;
  },
  group: function group(data, fields, appendConditions) {
    if (appendConditions === void 0) {
      appendConditions = {};
    }

    if (!fields) {
      return [data];
    }

    var groups = Util.Array.groupToMap(data, fields);
    var array = [];

    if (fields.length === 1 && appendConditions[fields[0]]) {
      var values = appendConditions[fields[0]];
      Util.each(values, function (value) {
        value = '_' + value;
        array.push(groups[value]);
      });
    } else {
      for (var i in groups) {
        array.push(groups[i]);
      }
    }

    return array;
  },
  groupToMap: function groupToMap(data, fields) {
    if (!fields) {
      return {
        0: data
      };
    }

    var callback = function callback(row) {
      var unique = '_';

      for (var i = 0, l = fields.length; i < l; i++) {
        unique += row[fields[i]] && row[fields[i]].toString();
      }

      return unique;
    };

    var groups = {};

    for (var i = 0, len = data.length; i < len; i++) {
      var row = data[i];
      var key = callback(row);

      if (groups[key]) {
        groups[key].push(row);
      } else {
        groups[key] = [row];
      }
    }

    return groups;
  },
  remove: function remove(arr, obj) {
    if (!arr) {
      return;
    }

    var index = arr.indexOf(obj);

    if (index !== -1) {
      arr.splice(index, 1);
    }
  },
  getRange: function getRange(values) {
    if (!values.length) {
      return {
        min: 0,
        max: 0
      };
    }

    var max = Math.max.apply(null, values);
    var min = Math.min.apply(null, values);
    return {
      min: min,
      max: max
    };
  }
};
Util.mix(Util, DomUtil);
module.exports = Util;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var Theme = __webpack_require__(46);

var Util = __webpack_require__(0);

var Global = {
  version: '3.3.9',
  scales: {},
  widthRatio: {
    column: 1 / 2,
    rose: 0.999999,
    multiplePie: 3 / 4
  },
  lineDash: [4, 4]
};

Global.setTheme = function (theme) {
  Util.deepMix(this, theme);
};

Global.setTheme(Theme);
module.exports = Global;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Element = __webpack_require__(27);

var Shape =
/*#__PURE__*/
function (_Element) {
  _inheritsLoose(Shape, _Element);

  function Shape() {
    return _Element.apply(this, arguments) || this;
  }

  var _proto = Shape.prototype;

  _proto._initProperties = function _initProperties() {
    this._attrs = {
      zIndex: 0,
      visible: true,
      destroyed: false,
      isShape: true,
      attrs: {}
    };
  };

  _proto.getType = function getType() {
    return this._attrs.type;
  };

  _proto.drawInner = function drawInner(context) {
    var self = this;
    var attrs = self.get('attrs');
    self.createPath(context);
    var originOpacity = context.globalAlpha;

    if (self.hasFill()) {
      var fillOpacity = attrs.fillOpacity;

      if (!Util.isNil(fillOpacity) && fillOpacity !== 1) {
        context.globalAlpha = fillOpacity;
        context.fill();
        context.globalAlpha = originOpacity;
      } else {
        context.fill();
      }
    }

    if (self.hasStroke()) {
      var lineWidth = attrs.lineWidth;

      if (lineWidth > 0) {
        var strokeOpacity = attrs.strokeOpacity;

        if (!Util.isNil(strokeOpacity) && strokeOpacity !== 1) {
          context.globalAlpha = strokeOpacity;
        }

        context.stroke();
      }
    }
  };

  _proto.getBBox = function getBBox() {
    var bbox = this._attrs.bbox;

    if (!bbox) {
      bbox = this.calculateBox();

      if (bbox) {
        bbox.x = bbox.minX;
        bbox.y = bbox.minY;
        bbox.width = bbox.maxX - bbox.minX;
        bbox.height = bbox.maxY - bbox.minY;
      }

      this._attrs.bbox = bbox;
    }

    return bbox;
  };

  _proto.calculateBox = function calculateBox() {
    return null;
  };

  _proto.createPath = function createPath() {};

  return Shape;
}(Element);

module.exports = Shape;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

/**
 * 2 Dimensional Vector
 * @module vector2
 */
module.exports = {
  /**
   * Creates a new, empty vector2
   *
   * @return {vector2} a new 2D vector
   */
  create: function create() {
    return [0, 0];
  },

  /**
   * Calculates the length of a vector2
   *
   * @param {vector2} v vector to calculate length of
   * @return {Number} length of v
   */
  length: function length(v) {
    var x = v[0];
    var y = v[1];
    return Math.sqrt(x * x + y * y);
  },

  /**
   * Normalize a vector2
   *
   * @param {vector2} out the receiving vector
   * @param {vector2} v vector to normalize
   * @return {vector2} out
   */
  normalize: function normalize(out, v) {
    var len = this.length(v);

    if (len === 0) {
      out[0] = 0;
      out[1] = 0;
    } else {
      out[0] = v[0] / len;
      out[1] = v[1] / len;
    }

    return out;
  },

  /**
   * Adds two vector2's
   *
   * @param {vector2} out the receiving vector
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {vector2} out
   */
  add: function add(out, v1, v2) {
    out[0] = v1[0] + v2[0];
    out[1] = v1[1] + v2[1];
    return out;
  },

  /**
   * Subtracts vector v2 from vector v1
   *
   * @param {vector2} out the receiving vector
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {vector2} out
   */
  sub: function sub(out, v1, v2) {
    out[0] = v1[0] - v2[0];
    out[1] = v1[1] - v2[1];
    return out;
  },

  /**
   * Scales a vector2 by a scalar number
   *
   * @param {vector2} out the receiving vector
   * @param {vector2} v the vector to scale
   * @param {Number} s amount to scale the vector by
   * @return {vector2} out
   */
  scale: function scale(out, v, s) {
    out[0] = v[0] * s;
    out[1] = v[1] * s;
    return out;
  },

  /**
   * Calculates the dot product of two vector2's
   *
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {Number} dot product of v1 and v2
   */
  dot: function dot(v1, v2) {
    return v1[0] * v2[0] + v1[1] * v2[1];
  },

  /**
   * Calculates the direction of two vector2's
   *
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {Boolean} the direction of v1 and v2
   */
  direction: function direction(v1, v2) {
    return v1[0] * v2[1] - v2[0] * v1[1];
  },

  /**
   * Calculates the angle of two vector2's
   *
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {Number} angle of v1 and v2
   */
  angle: function angle(v1, v2) {
    var theta = this.dot(v1, v2) / (this.length(v1) * this.length(v2));
    return Math.acos(theta);
  },

  /**
   * Calculates the angle of two vector2's with direction
   *
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @param {Boolean} direction the direction of two vector2's
   * @return {Number} angle of v1 and v2
   */
  angleTo: function angleTo(v1, v2, direction) {
    var angle = this.angle(v1, v2);
    var angleLargeThanPI = this.direction(v1, v2) >= 0;

    if (direction) {
      if (angleLargeThanPI) {
        return Math.PI * 2 - angle;
      }

      return angle;
    }

    if (angleLargeThanPI) {
      return angle;
    }

    return Math.PI * 2 - angle;
  },

  /**
   * whether a vector2 is zero vector
   *
   * @param  {vector2} v vector to calculate
   * @return {Boolean}   is or not a zero vector
   */
  zero: function zero(v) {
    return v[0] === 0 && v[1] === 0;
  },

  /**
   * Calculates the euclidian distance between two vector2's
   *
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {Number} distance between a and b
   */
  distance: function distance(v1, v2) {
    var x = v2[0] - v1[0];
    var y = v2[1] - v1[1];
    return Math.sqrt(x * x + y * y);
  },

  /**
   * Creates a new vector2 initialized with values from an existing vector
   *
   * @param {vector2} v vector to clone
   * @return {Array} a new 2D vector
   */
  clone: function clone(v) {
    return [v[0], v[1]];
  },

  /**
   * Return the minimum of two vector2's
   *
   * @param {vector2} out the receiving vector
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {vector2} out
   */
  min: function min(out, v1, v2) {
    out[0] = Math.min(v1[0], v2[0]);
    out[1] = Math.min(v1[1], v2[1]);
    return out;
  },

  /**
   * Return the maximum of two vector2's
   *
   * @param {vector2} out the receiving vector
   * @param {vector2} v1 the first operand
   * @param {vector2} v2 the second operand
   * @return {vector2} out
   */
  max: function max(out, v1, v2) {
    out[0] = Math.max(v1[0], v2[0]);
    out[1] = Math.max(v1[1], v2[1]);
    return out;
  },

  /**
   * Transforms the vector2 with a mat2d
   *
   * @param {vector2} out the receiving vector
   * @param {vector2} v the vector to transform
   * @param {mat2d} m matrix to transform with
   * @return {vector2} out
   */
  transformMat2d: function transformMat2d(out, v, m) {
    var x = v[0];
    var y = v[1];
    out[0] = m[0] * x + m[2] * y + m[4];
    out[1] = m[1] * x + m[3] * y + m[5];
    return out;
  }
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(25);

var isArray = __webpack_require__(13);

var each = function each(elements, func) {
  if (!elements) {
    return;
  }

  var rst = void 0;

  if (isArray(elements)) {
    for (var i = 0, len = elements.length; i < len; i++) {
      rst = func(elements[i], i);

      if (rst === false) {
        break;
      }
    }
  } else if (isObject(elements)) {
    for (var k in elements) {
      if (elements.hasOwnProperty(k)) {
        rst = func(elements[k], k);

        if (rst === false) {
          break;
        }
      }
    }
  }
};

module.exports = each;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var G = {
  Canvas: __webpack_require__(79),
  Group: __webpack_require__(36),
  Shape: __webpack_require__(2),
  Matrix: __webpack_require__(24),
  Vector2: __webpack_require__(3)
};

__webpack_require__(81);

__webpack_require__(82);

__webpack_require__(83);

__webpack_require__(84);

__webpack_require__(85);

__webpack_require__(86);

__webpack_require__(87);

__webpack_require__(88);

__webpack_require__(89);

module.exports = G;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Base = __webpack_require__(34);

var GROUP_ATTRS = ['color', 'size', 'shape'];
var FIELD_ORIGIN = '_origin';
var FIELD_ORIGIN_Y = '_originY';

var Global = __webpack_require__(1);

var Attr = __webpack_require__(64);

var GeometryShape = __webpack_require__(8);

var Adjust = __webpack_require__(23);

function parseFields(field) {
  if (Util.isArray(field)) {
    return field;
  }

  if (Util.isString(field)) {
    return field.split('*');
  }

  return [field];
}
/**
 * The parent class for Geometry
 * @class Geom
 */


var Geom =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Geom, _Base);

  function Geom() {
    return _Base.apply(this, arguments) || this;
  }

  var _proto = Geom.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    return {
      /**
       * geometry type
       * @type {String}
       */
      type: null,

      /**
       * the data of geometry
       * @type {Array}
       */
      data: null,

      /**
       * the attrs of geo,etry
       * @type {Object}
       */
      attrs: {},
      scales: {},

      /**
       * group for storing the shapes
       * @type {Canvas}
       */
      container: null,

      /**
       * style options
       * @type {Object}
       */
      styleOptions: null,
      chart: null,
      shapeType: '',

      /**
       * wether to generate key points for each shape
       * @protected
       * @type {Boolean}
       */
      generatePoints: false,
      attrOptions: {},
      sortable: false,
      startOnZero: true,
      visible: true,
      connectNulls: false
    };
  };

  _proto.init = function init() {
    var self = this;

    self._initAttrs();

    var dataArray = self._processData();

    if (self.get('adjust')) {
      self._adjustData(dataArray);
    }

    self.set('dataArray', dataArray);
  };

  _proto._getGroupScales = function _getGroupScales() {
    var self = this;
    var scales = [];
    Util.each(GROUP_ATTRS, function (attrName) {
      var attr = self.getAttr(attrName);

      if (attr) {
        var attrScales = attr.scales;
        Util.each(attrScales, function (scale) {
          if (scale && scale.isCategory && scales.indexOf(scale) === -1) {
            scales.push(scale);
          }
        });
      }
    });
    return scales;
  };

  _proto._groupData = function _groupData(data) {
    var self = this;
    var colDefs = self.get('colDefs');

    var groupScales = self._getGroupScales();

    if (groupScales.length) {
      var appendConditions = {};
      var names = [];
      Util.each(groupScales, function (scale) {
        var field = scale.field;
        names.push(field);

        if (colDefs && colDefs[field] && colDefs[field].values) {
          // users have defined
          appendConditions[scale.field] = colDefs[field].values;
        }
      });
      return Util.Array.group(data, names, appendConditions);
    }

    return [data];
  };

  _proto._setAttrOptions = function _setAttrOptions(attrName, attrCfg) {
    var options = this.get('attrOptions');
    options[attrName] = attrCfg;
  };

  _proto._createAttrOption = function _createAttrOption(attrName, field, cfg, defaultValues) {
    var attrCfg = {};
    attrCfg.field = field;

    if (cfg) {
      if (Util.isFunction(cfg)) {
        attrCfg.callback = cfg;
      } else {
        attrCfg.values = cfg;
      }
    } else {
      attrCfg.values = defaultValues;
    }

    this._setAttrOptions(attrName, attrCfg);
  };

  _proto._initAttrs = function _initAttrs() {
    var self = this;
    var attrs = self.get('attrs');
    var attrOptions = self.get('attrOptions');
    var coord = self.get('coord');

    for (var type in attrOptions) {
      if (attrOptions.hasOwnProperty(type)) {
        var option = attrOptions[type];
        var className = Util.upperFirst(type);
        var fields = parseFields(option.field);

        if (type === 'position') {
          option.coord = coord;
        }

        var scales = [];

        for (var i = 0, len = fields.length; i < len; i++) {
          var field = fields[i];

          var scale = self._createScale(field);

          scales.push(scale);
        }

        if (type === 'position') {
          var yScale = scales[1];

          if (coord.type === 'polar' && coord.transposed && self.hasAdjust('stack')) {
            if (yScale.values.length) {
              yScale.change({
                nice: false,
                min: 0,
                max: Math.max.apply(null, yScale.values)
              });
            }
          }
        }

        option.scales = scales;
        var attr = new Attr[className](option);
        attrs[type] = attr;
      }
    }
  };

  _proto._createScale = function _createScale(field) {
    var scales = this.get('scales');
    var scale = scales[field];

    if (!scale) {
      scale = this.get('chart').createScale(field);
      scales[field] = scale;
    }

    return scale;
  };

  _proto._processData = function _processData() {
    var self = this;
    var data = this.get('data');
    var dataArray = [];

    var groupedArray = this._groupData(data);

    for (var i = 0, len = groupedArray.length; i < len; i++) {
      var subData = groupedArray[i];

      var tempData = self._saveOrigin(subData);

      if (this.hasAdjust('dodge')) {
        self._numberic(tempData);
      }

      dataArray.push(tempData);
    }

    return dataArray;
  };

  _proto._saveOrigin = function _saveOrigin(data) {
    var rst = [];

    for (var i = 0, len = data.length; i < len; i++) {
      var origin = data[i];
      var obj = {};

      for (var k in origin) {
        obj[k] = origin[k];
      }

      obj[FIELD_ORIGIN] = origin;
      rst.push(obj);
    }

    return rst;
  };

  _proto._numberic = function _numberic(data) {
    var positionAttr = this.getAttr('position');
    var scales = positionAttr.scales;

    for (var j = 0, len = data.length; j < len; j++) {
      var obj = data[j];
      var count = Math.min(2, scales.length);

      for (var i = 0; i < count; i++) {
        var scale = scales[i];

        if (scale.isCategory) {
          var field = scale.field;
          obj[field] = scale.translate(obj[field]);
        }
      }
    }
  };

  _proto._adjustData = function _adjustData(dataArray) {
    var self = this;
    var adjust = self.get('adjust');

    if (adjust) {
      var adjustType = Util.upperFirst(adjust.type);

      if (!Adjust[adjustType]) {
        throw new Error('not support such adjust : ' + adjust);
      }

      var xScale = self.getXScale();
      var yScale = self.getYScale();
      var cfg = Util.mix({
        xField: xScale.field,
        yField: yScale.field
      }, adjust);
      var adjustObject = new Adjust[adjustType](cfg);
      adjustObject.processAdjust(dataArray);

      if (adjustType === 'Stack') {
        self._updateStackRange(yScale.field, yScale, dataArray);
      }
    }
  };

  _proto._updateStackRange = function _updateStackRange(field, scale, dataArray) {
    var mergeArray = Util.Array.merge(dataArray);
    var min = scale.min;
    var max = scale.max;

    for (var i = 0, len = mergeArray.length; i < len; i++) {
      var obj = mergeArray[i];
      var tmpMin = Math.min.apply(null, obj[field]);
      var tmpMax = Math.max.apply(null, obj[field]);

      if (tmpMin < min) {
        min = tmpMin;
      }

      if (tmpMax > max) {
        max = tmpMax;
      }
    }

    if (min < scale.min || max > scale.max) {
      scale.change({
        min: min,
        max: max
      });
    }
  };

  _proto._sort = function _sort(mappedArray) {
    var self = this;
    var xScale = self.getXScale();
    var field = xScale.field,
        type = xScale.type;

    if (type !== 'identity' && xScale.values.length > 1) {
      Util.each(mappedArray, function (itemArr) {
        itemArr.sort(function (obj1, obj2) {
          if (type === 'timeCat') {
            return xScale._toTimeStamp(obj1[FIELD_ORIGIN][field]) - xScale._toTimeStamp(obj2[FIELD_ORIGIN][field]);
          }

          return xScale.translate(obj1[FIELD_ORIGIN][field]) - xScale.translate(obj2[FIELD_ORIGIN][field]);
        });
      });
    }

    self.set('hasSorted', true);
    self.set('dataArray', mappedArray);
  };

  _proto.paint = function paint() {
    var self = this;
    var dataArray = self.get('dataArray');
    var mappedArray = [];
    var shapeFactory = self.getShapeFactory();
    shapeFactory.setCoord(self.get('coord'));

    self._beforeMapping(dataArray);

    for (var i = 0, len = dataArray.length; i < len; i++) {
      var data = dataArray[i];

      if (data.length) {
        data = self._mapping(data);
        mappedArray.push(data);
        self.draw(data, shapeFactory);
      }
    }

    self.set('dataArray', mappedArray);
  };

  _proto.getShapeFactory = function getShapeFactory() {
    var shapeFactory = this.get('shapeFactory');

    if (!shapeFactory) {
      var shapeType = this.get('shapeType');
      shapeFactory = GeometryShape.getShapeFactory(shapeType);
      this.set('shapeFactory', shapeFactory);
    }

    return shapeFactory;
  };

  _proto._mapping = function _mapping(data) {
    var self = this;
    var attrs = self.get('attrs');
    var yField = self.getYScale().field;
    var mappedData = [];

    for (var i = 0, len = data.length; i < len; i++) {
      var record = data[i];
      var newRecord = {};
      newRecord[FIELD_ORIGIN] = record[FIELD_ORIGIN];
      newRecord.points = record.points; // 避免

      newRecord[FIELD_ORIGIN_Y] = record[yField];

      for (var k in attrs) {
        if (attrs.hasOwnProperty(k)) {
          var attr = attrs[k];
          var names = attr.names;

          var values = self._getAttrValues(attr, record);

          if (names.length > 1) {
            for (var j = 0, _len = values.length; j < _len; j++) {
              var val = values[j];
              var name = names[j];
              newRecord[name] = Util.isArray(val) && val.length === 1 ? val[0] : val;
            }
          } else {
            newRecord[names[0]] = values.length === 1 ? values[0] : values;
          }
        }
      }

      mappedData.push(newRecord);
    }

    return mappedData;
  };

  _proto._getAttrValues = function _getAttrValues(attr, record) {
    var scales = attr.scales;
    var params = [];

    for (var i = 0, len = scales.length; i < len; i++) {
      var scale = scales[i];
      var field = scale.field;

      if (scale.type === 'identity') {
        params.push(scale.value);
      } else {
        params.push(record[field]);
      }
    }

    var values = attr.mapping.apply(attr, params);
    return values;
  };

  _proto.getAttrValue = function getAttrValue(attrName, record) {
    var attr = this.getAttr(attrName);
    var rst = null;

    if (attr) {
      var values = this._getAttrValues(attr, record);

      rst = values[0];
    }

    return rst;
  };

  _proto._beforeMapping = function _beforeMapping(dataArray) {
    var self = this;

    if (self.get('sortable')) {
      self._sort(dataArray);
    }

    if (self.get('generatePoints')) {
      Util.each(dataArray, function (data) {
        self._generatePoints(data);
      });
    }
  };

  _proto.isInCircle = function isInCircle() {
    var coord = this.get('coord');
    return coord && coord.isPolar;
  };

  _proto.getCallbackCfg = function getCallbackCfg(fields, cfg, origin) {
    if (!fields) {
      return cfg;
    }

    var tmpCfg = {};
    var params = fields.map(function (field) {
      return origin[field];
    });
    Util.each(cfg, function (v, k) {
      if (Util.isFunction(v)) {
        tmpCfg[k] = v.apply(null, params);
      } else {
        tmpCfg[k] = v;
      }
    });
    return tmpCfg;
  };

  _proto.getDrawCfg = function getDrawCfg(obj) {
    var self = this;
    var isInCircle = self.isInCircle();
    var cfg = {
      origin: obj,
      x: obj.x,
      y: obj.y,
      color: obj.color,
      size: obj.size,
      shape: obj.shape,
      isInCircle: isInCircle,
      opacity: obj.opacity
    };
    var styleOptions = self.get('styleOptions');

    if (styleOptions && styleOptions.style) {
      cfg.style = self.getCallbackCfg(styleOptions.fields, styleOptions.style, obj[FIELD_ORIGIN]);
    }

    if (self.get('generatePoints')) {
      cfg.points = obj.points;
    }

    if (isInCircle) {
      cfg.center = self.get('coord').center;
    }

    return cfg;
  };

  _proto.draw = function draw(data, shapeFactory) {
    var self = this;
    var container = self.get('container');
    var yScale = self.getYScale();
    Util.each(data, function (obj, index) {
      if (yScale && Util.isNil(obj._origin[yScale.field])) {
        return;
      }

      obj.index = index;
      var cfg = self.getDrawCfg(obj);
      var shape = obj.shape;
      self.drawShape(shape, obj, cfg, container, shapeFactory);
    });
  };

  _proto.drawShape = function drawShape(shape, shapeData, cfg, container, shapeFactory) {
    var gShape = shapeFactory.drawShape(shape, cfg, container);

    if (gShape) {
      Util.each([].concat(gShape), function (s) {
        s.set('origin', shapeData);
      });
    }
  };

  _proto._generatePoints = function _generatePoints(data) {
    var self = this;
    var shapeFactory = self.getShapeFactory();
    var shapeAttr = self.getAttr('shape');

    for (var i = 0, len = data.length; i < len; i++) {
      var obj = data[i];
      var cfg = self.createShapePointsCfg(obj);
      var shape = shapeAttr ? self._getAttrValues(shapeAttr, obj) : null;
      var points = shapeFactory.getShapePoints(shape, cfg);
      obj.points = points;
    }
  }
  /**
   * get the info of each shape
   * @protected
   * @param  {Object} obj the data item
   * @return {Object} cfg return the result
   */
  ;

  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {
    var xScale = this.getXScale();
    var yScale = this.getYScale();

    var x = this._normalizeValues(obj[xScale.field], xScale);

    var y;

    if (yScale) {
      y = this._normalizeValues(obj[yScale.field], yScale);
    } else {
      y = obj.y ? obj.y : 0.1;
    }

    return {
      x: x,
      y: y,
      y0: yScale ? yScale.scale(this.getYMinValue()) : undefined
    };
  };

  _proto.getYMinValue = function getYMinValue() {
    var yScale = this.getYScale();
    var min = yScale.min,
        max = yScale.max;
    var value;

    if (this.get('startOnZero')) {
      if (max <= 0 && min <= 0) {
        value = max;
      } else {
        value = min >= 0 ? min : 0;
      }
    } else {
      value = min;
    }

    return value;
  };

  _proto._normalizeValues = function _normalizeValues(values, scale) {
    var rst = [];

    if (Util.isArray(values)) {
      for (var i = 0, len = values.length; i < len; i++) {
        var v = values[i];
        rst.push(scale.scale(v));
      }
    } else {
      rst = scale.scale(values);
    }

    return rst;
  };

  _proto.getAttr = function getAttr(name) {
    return this.get('attrs')[name];
  };

  _proto.getXScale = function getXScale() {
    return this.getAttr('position').scales[0];
  };

  _proto.getYScale = function getYScale() {
    return this.getAttr('position').scales[1];
  };

  _proto.hasAdjust = function hasAdjust(adjust) {
    return this.get('adjust') && this.get('adjust').type === adjust;
  };

  _proto._getSnap = function _getSnap(scale, item, arr) {
    var i = 0;
    var values;
    var yField = this.getYScale().field; // 叠加的维度

    if (this.hasAdjust('stack') && scale.field === yField) {
      values = [];
      arr.forEach(function (obj) {
        values.push(obj[FIELD_ORIGIN_Y]);
      });

      for (var len = values.length; i < len; i++) {
        if (values[0][0] > item) {
          break;
        }

        if (values[values.length - 1][1] <= item) {
          i = values.length - 1;
          break;
        }

        if (values[i][0] <= item && values[i][1] > item) {
          break;
        }
      }
    } else {
      values = scale.values;
      values.sort(function (a, b) {
        return a - b;
      });

      for (var _len2 = values.length; i < _len2; i++) {
        if ((values[0] + values[1]) / 2 > item) {
          break;
        }

        if ((values[i - 1] + values[i]) / 2 <= item && (values[i + 1] + values[i]) / 2 > item) {
          break;
        }

        if ((values[values.length - 2] + values[values.length - 1]) / 2 <= item) {
          i = values.length - 1;
          break;
        }
      }
    }

    var result = values[i];
    return result;
  };

  _proto.getSnapRecords = function getSnapRecords(point) {
    var self = this;
    var coord = self.get('coord');
    var xScale = self.getXScale();
    var yScale = self.getYScale();
    var xfield = xScale.field;
    var dataArray = self.get('dataArray');

    if (!this.get('hasSorted')) {
      this._sort(dataArray);
    }

    var rst = [];
    var invertPoint = coord.invertPoint(point);
    var invertPointX = invertPoint.x;

    if (self.isInCircle() && !coord.transposed && invertPointX > (1 + xScale.rangeMax()) / 2) {
      invertPointX = xScale.rangeMin();
    }

    var xValue = xScale.invert(invertPointX);

    if (!xScale.isCategory) {
      xValue = self._getSnap(xScale, xValue);
    }

    var tmp = [];
    dataArray.forEach(function (data) {
      data.forEach(function (obj) {
        var originValue = Util.isNil(obj[FIELD_ORIGIN]) ? obj[xfield] : obj[FIELD_ORIGIN][xfield];

        if (self._isEqual(originValue, xValue, xScale)) {
          tmp.push(obj);
        }
      });
    }); // special for pie chart

    if (this.hasAdjust('stack') && coord.isPolar && coord.transposed && xScale.values.length === 1) {
      if (invertPointX >= 0 && invertPointX <= 1) {
        var yValue = yScale.invert(invertPoint.y);
        yValue = self._getSnap(yScale, yValue, tmp);
        tmp.forEach(function (obj) {
          if (Util.isArray(yValue) ? obj[FIELD_ORIGIN_Y].toString() === yValue.toString() : obj[FIELD_ORIGIN_Y] === yValue) {
            rst.push(obj);
          }
        });
      }
    } else {
      rst = tmp;
    }

    return rst;
  };

  _proto._isEqual = function _isEqual(originValue, value, scale) {
    if (scale.type === 'timeCat') {
      return scale._toTimeStamp(originValue) === value;
    }

    return value === originValue;
  };

  _proto.position = function position(field) {
    this._setAttrOptions('position', {
      field: field
    });

    return this;
  };

  _proto.color = function color(field, values) {
    this._createAttrOption('color', field, values, Global.colors);

    return this;
  };

  _proto.size = function size(field, values) {
    this._createAttrOption('size', field, values, Global.sizes);

    return this;
  };

  _proto.shape = function shape(field, values) {
    var type = this.get('type');
    var shapes = Global.shapes[type] || [];

    this._createAttrOption('shape', field, values, shapes);

    return this;
  };

  _proto.style = function style(field, cfg) {
    var styleOptions = this.get('styleOptions');

    if (!styleOptions) {
      styleOptions = {};
      this.set('styleOptions', styleOptions);
    }

    if (Util.isObject(field)) {
      cfg = field;
      field = null;
    }

    var fields;

    if (field) {
      fields = parseFields(field);
    }

    styleOptions.fields = fields;
    styleOptions.style = cfg;
    return this;
  };

  _proto.adjust = function adjust(type) {
    if (Util.isString(type)) {
      type = {
        type: type
      };
    }

    this.set('adjust', type);
    return this;
  };

  _proto.animate = function animate(cfg) {
    this.set('animateCfg', cfg);
    return this;
  };

  _proto.reset = function reset() {
    this.set('attrOptions', {});
    this.set('adjust', null);
    this.clearInner();
  };

  _proto.clearInner = function clearInner() {
    var container = this.get('container');

    if (container) {
      container.clear();
      container.setMatrix([1, 0, 0, 1, 0, 0]);
    }

    container && container.clear();
    this.set('attrs', {});
    this.set('groupScales', null);
    this.set('xDistance', null);
    this.set('_width', null);
  };

  _proto.clear = function clear() {
    this.clearInner();
    this.set('scales', {});
  };

  _proto.destroy = function destroy() {
    this.clear();

    _Base.prototype.destroy.call(this);
  };

  _proto._display = function _display(visible) {
    this.set('visible', visible);
    var container = this.get('container');
    var canvas = container.get('canvas');
    container.set('visible', visible);
    canvas.draw();
  };

  _proto.show = function show() {
    this._display(true);
  };

  _proto.hide = function hide() {
    this._display(false);
  };

  return Geom;
}(Base);

module.exports = Geom;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

var toString = {}.toString;

var isType = function isType(value, type) {
  return toString.call(value) === '[object ' + type + ']';
};

module.exports = isType;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Global = __webpack_require__(1);

var Shape = {};
var ShapeBase = {
  _coord: null,

  /**
   * draw the shape
   * @param {Object} cfg options
   * @param {Object} container container to store the shapes
   */
  draw: function draw(cfg, container) {
    if (this.drawShape) {
      this.drawShape(cfg, container);
    }
  },

  /**
   * set the coordinate instance
   * @param {Coord} coord coordinate instance
   */
  setCoord: function setCoord(coord) {
    this._coord = coord;
  },

  /**
   * convert the normalized value to the canvas position
   * @param  {point} point the point to convert
   * @return {point} point return the result
   */
  parsePoint: function parsePoint(point) {
    var coord = this._coord;

    if (coord.isPolar) {
      if (point.x === 1) point.x = 0.9999999;
      if (point.y === 1) point.y = 0.9999999;
    }

    return coord.convertPoint(point);
  },

  /**
   * convert the normalized value to the canvas position
   * @param  {points} points the array that store the points
   * @return {points} points return the result
   */
  parsePoints: function parsePoints(points) {
    if (!points) return false;
    var self = this;
    var rst = [];
    points.forEach(function (point) {
      rst.push(self.parsePoint(point));
    });
    return rst;
  }
};
var ShapeFactoryBase = {
  defaultShapeType: null,
  setCoord: function setCoord(coord) {
    this._coord = coord;
  },
  getShape: function getShape(type) {
    var self = this;

    if (Util.isArray(type)) {
      type = type[0];
    }

    var shape = self[type] || self[self.defaultShapeType];
    shape._coord = self._coord;
    return shape;
  },
  getShapePoints: function getShapePoints(type, cfg) {
    var shape = this.getShape(type);
    var fn = shape.getPoints || shape.getShapePoints || this.getDefaultPoints;
    var points = fn(cfg);
    return points;
  },
  getDefaultPoints: function getDefaultPoints()
  /* cfg */
  {
    return [];
  },
  drawShape: function drawShape(type, cfg, container) {
    var shape = this.getShape(type);

    if (!cfg.color) {
      cfg.color = Global.colors[0];
    }

    return shape.draw(cfg, container);
  }
};

Shape.registerFactory = function (factoryName, cfg) {
  var className = Util.upperFirst(factoryName);
  var geomObj = Util.mix({}, ShapeFactoryBase, cfg);
  Shape[className] = geomObj;
  geomObj.name = factoryName;
  return geomObj;
};

Shape.registerShape = function (factoryName, shapeType, cfg) {
  var className = Util.upperFirst(factoryName);
  var factory = Shape[className];
  var shapeObj = Util.mix({}, ShapeBase, cfg);
  factory[shapeType] = shapeObj;
  return shapeObj;
};

Shape.registShape = Shape.registerShape;

Shape.getShapeFactory = function (factoryName) {
  var self = this;
  factoryName = factoryName || 'point';
  var className = Util.upperFirst(factoryName);
  return self[className];
};

module.exports = Shape;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

// isFinite,
var isNil = function isNil(value) {
  /**
   * isNil(null) => true
   * isNil() => true
   */
  return value === null || value === undefined;
};

module.exports = isNil;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var Vector2 = __webpack_require__(3);

var start = Vector2.create();
var end = Vector2.create();
var extremity = Vector2.create();

function getCubicBezierXYatT(startPt, controlPt1, controlPt2, endPt, T) {
  var x = CubicN(T, startPt.x, controlPt1.x, controlPt2.x, endPt.x);
  var y = CubicN(T, startPt.y, controlPt1.y, controlPt2.y, endPt.y);
  return {
    x: x,
    y: y
  };
} // cubic helper formula at T distance


function CubicN(T, a, b, c, d) {
  var t2 = T * T;
  var t3 = t2 * T;
  return a + (-a * 3 + T * (3 * a - a * T)) * T + (3 * b + T * (-6 * b + b * 3 * T)) * T + (c * 3 - c * 3 * T) * t2 + d * t3;
}

function cubicBezierBounds(c) {
  var minX = Infinity;
  var maxX = -Infinity;
  var minY = Infinity;
  var maxY = -Infinity;
  var s = {
    x: c[0],
    y: c[1]
  };
  var c1 = {
    x: c[2],
    y: c[3]
  };
  var c2 = {
    x: c[4],
    y: c[5]
  };
  var e = {
    x: c[6],
    y: c[7]
  };

  for (var t = 0; t < 100; t++) {
    var pt = getCubicBezierXYatT(s, c1, c2, e, t / 100);

    if (pt.x < minX) {
      minX = pt.x;
    }

    if (pt.x > maxX) {
      maxX = pt.x;
    }

    if (pt.y < minY) {
      minY = pt.y;
    }

    if (pt.y > maxY) {
      maxY = pt.y;
    }
  }

  return {
    minX: minX,
    minY: minY,
    maxX: maxX,
    maxY: maxY
  };
}

module.exports = {
  getBBoxFromPoints: function getBBoxFromPoints(points, lineWidth) {
    if (points.length === 0) {
      return;
    }

    var p = points[0];
    var left = p.x;
    var right = p.x;
    var top = p.y;
    var bottom = p.y;
    var len = points.length;

    for (var i = 1; i < len; i++) {
      p = points[i];
      left = Math.min(left, p.x);
      right = Math.max(right, p.x);
      top = Math.min(top, p.y);
      bottom = Math.max(bottom, p.y);
    }

    lineWidth = lineWidth / 2 || 0;
    return {
      minX: left - lineWidth,
      minY: top - lineWidth,
      maxX: right + lineWidth,
      maxY: bottom + lineWidth
    };
  },
  getBBoxFromLine: function getBBoxFromLine(x0, y0, x1, y1, lineWidth) {
    lineWidth = lineWidth / 2 || 0;
    return {
      minX: Math.min(x0, x1) - lineWidth,
      minY: Math.min(y0, y1) - lineWidth,
      maxX: Math.max(x0, x1) + lineWidth,
      maxY: Math.max(y0, y1) + lineWidth
    };
  },
  getBBoxFromArc: function getBBoxFromArc(x, y, r, startAngle, endAngle, anticlockwise) {
    var diff = Math.abs(startAngle - endAngle);

    if (diff % (Math.PI * 2) < 1e-4 && diff > 1e-4) {
      // Is a circle
      return {
        minX: x - r,
        minY: y - r,
        maxX: x + r,
        maxY: y + r
      };
    }

    start[0] = Math.cos(startAngle) * r + x;
    start[1] = Math.sin(startAngle) * r + y;
    end[0] = Math.cos(endAngle) * r + x;
    end[1] = Math.sin(endAngle) * r + y;
    var min = [0, 0];
    var max = [0, 0];
    Vector2.min(min, start, end);
    Vector2.max(max, start, end); // Thresh to [0, Math.PI * 2]

    startAngle = startAngle % (Math.PI * 2);

    if (startAngle < 0) {
      startAngle = startAngle + Math.PI * 2;
    }

    endAngle = endAngle % (Math.PI * 2);

    if (endAngle < 0) {
      endAngle = endAngle + Math.PI * 2;
    }

    if (startAngle > endAngle && !anticlockwise) {
      endAngle += Math.PI * 2;
    } else if (startAngle < endAngle && anticlockwise) {
      startAngle += Math.PI * 2;
    }

    if (anticlockwise) {
      var tmp = endAngle;
      endAngle = startAngle;
      startAngle = tmp;
    }

    for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {
      if (angle > startAngle) {
        extremity[0] = Math.cos(angle) * r + x;
        extremity[1] = Math.sin(angle) * r + y;
        Vector2.min(min, extremity, min);
        Vector2.max(max, extremity, max);
      }
    }

    return {
      minX: min[0],
      minY: min[1],
      maxX: max[0],
      maxY: max[1]
    };
  },
  getBBoxFromBezierGroup: function getBBoxFromBezierGroup(points, lineWidth) {
    var minX = Infinity;
    var maxX = -Infinity;
    var minY = Infinity;
    var maxY = -Infinity;

    for (var i = 0, len = points.length; i < len; i++) {
      var bbox = cubicBezierBounds(points[i]);

      if (bbox.minX < minX) {
        minX = bbox.minX;
      }

      if (bbox.maxX > maxX) {
        maxX = bbox.maxX;
      }

      if (bbox.minY < minY) {
        minY = bbox.minY;
      }

      if (bbox.maxY > maxY) {
        maxY = bbox.maxY;
      }
    }

    lineWidth = lineWidth / 2 || 0;
    return {
      minX: minX - lineWidth,
      minY: minY - lineWidth,
      maxX: maxX + lineWidth,
      maxY: maxY + lineWidth
    };
  }
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var KEYWORDS_PERCENT = {
  min: 0,
  median: 0.5,
  max: 1
};

var GuideBase =
/*#__PURE__*/
function () {
  var _proto = GuideBase.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {};

  function GuideBase(cfg) {
    this._initDefaultCfg();

    Util.deepMix(this, cfg);
  }

  _proto._getNormalizedValue = function _getNormalizedValue(val, scale) {
    var rst;

    if (Util.isNil(KEYWORDS_PERCENT[val])) {
      rst = scale.scale(val);
    } else {
      rst = KEYWORDS_PERCENT[val];
    }

    return rst;
  };

  _proto.parsePercentPoint = function parsePercentPoint(coord, position) {
    var xPercent = parseFloat(position[0]) / 100;
    var yPercent = parseFloat(position[1]) / 100;
    var start = coord.start;
    var end = coord.end;
    var width = Math.abs(start.x - end.x);
    var height = Math.abs(start.y - end.y);
    var x = width * xPercent + Math.min(start.x, end.x);
    var y = height * yPercent + Math.min(start.y, end.y);
    return {
      x: x,
      y: y
    };
  };

  _proto.parsePoint = function parsePoint(coord, position) {
    var self = this;
    var xScale = self.xScale;
    var yScales = self.yScales;

    if (Util.isFunction(position)) {
      position = position(xScale, yScales); // position 必须是对象
    } // 如果数据格式是 ['50%', '50%'] 的格式


    if (Util.isString(position[0]) && position[0].indexOf('%') !== -1) {
      return this.parsePercentPoint(coord, position);
    }

    var x = self._getNormalizedValue(position[0], xScale);

    var y = self._getNormalizedValue(position[1], yScales[0]);

    var point = coord.convertPoint({
      x: x,
      y: y
    });

    if (self.limitInPlot) {
      // limit in chart plotRange
      if (x >= 0 && x <= 1 && y >= 0 && y <= 1) {
        return point;
      }

      return null;
    }

    return point;
  }
  /**
   * render the guide component
   * @param  {Coord} coord  coordinate instance
   * @param  {Canvas.Group} group the container
   */
  ;

  _proto.render = function render()
  /* coord,group */
  {};

  _proto.repaint = function repaint() {
    this.remove();
    var coord = this.coord,
        container = this.container,
        canvas = this.canvas;

    if (container && !container.isDestroyed()) {
      this.render(coord, container);
      canvas.draw();
    }
  };

  _proto.remove = function remove() {
    var element = this.element;
    element && element.remove(true);
  };

  _proto.changeVisible = function changeVisible(visible) {
    var self = this;
    self.visible = visible;
    var element = self.element;
    if (!element) return;

    if (element.set) {
      element.set('visible', visible);
    } else {
      element.style.display = visible ? '' : 'none';
    }
  };

  return GuideBase;
}();

module.exports = GuideBase;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var mix = __webpack_require__(22);

var each = __webpack_require__(4);

var isObject = __webpack_require__(25);

var isNil = __webpack_require__(9);

var Scale =
/*#__PURE__*/
function () {
  var _proto = Scale.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'base';
    /**
     * 格式化函数,输出文本或者tick时的格式化函数
     * @type {Function}
     */

    this.formatter = null;
    /**
     * 输出的值域
     * @type {Array}
     */

    this.range = [0, 1];
    /**
     * 度量的标记
     * @type {Array}
     */

    this.ticks = null;
    /**
     * 参与度量计算的值，可选项
     * @type {Array}
     */

    this.values = [];
  };

  function Scale(cfg) {
    this._initDefaultCfg();

    mix(this, cfg);
    this.init();
  }
  /**
   * 度量初始化
   * @protected
   */


  _proto.init = function init() {}
  /**
   * 获取该度量的ticks,返回的是多个对象，
   *   - text: tick 的文本
   *   - value: 对应的度量转换后的值
   * <code>
   *   [
   *     {text: 0,value:0}
   *     {text: 1,value:0.2}
   *     {text: 2,value:0.4}
   *     {text: 3,value:0.6}
   *     {text: 4,value:0.8}
   *     {text: 5,value:1}
   *   ]
   * </code>
   * @param {Number} count 输出tick的个数的近似值，默认是 10
   * @return {Array} 返回 ticks 数组
   */
  ;

  _proto.getTicks = function getTicks() {
    var self = this;
    var ticks = self.ticks;
    var rst = [];
    each(ticks, function (tick) {
      var obj;

      if (isObject(tick)) {
        obj = tick;
      } else {
        obj = {
          text: self.getText(tick),
          tickValue: tick,
          value: self.scale(tick)
        };
      }

      rst.push(obj);
    });
    return rst;
  }
  /**
   * 获取格式化后的文本
   * @param  {*} value 输入的数据
   * @param  {*} key 字段的 key
   * @return {String} 格式化的文本
   */
  ;

  _proto.getText = function getText(value, key) {
    var formatter = this.formatter;
    value = formatter ? formatter(value, key) : value;

    if (isNil(value) || !value.toString) {
      value = '';
    }

    return value.toString();
  }
  /**
   * 输出的值域最小值
   * @protected
   * @return {Number} 返回最小的值
   */
  ;

  _proto.rangeMin = function rangeMin() {
    return this.range[0];
  }
  /**
   * 输出的值域最大值
   * @protected
   * @return {Number} 返回最大的值
   */
  ;

  _proto.rangeMax = function rangeMax() {
    var range = this.range;
    return range[range.length - 1];
  }
  /**
   * 度量转换后的结果，翻转回输入域
   * @param  {Number} value 需要翻转的数值
   * @return {*} 度量的输入值
   */
  ;

  _proto.invert = function invert(value) {
    return value;
  }
  /**
   * 将传入的值从非数值转换成数值格式，如分类字符串、时间字符串等
   * @param  {*} value 传入的值
   * @return {Number} 转换的值
   */
  ;

  _proto.translate = function translate(value) {
    return value;
  }
  /**
   * 进行度量转换
   * @param  {*} value 输入值
   * @return {Number} 输出值，在设定的输出值域之间，默认[0,1]
   */
  ;

  _proto.scale = function scale(value) {
    return value;
  }
  /**
   * 克隆一个新的scale,拥有跟当前scale相同的输入域、输出域等
   * @return {Scale} 克隆的度量
   */
  ;

  _proto.clone = function clone() {
    var self = this;
    var constr = self.constructor;
    var cfg = {};
    each(self, function (v, k) {
      cfg[k] = self[k];
    });
    return new constr(cfg);
  }
  /**
   * 更改度量的属性信息
   * @param  {Object} info 属性信息
   * @chainable
   * @return {Scale} 返回自身的引用
   */
  ;

  _proto.change = function change(info) {
    this.ticks = null;
    mix(this, info);
    this.init();
    return this;
  };

  return Scale;
}();

module.exports = Scale;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var isType = __webpack_require__(16);

var isArray = Array.isArray ? Array.isArray : function (value) {
  return isType(value, 'Array');
};
module.exports = isArray;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview the Attribute base class
 */
var isString = __webpack_require__(18);

var isArray = __webpack_require__(13);

var isNil = __webpack_require__(9);

var mix = __webpack_require__(22);

var each = __webpack_require__(4);

function toScaleString(scale, value) {
  if (isString(value)) {
    return value;
  }

  return scale.invert(scale.scale(value));
}
/**
 * 所有视觉通道属性的基类
 * @class Attr
 */


var AttributeBase =
/*#__PURE__*/
function () {
  function AttributeBase(cfg) {
    var _this = this;
    /**
     * 属性的类型
     * @type {String}
     */


    this.type = 'base';
    /**
     * 属性的名称
     * @type {String}
     */

    this.name = null;
    /**
     * 回调函数
     * @type {Function}
     */

    this.method = null;
    /**
     * 备选的值数组
     * @type {Array}
     */

    this.values = [];
    /**
     * 属性内部的度量
     * @type {Array}
     */

    this.scales = [];
    /**
     * 是否通过线性取值, 如果未指定，则根据数值的类型判定
     * @type {Boolean}
     */

    this.linear = null;
    /**
     * 当用户设置的 callback 返回 null 时, 应该返回默认 callback 中的值
     */

    var mixedCallback = null;
    var defaultCallback = this.callback;

    if (cfg.callback) {
      var userCallback = cfg.callback;

      mixedCallback = function mixedCallback() {
        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
          params[_key] = arguments[_key];
        }

        var ret = userCallback.apply(void 0, params);

        if (isNil(ret)) {
          ret = defaultCallback.apply(_this, params);
        }

        return ret;
      };
    }

    mix(this, cfg);

    if (mixedCallback) {
      mix(this, {
        callback: mixedCallback
      });
    }
  } // 获取属性值，将值映射到视觉通道


  var _proto = AttributeBase.prototype;

  _proto._getAttrValue = function _getAttrValue(scale, value) {
    var values = this.values;

    if (scale.isCategory && !this.linear) {
      var index = scale.translate(value);
      return values[index % values.length];
    }

    var percent = scale.scale(value);
    return this.getLinearValue(percent);
  };
  /**
   * 如果进行线性映射，返回对应的映射值
   * @protected
   * @param  {Number} percent 百分比
   * @return {*}  颜色值、形状、大小等
   */


  _proto.getLinearValue = function getLinearValue(percent) {
    var values = this.values;
    var steps = values.length - 1;
    var step = Math.floor(steps * percent);
    var leftPercent = steps * percent - step;
    var start = values[step];
    var end = step === steps ? start : values[step + 1];
    var rstValue = start + (end - start) * leftPercent;
    return rstValue;
  };
  /**
   * 默认的回调函数
   * @param {*} value 回调函数的值
   * @type {Function}
   * @return {Array} 返回映射后的值
   */


  _proto.callback = function callback(value) {
    var self = this;
    var scale = self.scales[0];
    var rstValue = null;

    if (scale.type === 'identity') {
      rstValue = scale.value;
    } else {
      rstValue = self._getAttrValue(scale, value);
    }

    return rstValue;
  };
  /**
   * 根据度量获取属性名
   * @return {Array} dims of this Attribute
   */


  _proto.getNames = function getNames() {
    var scales = this.scales;
    var names = this.names;
    var length = Math.min(scales.length, names.length);
    var rst = [];

    for (var i = 0; i < length; i++) {
      rst.push(names[i]);
    }

    return rst;
  };
  /**
   * 根据度量获取维度名
   * @return {Array} dims of this Attribute
   */


  _proto.getFields = function getFields() {
    var scales = this.scales;
    var rst = [];
    each(scales, function (scale) {
      rst.push(scale.field);
    });
    return rst;
  };
  /**
   * 根据名称获取度量
   * @param  {String} name the name of scale
   * @return {Scale} scale
   */


  _proto.getScale = function getScale(name) {
    var scales = this.scales;
    var names = this.names;
    var index = names.indexOf(name);
    return scales[index];
  };
  /**
   * 映射数据
   * @param {*} param1...paramn 多个数值
   * @return {Array} 映射的值组成的数组
   */


  _proto.mapping = function mapping() {
    var scales = this.scales;
    var callback = this.callback;

    for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      params[_key2] = arguments[_key2];
    }

    var values = params;

    if (callback) {
      for (var i = 0, len = params.length; i < len; i++) {
        params[i] = this._toOriginParam(params[i], scales[i]);
      }

      values = callback.apply(this, params);
    }

    values = [].concat(values);
    return values;
  }; // 原始的参数


  _proto._toOriginParam = function _toOriginParam(param, scale) {
    var rst = param;

    if (!scale.isLinear) {
      if (isArray(param)) {
        rst = [];

        for (var i = 0, len = param.length; i < len; i++) {
          rst.push(toScaleString(scale, param[i]));
        }
      } else {
        rst = toScaleString(scale, param);
      }
    }

    return rst;
  };

  return AttributeBase;
}();

module.exports = AttributeBase;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Base = __webpack_require__(34);

var Plot = __webpack_require__(61);

var Util = __webpack_require__(0);

var Coord = __webpack_require__(62);

var Geom = __webpack_require__(6);

var ScaleController = __webpack_require__(70);

var AxisController = __webpack_require__(76);

var Global = __webpack_require__(1);

var _require = __webpack_require__(5),
    Canvas = _require.Canvas;

var Helper = __webpack_require__(28);

function isFullCircle(coord) {
  var startAngle = coord.startAngle;
  var endAngle = coord.endAngle;

  if (!Util.isNil(startAngle) && !Util.isNil(endAngle) && endAngle - startAngle < Math.PI * 2) {
    return false;
  }

  return true;
}

function compare(a, b) {
  return a - b;
}

function _isScaleExist(scales, compareScale) {
  var flag = false;
  Util.each(scales, function (scale) {
    var scaleValues = [].concat(scale.values);
    var compareScaleValues = [].concat(compareScale.values);

    if (scale.type === compareScale.type && scale.field === compareScale.field && scaleValues.sort(compare).toString() === compareScaleValues.sort(compare).toString()) {
      flag = true;
      return;
    }
  });
  return flag;
}

var Chart =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Chart, _Base);

  Chart.initPlugins = function initPlugins() {
    return {
      _plugins: [],
      _cacheId: 0,
      register: function register(plugins) {
        var p = this._plugins;
        [].concat(plugins).forEach(function (plugin) {
          if (p.indexOf(plugin) === -1) {
            p.push(plugin);
          }
        });
        this._cacheId++;
      },
      unregister: function unregister(plugins) {
        var p = this._plugins;
        [].concat(plugins).forEach(function (plugin) {
          var idx = p.indexOf(plugin);

          if (idx !== -1) {
            p.splice(idx, 1);
          }
        });
        this._cacheId++;
      },
      clear: function clear() {
        this._plugins = [];
        this._cacheId++;
      },
      count: function count() {
        return this._plugins.length;
      },
      getAll: function getAll() {
        return this._plugins;
      },
      notify: function notify(chart, hook, args) {
        var descriptors = this.descriptors(chart);
        var ilen = descriptors.length;
        var i;
        var descriptor;
        var plugin;
        var params;
        var method;

        for (i = 0; i < ilen; ++i) {
          descriptor = descriptors[i];
          plugin = descriptor.plugin;
          method = plugin[hook];

          if (typeof method === 'function') {
            params = [chart].concat(args || []);

            if (method.apply(plugin, params) === false) {
              return false;
            }
          }
        }

        return true;
      },
      descriptors: function descriptors(chart) {
        var cache = chart._plugins || (chart._plugins = {});

        if (cache.id === this._cacheId) {
          return cache.descriptors;
        }

        var plugins = [];
        var descriptors = [];

        this._plugins.concat(chart && chart.get('plugins') || []).forEach(function (plugin) {
          var idx = plugins.indexOf(plugin);

          if (idx !== -1) {
            return;
          }

          plugins.push(plugin);
          descriptors.push({
            plugin: plugin
          });
        });

        cache.descriptors = descriptors;
        cache.id = this._cacheId;
        return descriptors;
      }
    };
  };

  var _proto = Chart.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    return {
      /**
       * the id of canvas
       * @type {String}
       */
      id: null,

      /**
       * padding
       * @type {Array|Number}
       */
      padding: Global.padding,

      /**
       * data
       * @type {Array}
       */
      data: null,

      /**
       * scales of chart
       * @type {Object}
       */
      scales: {},

      /**
       * @private
       * geometry instances
       * @type {Array}
       */
      geoms: null,

      /**
       * scale configuration
       * @type {Object}
       */
      colDefs: null,
      pixelRatio: Global.pixelRatio,

      /**
       * filter options
       * @type {Object}
       */
      filters: null,
      appendPadding: Global.appendPadding
    };
  };

  _proto._syncYScales = function _syncYScales() {
    var geoms = this.get('geoms');
    var syncScales = [];
    var min = [];
    var max = [];
    Util.each(geoms, function (geom) {
      var yScale = geom.getYScale();

      if (yScale.isLinear) {
        syncScales.push(yScale);
        min.push(yScale.min);
        max.push(yScale.max);
      }
    });
    min = Math.min.apply(null, min);
    max = Math.max.apply(null, max);
    Util.each(syncScales, function (scale) {
      scale.change({
        min: min
      });
      scale.change({
        max: max
      });
    });
  };

  _proto._getFieldsForLegend = function _getFieldsForLegend() {
    var fields = [];
    var geoms = this.get('geoms');
    Util.each(geoms, function (geom) {
      var attrOptions = geom.get('attrOptions');
      var attrCfg = attrOptions.color;

      if (attrCfg && attrCfg.field && Util.isString(attrCfg.field)) {
        var arr = attrCfg.field.split('*');
        Util.each(arr, function (item) {
          if (fields.indexOf(item) === -1) {
            fields.push(item);
          }
        });
      }
    });
    return fields;
  };

  _proto._createScale = function _createScale(field, data) {
    var scaleController = this.get('scaleController');
    return scaleController.createScale(field, data);
  };

  _proto._adjustScale = function _adjustScale() {
    var self = this;
    var coord = self.get('coord');
    var xScale = self.getXScale();
    var yScales = self.getYScales();
    var scales = [];
    xScale && scales.push(xScale);
    scales = scales.concat(yScales);
    var inFullCircle = coord.isPolar && isFullCircle(coord);
    var scaleController = self.get('scaleController');
    var colDefs = scaleController.defs;
    Util.each(scales, function (scale) {
      if ((scale.isCategory || scale.isIdentity) && scale.values && !(colDefs[scale.field] && colDefs[scale.field].range)) {
        var count = scale.values.length;
        var range;

        if (count === 1) {
          range = [0.5, 1];
        } else {
          var widthRatio = 1;
          var offset = 0;

          if (inFullCircle) {
            if (!coord.transposed) {
              range = [0, 1 - 1 / count];
            } else {
              widthRatio = Global.widthRatio.multiplePie;
              offset = 1 / count * widthRatio;
              range = [offset / 2, 1 - offset / 2];
            }
          } else {
            offset = 1 / count * 1 / 2;
            range = [offset, 1 - offset];
          }
        }

        scale.range = range;
      }
    });
    var geoms = this.get('geoms');

    for (var i = 0; i < geoms.length; i++) {
      var geom = geoms[i];

      if (geom.get('type') === 'interval') {
        var yScale = geom.getYScale();
        var field = yScale.field,
            min = yScale.min,
            max = yScale.max,
            type = yScale.type;

        if (!(colDefs[field] && colDefs[field].min) && type !== 'time') {
          if (min > 0) {
            yScale.change({
              min: 0
            });
          } else if (max <= 0) {
            yScale.change({
              max: 0
            });
          }
        }
      }
    }
  };

  _proto._removeGeoms = function _removeGeoms() {
    var geoms = this.get('geoms');

    while (geoms.length > 0) {
      var geom = geoms.shift();
      geom.destroy();
    }
  };

  _proto._clearGeoms = function _clearGeoms() {
    var geoms = this.get('geoms');

    for (var i = 0, length = geoms.length; i < length; i++) {
      var geom = geoms[i];
      geom.clear();
    }
  };

  _proto._clearInner = function _clearInner() {
    this.set('scales', {});
    this.set('legendItems', null);

    this._clearGeoms();

    Chart.plugins.notify(this, 'clearInner');
    this.get('axisController') && this.get('axisController').clear();
  };

  _proto._execFilter = function _execFilter(data) {
    var filters = this.get('filters');

    if (filters) {
      data = data.filter(function (obj) {
        var rst = true;
        Util.each(filters, function (fn, k) {
          if (fn) {
            rst = fn(obj[k], obj);

            if (!rst) {
              return false;
            }
          }
        });
        return rst;
      });
    }

    return data;
  };

  _proto._initGeoms = function _initGeoms(geoms) {
    var coord = this.get('coord');
    var data = this.get('filteredData');
    var colDefs = this.get('colDefs');

    for (var i = 0, length = geoms.length; i < length; i++) {
      var geom = geoms[i];
      geom.set('data', data);
      geom.set('coord', coord);
      geom.set('colDefs', colDefs);
      geom.init();
    }
  };

  _proto._initCoord = function _initCoord() {
    var plot = this.get('plotRange');
    var coordCfg = Util.mix({
      type: 'cartesian'
    }, this.get('coordCfg'), {
      plot: plot
    });
    var type = coordCfg.type;
    var C = Coord[Util.upperFirst(type)];
    var coord = new C(coordCfg);
    this.set('coord', coord);
  };

  _proto._initLayout = function _initLayout() {
    var padding = this.get('_padding');

    if (!padding) {
      padding = this.get('margin') || this.get('padding');
      padding = Util.parsePadding(padding);
    }

    var top = padding[0] === 'auto' ? 0 : padding[0];
    var right = padding[1] === 'auto' ? 0 : padding[1];
    var bottom = padding[2] === 'auto' ? 0 : padding[2];
    var left = padding[3] === 'auto' ? 0 : padding[3];
    var width = this.get('width');
    var height = this.get('height');
    var plot = new Plot({
      start: {
        x: left,
        y: top
      },
      end: {
        x: width - right,
        y: height - bottom
      }
    });
    this.set('plotRange', plot);
    this.set('plot', plot);
  };

  _proto._initCanvas = function _initCanvas() {
    var self = this;

    try {
      var canvas = new Canvas({
        el: self.get('el') || self.get('id'),
        context: self.get('context'),
        pixelRatio: self.get('pixelRatio'),
        width: self.get('width'),
        height: self.get('height'),
        fontFamily: Global.fontFamily
      });
      self.set('canvas', canvas);
      self.set('width', canvas.get('width'));
      self.set('height', canvas.get('height'));
    } catch (error) {
      throw error;
    }

    Chart.plugins.notify(self, 'afterCanvasInit');

    self._initLayout();
  };

  _proto._initLayers = function _initLayers() {
    var canvas = this.get('canvas');
    this.set('backPlot', canvas.addGroup());
    this.set('middlePlot', canvas.addGroup({
      zIndex: 10
    }));
    this.set('frontPlot', canvas.addGroup({
      zIndex: 20
    }));
  };

  _proto._init = function _init() {
    var self = this;

    self._initCanvas();

    self._initLayers();

    self.set('geoms', []);
    self.set('scaleController', new ScaleController());
    self.set('axisController', new AxisController({
      frontPlot: self.get('frontPlot').addGroup({
        className: 'axisContainer'
      }),
      backPlot: self.get('backPlot').addGroup({
        className: 'axisContainer'
      }),
      chart: self
    }));
    Chart.plugins.notify(self, 'init');
  };

  function Chart(cfg) {
    var _this;

    _this = _Base.call(this, cfg) || this;

    var self = _assertThisInitialized(_this);

    Util.each(Geom, function (geomConstructor, className) {
      var methodName = Util.lowerFirst(className);

      self[methodName] = function (cfg) {
        var geom = new geomConstructor(cfg);
        self.addGeom(geom);
        return geom;
      };
    });

    self._init();

    return _this;
  }
  /**
   * set data and some scale configuration
   * @chainable
   * @param  {Array} data the dataset to visualize
   * @param  {Object} colDefs the configuration for scales
   * @return {Chart} return the chart instance
   */


  _proto.source = function source(data, colDefs) {
    this.set('data', data);

    if (colDefs) {
      this.scale(colDefs);
    }

    return this;
  };

  _proto.scale = function scale(field, cfg) {
    var colDefs = this.get('colDefs') || {};

    if (Util.isObject(field)) {
      Util.mix(colDefs, field);
    } else {
      colDefs[field] = cfg;
    }

    this.set('colDefs', colDefs);
    var scaleController = this.get('scaleController');
    scaleController.defs = colDefs;
    return this;
  }
  /**
   * configure the axis
   * @chainable
   * @param  {String|Boolean} field the field name of data
   * @param  {Object} cfg configuration for axis
   * @return {Chart} return the chart instance
   */
  ;

  _proto.axis = function axis(field, cfg) {
    var axisController = this.get('axisController');

    if (!field) {
      axisController.axisCfg = null;
    } else {
      axisController.axisCfg = axisController.axisCfg || {};
      axisController.axisCfg[field] = cfg;
    }

    return this;
  }
  /**
   * configure the coordinate
   * @chainable
   * @param  {String} type set the type of coodinate
   * @param  {Object} cfg configuration for coordinate
   * @return {Chart} return the chart instance
   */
  ;

  _proto.coord = function coord(type, cfg) {
    var coordCfg;

    if (Util.isObject(type)) {
      coordCfg = type;
    } else {
      coordCfg = cfg || {};
      coordCfg.type = type || 'cartesian';
    }

    this.set('coordCfg', coordCfg);
    return this;
  };

  _proto.filter = function filter(field, condition) {
    var filters = this.get('filters') || {};
    filters[field] = condition;
    this.set('filters', filters);
  }
  /**
   * render the chart
   * @chainable
   * @return {Chart} return the chart instance
   */
  ;

  _proto.render = function render() {
    var canvas = this.get('canvas');
    var geoms = this.get('geoms');
    var data = this.get('data') || [];

    var filteredData = this._execFilter(data); // filter data


    this.set('filteredData', filteredData);

    this._initCoord(); // initialization coordinate instance


    Chart.plugins.notify(this, 'beforeGeomInit');

    this._initGeoms(geoms); // init all geometry instances


    this.get('syncY') && this._syncYScales();

    this._adjustScale(); // do some adjust for data


    Chart.plugins.notify(this, 'beforeGeomDraw');

    this._renderAxis();

    var middlePlot = this.get('middlePlot');

    if (this.get('limitInPlot') && !middlePlot.attr('clip')) {
      var coord = this.get('coord');
      var clip = Helper.getClip(coord);
      clip.set('canvas', middlePlot.get('canvas'));
      middlePlot.attr('clip', clip);
    }

    for (var i = 0, length = geoms.length; i < length; i++) {
      var geom = geoms[i];
      geom.paint();
    }

    Chart.plugins.notify(this, 'afterGeomDraw');
    canvas.sort();
    this.get('frontPlot').sort();
    Chart.plugins.notify(this, 'beforeCanvasDraw');
    canvas.draw();
    return this;
  }
  /**
   * clear the chart, include geometris and all the shapes
   * @chainable
   * @return {Chart} return the chart
   */
  ;

  _proto.clear = function clear() {
    Chart.plugins.notify(this, 'clear');

    this._removeGeoms();

    this._clearInner();

    this.set('filters', null);
    this.set('isUpdate', false);
    this.set('_padding', null);
    var canvas = this.get('canvas');
    canvas.draw();
    return this;
  };

  _proto.repaint = function repaint() {
    this.set('isUpdate', true);
    Chart.plugins.notify(this, 'repaint');

    this._clearInner();

    this.render();
  };

  _proto.changeData = function changeData(data) {
    this.set('data', data);
    Chart.plugins.notify(this, 'changeData');
    this.set('_padding', null);
    this.repaint();
  };

  _proto.changeSize = function changeSize(width, height) {
    if (width) {
      this.set('width', width);
    } else {
      width = this.get('width');
    }

    if (height) {
      this.set('height', height);
    } else {
      height = this.get('height');
    }

    var canvas = this.get('canvas');
    canvas.changeSize(width, height);

    this._initLayout();

    this.repaint();
    return this;
  };

  _proto.destroy = function destroy() {
    this.clear();
    var canvas = this.get('canvas');
    canvas.destroy();
    Chart.plugins.notify(this, 'afterCanvasDestroyed');

    if (this._interactions) {
      Util.each(this._interactions, function (interaction) {
        interaction.destroy();
      });
    }

    _Base.prototype.destroy.call(this);
  }
  /**
   * calculate dataset's position on canvas
   * @param  {Object} record the dataset
   * @return {Object} return the position
   */
  ;

  _proto.getPosition = function getPosition(record) {
    var self = this;
    var coord = self.get('coord');
    var xScale = self.getXScale();
    var yScale = self.getYScales()[0];
    var xField = xScale.field;
    var x = xScale.scale(record[xField]);
    var yField = yScale.field;
    var y = yScale.scale(record[yField]);
    return coord.convertPoint({
      x: x,
      y: y
    });
  }
  /**
   * get the data item of the point
   * @param  {Object} point canvas position
   * @return {Object} return the data item
   */
  ;

  _proto.getRecord = function getRecord(point) {
    var self = this;
    var coord = self.get('coord');
    var xScale = self.getXScale();
    var yScale = self.getYScales()[0];
    var invertPoint = coord.invertPoint(point);
    var record = {};
    record[xScale.field] = xScale.invert(invertPoint.x);
    record[yScale.field] = yScale.invert(invertPoint.y);
    return record;
  }
  /**
   * get the dataset of the point
   * @param  {Object} point canvas position
   * @return {Array} return the dataset
  **/
  ;

  _proto.getSnapRecords = function getSnapRecords(point) {
    var geom = this.get('geoms')[0];
    var data = [];

    if (geom) {
      // need to judge
      data = geom.getSnapRecords(point);
    }

    return data;
  }
  /**
   * creat scale instances
   * @param  {String} field field name of data
   * @return {Scale} return the scale
   */
  ;

  _proto.createScale = function createScale(field) {
    var data = this.get('data');
    var filteredData = this.get('filteredData');

    if (filteredData.length) {
      var legendFields = this._getFieldsForLegend();

      if (legendFields.indexOf(field) === -1) {
        data = filteredData;
      }
    }

    var scales = this.get('scales');

    if (!scales[field]) {
      scales[field] = this._createScale(field, data);
    }

    return scales[field];
  }
  /**
   * @protected
   * add geometry instance to geoms
   * @param {Geom} geom geometry instance
   */
  ;

  _proto.addGeom = function addGeom(geom) {
    var geoms = this.get('geoms');
    var middlePlot = this.get('middlePlot');
    geoms.push(geom);
    geom.set('chart', this);
    geom.set('container', middlePlot.addGroup());
  }
  /**
   * get the scale of x axis
   * @return {Scale} return the scale
   */
  ;

  _proto.getXScale = function getXScale() {
    var self = this;
    var geoms = self.get('geoms');
    var xScale = geoms[0].getXScale();
    return xScale;
  }
  /**
   * get the scale of y axis
   * @return {Array} return the scale
   */
  ;

  _proto.getYScales = function getYScales() {
    var geoms = this.get('geoms');
    var rst = [];
    Util.each(geoms, function (geom) {
      var yScale = geom.getYScale();

      if (rst.indexOf(yScale) === -1) {
        rst.push(yScale);
      }
    });
    return rst;
  };

  _proto.getLegendItems = function getLegendItems() {
    if (this.get('legendItems')) {
      return this.get('legendItems');
    }

    var legendItems = {};
    var scales = [];
    var geoms = this.get('geoms');
    Util.each(geoms, function (geom) {
      var colorAttr = geom.getAttr('color');

      if (colorAttr) {
        var scale = colorAttr.getScale('color');

        if (scale.type !== 'identity' && !_isScaleExist(scales, scale)) {
          scales.push(scale);
          var field = scale.field;
          var ticks = scale.getTicks();
          var items = [];
          Util.each(ticks, function (tick) {
            var text = tick.text;
            var name = text;
            var scaleValue = tick.value;
            var value = scale.invert(scaleValue);
            var color = colorAttr.mapping(value).join('') || Global.defaultColor;
            var marker = {
              fill: color,
              radius: 3,
              symbol: 'circle',
              stroke: '#fff'
            };
            items.push({
              name: name,
              // for display
              dataValue: value,
              // the origin value
              checked: true,
              marker: marker
            });
          });
          legendItems[field] = items;
        }
      }
    });
    this.set('legendItems', legendItems);
    return legendItems;
  } // register the plugins
  ;

  _proto.registerPlugins = function registerPlugins(plugins) {
    var self = this;
    var chartPlugins = self.get('plugins') || [];

    if (!Util.isArray(chartPlugins)) {
      chartPlugins = [chartPlugins];
    }

    [].concat(plugins).forEach(function (plugin) {
      if (chartPlugins.indexOf(plugin) === -1) {
        plugin.init && plugin.init(self); // init

        chartPlugins.push(plugin);
      }
    });
    Chart.plugins._cacheId++;
    self.set('plugins', chartPlugins);
  };

  _proto._renderAxis = function _renderAxis() {
    var axisController = this.get('axisController');
    var xScale = this.getXScale();
    var yScales = this.getYScales();
    var coord = this.get('coord');
    Chart.plugins.notify(this, 'beforeRenderAxis');
    axisController.createAxis(coord, xScale, yScales);
  };

  _proto._isAutoPadding = function _isAutoPadding() {
    if (this.get('_padding')) {
      return false;
    }

    var padding = this.get('padding');

    if (Util.isArray(padding)) {
      return padding.indexOf('auto') !== -1;
    }

    return padding === 'auto';
  };

  _proto._updateLayout = function _updateLayout(padding) {
    var width = this.get('width');
    var height = this.get('height');
    var start = {
      x: padding[3],
      y: padding[0]
    };
    var end = {
      x: width - padding[1],
      y: height - padding[2]
    };
    var plot = this.get('plot');
    var coord = this.get('coord');
    plot.reset(start, end);
    coord.reset(plot);
  };

  return Chart;
}(Base);

Chart.plugins = Chart.initPlugins();
module.exports = Chart;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

var toString = {}.toString;

var isType = function isType(value, type) {
  return toString.call(value) === '[object ' + type + ']';
};

module.exports = isType;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * 判断是否数字
 * @return {Boolean} 是否数字
 */
var isType = __webpack_require__(16);

var isNumber = function isNumber(value) {
  return isType(value, 'Number');
};

module.exports = isNumber;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

var isType = __webpack_require__(16);

var isString = function isString(str) {
  return isType(str, 'String');
};

module.exports = isString;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview shape util
 * @author dxq613@gmail.com
 */
var Util = __webpack_require__(0);

var ShapeUtil = {
  splitPoints: function splitPoints(obj) {
    var points = [];
    var x = obj.x;
    var y = obj.y;
    y = Util.isArray(y) ? y : [y];
    y.forEach(function (yItem, index) {
      var point = {
        x: Util.isArray(x) ? x[index] : x,
        y: yItem
      };
      points.push(point);
    });
    return points;
  },
  splitArray: function splitArray(data, yField, connectNulls) {
    if (!data.length) return [];
    var arr = [];
    var tmp = [];
    var yValue;
    Util.each(data, function (obj) {
      yValue = obj._origin ? obj._origin[yField] : obj[yField];

      if (connectNulls) {
        if (!Util.isNil(yValue)) {
          tmp.push(obj);
        }
      } else {
        if (Util.isArray(yValue) && Util.isNil(yValue[0]) || Util.isNil(yValue)) {
          if (tmp.length) {
            arr.push(tmp);
            tmp = [];
          }
        } else {
          tmp.push(obj);
        }
      }
    });

    if (tmp.length) {
      arr.push(tmp);
    }

    return arr;
  }
};
module.exports = ShapeUtil;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var isType = __webpack_require__(7);

var isArray = Array.isArray ? Array.isArray : function (value) {
  return isType(value, 'Array');
};
module.exports = isArray;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Base =
/*#__PURE__*/
function () {
  var _proto = Base.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {};

  function Base(cfg) {
    this._initDefaultCfg();

    Util.mix(this, cfg);
    var start;
    var end;

    if (this.plot) {
      start = this.plot.bl;
      end = this.plot.tr;
      this.start = start;
      this.end = end;
    } else {
      start = this.start;
      end = this.end;
    }

    this.init(start, end);
  }

  _proto.init = function init() {};

  _proto.convertPoint = function convertPoint(point) {
    return point;
  };

  _proto.invertPoint = function invertPoint(point) {
    return point;
  };

  _proto.reset = function reset(plot) {
    this.plot = plot;
    var bl = plot.bl,
        tr = plot.tr;
    this.start = bl;
    this.end = tr;
    this.init(bl, tr);
  };

  return Base;
}();

module.exports = Base;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

function _mix(dist, obj) {
  for (var key in obj) {
    if (obj.hasOwnProperty(key) && key !== 'constructor' && obj[key] !== undefined) {
      dist[key] = obj[key];
    }
  }
}

var mix = function mix(dist, src1, src2, src3) {
  if (src1) _mix(dist, src1);
  if (src2) _mix(dist, src2);
  if (src3) _mix(dist, src3);
  return dist;
};

module.exports = mix;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

var mix = __webpack_require__(22);

var Adjust =
/*#__PURE__*/
function () {
  var _proto = Adjust.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.adjustNames = ['x', 'y']; // 调整的维度，默认,x,y都做调整
  };

  function Adjust(cfg) {
    this._initDefaultCfg();

    mix(this, cfg);
  }
  /**
   * @override
   */


  _proto.processAdjust = function processAdjust()
  /* dataArray */
  {};

  return Adjust;
}();

module.exports = Adjust;

/***/ }),
/* 24 */
/***/ (function(module, exports) {

var Matrix = {
  multiply: function multiply(m1, m2) {
    var m11 = m1[0] * m2[0] + m1[2] * m2[1];
    var m12 = m1[1] * m2[0] + m1[3] * m2[1];
    var m21 = m1[0] * m2[2] + m1[2] * m2[3];
    var m22 = m1[1] * m2[2] + m1[3] * m2[3];
    var dx = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];
    var dy = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];
    return [m11, m12, m21, m22, dx, dy];
  },
  scale: function scale(out, m, v) {
    out[0] = m[0] * v[0];
    out[1] = m[1] * v[0];
    out[2] = m[2] * v[1];
    out[3] = m[3] * v[1];
    out[4] = m[4];
    out[5] = m[5];
    return out;
  },
  rotate: function rotate(out, m, radian) {
    var c = Math.cos(radian);
    var s = Math.sin(radian);
    var m11 = m[0] * c + m[2] * s;
    var m12 = m[1] * c + m[3] * s;
    var m21 = m[0] * -s + m[2] * c;
    var m22 = m[1] * -s + m[3] * c;
    out[0] = m11;
    out[1] = m12;
    out[2] = m21;
    out[3] = m22;
    out[4] = m[4];
    out[5] = m[5];
    return out;
  },
  translate: function translate(out, m, v) {
    out[0] = m[0];
    out[1] = m[1];
    out[2] = m[2];
    out[3] = m[3];
    out[4] = m[4] + m[0] * v[0] + m[2] * v[1];
    out[5] = m[5] + m[1] * v[0] + m[3] * v[1];
    return out;
  },
  transform: function transform(m, actions) {
    var out = [].concat(m);

    for (var i = 0, len = actions.length; i < len; i++) {
      var action = actions[i];

      switch (action[0]) {
        case 't':
          Matrix.translate(out, out, [action[1], action[2]]);
          break;

        case 's':
          Matrix.scale(out, out, [action[1], action[2]]);
          break;

        case 'r':
          Matrix.rotate(out, out, action[1]);
          break;

        default:
          break;
      }
    }

    return out;
  }
};
module.exports = Matrix;

/***/ }),
/* 25 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var isObject = function isObject(value) {
  /**
   * isObject({}) => true
   * isObject([1, 2, 3]) => true
   * isObject(Function) => true
   * isObject(null) => false
   */
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  return value !== null && type === 'object' || type === 'function';
};

module.exports = isObject;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Global = __webpack_require__(1);

var Vector2 = __webpack_require__(3);

var Abastract =
/*#__PURE__*/
function () {
  var _proto = Abastract.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    /**
     * ticks
     * @type {Array}
     */
    this.ticks = [];
    /**
     * the configuration for tickLine
     * @type {Object}
     */

    this.tickLine = {};
    /**
     * the direction of ticks, 1 means clockwise
     * @type {Number}
     */

    this.offsetFactor = 1;
    /**
     * the top container
     * @type {container}
     */

    this.frontContainer = null;
    /**
     * the back container
     * @type {[type]}
     */

    this.backContainer = null;
    /**
     * points for draw grid line
     * @type {Array}
     */

    this.gridPoints = [];
  };

  function Abastract(cfg) {
    this._initDefaultCfg();

    Util.mix(this, cfg);
    this.draw();
  }

  _proto.draw = function draw() {
    var line = this.line,
        tickLine = this.tickLine,
        label = this.label,
        grid = this.grid;
    grid && this.drawGrid(grid); // draw the grid lines

    tickLine && this.drawTicks(tickLine); // draw the tickLine

    line && this.drawLine(line); // draw axis line

    label && this.drawLabels(); // draw ticks
  };

  _proto.drawTicks = function drawTicks(tickCfg) {
    var self = this;
    var ticks = self.ticks;
    var length = tickCfg.length;
    var container = self.getContainer(tickCfg.top);
    Util.each(ticks, function (tick) {
      var start = self.getOffsetPoint(tick.value);
      var end = self.getSidePoint(start, length);
      var shape = container.addShape('line', {
        className: 'axis-tick',
        attrs: Util.mix({
          x1: start.x,
          y1: start.y,
          x2: end.x,
          y2: end.y
        }, tickCfg)
      });
      shape._id = self._id + '-ticks';
    });
  };

  _proto.drawLabels = function drawLabels() {
    var self = this;
    var labelOffset = self.labelOffset;
    var labels = self.labels;
    Util.each(labels, function (labelShape) {
      var container = self.getContainer(labelShape.get('top'));
      var start = self.getOffsetPoint(labelShape.get('value'));

      var _self$getSidePoint = self.getSidePoint(start, labelOffset),
          x = _self$getSidePoint.x,
          y = _self$getSidePoint.y;

      labelShape.attr(Util.mix({
        x: x,
        y: y
      }, self.getTextAlignInfo(start, labelOffset), labelShape.get('textStyle')));
      labelShape._id = self._id + '-' + labelShape.attr('text');
      container.add(labelShape);
    });
  };

  _proto.drawLine = function drawLine() {};

  _proto.drawGrid = function drawGrid(grid) {
    var self = this;
    var gridPoints = self.gridPoints,
        ticks = self.ticks;
    var gridCfg = grid;
    var count = gridPoints.length;
    Util.each(gridPoints, function (subPoints, index) {
      if (Util.isFunction(grid)) {
        var tick = ticks[index] || {};
        var executedGrid = grid(tick.text, index, count);
        gridCfg = executedGrid ? Util.mix({}, Global._defaultAxis.grid, executedGrid) : null;
      }

      if (gridCfg) {
        var type = gridCfg.type; // has two types: 'line' and 'arc'

        var points = subPoints.points;
        var container = self.getContainer(gridCfg.top);
        var shape;

        if (type === 'arc') {
          var center = self.center,
              startAngle = self.startAngle,
              endAngle = self.endAngle;
          var radius = Vector2.length([points[0].x - center.x, points[0].y - center.y]);
          shape = container.addShape('Arc', {
            className: 'axis-grid',
            attrs: Util.mix({
              x: center.x,
              y: center.y,
              startAngle: startAngle,
              endAngle: endAngle,
              r: radius
            }, gridCfg)
          });
        } else {
          shape = container.addShape('Polyline', {
            className: 'axis-grid',
            attrs: Util.mix({
              points: points
            }, gridCfg)
          });
        }

        shape._id = subPoints._id;
      }
    });
  };

  _proto.getOffsetPoint = function getOffsetPoint() {};

  _proto.getAxisVector = function getAxisVector() {};

  _proto.getOffsetVector = function getOffsetVector(point, offset) {
    var self = this;
    var axisVector = self.getAxisVector(point);
    var normal = Vector2.normalize([], axisVector);
    var factor = self.offsetFactor;
    var verticalVector = [normal[1] * -1 * factor, normal[0] * factor];
    return Vector2.scale([], verticalVector, offset);
  };

  _proto.getSidePoint = function getSidePoint(point, offset) {
    var self = this;
    var offsetVector = self.getOffsetVector(point, offset);
    return {
      x: point.x + offsetVector[0],
      y: point.y + offsetVector[1]
    };
  };

  _proto.getTextAlignInfo = function getTextAlignInfo(point, offset) {
    var self = this;
    var offsetVector = self.getOffsetVector(point, offset);
    var align;
    var baseLine;

    if (offsetVector[0] > 0) {
      align = 'left';
    } else if (offsetVector[0] < 0) {
      align = 'right';
    } else {
      align = 'center';
    }

    if (offsetVector[1] > 0) {
      baseLine = 'top';
    } else if (offsetVector[1] < 0) {
      baseLine = 'bottom';
    } else {
      baseLine = 'middle';
    }

    return {
      textAlign: align,
      textBaseline: baseLine
    };
  };

  _proto.getContainer = function getContainer(isTop) {
    var frontContainer = this.frontContainer,
        backContainer = this.backContainer;
    return isTop ? frontContainer : backContainer;
  };

  return Abastract;
}();

module.exports = Abastract;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var MatrixUtil = __webpack_require__(24);

var Vector2 = __webpack_require__(3);

var StyleUtil = __webpack_require__(80);

function isUnchanged(m) {
  return m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0;
}

var ALIAS_ATTRS_MAP = {
  stroke: 'strokeStyle',
  fill: 'fillStyle',
  opacity: 'globalAlpha'
};
var SHAPE_ATTRS = ['fillStyle', 'font', 'globalAlpha', 'lineCap', 'lineWidth', 'lineJoin', 'miterLimit', 'shadowBlur', 'shadowColor', 'shadowOffsetX', 'shadowOffsetY', 'strokeStyle', 'textAlign', 'textBaseline', 'lineDash', 'shadow' // 兼容支付宝小程序
];
var CLIP_SHAPES = ['circle', 'sector', 'polygon', 'rect', 'polyline'];

var Element =
/*#__PURE__*/
function () {
  var _proto = Element.prototype;

  _proto._initProperties = function _initProperties() {
    this._attrs = {
      zIndex: 0,
      visible: true,
      destroyed: false
    };
  };

  function Element(cfg) {
    this._initProperties();

    Util.mix(this._attrs, cfg);
    var attrs = this._attrs.attrs;

    if (attrs) {
      this.initAttrs(attrs);
    }

    this.initTransform();
  }

  _proto.get = function get(name) {
    return this._attrs[name];
  };

  _proto.set = function set(name, value) {
    this._attrs[name] = value;
  };

  _proto.isGroup = function isGroup() {
    return this.get('isGroup');
  };

  _proto.isShape = function isShape() {
    return this.get('isShape');
  };

  _proto.initAttrs = function initAttrs(attrs) {
    this.attr(Util.mix(this.getDefaultAttrs(), attrs));
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {};
  };

  _proto._setAttr = function _setAttr(name, value) {
    var attrs = this._attrs.attrs;

    if (name === 'clip') {
      value = this._setAttrClip(value);
    } else {
      var alias = ALIAS_ATTRS_MAP[name];

      if (alias) {
        attrs[alias] = value;
      }
    }

    attrs[name] = value;
  };

  _proto._getAttr = function _getAttr(name) {
    return this._attrs.attrs[name];
  } // _afterAttrsSet() {}
  ;

  _proto._setAttrClip = function _setAttrClip(clip) {
    if (clip && CLIP_SHAPES.indexOf(clip._attrs.type) > -1) {
      if (clip.get('canvas') === null) {
        clip = Object.assign({}, clip);
      }

      clip.set('parent', this.get('parent'));
      clip.set('context', this.get('context'));
      return clip;
    }

    return null;
  };

  _proto.attr = function attr(name, value) {
    var self = this;
    if (self.get('destroyed')) return null;
    var argumentsLen = arguments.length;

    if (argumentsLen === 0) {
      return self._attrs.attrs;
    }

    if (Util.isObject(name)) {
      this._attrs.bbox = null;

      for (var k in name) {
        self._setAttr(k, name[k]);
      }

      if (self._afterAttrsSet) {
        self._afterAttrsSet();
      }

      return self;
    }

    if (argumentsLen === 2) {
      this._attrs.bbox = null;

      self._setAttr(name, value);

      if (self._afterAttrsSet) {
        self._afterAttrsSet();
      }

      return self;
    }

    return self._getAttr(name);
  };

  _proto.getParent = function getParent() {
    return this.get('parent');
  };

  _proto.draw = function draw(context) {
    if (this.get('destroyed')) {
      return;
    }

    if (this.get('visible')) {
      this.setContext(context);
      this.drawInner(context);
      this.restoreContext(context);
    }
  };

  _proto.setContext = function setContext(context) {
    var clip = this._attrs.attrs.clip;
    context.save();

    if (clip) {
      clip.resetTransform(context);
      clip.createPath(context);
      context.clip();
    }

    this.resetContext(context);
    this.resetTransform(context);
  };

  _proto.restoreContext = function restoreContext(context) {
    context.restore();
  };

  _proto.resetContext = function resetContext(context) {
    var elAttrs = this._attrs.attrs;

    if (!this._attrs.isGroup) {
      for (var k in elAttrs) {
        if (SHAPE_ATTRS.indexOf(k) > -1) {
          var v = elAttrs[k];

          if (k === 'fillStyle' || k === 'strokeStyle') {
            v = StyleUtil.parseStyle(v, this, context);
          }

          if (k === 'lineDash' && context.setLineDash && Util.isArray(v)) {
            context.setLineDash(v);
          } else {
            context[k] = v;
          }
        }
      }
    }
  };

  _proto.hasFill = function hasFill() {
    return this.get('canFill') && this._attrs.attrs.fillStyle;
  };

  _proto.hasStroke = function hasStroke() {
    return this.get('canStroke') && this._attrs.attrs.strokeStyle;
  };

  _proto.drawInner = function drawInner()
  /* context */
  {};

  _proto.show = function show() {
    this.set('visible', true);
    return this;
  };

  _proto.hide = function hide() {
    this.set('visible', false);
    return this;
  };

  _proto.isVisible = function isVisible() {
    return this.get('visible');
  };

  _proto._removeFromParent = function _removeFromParent() {
    var parent = this.get('parent');

    if (parent) {
      var children = parent.get('children');
      Util.Array.remove(children, this);
    }

    return this;
  };

  _proto.remove = function remove(destroy) {
    if (destroy) {
      this.destroy();
    } else {
      this._removeFromParent();
    }
  };

  _proto.destroy = function destroy() {
    var destroyed = this.get('destroyed');

    if (destroyed) {
      return null;
    }

    this._removeFromParent();

    this._attrs = {};
    this.set('destroyed', true);
  };

  _proto.getBBox = function getBBox() {
    return {
      minX: 0,
      maxX: 0,
      minY: 0,
      maxY: 0,
      width: 0,
      height: 0
    };
  };

  _proto.initTransform = function initTransform() {
    var attrs = this._attrs.attrs || {};

    if (!attrs.matrix) {
      attrs.matrix = [1, 0, 0, 1, 0, 0];
    }

    this._attrs.attrs = attrs;
  };

  _proto.getMatrix = function getMatrix() {
    return this._attrs.attrs.matrix;
  };

  _proto.setMatrix = function setMatrix(m) {
    this._attrs.attrs.matrix = [m[0], m[1], m[2], m[3], m[4], m[5]];
  };

  _proto.transform = function transform(actions) {
    var matrix = this._attrs.attrs.matrix;
    this._attrs.attrs.matrix = MatrixUtil.transform(matrix, actions);
    return this;
  };

  _proto.setTransform = function setTransform(actions) {
    this._attrs.attrs.matrix = [1, 0, 0, 1, 0, 0];
    return this.transform(actions);
  };

  _proto.translate = function translate(x, y) {
    var matrix = this._attrs.attrs.matrix;
    MatrixUtil.translate(matrix, matrix, [x, y]);
  };

  _proto.rotate = function rotate(rad) {
    var matrix = this._attrs.attrs.matrix;
    MatrixUtil.rotate(matrix, matrix, rad);
  };

  _proto.scale = function scale(sx, sy) {
    var matrix = this._attrs.attrs.matrix;
    MatrixUtil.scale(matrix, matrix, [sx, sy]);
  };

  _proto.moveTo = function moveTo(x, y) {
    var cx = this._attrs.x || 0;
    var cy = this._attrs.y || 0;
    this.translate(x - cx, y - cy);
    this.set('x', x);
    this.set('y', y);
  };

  _proto.apply = function apply(v) {
    var m = this._attrs.attrs.matrix;
    Vector2.transformMat2d(v, v, m);
    return this;
  };

  _proto.resetTransform = function resetTransform(context) {
    var mo = this._attrs.attrs.matrix;

    if (!isUnchanged(mo)) {
      context.transform(mo[0], mo[1], mo[2], mo[3], mo[4], mo[5]);
    }
  };

  _proto.isDestroyed = function isDestroyed() {
    return this.get('destroyed');
  };

  return Element;
}();

module.exports = Element;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var _require = __webpack_require__(5),
    Shape = _require.Shape;

module.exports = {
  getClip: function getClip(coord) {
    var start = coord.start;
    var end = coord.end;
    var width = end.x - start.x;
    var height = Math.abs(end.y - start.y);
    var margin = 10;
    var clip;

    if (coord.isPolar) {
      var circleRadius = coord.circleRadius,
          center = coord.center,
          startAngle = coord.startAngle,
          endAngle = coord.endAngle;
      clip = new Shape.Sector({
        attrs: {
          x: center.x,
          y: center.y,
          r: circleRadius,
          r0: 0,
          startAngle: startAngle,
          endAngle: endAngle
        }
      });
    } else {
      clip = new Shape.Rect({
        attrs: {
          x: start.x,
          y: end.y - margin,
          width: width,
          height: height + 2 * margin
        }
      });
    }

    clip.isClip = true;
    return clip;
  },
  isPointInPlot: function isPointInPlot(point, plot) {
    var x = point.x,
        y = point.y;
    var tl = plot.tl,
        tr = plot.tr,
        br = plot.br;
    return x >= tl.x && x <= tr.x && y >= tl.y && y <= br.y;
  }
};

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var isNil = __webpack_require__(30);

function toString(value) {
  if (isNil(value)) return '';
  return value.toString();
}

module.exports = toString;

/***/ }),
/* 30 */
/***/ (function(module, exports) {

// isFinite,
var isNil = function isNil(value) {
  /**
   * isNil(null) => true
   * isNil() => true
   */
  return value === null || value === undefined;
};

module.exports = isNil;

/***/ }),
/* 31 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var isObject = function isObject(value) {
  /**
   * isObject({}) => true
   * isObject([1, 2, 3]) => true
   * isObject(Function) => true
   * isObject(null) => false
   */
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
  return value !== null && type === 'object' || type === 'function';
};

module.exports = isObject;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var isObjectLike = __webpack_require__(55);

var isType = __webpack_require__(7);

var isPlainObject = function isPlainObject(value) {
  /**
   * isObjectLike(new Foo) => false
   * isObjectLike([1, 2, 3]) => false
   * isObjectLike({ x: 0, y: 0 }) => true
   * isObjectLike(Object.create(null)) => true
   */
  if (!isObjectLike(value) || !isType(value, 'Object')) {
    return false;
  }

  if (Object.getPrototypeOf(value) === null) {
    return true;
  }

  var proto = value;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(value) === proto;
};

module.exports = isPlainObject;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(31);

var isArray = __webpack_require__(20);

var each = function each(elements, func) {
  if (!elements) {
    return;
  }

  var rst = void 0;

  if (isArray(elements)) {
    for (var i = 0, len = elements.length; i < len; i++) {
      rst = func(elements[i], i);

      if (rst === false) {
        break;
      }
    }
  } else if (isObject(elements)) {
    for (var k in elements) {
      if (elements.hasOwnProperty(k)) {
        rst = func(elements[k], k);

        if (rst === false) {
          break;
        }
      }
    }
  }
};

module.exports = each;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview Base class of chart and geometry
 * @author dxq613@gmail.com
 */
var Util = __webpack_require__(0);

var Base =
/*#__PURE__*/
function () {
  var _proto = Base.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    return {};
  };

  function Base(cfg) {
    var attrs = {};
    var defaultCfg = this.getDefaultCfg();
    this._attrs = attrs;
    Util.mix(attrs, defaultCfg, cfg);
  }

  _proto.get = function get(name) {
    return this._attrs[name];
  };

  _proto.set = function set(name, value) {
    this._attrs[name] = value;
  };

  _proto.destroy = function destroy() {
    this._attrs = {};
    this.destroyed = true;
  };

  return Base;
}();

module.exports = Base;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Shape = __webpack_require__(2);

var SHAPE_MAP = {};
var INDEX = '_INDEX';

function getComparer(compare) {
  return function (left, right) {
    var result = compare(left, right);
    return result === 0 ? left[INDEX] - right[INDEX] : result;
  };
}

module.exports = {
  getGroupClass: function getGroupClass() {},
  getChildren: function getChildren() {
    return this.get('children');
  },
  addShape: function addShape(type, cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    var canvas = this.get('canvas');
    var shapeType = SHAPE_MAP[type];

    if (!shapeType) {
      shapeType = Util.upperFirst(type);
      SHAPE_MAP[type] = shapeType;
    }

    cfg.canvas = canvas;

    if (shapeType === 'Text' && canvas && canvas.get('fontFamily')) {
      cfg.attrs.fontFamily = cfg.attrs.fontFamily || canvas.get('fontFamily');
    }

    var shape = new Shape[shapeType](cfg);
    this.add(shape);
    return shape;
  },
  addGroup: function addGroup(cfg) {
    var canvas = this.get('canvas');
    var groupClass = this.getGroupClass();
    cfg = Util.mix({}, cfg);
    cfg.canvas = canvas;
    cfg.parent = this;
    var rst = new groupClass(cfg);
    this.add(rst);
    return rst;
  },
  contain: function contain(item) {
    var children = this.get('children');
    return children.indexOf(item) > -1;
  },
  sort: function sort() {
    var children = this.get('children');

    for (var i = 0, len = children.length; i < len; i++) {
      var child = children[i];
      child[INDEX] = i;
    }

    children.sort(getComparer(function (obj1, obj2) {
      return obj1.get('zIndex') - obj2.get('zIndex');
    }));
    return this;
  },
  clear: function clear() {
    var children = this.get('children');

    while (children.length !== 0) {
      children[children.length - 1].remove(true);
    }

    return this;
  },
  add: function add(items) {
    var self = this;
    var children = self.get('children');

    if (!Util.isArray(items)) {
      items = [items];
    }

    for (var i = 0, len = items.length; i < len; i++) {
      var item = items[i];
      var parent = item.get('parent');

      if (parent) {
        var descendants = parent.get('children');
        Util.Array.remove(descendants, item);
      }

      self._setEvn(item);

      children.push(item);
    }

    return self;
  },
  _setEvn: function _setEvn(item) {
    var self = this;
    item._attrs.parent = self;
    item._attrs.context = self._attrs.context;
    item._attrs.canvas = self._attrs.canvas;
    var clip = item._attrs.attrs.clip;

    if (clip) {
      clip.set('parent', self);
      clip.set('context', self.get('context'));
    }

    if (item._attrs.isGroup) {
      var children = item._attrs.children;

      for (var i = 0, len = children.length; i < len; i++) {
        item._setEvn(children[i]);
      }
    }
  }
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Element = __webpack_require__(27);

var Container = __webpack_require__(35);

var Vector2 = __webpack_require__(3);

var Group =
/*#__PURE__*/
function (_Element) {
  _inheritsLoose(Group, _Element);

  function Group() {
    return _Element.apply(this, arguments) || this;
  }

  var _proto = Group.prototype;

  _proto._initProperties = function _initProperties() {
    this._attrs = {
      zIndex: 0,
      visible: true,
      destroyed: false,
      isGroup: true,
      children: []
    };
  };

  _proto.drawInner = function drawInner(context) {
    var children = this.get('children');

    for (var i = 0, len = children.length; i < len; i++) {
      var child = children[i];
      child.draw(context);
    }

    return this;
  };

  _proto.getBBox = function getBBox() {
    var self = this;
    var minX = Infinity;
    var maxX = -Infinity;
    var minY = Infinity;
    var maxY = -Infinity;
    var children = self.get('children');

    for (var i = 0, length = children.length; i < length; i++) {
      var child = children[i];

      if (child.get('visible')) {
        var box = child.getBBox();

        if (!box) {
          continue;
        }

        var leftTop = [box.minX, box.minY];
        var leftBottom = [box.minX, box.maxY];
        var rightTop = [box.maxX, box.minY];
        var rightBottom = [box.maxX, box.maxY];
        var matrix = child.attr('matrix');
        Vector2.transformMat2d(leftTop, leftTop, matrix);
        Vector2.transformMat2d(leftBottom, leftBottom, matrix);
        Vector2.transformMat2d(rightTop, rightTop, matrix);
        Vector2.transformMat2d(rightBottom, rightBottom, matrix);
        minX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0], minX);
        maxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0], maxX);
        minY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1], minY);
        maxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1], maxY);
      }
    }

    return {
      minX: minX,
      minY: minY,
      maxX: maxX,
      maxY: maxY,
      x: minX,
      y: minY,
      width: maxX - minX,
      height: maxY - minY
    };
  };

  _proto.destroy = function destroy() {
    if (this.get('destroyed')) {
      return;
    }

    this.clear();

    _Element.prototype.destroy.call(this);
  };

  return Group;
}(Element);

Util.mix(Group.prototype, Container, {
  getGroupClass: function getGroupClass() {
    return Group;
  }
});
module.exports = Group;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Shape = __webpack_require__(8);

var ShapeUtil = __webpack_require__(19);

var Global = __webpack_require__(1); // register line geom


var Line = Shape.registerFactory('line', {
  defaultShapeType: 'line'
});

function getStyle(cfg) {
  var style = {
    strokeStyle: cfg.color
  };

  if (cfg.size >= 0) {
    style.lineWidth = cfg.size;
  }

  Util.mix(style, cfg.style);
  return Util.mix({}, Global.shape.line, style);
}

function drawLines(cfg, container, style, smooth) {
  var points = cfg.points;

  if (points.length && Util.isArray(points[0].y)) {
    var topPoints = [];
    var bottomPoints = [];

    for (var i = 0, len = points.length; i < len; i++) {
      var point = points[i];
      var tmp = ShapeUtil.splitPoints(point);
      bottomPoints.push(tmp[0]);
      topPoints.push(tmp[1]);
    }

    if (cfg.isInCircle) {
      topPoints.push(topPoints[0]);
      bottomPoints.push(bottomPoints[0]);
    }

    if (cfg.isStack) {
      return container.addShape('Polyline', {
        className: 'line',
        attrs: Util.mix({
          points: topPoints,
          smooth: smooth
        }, style)
      });
    }

    var topShape = container.addShape('Polyline', {
      className: 'line',
      attrs: Util.mix({
        points: topPoints,
        smooth: smooth
      }, style)
    });
    var bottomShape = container.addShape('Polyline', {
      className: 'line',
      attrs: Util.mix({
        points: bottomPoints,
        smooth: smooth
      }, style)
    });
    return [topShape, bottomShape];
  }

  if (cfg.isInCircle) {
    points.push(points[0]);
  }

  return container.addShape('Polyline', {
    className: 'line',
    attrs: Util.mix({
      points: points,
      smooth: smooth
    }, style)
  });
}

var SHAPES = ['line', 'smooth', 'dash'];
Util.each(SHAPES, function (shapeType) {
  Shape.registerShape('line', shapeType, {
    draw: function draw(cfg, container) {
      var smooth = shapeType === 'smooth';
      var style = getStyle(cfg);

      if (shapeType === 'dash') {
        style.lineDash = Global.lineDash;
      }

      return drawLines(cfg, container, style, smooth);
    }
  });
});
module.exports = Line;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var Base = __webpack_require__(12);

var catAuto = __webpack_require__(39);

var each = __webpack_require__(4);

var isNumber = __webpack_require__(17);

var isString = __webpack_require__(18);

var Category =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Category, _Base);

  function Category() {
    return _Base.apply(this, arguments) || this;
  }

  var _proto = Category.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    _Base.prototype._initDefaultCfg.call(this);

    this.type = 'cat';
    /**
     * 是否分类度量
     * @type {Boolean}
     */

    this.isCategory = true;
    this.isRounding = true; // 是否进行取整操作
  }
  /**
   * @override
   */
  ;

  _proto.init = function init() {
    var self = this;
    var values = self.values;
    var tickCount = self.tickCount;
    each(values, function (v, i) {
      values[i] = v.toString();
    });

    if (!self.ticks) {
      var ticks = values;

      if (tickCount) {
        var temp = catAuto({
          maxCount: tickCount,
          data: values,
          isRounding: self.isRounding
        });
        ticks = temp.ticks;
      }

      this.ticks = ticks;
    }
  }
  /**
   * @override
   */
  ;

  _proto.getText = function getText(value) {
    if (this.values.indexOf(value) === -1 && isNumber(value)) {
      value = this.values[Math.round(value)];
    }

    return _Base.prototype.getText.call(this, value);
  }
  /**
   * @override
   */
  ;

  _proto.translate = function translate(value) {
    var index = this.values.indexOf(value);

    if (index === -1 && isNumber(value)) {
      index = value;
    } else if (index === -1) {
      index = NaN;
    }

    return index;
  }
  /**
   * @override
   */
  ;

  _proto.scale = function scale(value) {
    var rangeMin = this.rangeMin();
    var rangeMax = this.rangeMax();
    var percent;

    if (isString(value) || this.values.indexOf(value) !== -1) {
      value = this.translate(value);
    }

    if (this.values.length > 1) {
      percent = value / (this.values.length - 1);
    } else {
      percent = value;
    }

    return rangeMin + percent * (rangeMax - rangeMin);
  }
  /**
   * @override
   */
  ;

  _proto.invert = function invert(value) {
    if (isString(value)) {
      // 如果已经是字符串
      return value;
    }

    var min = this.rangeMin();
    var max = this.rangeMax(); // 归一到 范围内

    if (value < min) {
      value = min;
    }

    if (value > max) {
      value = max;
    }

    var percent = (value - min) / (max - min);
    var index = Math.round(percent * (this.values.length - 1)) % this.values.length;
    index = index || 0;
    return this.values[index];
  };

  return Category;
}(Base);

Base.Cat = Category;
module.exports = Category;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview 计算分类的的坐标点
 * @author dxq613@gmail.com
 */
var each = __webpack_require__(4);

var MAX_COUNT = 8;
var SUB_COUNT = 4; // 控制个数不能过小

function getSimpleArray(data) {
  var arr = [];
  each(data, function (sub) {
    arr = arr.concat(sub);
  });
  return arr;
}

function getGreatestFactor(count, number) {
  var i;

  for (i = number; i > 0; i--) {
    if (count % i === 0) {
      break;
    }
  } // 如果是素数，没有可以整除的数字


  if (i === 1) {
    for (i = number; i > 0; i--) {
      if ((count - 1) % i === 0) {
        break;
      }
    }
  }

  return i;
}

module.exports = function (info) {
  var rst = {};
  var ticks = [];
  var isRounding = info.isRounding;
  var categories = getSimpleArray(info.data);
  var length = categories.length;
  var maxCount = info.maxCount || MAX_COUNT;
  var tickCount;

  if (isRounding) {
    // 取整操作
    tickCount = getGreatestFactor(length - 1, maxCount - 1) + 1; // 如果计算出来只有两个坐标点，则直接使用传入的 maxCount

    if (tickCount === 2) {
      tickCount = maxCount;
    } else if (tickCount < maxCount - SUB_COUNT) {
      tickCount = maxCount - SUB_COUNT;
    }
  } else {
    tickCount = maxCount;
  }

  if (!isRounding && length <= tickCount + tickCount / 2) {
    ticks = [].concat(categories);
  } else {
    var step = parseInt(length / (tickCount - 1), 10);
    var groups = categories.map(function (e, i) {
      return i % step === 0 ? categories.slice(i, i + step) : null;
    }).filter(function (e) {
      return e;
    });

    for (var i = 1, groupLen = groups.length; i < groupLen && (isRounding ? i * step < length - step : i < tickCount - 1); i++) {
      ticks.push(groups[i][0]);
    }

    if (categories.length) {
      ticks.unshift(categories[0]);
      var last = categories[length - 1];

      if (ticks.indexOf(last) === -1) {
        ticks.push(last);
      }
    }
  }

  rst.categories = categories;
  rst.ticks = ticks;
  return rst;
};

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = {
  requestAnimationFrame: typeof window === 'object' && window.requestAnimationFrame ? window.requestAnimationFrame : function (fn) {
    return setTimeout(fn, 16);
  }
};

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview convert the line to curve
 * @author dxq613@gmail.com
 */
var Vector2 = __webpack_require__(3);

function getPoint(v) {
  return [v.x, v.y];
}

function smoothBezier(points, smooth, isLoop, constraint) {
  var cps = [];
  var prevPoint;
  var nextPoint;
  var hasConstraint = !!constraint;
  var min;
  var max;
  var point;
  var len;
  var l;
  var i;

  if (hasConstraint) {
    min = [Infinity, Infinity];
    max = [-Infinity, -Infinity];

    for (i = 0, l = points.length; i < l; i++) {
      point = getPoint(points[i]);
      Vector2.min(min, min, point);
      Vector2.max(max, max, point);
    }

    Vector2.min(min, min, constraint[0]);
    Vector2.max(max, max, constraint[1]);
  }

  for (i = 0, len = points.length; i < len; i++) {
    point = getPoint(points[i]);

    if (isLoop) {
      prevPoint = getPoint(points[i ? i - 1 : len - 1]);
      nextPoint = getPoint(points[(i + 1) % len]);
    } else {
      if (i === 0 || i === len - 1) {
        cps.push([point[0], point[1]]);
        continue;
      } else {
        prevPoint = getPoint(points[i - 1]);
        nextPoint = getPoint(points[i + 1]);
      }
    }

    var v = Vector2.sub([], nextPoint, prevPoint);
    Vector2.scale(v, v, smooth);
    var d0 = Vector2.distance(point, prevPoint);
    var d1 = Vector2.distance(point, nextPoint);
    var sum = d0 + d1;

    if (sum !== 0) {
      d0 /= sum;
      d1 /= sum;
    }

    var v1 = Vector2.scale([], v, -d0);
    var v2 = Vector2.scale([], v, d1);
    var cp0 = Vector2.add([], point, v1);
    var cp1 = Vector2.add([], point, v2);

    if (hasConstraint) {
      Vector2.max(cp0, cp0, min);
      Vector2.min(cp0, cp0, max);
      Vector2.max(cp1, cp1, min);
      Vector2.min(cp1, cp1, max);
    }

    cps.push([cp0[0], cp0[1]]);
    cps.push([cp1[0], cp1[1]]);
  }

  if (isLoop) {
    cps.push(cps.shift());
  }

  return cps;
}

function catmullRom2bezier(pointList, z, constraint) {
  var isLoop = !!z;
  var controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);
  var len = pointList.length;
  var d1 = [];
  var cp1;
  var cp2;
  var p;

  for (var i = 0; i < len - 1; i++) {
    cp1 = controlPointList[i * 2];
    cp2 = controlPointList[i * 2 + 1];
    p = pointList[i + 1];
    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p.x, p.y]);
  }

  if (isLoop) {
    cp1 = controlPointList[len];
    cp2 = controlPointList[len + 1];
    p = pointList[0];
    d1.push(['C', cp1[0], cp1[1], cp2[0], cp2[1], p.x, p.y]);
  }

  return d1;
}

module.exports = {
  smooth: catmullRom2bezier
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Geom = __webpack_require__(6);

var ShapeUtil = __webpack_require__(19);

var Util = __webpack_require__(0);

__webpack_require__(37);

var Path =
/*#__PURE__*/
function (_Geom) {
  _inheritsLoose(Path, _Geom);

  function Path() {
    return _Geom.apply(this, arguments) || this;
  }

  var _proto = Path.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    var cfg = _Geom.prototype.getDefaultCfg.call(this);

    cfg.type = 'path';
    cfg.shapeType = 'line';
    return cfg;
  };

  _proto.getDrawCfg = function getDrawCfg(obj) {
    var cfg = _Geom.prototype.getDrawCfg.call(this, obj);

    cfg.isStack = this.hasAdjust('stack');
    return cfg;
  };

  _proto.draw = function draw(data, shapeFactory) {
    var self = this;
    var container = self.get('container');
    var yScale = self.getYScale();
    var connectNulls = self.get('connectNulls');
    var splitArray = ShapeUtil.splitArray(data, yScale.field, connectNulls);
    var cfg = this.getDrawCfg(data[0]);
    cfg.origin = data;
    Util.each(splitArray, function (subData, splitedIndex) {
      cfg.splitedIndex = splitedIndex;
      cfg.points = subData;
      self.drawShape(cfg.shape, data[0], cfg, container, shapeFactory);
    });
  };

  return Path;
}(Geom);

Geom.Path = Path;
module.exports = Path;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview Utility for calculate the with ratui in x axis
 * @author sima.zhang1990@gmail.com
 * @author dxq613@gmail.com
 */
var Global = __webpack_require__(1);

var Util = __webpack_require__(0);

var SizeMixin = {
  getDefalutSize: function getDefalutSize() {
    var defaultSize = this.get('defaultSize');

    if (!defaultSize) {
      var coord = this.get('coord');
      var xScale = this.getXScale();
      var dataArray = this.get('dataArray');
      var values = Util.uniq(xScale.values);
      var count = values.length;
      var range = xScale.range;
      var normalizeSize = 1 / count;
      var widthRatio = 1;

      if (coord && coord.isPolar) {
        if (coord.transposed && count > 1) {
          widthRatio = Global.widthRatio.multiplePie;
        } else {
          widthRatio = Global.widthRatio.rose;
        }
      } else {
        if (xScale.isLinear) {
          normalizeSize *= range[1] - range[0];
        }

        widthRatio = Global.widthRatio.column;
      }

      normalizeSize *= widthRatio;

      if (this.hasAdjust('dodge')) {
        normalizeSize = normalizeSize / dataArray.length;
      }

      defaultSize = normalizeSize;
      this.set('defaultSize', defaultSize);
    }

    return defaultSize;
  },
  getDimWidth: function getDimWidth(dimName) {
    var coord = this.get('coord');
    var start = coord.convertPoint({
      x: 0,
      y: 0
    });
    var end = coord.convertPoint({
      x: dimName === 'x' ? 1 : 0,
      y: dimName === 'x' ? 0 : 1
    });
    var width = 0;

    if (start && end) {
      width = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));
    }

    return width;
  },
  _getWidth: function _getWidth() {
    var width = this.get('_width');

    if (!width) {
      var coord = this.get('coord');

      if (coord && coord.isPolar && !coord.transposed) {
        width = (coord.endAngle - coord.startAngle) * coord.circleRadius;
      } else {
        width = this.getDimWidth('x');
      }

      this.set('_width', width);
    }

    return width;
  },
  _toNormalizedSize: function _toNormalizedSize(size) {
    var width = this._getWidth();

    return size / width;
  },
  _toCoordSize: function _toCoordSize(normalizeSize) {
    var width = this._getWidth();

    return width * normalizeSize;
  },
  getNormalizedSize: function getNormalizedSize(obj) {
    var size = this.getAttrValue('size', obj);

    if (Util.isNil(size)) {
      size = this.getDefalutSize();
    } else {
      size = this._toNormalizedSize(size);
    }

    return size;
  },
  getSize: function getSize(obj) {
    var size = this.getAttrValue('size', obj);

    if (Util.isNil(size)) {
      var normalizeSize = this.getDefalutSize();
      size = this._toCoordSize(normalizeSize);
    }

    return size;
  }
};
module.exports = SizeMixin;

/***/ }),
/* 44 */,
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var Core = {};

var Global = __webpack_require__(1);

Core.Global = Global;
Core.version = Global.version;
Core.Chart = __webpack_require__(15);
Core.Shape = __webpack_require__(8);
Core.G = __webpack_require__(5);
Core.Util = __webpack_require__(0); // Core.track = function(enable) {
//   Global.trackable = enable;
// };
// require('./track');
// 2018-12-27 关闭打点

Core.track = function () {
  return null;
};

module.exports = Core;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview default theme
 * @author dxq613@gail.com
 */
var Util = __webpack_require__(0);

var color1 = '#E8E8E8'; // color of axis-line and axis-grid

var color2 = '#808080'; // color of axis label

var defaultAxis = {
  label: {
    fill: color2,
    fontSize: 10
  },
  line: {
    stroke: color1,
    lineWidth: 1
  },
  grid: {
    type: 'line',
    stroke: color1,
    lineWidth: 1,
    lineDash: [2]
  },
  tickLine: null,
  labelOffset: 7.5
};
var Theme = {
  fontFamily: '"Helvetica Neue", "San Francisco", Helvetica, Tahoma, Arial, "PingFang SC", "Hiragino Sans GB", "Heiti SC", "Microsoft YaHei", sans-serif',
  defaultColor: '#1890FF',
  pixelRatio: 1,
  padding: 'auto',
  appendPadding: 15,
  colors: ['#1890FF', '#2FC25B', '#FACC14', '#223273', '#8543E0', '#13C2C2', '#3436C7', '#F04864'],
  shapes: {
    line: ['line', 'dash'],
    point: ['circle', 'hollowCircle']
  },
  sizes: [4, 10],
  axis: {
    common: defaultAxis,
    // common axis configuration
    bottom: Util.mix({}, defaultAxis, {
      grid: null
    }),
    left: Util.mix({}, defaultAxis, {
      line: null
    }),
    right: Util.mix({}, defaultAxis, {
      line: null
    }),
    circle: Util.mix({}, defaultAxis, {
      line: null
    }),
    radius: Util.mix({}, defaultAxis, {
      labelOffset: 4
    })
  },
  shape: {
    line: {
      lineWidth: 2,
      lineJoin: 'round',
      lineCap: 'round'
    },
    point: {
      lineWidth: 0,
      size: 3
    },
    area: {
      fillOpacity: 0.1
    }
  },
  _defaultAxis: defaultAxis
};
module.exports = Theme;

/***/ }),
/* 47 */
/***/ (function(module, exports) {

var DomUtil;
/**
 * Detects support for options object argument in addEventListener.
 * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
 * @private
 */

var supportsEventListenerOptions = function () {
  var supports = false;

  try {
    var options = Object.defineProperty({}, 'passive', {
      get: function get() {
        supports = true;
      }
    });
    window.addEventListener('e', null, options);
  } catch (e) {// continue regardless of error
  }

  return supports;
}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.
// https://github.com/chartjs/Chart.js/issues/4287


var eventListenerOptions = supportsEventListenerOptions ? {
  passive: true
} : false;

function createEvent(type, chart, x, y, nativeEvent) {
  return {
    type: type,
    chart: chart,
    native: nativeEvent || null,
    x: x !== undefined ? x : null,
    y: y !== undefined ? y : null
  };
}

function fromNativeEvent(event, chart) {
  var type = event.type;
  var point = {};
  var touches = event.targetTouches;

  if (touches && touches.length > 0) {
    point.x = touches[0].clientX;
    point.y = touches[0].clientY;
  } else {
    point.x = event.clientX;
    point.y = event.clientY;
  }

  var canvas = chart.get('canvas');
  var pos = DomUtil.getRelativePosition(point, canvas);
  return createEvent(type, chart, pos.x, pos.y, event);
}

DomUtil = {
  /* global wx, my, module */
  isWx: typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function',
  // weixin miniprogram
  isMy: typeof my === 'object' && typeof my.getSystemInfoSync === 'function',
  // ant miniprogram
  isNode: typeof module !== 'undefined' && typeof module.exports !== 'undefined',
  // in node
  isBrowser: typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.sessionStorage !== 'undefined',
  // in browser
  getPixelRatio: function getPixelRatio() {
    return window && window.devicePixelRatio || 1;
  },
  getStyle: function getStyle(el, property) {
    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
  },
  getWidth: function getWidth(el) {
    var width = this.getStyle(el, 'width');

    if (width === 'auto') {
      width = el.offsetWidth;
    }

    return parseFloat(width);
  },
  getHeight: function getHeight(el) {
    var height = this.getStyle(el, 'height');

    if (height === 'auto') {
      height = el.offsetHeight;
    }

    return parseFloat(height);
  },
  getDomById: function getDomById(id) {
    if (!id) {
      return null;
    }

    return document.getElementById(id);
  },
  getRelativePosition: function getRelativePosition(point, canvas) {
    var canvasDom = canvas.get('el');

    var _canvasDom$getBoundin = canvasDom.getBoundingClientRect(),
        top = _canvasDom$getBoundin.top,
        right = _canvasDom$getBoundin.right,
        bottom = _canvasDom$getBoundin.bottom,
        left = _canvasDom$getBoundin.left;

    var paddingLeft = parseFloat(this.getStyle(canvasDom, 'padding-left'));
    var paddingTop = parseFloat(this.getStyle(canvasDom, 'padding-top'));
    var paddingRight = parseFloat(this.getStyle(canvasDom, 'padding-right'));
    var paddingBottom = parseFloat(this.getStyle(canvasDom, 'padding-bottom'));
    var width = right - left - paddingLeft - paddingRight;
    var height = bottom - top - paddingTop - paddingBottom;
    var pixelRatio = canvas.get('pixelRatio');
    var mouseX = (point.x - left - paddingLeft) / width * canvasDom.width / pixelRatio;
    var mouseY = (point.y - top - paddingTop) / height * canvasDom.height / pixelRatio;
    return {
      x: mouseX,
      y: mouseY
    };
  },
  addEventListener: function addEventListener(source, type, listener) {
    DomUtil.isBrowser && source.addEventListener(type, listener, eventListenerOptions);
  },
  removeEventListener: function removeEventListener(source, type, listener) {
    DomUtil.isBrowser && source.removeEventListener(type, listener, eventListenerOptions);
  },
  createEvent: function createEvent(event, chart) {
    return fromNativeEvent(event, chart);
  },
  measureText: function measureText(text, font, ctx) {
    if (!ctx) {
      ctx = document.createElement('canvas').getContext('2d');
    }

    ctx.font = font || '12px sans-serif';
    return ctx.measureText(text);
  }
};
module.exports = DomUtil;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(29);

var upperFirst = function upperFirst(value) {
  var str = toString(value);
  return str.charAt(0).toUpperCase() + str.substring(1);
};

module.exports = upperFirst;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(29);

var lowerFirst = function lowerFirst(value) {
  var str = toString(value);
  return str.charAt(0).toLowerCase() + str.substring(1);
};

module.exports = lowerFirst;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var isType = __webpack_require__(7);

var isString = function isString(str) {
  return isType(str, 'String');
};

module.exports = isString;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * 判断是否数字
 * @return {Boolean} 是否数字
 */
var isType = __webpack_require__(7);

var isNumber = function isNumber(value) {
  return isType(value, 'Number');
};

module.exports = isNumber;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * 是否是布尔类型
 *
 * @param {Object} value 测试的值
 * @return {Boolean}
 */
var isType = __webpack_require__(7);

var isBoolean = function isBoolean(value) {
  return isType(value, 'Boolean');
};

module.exports = isBoolean;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * 是否为函数
 * @param  {*} fn 对象
 * @return {Boolean}  是否函数
 */
var isType = __webpack_require__(7);

var isFunction = function isFunction(value) {
  return isType(value, 'Function');
};

module.exports = isFunction;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var isType = __webpack_require__(7);

var isDate = function isDate(value) {
  return isType(value, 'Date');
};

module.exports = isDate;

/***/ }),
/* 55 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var isObjectLike = function isObjectLike(value) {
  /**
   * isObjectLike({}) => true
   * isObjectLike([1, 2, 3]) => true
   * isObjectLike(Function) => false
   * isObjectLike(null) => false
   */
  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;
};

module.exports = isObjectLike;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var isPlainObject = __webpack_require__(32);

var isArray = __webpack_require__(20);

var MAX_MIX_LEVEL = 5;

function _deepMix(dist, src, level, maxLevel) {
  level = level || 0;
  maxLevel = maxLevel || MAX_MIX_LEVEL;

  for (var key in src) {
    if (src.hasOwnProperty(key)) {
      var value = src[key];

      if (value !== null && isPlainObject(value)) {
        if (!isPlainObject(dist[key])) {
          dist[key] = {};
        }

        if (level < maxLevel) {
          _deepMix(dist[key], value, level + 1, maxLevel);
        } else {
          dist[key] = src[key];
        }
      } else if (isArray(value)) {
        dist[key] = [];
        dist[key] = dist[key].concat(value);
      } else if (value !== undefined) {
        dist[key] = value;
      }
    }
  }
}

var deepMix = function deepMix() {
  var args = new Array(arguments.length);
  var length = args.length;

  for (var i = 0; i < length; i++) {
    args[i] = arguments[i];
  }

  var rst = args[0];

  for (var _i = 1; _i < length; _i++) {
    _deepMix(rst, args[_i]);
  }

  return rst;
};

module.exports = deepMix;

/***/ }),
/* 57 */
/***/ (function(module, exports) {

function _mix(dist, obj) {
  for (var key in obj) {
    if (obj.hasOwnProperty(key) && key !== 'constructor' && obj[key] !== undefined) {
      dist[key] = obj[key];
    }
  }
}

var mix = function mix(dist, src1, src2, src3) {
  if (src1) _mix(dist, src1);
  if (src2) _mix(dist, src2);
  if (src3) _mix(dist, src3);
  return dist;
};

module.exports = mix;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

var each = __webpack_require__(33);

var contains = __webpack_require__(59);

var uniq = function uniq(arr) {
  var resultArr = [];
  each(arr, function (item) {
    if (!contains(resultArr, item)) {
      resultArr.push(item);
    }
  });
  return resultArr;
};

module.exports = uniq;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(60);

var indexOf = Array.prototype.indexOf;

var contains = function contains(arr, value) {
  if (!isArrayLike(arr)) {
    return false;
  }

  return indexOf.call(arr, value) > -1;
};

module.exports = contains;

/***/ }),
/* 60 */
/***/ (function(module, exports) {

var isArrayLike = function isArrayLike(value) {
  /**
   * isArrayLike([1, 2, 3]) => true
   * isArrayLike(document.body.children) => true
   * isArrayLike('abc') => true
   * isArrayLike(Function) => false
   */
  return value !== null && typeof value !== 'function' && isFinite(value.length);
};

module.exports = isArrayLike;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Plot =
/*#__PURE__*/
function () {
  function Plot(cfg) {
    Util.mix(this, cfg);

    this._init();
  }

  var _proto = Plot.prototype;

  _proto._init = function _init() {
    var self = this;
    var start = self.start;
    var end = self.end;
    var xMin = Math.min(start.x, end.x);
    var xMax = Math.max(start.x, end.x);
    var yMin = Math.min(start.y, end.y);
    var yMax = Math.max(start.y, end.y);
    this.tl = {
      x: xMin,
      y: yMin
    };
    this.tr = {
      x: xMax,
      y: yMin
    };
    this.bl = {
      x: xMin,
      y: yMax
    };
    this.br = {
      x: xMax,
      y: yMax
    };
    this.width = xMax - xMin;
    this.height = yMax - yMin;
  }
  /**
   * reset
   * @param  {Object} start start point
   * @param  {Object} end end point
   */
  ;

  _proto.reset = function reset(start, end) {
    this.start = start;
    this.end = end;

    this._init();
  }
  /**
   * check the point is in the range of plot
   * @param  {Nubmer}  x x value
   * @param  {[type]}  y y value
   * @return {Boolean} return the result
   */
  ;

  _proto.isInRange = function isInRange(x, y) {
    if (Util.isObject(x)) {
      y = x.y;
      x = x.x;
    }

    var tl = this.tl;
    var br = this.br;
    return tl.x <= x && x <= br.x && tl.y <= y && y <= br.y;
  };

  return Plot;
}();

module.exports = Plot;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var Coord = __webpack_require__(21);

__webpack_require__(63);

module.exports = Coord;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Base = __webpack_require__(21);

var Cartesian =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Cartesian, _Base);

  function Cartesian() {
    return _Base.apply(this, arguments) || this;
  }

  var _proto = Cartesian.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'cartesian';
    this.transposed = false;
    this.isRect = true;
  };

  _proto.init = function init(start, end) {
    this.x = {
      start: start.x,
      end: end.x
    };
    this.y = {
      start: start.y,
      end: end.y
    };
  };

  _proto.convertPoint = function convertPoint(point) {
    var self = this;
    var transposed = self.transposed;
    var xDim = transposed ? 'y' : 'x';
    var yDim = transposed ? 'x' : 'y';
    var x = self.x;
    var y = self.y;
    return {
      x: x.start + (x.end - x.start) * point[xDim],
      y: y.start + (y.end - y.start) * point[yDim]
    };
  };

  _proto.invertPoint = function invertPoint(point) {
    var self = this;
    var transposed = self.transposed;
    var xDim = transposed ? 'y' : 'x';
    var yDim = transposed ? 'x' : 'y';
    var x = self.x;
    var y = self.y;
    var rst = {};
    rst[xDim] = (point.x - x.start) / (x.end - x.start);
    rst[yDim] = (point.y - y.start) / (y.end - y.start);
    return rst;
  };

  return Cartesian;
}(Base);

Base.Cartesian = Cartesian;
Base.Rect = Cartesian;
module.exports = Cartesian;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  Position: __webpack_require__(65),
  Shape: __webpack_require__(66),
  Size: __webpack_require__(67),
  Color: __webpack_require__(68)
};

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var isNil = __webpack_require__(9);

var isArray = __webpack_require__(13);

var each = __webpack_require__(4);

var Base = __webpack_require__(14);

var Position =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Position, _Base);

  function Position(cfg) {
    var _this;

    _this = _Base.call(this, cfg) || this;
    _this.names = ['x', 'y'];
    _this.type = 'position';
    return _this;
  }

  var _proto = Position.prototype;

  _proto.mapping = function mapping(x, y) {
    var scales = this.scales;
    var coord = this.coord;
    var scaleX = scales[0];
    var scaleY = scales[1];
    var rstX;
    var rstY;
    var obj;

    if (isNil(x) || isNil(y)) {
      return [];
    }

    if (isArray(y) && isArray(x)) {
      rstX = [];
      rstY = [];

      for (var i = 0, j = 0, xLen = x.length, yLen = y.length; i < xLen && j < yLen; i++, j++) {
        obj = coord.convertPoint({
          x: scaleX.scale(x[i]),
          y: scaleY.scale(y[j])
        });
        rstX.push(obj.x);
        rstY.push(obj.y);
      }
    } else if (isArray(y)) {
      x = scaleX.scale(x);
      rstY = [];
      each(y, function (yVal) {
        yVal = scaleY.scale(yVal);
        obj = coord.convertPoint({
          x: x,
          y: yVal
        });

        if (rstX && rstX !== obj.x) {
          if (!isArray(rstX)) {
            rstX = [rstX];
          }

          rstX.push(obj.x);
        } else {
          rstX = obj.x;
        }

        rstY.push(obj.y);
      });
    } else if (isArray(x)) {
      y = scaleY.scale(y);
      rstX = [];
      each(x, function (xVal) {
        xVal = scaleX.scale(xVal);
        obj = coord.convertPoint({
          x: xVal,
          y: y
        });

        if (rstY && rstY !== obj.y) {
          if (!isArray(rstY)) {
            rstY = [rstY];
          }

          rstY.push(obj.y);
        } else {
          rstY = obj.y;
        }

        rstX.push(obj.x);
      });
    } else {
      x = scaleX.scale(x);
      y = scaleY.scale(y);
      var point = coord.convertPoint({
        x: x,
        y: y
      });
      rstX = point.x;
      rstY = point.y;
    }

    return [rstX, rstY];
  };

  return Position;
}(Base);

module.exports = Position;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var Base = __webpack_require__(14);

var Shape =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Shape, _Base);

  function Shape(cfg) {
    var _this;

    _this = _Base.call(this, cfg) || this;
    _this.names = ['shape'];
    _this.type = 'shape';
    _this.gradient = null;
    return _this;
  }
  /**
   * @override
   */


  var _proto = Shape.prototype;

  _proto.getLinearValue = function getLinearValue(percent) {
    var values = this.values;
    var index = Math.round((values.length - 1) * percent);
    return values[index];
  };

  return Shape;
}(Base);

module.exports = Shape;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var Base = __webpack_require__(14);

var Size =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Size, _Base);

  function Size(cfg) {
    var _this;

    _this = _Base.call(this, cfg) || this;
    _this.names = ['size'];
    _this.type = 'size';
    _this.gradient = null;
    return _this;
  }

  return Size;
}(Base);

module.exports = Size;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var ColorUtil = __webpack_require__(69);

var Base = __webpack_require__(14);

var Color =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Color, _Base);

  function Color(cfg) {
    var _this;

    _this = _Base.call(this, cfg) || this;
    _this.names = ['color'];
    _this.type = 'color';
    _this.gradient = null;

    if (Util.isString(_this.values)) {
      _this.linear = true;
    }

    return _this;
  }
  /**
   * @override
   */


  var _proto = Color.prototype;

  _proto.getLinearValue = function getLinearValue(percent) {
    var gradient = this.gradient;

    if (!gradient) {
      var values = this.values;
      gradient = ColorUtil.gradient(values);
      this.gradient = gradient;
    }

    return gradient(percent);
  };

  return Color;
}(Base);

module.exports = Color;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0); // Get the interpolation between colors


function getValue(start, end, percent, index) {
  var value = start[index] + (end[index] - start[index]) * percent;
  return value;
} // convert to hex


function arr2hex(arr) {
  return '#' + toRGBValue(arr[0]) + toRGBValue(arr[1]) + toRGBValue(arr[2]);
}

function toRGBValue(value) {
  value = Math.round(value);
  value = value.toString(16);

  if (value.length === 1) {
    value = '0' + value;
  }

  return value;
}

function calColor(colors, percent) {
  var steps = colors.length - 1;
  var step = Math.floor(steps * percent);
  var left = steps * percent - step;
  var start = colors[step];
  var end = step === steps ? start : colors[step + 1];
  var rgb = arr2hex([getValue(start, end, left, 0), getValue(start, end, left, 1), getValue(start, end, left, 2)]);
  return rgb;
}

function hex2arr(str) {
  var arr = [];
  arr.push(parseInt(str.substr(1, 2), 16));
  arr.push(parseInt(str.substr(3, 2), 16));
  arr.push(parseInt(str.substr(5, 2), 16));
  return arr;
}

var colorCache = {
  black: '#000000',
  blue: '#0000ff',
  grey: '#808080',
  green: '#008000',
  orange: '#ffa500',
  pink: '#ffc0cb',
  purple: '#800080',
  red: '#ff0000',
  white: '#ffffff',
  yellow: '#ffff00'
};
var ColorUtil = {
  /**
   * Returns a hexadecimal string representing this color in RGB space, such as #f7eaba.
   * @param  {String} color color value
   * @return {String} Returns a hexadecimal string
   */
  toHex: function toHex(color) {
    if (colorCache[color]) {
      return colorCache[color];
    }

    if (color[0] === '#') {
      if (color.length === 7) {
        return color;
      }

      var hex = color.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (m, r, g, b) {
        return '#' + r + r + g + g + b + b;
      }); // hex3 to hex6

      colorCache[color] = hex;
      return hex;
    } // rgb/rgba to hex


    var rst = color.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i);
    rst.shift();
    rst = arr2hex(rst);
    colorCache[color] = rst;
    return rst;
  },
  hex2arr: hex2arr,

  /**
   * handle the gradient color
   * @param  {Array} colors the colors
   * @return {String} return the color value
   */
  gradient: function gradient(colors) {
    var points = [];

    if (Util.isString(colors)) {
      colors = colors.split('-');
    }

    Util.each(colors, function (color) {
      if (color.indexOf('#') === -1) {
        color = ColorUtil.toHex(color);
      }

      points.push(hex2arr(color));
    });
    return function (percent) {
      return calColor(points, percent);
    };
  }
};
module.exports = ColorUtil;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Global = __webpack_require__(1);

var Scale = __webpack_require__(71);

var SCALE_TYPES_MAP = {
  linear: 'Linear',
  cat: 'Cat',
  timeCat: 'TimeCat',
  identity: 'Identity'
};

var ScaleController =
/*#__PURE__*/
function () {
  function ScaleController(cfg) {
    // defs 列定义
    this.defs = {};
    Util.mix(this, cfg);
  }

  var _proto = ScaleController.prototype;

  _proto._getDef = function _getDef(field) {
    var defs = this.defs;
    var def = null;

    if (Global.scales[field] || defs[field]) {
      def = Util.mix({}, Global.scales[field]);
      Util.each(defs[field], function (v, k) {
        if (Util.isNil(v)) {
          delete def[k];
        } else {
          def[k] = v;
        }
      });
    }

    return def;
  };

  _proto._getDefaultType = function _getDefaultType(field, data, def) {
    if (def && def.type) {
      return def.type;
    }

    var type = 'linear';
    var value = Util.Array.firstValue(data, field);

    if (Util.isArray(value)) {
      value = value[0];
    }

    if (Util.isString(value)) {
      type = 'cat';
    }

    return type;
  };

  _proto._getScaleCfg = function _getScaleCfg(type, field, data, def) {
    var values;

    if (def && def.values) {
      values = def.values;
    } else {
      values = Util.Array.values(data, field);
    }

    var cfg = {
      field: field,
      values: values
    };

    if (type !== 'cat' && type !== 'timeCat') {
      if (!def || !(def.min && def.max)) {
        var _Util$Array$getRange = Util.Array.getRange(values),
            min = _Util$Array$getRange.min,
            max = _Util$Array$getRange.max;

        cfg.min = min;
        cfg.max = max;
        cfg.nice = true;
      }
    } else {
      cfg.isRounding = false; // used for tickCount calculation
    }

    return cfg;
  };

  _proto.createScale = function createScale(field, data) {
    var self = this;

    var def = self._getDef(field);

    var scale;

    if (!data || !data.length) {
      if (def && def.type) {
        def.field = field;
        scale = new Scale[SCALE_TYPES_MAP[def.type]](def);
      } else {
        scale = new Scale.Identity({
          value: field,
          field: field.toString(),
          values: [field]
        });
      }

      return scale;
    }

    var firstObj = data[0];
    var firstValue = firstObj[field];

    if (firstValue === null) {
      firstValue = Util.Array.firstValue(data, field);
    }

    if (Util.isNumber(field) || Util.isNil(firstValue) && !def) {
      scale = new Scale.Identity({
        value: field,
        field: field.toString(),
        values: [field]
      });
    } else {
      var type = self._getDefaultType(field, data, def);

      var cfg = self._getScaleCfg(type, field, data, def);

      def && Util.mix(cfg, def);
      scale = new Scale[SCALE_TYPES_MAP[type]](cfg);
    }

    return scale;
  };

  return ScaleController;
}();

module.exports = ScaleController;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var Scale = __webpack_require__(12);

__webpack_require__(72);

__webpack_require__(75);

__webpack_require__(38);

module.exports = Scale;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
/**
 * @fileOverview The measurement of linear data scale function
 * @author dxq613@gmail.com
 */


var isNil = __webpack_require__(9);

var each = __webpack_require__(4);

var Base = __webpack_require__(12);

var numberAuto = __webpack_require__(73);
/**
 * 线性度量
 * @class Scale.Linear
 */


var Linear =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Linear, _Base);

  function Linear() {
    return _Base.apply(this, arguments) || this;
  }

  var _proto = Linear.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    _Base.prototype._initDefaultCfg.call(this);

    var self = this;
    self.type = 'linear';
    self.isLinear = true;
    /**
     * 是否为了用户习惯，优化min,max和ticks，如果进行优化，则会根据生成的ticks调整min,max，否则舍弃(min,max)范围之外的ticks
     * @type {Boolean}
     * @default false
     */

    self.nice = false;
    /**
     * min value of the scale
     * @type {Number}
     * @default null
     */

    self.min = null;
    /**
     * min value limitted of the scale
     * @type {Number}
     * @default null
     */

    self.minLimit = null;
    /**
     * max value of the scale
     * @type {Number}
     * @default null
     */

    self.max = null;
    /**
     * max value limitted of the scale
     * @type {Number}
     * @default null
     */

    self.maxLimit = null;
    /**
     * 自动生成标记时的个数
     * @type {Number}
     * @default null
     */

    self.tickCount = null;
    /**
     * 坐标轴点之间的间距，指的是真实数据的差值
     * @type {Number}
     * @default null
     */

    self.tickInterval = null;
    /**
     * 坐标轴点之间的最小间距，指的是真实数据的差值
     * @type {Number}
     * @default null
     */

    self.minTickInterval = null;
    /**
     * 用于计算坐标点时逼近的数组
     * @type {Array}
     */

    self.snapArray = null;
  }
  /**
   * @protected
   * @override
   */
  ;

  _proto.init = function init() {
    var self = this;

    if (!self.ticks) {
      self.min = self.translate(self.min);
      self.max = self.translate(self.max);
      self.initTicks();
    } else {
      var ticks = self.ticks;
      var firstValue = self.translate(ticks[0]);
      var lastValue = self.translate(ticks[ticks.length - 1]);

      if (isNil(self.min) || self.min > firstValue) {
        self.min = firstValue;
      }

      if (isNil(self.max) || self.max < lastValue) {
        self.max = lastValue;
      }
    }
  }
  /**
   * 计算坐标点
   * @protected
   * @return {Array} 计算完成的坐标点
   */
  ;

  _proto.calculateTicks = function calculateTicks() {
    var min = this.min,
        max = this.max,
        minLimit = this.minLimit,
        maxLimit = this.maxLimit,
        tickCount = this.tickCount,
        tickInterval = this.tickInterval,
        minTickInterval = this.minTickInterval,
        snapArray = this.snapArray;

    if (tickCount === 1) {
      throw new Error('linear scale\'tickCount should not be 1');
    }

    if (max < min) {
      throw new Error("max: " + max + " should not be less than min: " + min);
    }

    var tmp = numberAuto({
      min: min,
      max: max,
      minLimit: minLimit,
      maxLimit: maxLimit,
      minCount: tickCount,
      maxCount: tickCount,
      interval: tickInterval,
      minTickInterval: minTickInterval,
      snapArray: snapArray
    });
    return tmp.ticks;
  } // 初始化ticks
  ;

  _proto.initTicks = function initTicks() {
    var self = this;
    var calTicks = self.calculateTicks();

    if (self.nice) {
      // 如果需要优化显示的tick
      self.ticks = calTicks;
      self.min = calTicks[0];
      self.max = calTicks[calTicks.length - 1];
    } else {
      var ticks = [];
      each(calTicks, function (tick) {
        if (tick >= self.min && tick <= self.max) {
          ticks.push(tick);
        }
      }); // 如果 ticks 为空，直接输入最小值、最大值

      if (!ticks.length) {
        ticks.push(self.min);
        ticks.push(self.max);
      }

      self.ticks = ticks;
    }
  }
  /**
   * @override
   */
  ;

  _proto.scale = function scale(value) {
    if (isNil(value)) {
      return NaN;
    }

    var max = this.max;
    var min = this.min;

    if (max === min) {
      return 0;
    }

    var percent = (value - min) / (max - min);
    var rangeMin = this.rangeMin();
    var rangeMax = this.rangeMax();
    return rangeMin + percent * (rangeMax - rangeMin);
  }
  /**
   * @override
   */
  ;

  _proto.invert = function invert(value) {
    var percent = (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());
    return this.min + percent * (this.max - this.min);
  };

  return Linear;
}(Base);

Base.Linear = Linear;
module.exports = Linear;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview 自动计算数字坐标轴
 * @author dxq613@gmail.com
 */
var isNil = __webpack_require__(9);

var isNumber = __webpack_require__(17);

var AutoUtil = __webpack_require__(74);

var MIN_COUNT = 5;
var MAX_COUNT = 7;
var SNAP_COUNT_ARRAY = [0, 1, 1.2, 1.5, 1.6, 2, 2.2, 2.4, 2.5, 3, 4, 5, 6, 7.5, 8, 10];
var SNAP_ARRAY = [0, 1, 2, 4, 5, 10];

module.exports = function (info) {
  var min = info.min;
  var max = info.max;
  var interval = info.interval;
  var minTickInterval = info.minTickInterval;
  var ticks = [];
  var minCount = info.minCount || MIN_COUNT;
  var maxCount = info.maxCount || MAX_COUNT;
  var isFixedCount = minCount === maxCount; // 是否限定死了个数

  var minLimit = isNil(info.minLimit) ? -Infinity : info.minLimit; // 限定的最小值

  var maxLimit = isNil(info.maxLimit) ? Infinity : info.maxLimit; // 限定最大值

  var avgCount = (minCount + maxCount) / 2;
  var count = avgCount; // 用户传入的逼近数组

  var snapArray = info.snapArray ? info.snapArray : isFixedCount ? SNAP_COUNT_ARRAY : SNAP_ARRAY; // 如果限定大小范围，同时大小范围等于用户传入的范围，同时限定了个数，interval 按照个数均分

  if (min === minLimit && max === maxLimit && isFixedCount) {
    interval = (max - min) / (count - 1);
  }

  if (isNil(min)) {
    min = 0;
  }

  if (isNil(max)) {
    max = 0;
  }

  if (max === min) {
    if (min === 0) {
      max = 1;
    } else {
      if (min > 0) {
        min = 0;
      } else {
        max = 0;
      }
    }

    if (max - min < 5 && !interval && max - min >= 1) {
      interval = 1;
    }
  }

  if (isNil(interval)) {
    // 计算间距
    var temp = (max - min) / (avgCount - 1);
    interval = AutoUtil.snapFactorTo(temp, snapArray, 'ceil');

    if (maxCount !== minCount) {
      count = parseInt((max - min) / interval, 10);

      if (count > maxCount) {
        count = maxCount;
      }

      if (count < minCount) {
        count = minCount;
      } // 不确定tick的个数时，使得tick偏小


      interval = AutoUtil.snapFactorTo((max - min) / (count - 1), snapArray, 'floor');
    }
  } // interval should not be less than minTickInterval


  if (isNumber(minTickInterval) && interval < minTickInterval) {
    interval = minTickInterval;
  }

  if (info.interval || maxCount !== minCount) {
    // 校正 max 和 min
    max = Math.min(AutoUtil.snapMultiple(max, interval, 'ceil'), maxLimit); // 向上逼近

    min = Math.max(AutoUtil.snapMultiple(min, interval, 'floor'), minLimit); // 向下逼近

    count = Math.round((max - min) / interval);
    min = AutoUtil.fixedBase(min, interval);
    max = AutoUtil.fixedBase(max, interval);
  } else {
    avgCount = parseInt(avgCount, 10); // 取整

    var avg = (max + min) / 2;
    var avgTick = AutoUtil.snapMultiple(avg, interval, 'ceil');
    var sideCount = Math.floor((avgCount - 2) / 2);
    var maxTick = avgTick + sideCount * interval;
    var minTick;

    if (avgCount % 2 === 0) {
      minTick = avgTick - sideCount * interval;
    } else {
      minTick = avgTick - (sideCount + 1) * interval;
    }

    while (maxTick < max) {
      // 保证计算出来的刻度最大值 maxTick 不小于数据最大值 max
      maxTick = AutoUtil.fixedBase(maxTick + interval, interval);
    }

    while (minTick > min) {
      // 保证计算出来的刻度最小值 minTick 不小于数据最大值 min
      minTick = AutoUtil.fixedBase(minTick - interval, interval); // 防止超常浮点数计算问题
    }

    max = maxTick;
    min = minTick;
  }

  max = Math.min(max, maxLimit);
  min = Math.max(min, minLimit);
  ticks.push(min);

  for (var i = 1; i < count; i++) {
    var tickValue = AutoUtil.fixedBase(interval * i + min, interval);

    if (tickValue < max) {
      ticks.push(tickValue);
    }
  }

  if (ticks[ticks.length - 1] < max) {
    ticks.push(max);
  }

  return {
    min: min,
    max: max,
    interval: interval,
    count: count,
    ticks: ticks
  };
};

/***/ }),
/* 74 */
/***/ (function(module, exports) {

/**
 * @fileOverview 计算方法
 * @author dxq613@gmail.com
 */
// 如果小数点后面超过 10 位浮点数时进行一下处理
var DECIMAL_LENGTH = 12; // 获取系数

function getFactor(v) {
  var factor = 1;

  if (v === Infinity || v === -Infinity) {
    throw new Error('Not support Infinity!');
  }

  if (v < 1) {
    var count = 0;

    while (v < 1) {
      factor = factor / 10;
      v = v * 10;
      count++;
    } // 浮点数计算出现问题


    if (factor.toString().length > DECIMAL_LENGTH) {
      factor = parseFloat(factor.toFixed(count));
    }
  } else {
    while (v > 10) {
      factor = factor * 10;
      v = v / 10;
    }
  }

  return factor;
} // 取小于当前值的


function arrayFloor(values, value) {
  var length = values.length;

  if (length === 0) {
    return NaN;
  }

  var pre = values[0];

  if (value < values[0]) {
    return NaN;
  }

  if (value >= values[length - 1]) {
    return values[length - 1];
  }

  for (var i = 1; i < values.length; i++) {
    if (value < values[i]) {
      break;
    }

    pre = values[i];
  }

  return pre;
} // 大于当前值的第一个


function arrayCeiling(values, value) {
  var length = values.length;

  if (length === 0) {
    return NaN;
  } // var pre = values[0];


  var rst;

  if (value > values[length - 1]) {
    return NaN;
  }

  if (value < values[0]) {
    return values[0];
  }

  for (var i = 1; i < values.length; i++) {
    if (value <= values[i]) {
      rst = values[i];
      break;
    }
  }

  return rst;
}

var Util = {
  // 获取逼近的数值
  snapFactorTo: function snapFactorTo(v, arr, snapType) {
    // 假设 v = -512,isFloor = true
    if (isNaN(v)) {
      return NaN;
    }

    var factor = 1; // 计算系数

    if (v !== 0) {
      if (v < 0) {
        factor = -1;
      }

      v = v * factor; // v = 512

      var tmpFactor = getFactor(v);
      factor = factor * tmpFactor; // factor = -100

      v = v / tmpFactor; // v = 5.12
    }

    if (snapType === 'floor') {
      v = Util.snapFloor(arr, v); // v = 5
    } else if (snapType === 'ceil') {
      v = Util.snapCeiling(arr, v); // v = 6
    } else {
      v = Util.snapTo(arr, v); // 四舍五入 5
    }

    var rst = parseFloat((v * factor).toPrecision(DECIMAL_LENGTH)); // 如果出现浮点数计算问题，需要处理一下
    // 如果出现浮点数计算问题，需要处理一下

    if (Math.abs(factor) < 1 && rst.toString().length > DECIMAL_LENGTH) {
      var decimalVal = parseInt(1 / factor);
      var symbol = factor > 0 ? 1 : -1;
      rst = v / decimalVal * symbol;
    }

    return rst;
  },
  // 获取逼近的倍数
  snapMultiple: function snapMultiple(v, base, snapType) {
    var div;

    if (snapType === 'ceil') {
      div = Math.ceil(v / base);
    } else if (snapType === 'floor') {
      div = Math.floor(v / base);
    } else {
      div = Math.round(v / base);
    }

    return div * base;
  },

  /**
   * 获取逼近的值，用于对齐数据
   * @param  {Array} values   数据集合
   * @param  {Number} value   数值
   * @return {Number} 逼近的值
   */
  snapTo: function snapTo(values, value) {
    // 这里假定values是升序排列
    var floorVal = arrayFloor(values, value);
    var ceilingVal = arrayCeiling(values, value);

    if (isNaN(floorVal) || isNaN(ceilingVal)) {
      if (values[0] >= value) {
        return values[0];
      }

      var last = values[values.length - 1];

      if (last <= value) {
        return last;
      }
    }

    if (Math.abs(value - floorVal) < Math.abs(ceilingVal - value)) {
      return floorVal;
    }

    return ceilingVal;
  },

  /**
   * 获取逼近的最小值，用于对齐数据
   * @param  {Array} values   数据集合
   * @param  {Number} value   数值
   * @return {Number} 逼近的最小值
   */
  snapFloor: function snapFloor(values, value) {
    // 这里假定values是升序排列
    return arrayFloor(values, value);
  },

  /**
   * 获取逼近的最大值，用于对齐数据
   * @param  {Array} values   数据集合
   * @param  {Number} value   数值
   * @return {Number} 逼近的最大值
   */
  snapCeiling: function snapCeiling(values, value) {
    // 这里假定values是升序排列
    return arrayCeiling(values, value);
  },
  fixedBase: function fixedBase(v, base) {
    var str = base.toString();
    var index = str.indexOf('.');

    if (index === -1) {
      return Math.round(v);
    }

    var length = str.substr(index + 1).length;

    if (length > 20) {
      length = 20;
    }

    return parseFloat(v.toFixed(length));
  }
};
module.exports = Util;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var Base = __webpack_require__(12);

var isNumber = __webpack_require__(17);

var Identity =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Identity, _Base);

  function Identity() {
    return _Base.apply(this, arguments) || this;
  }

  var _proto = Identity.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    _Base.prototype._initDefaultCfg.call(this);

    this.isIdentity = true;
    this.type = 'identity';
    /**
     * 常量值
     * @type {*}
     */

    this.value = null;
  }
  /**
   * @override
   */
  ;

  _proto.getText = function getText() {
    return this.value.toString();
  }
  /**
   * @override
   */
  ;

  _proto.scale = function scale(value) {
    if (this.value !== value && isNumber(value)) {
      return value;
    }

    return this.range[0];
  }
  /**
   * @override
   */
  ;

  _proto.invert = function invert() {
    return this.value;
  };

  return Identity;
}(Base);

Base.Identity = Identity;
module.exports = Identity;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Axis = __webpack_require__(77);

var Global = __webpack_require__(1);

var _require = __webpack_require__(5),
    Shape = _require.Shape;

function formatTicks(ticks) {
  var tmp = ticks.slice(0);

  if (tmp.length > 0) {
    var first = tmp[0];
    var last = tmp[tmp.length - 1];

    if (first.value !== 0) {
      tmp.unshift({
        value: 0
      });
    }

    if (last.value !== 1) {
      tmp.push({
        value: 1
      });
    }
  }

  return tmp;
}

var AxisController =
/*#__PURE__*/
function () {
  function AxisController(cfg) {
    this.axisCfg = {};
    this.frontPlot = null;
    this.backPlot = null;
    this.axes = {}; // store the axes's options

    Util.mix(this, cfg);
  }

  var _proto = AxisController.prototype;

  _proto._isHide = function _isHide(field) {
    var axisCfg = this.axisCfg;
    return !axisCfg || axisCfg[field] === false;
  };

  _proto._getLinePosition = function _getLinePosition(scale, dimType, index, transposed) {
    var position = '';
    var field = scale.field;
    var axisCfg = this.axisCfg;

    if (axisCfg[field] && axisCfg[field].position) {
      position = axisCfg[field].position;
    } else if (dimType === 'x') {
      position = transposed ? 'left' : 'bottom';
    } else if (dimType === 'y') {
      position = index ? 'right' : 'left';

      if (transposed) {
        position = 'bottom';
      }
    }

    return position;
  };

  _proto._getLineCfg = function _getLineCfg(coord, dimType, position) {
    var start;
    var end;
    var factor = 1; // Mark clockwise or counterclockwise

    if (dimType === 'x') {
      start = {
        x: 0,
        y: 0
      };
      end = {
        x: 1,
        y: 0
      };
    } else {
      if (position === 'right') {
        // there will be several y axes
        start = {
          x: 1,
          y: 0
        };
        end = {
          x: 1,
          y: 1
        };
      } else {
        start = {
          x: 0,
          y: 0
        };
        end = {
          x: 0,
          y: 1
        };
        factor = -1;
      }
    }

    if (coord.transposed) {
      factor *= -1;
    }

    return {
      offsetFactor: factor,
      start: coord.convertPoint(start),
      end: coord.convertPoint(end)
    };
  };

  _proto._getCircleCfg = function _getCircleCfg(coord) {
    return {
      startAngle: coord.startAngle,
      endAngle: coord.endAngle,
      center: coord.center,
      radius: coord.circleRadius
    };
  };

  _proto._getRadiusCfg = function _getRadiusCfg(coord) {
    var transposed = coord.transposed;
    var start;
    var end;

    if (transposed) {
      start = {
        x: 0,
        y: 0
      };
      end = {
        x: 1,
        y: 0
      };
    } else {
      start = {
        x: 0,
        y: 0
      };
      end = {
        x: 0,
        y: 1
      };
    }

    return {
      offsetFactor: -1,
      start: coord.convertPoint(start),
      end: coord.convertPoint(end)
    };
  };

  _proto._getAxisCfg = function _getAxisCfg(coord, scale, verticalScale, dimType, defaultCfg) {
    var self = this;
    var axisCfg = this.axisCfg;
    var ticks = scale.getTicks();
    var cfg = Util.deepMix({
      ticks: ticks,
      frontContainer: this.frontPlot,
      backContainer: this.backPlot
    }, defaultCfg, axisCfg[scale.field]);
    var labels = [];
    var label = cfg.label;
    var count = ticks.length;
    var maxWidth = 0;
    var maxHeight = 0;
    var labelCfg = label;
    Util.each(ticks, function (tick, index) {
      if (Util.isFunction(label)) {
        var executedLabel = label(tick.text, index, count);
        labelCfg = executedLabel ? Util.mix({}, Global._defaultAxis.label, executedLabel) : null;
      }

      if (labelCfg) {
        var textStyle = {};

        if (labelCfg.textAlign) {
          textStyle.textAlign = labelCfg.textAlign;
        }

        if (labelCfg.textBaseline) {
          textStyle.textBaseline = labelCfg.textBaseline;
        }

        var axisLabel = new Shape.Text({
          className: 'axis-label',
          attrs: Util.mix({
            x: 0,
            y: 0,
            text: tick.text,
            fontFamily: self.chart.get('canvas').get('fontFamily')
          }, labelCfg),
          value: tick.value,
          textStyle: textStyle,
          top: labelCfg.top,
          context: self.chart.get('canvas').get('context')
        });
        labels.push(axisLabel);

        var _axisLabel$getBBox = axisLabel.getBBox(),
            width = _axisLabel$getBBox.width,
            height = _axisLabel$getBBox.height;

        maxWidth = Math.max(maxWidth, width);
        maxHeight = Math.max(maxHeight, height);
      }
    });
    cfg.labels = labels;
    cfg.maxWidth = maxWidth;
    cfg.maxHeight = maxHeight;
    return cfg;
  };

  _proto._createAxis = function _createAxis(coord, scale, verticalScale, dimType, index) {
    if (index === void 0) {
      index = '';
    }

    var self = this;
    var coordType = coord.type;
    var transposed = coord.transposed;
    var type;
    var key;
    var defaultCfg;

    if (coordType === 'cartesian' || coordType === 'rect') {
      var position = self._getLinePosition(scale, dimType, index, transposed);

      defaultCfg = Global.axis[position];
      defaultCfg.position = position;
      type = 'Line';
      key = position;
    } else {
      if (dimType === 'x' && !transposed || dimType === 'y' && transposed) {
        defaultCfg = Global.axis.circle;
        type = 'Circle';
        key = 'circle';
      } else {
        defaultCfg = Global.axis.radius;
        type = 'Line';
        key = 'radius';
      }
    }

    var cfg = self._getAxisCfg(coord, scale, verticalScale, dimType, defaultCfg);

    cfg.type = type;
    cfg.dimType = dimType;
    cfg.verticalScale = verticalScale;
    cfg.index = index;
    this.axes[key] = cfg;
  };

  _proto.createAxis = function createAxis(coord, xScale, yScales) {
    var self = this;

    if (xScale && !self._isHide(xScale.field)) {
      self._createAxis(coord, xScale, yScales[0], 'x');
    }

    Util.each(yScales, function (yScale, index) {
      if (!self._isHide(yScale.field)) {
        self._createAxis(coord, yScale, xScale, 'y', index);
      }
    });
    var axes = this.axes;
    var chart = self.chart;

    if (chart._isAutoPadding()) {
      var userPadding = Util.parsePadding(chart.get('padding'));
      var appendPadding = Util.parsePadding(chart.get('appendPadding'));
      var legendRange = chart.get('legendRange') || {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
      };
      var padding = [userPadding[0] === 'auto' ? legendRange.top + appendPadding[0] * 2 : userPadding[0], userPadding[1] === 'auto' ? legendRange.right + appendPadding[1] : userPadding[1], userPadding[2] === 'auto' ? legendRange.bottom + appendPadding[2] : userPadding[2], userPadding[3] === 'auto' ? legendRange.left + appendPadding[3] : userPadding[3]];

      if (coord.isPolar) {
        var circleAxis = axes.circle;

        if (circleAxis) {
          var maxHeight = circleAxis.maxHeight,
              maxWidth = circleAxis.maxWidth,
              labelOffset = circleAxis.labelOffset;
          padding[0] += maxHeight + labelOffset;
          padding[1] += maxWidth + labelOffset;
          padding[2] += maxHeight + labelOffset;
          padding[3] += maxWidth + labelOffset;
        }
      } else {
        if (axes.right && userPadding[1] === 'auto') {
          var _axes$right = axes.right,
              _maxWidth = _axes$right.maxWidth,
              _labelOffset = _axes$right.labelOffset;
          padding[1] += _maxWidth + _labelOffset;
        }

        if (axes.left && userPadding[3] === 'auto') {
          var _axes$left = axes.left,
              _maxWidth2 = _axes$left.maxWidth,
              _labelOffset2 = _axes$left.labelOffset;
          padding[3] += _maxWidth2 + _labelOffset2;
        }

        if (axes.bottom && userPadding[2] === 'auto') {
          var _axes$bottom = axes.bottom,
              _maxHeight = _axes$bottom.maxHeight,
              _labelOffset3 = _axes$bottom.labelOffset;
          padding[2] += _maxHeight + _labelOffset3;
        }
      }

      chart.set('_padding', padding);

      chart._updateLayout(padding);
    }

    Util.each(axes, function (axis) {
      var type = axis.type,
          grid = axis.grid,
          verticalScale = axis.verticalScale,
          ticks = axis.ticks,
          dimType = axis.dimType,
          position = axis.position,
          index = axis.index;
      var appendCfg;

      if (coord.isPolar) {
        if (type === 'Line') {
          appendCfg = self._getRadiusCfg(coord);
        } else if (type === 'Circle') {
          appendCfg = self._getCircleCfg(coord);
        }
      } else {
        appendCfg = self._getLineCfg(coord, dimType, position);
      }

      if (grid && verticalScale) {
        var gridPoints = [];
        var verticalTicks = formatTicks(verticalScale.getTicks());
        Util.each(ticks, function (tick) {
          var subPoints = [];
          Util.each(verticalTicks, function (verticalTick) {
            var x = dimType === 'x' ? tick.value : verticalTick.value;
            var y = dimType === 'x' ? verticalTick.value : tick.value;

            if (x >= 0 && x <= 1 && y >= 0 && y <= 1) {
              var point = coord.convertPoint({
                x: x,
                y: y
              });
              subPoints.push(point);
            }
          });
          gridPoints.push({
            points: subPoints,
            _id: 'axis-' + dimType + index + '-grid-' + tick.tickValue
          });
        });
        axis.gridPoints = gridPoints;

        if (coord.isPolar) {
          axis.center = coord.center;
          axis.startAngle = coord.startAngle;
          axis.endAngle = coord.endAngle;
        }
      }

      appendCfg._id = 'axis-' + dimType;

      if (!Util.isNil(index)) {
        appendCfg._id = 'axis-' + dimType + index;
      }

      new Axis[type](Util.mix(axis, appendCfg));
    });
  };

  _proto.clear = function clear() {
    this.axes = {};
    this.frontPlot.clear();
    this.backPlot.clear();
  };

  return AxisController;
}();

module.exports = AxisController;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var Abstract = __webpack_require__(26);

__webpack_require__(78);

module.exports = Abstract;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Abstract = __webpack_require__(26);

var Line =
/*#__PURE__*/
function (_Abstract) {
  _inheritsLoose(Line, _Abstract);

  function Line() {
    return _Abstract.apply(this, arguments) || this;
  }

  var _proto = Line.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    _Abstract.prototype._initDefaultCfg.call(this);

    this.start = null;
    this.end = null;
  };

  _proto.getOffsetPoint = function getOffsetPoint(value) {
    var start = this.start,
        end = this.end;
    return {
      x: start.x + (end.x - start.x) * value,
      y: start.y + (end.y - start.y) * value
    };
  };

  _proto.getAxisVector = function getAxisVector() {
    var start = this.start,
        end = this.end;
    return [end.x - start.x, end.y - start.y];
  };

  _proto.drawLine = function drawLine(lineCfg) {
    var container = this.getContainer(lineCfg.top);
    var start = this.start,
        end = this.end;
    container.addShape('line', {
      className: 'axis-line',
      attrs: Util.mix({
        x1: start.x,
        y1: start.y,
        x2: end.x,
        y2: end.y
      }, lineCfg)
    });
  };

  return Line;
}(Abstract);

Abstract.Line = Line;
module.exports = Line;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Container = __webpack_require__(35);

var Group = __webpack_require__(36);

var _require = __webpack_require__(40),
    requestAnimationFrame = _require.requestAnimationFrame;

var Canvas =
/*#__PURE__*/
function () {
  var _proto = Canvas.prototype;

  _proto.get = function get(name) {
    return this._attrs[name];
  };

  _proto.set = function set(name, value) {
    this._attrs[name] = value;
  };

  function Canvas(cfg) {
    this._attrs = Util.mix({
      type: 'canvas',
      children: []
    }, cfg);

    this._initPixelRatio();

    this._initCanvas();
  }

  _proto._initPixelRatio = function _initPixelRatio() {
    var pixelRatio = this.get('pixelRatio');

    if (!pixelRatio) {
      this.set('pixelRatio', Util.getPixelRatio());
    }
  };

  _proto.beforeDraw = function beforeDraw() {
    var context = this._attrs.context;
    var el = this._attrs.el;
    !Util.isWx && !Util.isMy && context && context.clearRect(0, 0, el.width, el.height);
  };

  _proto._initCanvas = function _initCanvas() {
    var self = this;
    var el = self.get('el');
    var context = self.get('context');
    var canvas;

    if (context) {
      // CanvasRenderingContext2D
      canvas = context.canvas;
    } else if (Util.isString(el)) {
      // HTMLElement's id
      canvas = Util.getDomById(el);
    } else {
      // HTMLElement
      canvas = el;
    }

    if (!canvas) {
      throw new Error('Please specify the id or el of the chart!');
    }

    if (context && canvas && !canvas.getContext) {
      canvas.getContext = function () {
        return context;
      };
    }

    var width = self.get('width');

    if (!width) {
      width = Util.getWidth(canvas);
    }

    var height = self.get('height');

    if (!height) {
      height = Util.getHeight(canvas);
    }

    self.set('canvas', this);
    self.set('el', canvas);
    self.set('context', context || canvas.getContext('2d'));
    self.changeSize(width, height);
  };

  _proto.changeSize = function changeSize(width, height) {
    var pixelRatio = this.get('pixelRatio');
    var canvasDOM = this.get('el');

    if (Util.isBrowser) {
      canvasDOM.style.width = width + 'px';
      canvasDOM.style.height = height + 'px';
    }

    if (!Util.isWx && !Util.isMy) {
      canvasDOM.width = width * pixelRatio;
      canvasDOM.height = height * pixelRatio;

      if (pixelRatio !== 1) {
        var ctx = this.get('context');
        ctx.scale(pixelRatio, pixelRatio);
      }
    }

    this.set('width', width);
    this.set('height', height);
  };

  _proto.getWidth = function getWidth() {
    var pixelRatio = this.get('pixelRatio');
    var width = this.get('width');
    return width * pixelRatio;
  };

  _proto.getHeight = function getHeight() {
    var pixelRatio = this.get('pixelRatio');
    var height = this.get('height');
    return height * pixelRatio;
  };

  _proto.getPointByClient = function getPointByClient(clientX, clientY) {
    var el = this.get('el');
    var bbox = el.getBoundingClientRect();
    var width = bbox.right - bbox.left;
    var height = bbox.bottom - bbox.top;
    return {
      x: (clientX - bbox.left) * (el.width / width),
      y: (clientY - bbox.top) * (el.height / height)
    };
  };

  _proto._beginDraw = function _beginDraw() {
    this._attrs.toDraw = true;
  };

  _proto._endDraw = function _endDraw() {
    this._attrs.toDraw = false;
  };

  _proto.draw = function draw() {
    var self = this;

    function drawInner() {
      self.set('animateHandler', requestAnimationFrame(function () {
        self.set('animateHandler', undefined);

        if (self.get('toDraw')) {
          drawInner();
        }
      }));
      self.beforeDraw();

      try {
        var context = self._attrs.context;
        var children = self._attrs.children;

        for (var i = 0, len = children.length; i < len; i++) {
          var child = children[i];
          child.draw(context);
        }

        if (Util.isWx || Util.isMy) {
          context.draw();
        }
      } catch (ev) {
        console.warn('error in draw canvas, detail as:');
        console.warn(ev);

        self._endDraw();
      }

      self._endDraw();
    }

    if (self.get('destroyed')) {
      return;
    }

    if (self.get('animateHandler')) {
      this._beginDraw();
    } else {
      drawInner();
    }
  };

  _proto.destroy = function destroy() {
    if (this.get('destroyed')) {
      return;
    }

    this.clear();
    this._attrs = {};
    this.set('destroyed', true);
  };

  _proto.isDestroyed = function isDestroyed() {
    return this.get('destroyed');
  };

  return Canvas;
}();

Util.mix(Canvas.prototype, Container, {
  getGroupClass: function getGroupClass() {
    return Group;
  }
});
module.exports = Canvas;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

function _mod(n, m) {
  return (n % m + m) % m;
}

function _addStop(steps, gradient) {
  Util.each(steps, function (item) {
    item = item.split(':');
    gradient.addColorStop(Number(item[0]), item[1]);
  });
} // the string format: 'l(0) 0:#ffffff 0.5:#7ec2f3 1:#1890ff'


function _parseLineGradient(color, shape, context) {
  var arr = color.split(' ');
  var angle = arr[0].slice(2, arr[0].length - 1);
  angle = _mod(parseFloat(angle) * Math.PI / 180, Math.PI * 2);
  var steps = arr.slice(1);

  var _shape$getBBox = shape.getBBox(),
      minX = _shape$getBBox.minX,
      minY = _shape$getBBox.minY,
      maxX = _shape$getBBox.maxX,
      maxY = _shape$getBBox.maxY;

  var start;
  var end;

  if (angle >= 0 && angle < 0.5 * Math.PI) {
    start = {
      x: minX,
      y: minY
    };
    end = {
      x: maxX,
      y: maxY
    };
  } else if (0.5 * Math.PI <= angle && angle < Math.PI) {
    start = {
      x: maxX,
      y: minY
    };
    end = {
      x: minX,
      y: maxY
    };
  } else if (Math.PI <= angle && angle < 1.5 * Math.PI) {
    start = {
      x: maxX,
      y: maxY
    };
    end = {
      x: minX,
      y: minY
    };
  } else {
    start = {
      x: minX,
      y: maxY
    };
    end = {
      x: maxX,
      y: minY
    };
  }

  var tanTheta = Math.tan(angle);
  var tanTheta2 = tanTheta * tanTheta;
  var x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;
  var y = tanTheta * (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.y;
  var gradient = context.createLinearGradient(start.x, start.y, x, y);

  _addStop(steps, gradient);

  return gradient;
} // the string format: 'r(0.5, 0.5, 0.1) 0:#ffffff 1:#1890ff'


function _parseRadialGradient(color, shape, context) {
  var arr = color.split(' ');
  var circleCfg = arr[0].slice(2, arr[0].length - 1);
  circleCfg = circleCfg.split(',');
  var fx = parseFloat(circleCfg[0]);
  var fy = parseFloat(circleCfg[1]);
  var fr = parseFloat(circleCfg[2]);
  var steps = arr.slice(1); // if radius is 0, no gradient, stroke with the last color

  if (fr === 0) {
    var _color = steps[steps.length - 1];
    return _color.split(':')[1];
  }

  var _shape$getBBox2 = shape.getBBox(),
      width = _shape$getBBox2.width,
      height = _shape$getBBox2.height,
      minX = _shape$getBBox2.minX,
      minY = _shape$getBBox2.minY;

  var r = Math.sqrt(width * width + height * height) / 2;
  var gradient = context.createRadialGradient(minX + width * fx, minY + height * fy, fr * r, minX + width / 2, minY + height / 2, r);

  _addStop(steps, gradient);

  return gradient;
}

module.exports = {
  parseStyle: function parseStyle(color, shape, context) {
    if (color[1] === '(') {
      try {
        var firstCode = color[0];

        if (firstCode === 'l') {
          return _parseLineGradient(color, shape, context);
        } else if (firstCode === 'r') {
          return _parseRadialGradient(color, shape, context);
        }
      } catch (ev) {
        console.error('error in parsing gradient string, please check if there are any extra whitespaces.');
        console.error(ev);
      }
    }

    return color;
  }
};

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Shape = __webpack_require__(2);

var Rect =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Rect, _Shape);

  function Rect() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Rect.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.type = 'rect';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      x: 0,
      y: 0,
      width: 0,
      height: 0,
      radius: 0,
      lineWidth: 0
    };
  };

  _proto.createPath = function createPath(context) {
    var self = this;
    var attrs = self.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        width = attrs.width,
        height = attrs.height;
    context.beginPath();
    var radius = attrs.radius;

    if (!radius || !(width * height)) {
      context.rect(x, y, width, height);
    } else {
      radius = Util.parsePadding(radius);
      context.moveTo(x + radius[0], y);
      context.lineTo(x + width - radius[1], y);
      context.arc(x + width - radius[1], y + radius[1], radius[1], -Math.PI / 2, 0, false);
      context.lineTo(x + width, y + height - radius[2]);
      context.arc(x + width - radius[2], y + height - radius[2], radius[2], 0, Math.PI / 2, false);
      context.lineTo(x + radius[3], y + height);
      context.arc(x + radius[3], y + height - radius[3], radius[3], Math.PI / 2, Math.PI, false);
      context.lineTo(x, y + radius[0]);
      context.arc(x + radius[0], y + radius[0], radius[0], Math.PI, Math.PI * 3 / 2, false);
      context.closePath();
    }
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        width = attrs.width,
        height = attrs.height;
    return {
      minX: x,
      minY: y,
      maxX: x + width,
      maxY: y + height
    };
  };

  return Rect;
}(Shape);

Shape.Rect = Rect;
module.exports = Rect;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Shape = __webpack_require__(2);

var Circle =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Circle, _Shape);

  function Circle() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Circle.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.type = 'circle';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      x: 0,
      y: 0,
      r: 0,
      lineWidth: 0
    };
  };

  _proto.createPath = function createPath(context) {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        r = attrs.r;
    context.beginPath();
    context.arc(x, y, r, 0, Math.PI * 2, false);
    context.closePath();
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        r = attrs.r;
    return {
      minX: x - r,
      maxX: x + r,
      minY: y - r,
      maxY: y + r
    };
  };

  return Circle;
}(Shape);

Shape.Circle = Circle;
module.exports = Circle;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Shape = __webpack_require__(2);

var bbox = __webpack_require__(10);

var Line =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Line, _Shape);

  function Line() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Line.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canStroke = true;
    this._attrs.type = 'line';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      x1: 0,
      y1: 0,
      x2: 0,
      y2: 0,
      lineWidth: 1
    };
  };

  _proto.createPath = function createPath(context) {
    var attrs = this.get('attrs');
    var x1 = attrs.x1,
        y1 = attrs.y1,
        x2 = attrs.x2,
        y2 = attrs.y2;
    context.beginPath();
    context.moveTo(x1, y1);
    context.lineTo(x2, y2);
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var x1 = attrs.x1,
        y1 = attrs.y1,
        x2 = attrs.x2,
        y2 = attrs.y2,
        lineWidth = attrs.lineWidth;
    return bbox.getBBoxFromLine(x1, y1, x2, y2, lineWidth);
  };

  return Line;
}(Shape);

Shape.Line = Line;
module.exports = Line;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Shape = __webpack_require__(2);

var bbox = __webpack_require__(10);

var Polygon =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Polygon, _Shape);

  function Polygon() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Polygon.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.type = 'polygon';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      points: null,
      lineWidth: 0
    };
  };

  _proto.createPath = function createPath(context) {
    var self = this;
    var attrs = self.get('attrs');
    var points = attrs.points;
    context.beginPath();

    for (var i = 0, len = points.length; i < len; i++) {
      var point = points[i];

      if (i === 0) {
        context.moveTo(point.x, point.y);
      } else {
        context.lineTo(point.x, point.y);
      }
    }

    context.closePath();
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var points = attrs.points;
    return bbox.getBBoxFromPoints(points);
  };

  return Polygon;
}(Shape);

Shape.Polygon = Polygon;
module.exports = Polygon;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Shape = __webpack_require__(2);

var Smooth = __webpack_require__(41);

var bbox = __webpack_require__(10); // filter the point which x or y is NaN


function _filterPoints(points) {
  var filteredPoints = [];

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];

    if (!isNaN(point.x) && !isNaN(point.y)) {
      filteredPoints.push(point);
    }
  }

  return filteredPoints;
}

var Polyline =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Polyline, _Shape);

  function Polyline() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Polyline.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.type = 'polyline';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      points: null,
      lineWidth: 1,
      smooth: false
    };
  };

  _proto.createPath = function createPath(context) {
    var self = this;
    var attrs = self.get('attrs');
    var points = attrs.points,
        smooth = attrs.smooth;

    var filteredPoints = _filterPoints(points);

    context.beginPath();

    if (filteredPoints.length) {
      context.moveTo(filteredPoints[0].x, filteredPoints[0].y);

      if (smooth) {
        var constaint = [[0, 0], [1, 1]];
        var sps = Smooth.smooth(filteredPoints, false, constaint);

        for (var i = 0, n = sps.length; i < n; i++) {
          var sp = sps[i];
          context.bezierCurveTo(sp[1], sp[2], sp[3], sp[4], sp[5], sp[6]);
        }
      } else {
        var _i;

        var l;

        for (_i = 1, l = filteredPoints.length - 1; _i < l; _i++) {
          context.lineTo(filteredPoints[_i].x, filteredPoints[_i].y);
        }

        context.lineTo(filteredPoints[l].x, filteredPoints[l].y);
      }
    }
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var points = attrs.points,
        smooth = attrs.smooth,
        lineWidth = attrs.lineWidth;

    var filteredPoints = _filterPoints(points);

    if (smooth) {
      var newPoints = [];
      var constaint = [[0, 0], [1, 1]];
      var sps = Smooth.smooth(filteredPoints, false, constaint);

      for (var i = 0, n = sps.length; i < n; i++) {
        var sp = sps[i];

        if (i === 0) {
          newPoints.push([filteredPoints[0].x, filteredPoints[0].y, sp[1], sp[2], sp[3], sp[4], sp[5], sp[6]]);
        } else {
          var lastPoint = sps[i - 1];
          newPoints.push([lastPoint[5], lastPoint[6], sp[1], sp[2], sp[3], sp[4], sp[5], sp[6]]);
        }
      }

      return bbox.getBBoxFromBezierGroup(newPoints, lineWidth);
    }

    return bbox.getBBoxFromPoints(filteredPoints, lineWidth);
  };

  return Polyline;
}(Shape);

Shape.Polyline = Polyline;
module.exports = Polyline;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Shape = __webpack_require__(2);

var bbox = __webpack_require__(10);

var Arc =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Arc, _Shape);

  function Arc() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Arc.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canStroke = true;
    this._attrs.canFill = true;
    this._attrs.type = 'arc';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      x: 0,
      y: 0,
      r: 0,
      startAngle: 0,
      endAngle: Math.PI * 2,
      clockwise: false,
      lineWidth: 1
    };
  };

  _proto.createPath = function createPath(context) {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        r = attrs.r,
        startAngle = attrs.startAngle,
        endAngle = attrs.endAngle,
        clockwise = attrs.clockwise;
    context.beginPath();

    if (startAngle !== endAngle) {
      context.arc(x, y, r, startAngle, endAngle, clockwise);
    }
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        r = attrs.r,
        startAngle = attrs.startAngle,
        endAngle = attrs.endAngle,
        clockwise = attrs.clockwise;
    return bbox.getBBoxFromArc(x, y, r, startAngle, endAngle, clockwise);
  };

  return Arc;
}(Shape);

Shape.Arc = Arc;
module.exports = Arc;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Shape = __webpack_require__(2);

var bbox = __webpack_require__(10);

var Sector =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Sector, _Shape);

  function Sector() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Sector.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.type = 'sector';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      x: 0,
      y: 0,
      lineWidth: 0,
      r: 0,
      r0: 0,
      startAngle: 0,
      endAngle: Math.PI * 2,
      clockwise: false
    };
  };

  _proto.createPath = function createPath(context) {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        startAngle = attrs.startAngle,
        endAngle = attrs.endAngle,
        r = attrs.r,
        r0 = attrs.r0,
        clockwise = attrs.clockwise;
    context.beginPath();
    var unitX = Math.cos(startAngle);
    var unitY = Math.sin(startAngle);
    context.moveTo(unitX * r0 + x, unitY * r0 + y);
    context.lineTo(unitX * r + x, unitY * r + y); // 当扇形的角度非常小的时候，就不进行弧线的绘制；或者整个只有1个扇形时，会出现end<0的情况不绘制

    if (Math.abs(endAngle - startAngle) > 0.0001 || startAngle === 0 && endAngle < 0) {
      context.arc(x, y, r, startAngle, endAngle, clockwise);
      context.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);

      if (r0 !== 0) {
        context.arc(x, y, r0, endAngle, startAngle, !clockwise);
      }
    }

    context.closePath();
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        r = attrs.r,
        r0 = attrs.r0,
        startAngle = attrs.startAngle,
        endAngle = attrs.endAngle,
        clockwise = attrs.clockwise;
    var outerBBox = bbox.getBBoxFromArc(x, y, r, startAngle, endAngle, clockwise);
    var innerBBox = bbox.getBBoxFromArc(x, y, r0, startAngle, endAngle, clockwise);
    return {
      minX: Math.min(outerBBox.minX, innerBBox.minX),
      minY: Math.min(outerBBox.minY, innerBBox.minY),
      maxX: Math.max(outerBBox.maxX, innerBBox.maxX),
      maxY: Math.max(outerBBox.maxY, innerBBox.maxY)
    };
  };

  return Sector;
}(Shape);

Shape.Sector = Sector;
module.exports = Sector;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Shape = __webpack_require__(2);

var textWidthCacheCounter = 0;
var textWidthCache = {};
var TEXT_CACHE_MAX = 5000;

var Text =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Text, _Shape);

  function Text() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Text.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.type = 'text';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      lineWidth: 0,
      lineCount: 1,
      fontSize: 12,
      fontFamily: 'sans-serif',
      fontStyle: 'normal',
      fontWeight: 'normal',
      fontVariant: 'normal',
      textAlign: 'start',
      textBaseline: 'bottom',
      lineHeight: null,
      textArr: null
    };
  };

  _proto._getFontStyle = function _getFontStyle() {
    var attrs = this._attrs.attrs;
    var fontSize = attrs.fontSize,
        fontFamily = attrs.fontFamily,
        fontWeight = attrs.fontWeight,
        fontStyle = attrs.fontStyle,
        fontVariant = attrs.fontVariant;
    return fontStyle + " " + fontVariant + " " + fontWeight + " " + fontSize + "px " + fontFamily;
  };

  _proto._afterAttrsSet = function _afterAttrsSet() {
    var attrs = this._attrs.attrs;
    attrs.font = this._getFontStyle();

    if (attrs.text) {
      var text = attrs.text;
      var textArr = null;
      var lineCount = 1;

      if (Util.isString(text) && text.indexOf('\n') !== -1) {
        textArr = text.split('\n');
        lineCount = textArr.length;
      }

      attrs.lineCount = lineCount;
      attrs.textArr = textArr;
    }

    this.set('attrs', attrs);
  };

  _proto._getTextHeight = function _getTextHeight() {
    var attrs = this._attrs.attrs;

    if (attrs.height) {
      return attrs.height;
    }

    var lineCount = attrs.lineCount;
    var fontSize = attrs.fontSize * 1;

    if (lineCount > 1) {
      var spaceingY = this._getSpaceingY();

      return fontSize * lineCount + spaceingY * (lineCount - 1);
    }

    return fontSize;
  };

  _proto._getSpaceingY = function _getSpaceingY() {
    var attrs = this._attrs.attrs;
    var lineHeight = attrs.lineHeight;
    var fontSize = attrs.fontSize * 1;
    return lineHeight ? lineHeight - fontSize : fontSize * 0.14;
  };

  _proto.drawInner = function drawInner(context) {
    var self = this;
    var attrs = self._attrs.attrs;
    var text = attrs.text;
    var x = attrs.x;
    var y = attrs.y;

    if (Util.isNil(text) || isNaN(x) || isNaN(y)) {
      // text will be 0
      return;
    }

    var textArr = attrs.textArr;
    var fontSize = attrs.fontSize * 1;

    var spaceingY = self._getSpaceingY();

    if (attrs.rotate) {
      // do rotation
      context.translate(x, y);
      context.rotate(attrs.rotate);
      x = 0;
      y = 0;
    }

    var textBaseline = attrs.textBaseline;
    var height;

    if (textArr) {
      height = self._getTextHeight();
    }

    var subY; // context.beginPath();

    if (self.hasFill()) {
      var fillOpacity = attrs.fillOpacity;

      if (!Util.isNil(fillOpacity) && fillOpacity !== 1) {
        context.globalAlpha = fillOpacity;
      }

      if (textArr) {
        for (var i = 0, len = textArr.length; i < len; i++) {
          var subText = textArr[i];
          subY = y + i * (spaceingY + fontSize) - height + fontSize; // bottom;

          if (textBaseline === 'middle') {
            subY += height - fontSize - (height - fontSize) / 2;
          }

          if (textBaseline === 'top') {
            subY += height - fontSize;
          }

          context.fillText(subText, x, subY);
        }
      } else {
        context.fillText(text, x, y);
      }
    }

    if (self.hasStroke()) {
      if (textArr) {
        for (var _i = 0, _len = textArr.length; _i < _len; _i++) {
          var _subText = textArr[_i];
          subY = y + _i * (spaceingY + fontSize) - height + fontSize; // bottom;

          if (textBaseline === 'middle') {
            subY += height - fontSize - (height - fontSize) / 2;
          }

          if (textBaseline === 'top') {
            subY += height - fontSize;
          }

          context.strokeText(_subText, x, subY);
        }
      } else {
        context.strokeText(text, x, y);
      }
    }
  };

  _proto.calculateBox = function calculateBox() {
    var self = this;
    var attrs = self._attrs.attrs;
    var x = attrs.x,
        y = attrs.y,
        textAlign = attrs.textAlign,
        textBaseline = attrs.textBaseline;

    var width = self._getTextWidth(); // attrs.width


    if (!width) {
      return {
        minX: x,
        minY: y,
        maxX: x,
        maxY: y
      };
    }

    var height = self._getTextHeight(); // attrs.height


    var point = {
      x: x,
      y: y - height
    }; // default textAlign: start, textBaseline: bottom

    if (textAlign) {
      if (textAlign === 'end' || textAlign === 'right') {
        point.x -= width;
      } else if (textAlign === 'center') {
        point.x -= width / 2;
      }
    }

    if (textBaseline) {
      if (textBaseline === 'top') {
        point.y += height;
      } else if (textBaseline === 'middle') {
        point.y += height / 2;
      }
    }

    return {
      minX: point.x,
      minY: point.y,
      maxX: point.x + width,
      maxY: point.y + height
    };
  };

  _proto._getTextWidth = function _getTextWidth() {
    var attrs = this._attrs.attrs;

    if (attrs.width) {
      return attrs.width;
    }

    var text = attrs.text;
    var context = this.get('context');
    if (Util.isNil(text)) return undefined;
    var font = attrs.font;
    var textArr = attrs.textArr;
    var key = text + '' + font;

    if (textWidthCache[key]) {
      return textWidthCache[key];
    }

    var width = 0;

    if (textArr) {
      for (var i = 0, length = textArr.length; i < length; i++) {
        var subText = textArr[i];
        width = Math.max(width, Util.measureText(subText, font, context).width);
      }
    } else {
      width = Util.measureText(text, font, context).width;
    }

    if (textWidthCacheCounter > TEXT_CACHE_MAX) {
      textWidthCacheCounter = 0;
      textWidthCache = {};
    }

    textWidthCacheCounter++;
    textWidthCache[key] = width;
    return width;
  };

  return Text;
}(Shape);

Shape.Text = Text;
module.exports = Text;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Shape = __webpack_require__(2);

var Custom =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Custom, _Shape);

  function Custom() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Custom.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.createPath = null;
    this._attrs.type = 'custom';
  };

  _proto.createPath = function createPath(context) {
    var createPath = this.get('createPath');
    createPath && createPath.call(this, context);
  };

  _proto.calculateBox = function calculateBox() {
    var calculateBox = this.get('calculateBox');
    return calculateBox && calculateBox.call(this);
  };

  return Custom;
}(Shape);

Shape.Custom = Custom;
module.exports = Custom;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Path = __webpack_require__(42);

var Geom = __webpack_require__(6);

__webpack_require__(37);

var Line =
/*#__PURE__*/
function (_Path) {
  _inheritsLoose(Line, _Path);

  function Line() {
    return _Path.apply(this, arguments) || this;
  }

  var _proto = Line.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    var cfg = _Path.prototype.getDefaultCfg.call(this);

    cfg.type = 'line';
    cfg.sortable = true;
    return cfg;
  };

  return Line;
}(Path);

Geom.Line = Line;
module.exports = Line;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Geom = __webpack_require__(6);

var Util = __webpack_require__(0);

var SizeMixin = __webpack_require__(43);

__webpack_require__(92);

var Interval =
/*#__PURE__*/
function (_Geom) {
  _inheritsLoose(Interval, _Geom);

  var _proto = Interval.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    var cfg = _Geom.prototype.getDefaultCfg.call(this);

    cfg.type = 'interval';
    cfg.shapeType = 'interval';
    cfg.generatePoints = true;
    return cfg;
  };

  function Interval(cfg) {
    var _this;

    _this = _Geom.call(this, cfg) || this;
    Util.mix(_assertThisInitialized(_this), SizeMixin);
    return _this;
  }

  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {
    var cfg = _Geom.prototype.createShapePointsCfg.call(this, obj);

    cfg.size = this.getNormalizedSize(obj);
    return cfg;
  };

  _proto.clearInner = function clearInner() {
    _Geom.prototype.clearInner.call(this);

    this.set('defaultSize', null);
  };

  return Interval;
}(Geom);

Geom.Interval = Interval;
module.exports = Interval;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Shape = __webpack_require__(8);

var Vector2 = __webpack_require__(3);

var Global = __webpack_require__(1);

function getRectPoints(cfg) {
  var x = cfg.x,
      y = cfg.y,
      y0 = cfg.y0,
      size = cfg.size;
  var ymin = y0;
  var ymax = y;

  if (Util.isArray(y)) {
    ymax = y[1];
    ymin = y[0];
  }

  var xmin;
  var xmax;

  if (Util.isArray(x)) {
    xmin = x[0];
    xmax = x[1];
  } else {
    xmin = x - size / 2;
    xmax = x + size / 2;
  }

  return [{
    x: xmin,
    y: ymin
  }, {
    x: xmin,
    y: ymax
  }, {
    x: xmax,
    y: ymax
  }, {
    x: xmax,
    y: ymin
  }];
}

function getRectRange(points) {
  var xValues = [];
  var yValues = [];

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];
    xValues.push(point.x);
    yValues.push(point.y);
  }

  var xMin = Math.min.apply(null, xValues);
  var yMin = Math.min.apply(null, yValues);
  var xMax = Math.max.apply(null, xValues);
  var yMax = Math.max.apply(null, yValues);
  return {
    x: xMin,
    y: yMin,
    width: xMax - xMin,
    height: yMax - yMin
  };
}

var Interval = Shape.registerFactory('interval', {
  defaultShapeType: 'rect',
  getDefaultPoints: function getDefaultPoints(cfg) {
    return getRectPoints(cfg);
  }
});
Shape.registerShape('interval', 'rect', {
  draw: function draw(cfg, container) {
    var points = this.parsePoints(cfg.points);
    var style = Util.mix({
      fill: cfg.color
    }, Global.shape.interval, cfg.style);

    if (cfg.isInCircle) {
      var newPoints = points.slice(0);

      if (this._coord.transposed) {
        newPoints = [points[0], points[3], points[2], points[1]];
      }

      var _cfg$center = cfg.center,
          x = _cfg$center.x,
          y = _cfg$center.y;
      var v = [1, 0];
      var v0 = [newPoints[0].x - x, newPoints[0].y - y];
      var v1 = [newPoints[1].x - x, newPoints[1].y - y];
      var v2 = [newPoints[2].x - x, newPoints[2].y - y];
      var startAngle = Vector2.angleTo(v, v1);
      var endAngle = Vector2.angleTo(v, v2);
      var r0 = Vector2.length(v0);
      var r = Vector2.length(v1);

      if (startAngle >= 1.5 * Math.PI) {
        startAngle = startAngle - 2 * Math.PI;
      }

      if (endAngle >= 1.5 * Math.PI) {
        endAngle = endAngle - 2 * Math.PI;
      }

      return container.addShape('Sector', {
        className: 'interval',
        attrs: Util.mix({
          x: x,
          y: y,
          r: r,
          r0: r0,
          startAngle: startAngle,
          endAngle: endAngle
        }, style)
      });
    }

    var rectCfg = getRectRange(points);
    return container.addShape('rect', {
      className: 'interval',
      attrs: Util.mix(rectCfg, style)
    });
  }
});
module.exports = Interval;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  Stack: __webpack_require__(94),
  Dodge: __webpack_require__(96)
};

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(95);

module.exports = Stack;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var isArray = __webpack_require__(13);

var isNil = __webpack_require__(9);

var Adjust = __webpack_require__(23);

var Stack =
/*#__PURE__*/
function (_Adjust) {
  _inheritsLoose(Stack, _Adjust);

  function Stack() {
    return _Adjust.apply(this, arguments) || this;
  }

  var _proto = Stack.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.xField = null; // 调整对应的 x 方向对应的字段名称

    this.yField = null; // 调整对应的 y 方向对应的字段名称
  };

  _proto.processAdjust = function processAdjust(dataArray) {
    this.processStack(dataArray);
  };

  _proto.processStack = function processStack(dataArray) {
    var self = this;
    var xField = self.xField;
    var yField = self.yField;
    var count = dataArray.length;
    var stackCache = {
      positive: {},
      negative: {}
    }; // 层叠顺序翻转

    if (self.reverseOrder) {
      dataArray = dataArray.slice(0).reverse();
    }

    for (var i = 0; i < count; i++) {
      var data = dataArray[i];

      for (var j = 0, len = data.length; j < len; j++) {
        var item = data[j];
        var x = item[xField] || 0;
        var y = item[yField];
        var xkey = x.toString();
        y = isArray(y) ? y[1] : y;

        if (!isNil(y)) {
          var direction = y >= 0 ? 'positive' : 'negative';

          if (!stackCache[direction][xkey]) {
            stackCache[direction][xkey] = 0;
          }

          item[yField] = [stackCache[direction][xkey], y + stackCache[direction][xkey]];
          stackCache[direction][xkey] += y;
        }
      }
    }
  };

  return Stack;
}(Adjust);

Adjust.Stack = Stack;
module.exports = Stack;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

var Dodge = __webpack_require__(97);

module.exports = Dodge;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var Adjust = __webpack_require__(23);

var each = __webpack_require__(4);

var MARGIN_RATIO = 1 / 2;
var DODGE_RATIO = 1 / 2;

var Dodge =
/*#__PURE__*/
function (_Adjust) {
  _inheritsLoose(Dodge, _Adjust);

  function Dodge() {
    return _Adjust.apply(this, arguments) || this;
  }

  var _proto = Dodge.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    /**
     * 调整过程中,2个数据的间距
     * @type {Number}
     */
    this.marginRatio = MARGIN_RATIO;
    /**
     * 调整占单位宽度的比例,例如：占2个分类间距的 1/2
     * @type {Number}
     */

    this.dodgeRatio = DODGE_RATIO;
    this.adjustNames = ['x', 'y']; // 调整的维度，默认,x,y都做调整
  };

  _proto.getDodgeOffset = function getDodgeOffset(range, index, count) {
    var self = this;
    var pre = range.pre;
    var next = range.next;
    var tickLength = next - pre;
    var width = tickLength * self.dodgeRatio / count;
    var margin = self.marginRatio * width;
    var offset = 1 / 2 * (tickLength - count * width - (count - 1) * margin) + ((index + 1) * width + index * margin) - 1 / 2 * width - 1 / 2 * tickLength;
    return (pre + next) / 2 + offset;
  };

  _proto.processAdjust = function processAdjust(dataArray) {
    var self = this;
    var count = dataArray.length;
    var xField = self.xField;
    each(dataArray, function (data, index) {
      for (var i = 0, len = data.length; i < len; i++) {
        var obj = data[i];
        var value = obj[xField];
        var range = {
          pre: len === 1 ? value - 1 : value - 0.5,
          next: len === 1 ? value + 1 : value + 0.5
        };
        var dodgeValue = self.getDodgeOffset(range, index, count);
        obj[xField] = dodgeValue;
      }
    });
  };

  return Dodge;
}(Adjust);

Adjust.Dodge = Dodge;
module.exports = Dodge;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Base = __webpack_require__(21);

var Vector2 = __webpack_require__(3);

var Matrix = __webpack_require__(24);

var Polar =
/*#__PURE__*/
function (_Base) {
  _inheritsLoose(Polar, _Base);

  function Polar() {
    return _Base.apply(this, arguments) || this;
  }

  var _proto = Polar.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'polar';
    this.startAngle = -Math.PI / 2;
    this.endAngle = Math.PI * 3 / 2;
    this.inner = 0;
    this.innerRadius = 0; // alias

    this.isPolar = true;
    this.transposed = false;
    this.center = null;
    this.radius = null; // relative, 0 ~ 1
  };

  _proto.init = function init(start, end) {
    var self = this;
    var inner = self.inner || self.innerRadius;
    var width = Math.abs(end.x - start.x);
    var height = Math.abs(end.y - start.y);
    var maxRadius;
    var center;

    if (self.startAngle === -Math.PI && self.endAngle === 0) {
      maxRadius = Math.min(width / 2, height);
      center = {
        x: (start.x + end.x) / 2,
        y: start.y
      };
    } else {
      maxRadius = Math.min(width, height) / 2;
      center = {
        x: (start.x + end.x) / 2,
        y: (start.y + end.y) / 2
      };
    }

    var radius = self.radius;

    if (radius > 0 && radius <= 1) {
      maxRadius = maxRadius * radius;
    }

    this.x = {
      start: self.startAngle,
      end: self.endAngle
    };
    this.y = {
      start: maxRadius * inner,
      end: maxRadius
    };
    this.center = center;
    this.circleRadius = maxRadius; // the radius value in px
  };

  _proto.convertPoint = function convertPoint(point) {
    var self = this;
    var center = self.center;
    var transposed = self.transposed;
    var xDim = transposed ? 'y' : 'x';
    var yDim = transposed ? 'x' : 'y';
    var x = self.x;
    var y = self.y;
    var angle = x.start + (x.end - x.start) * point[xDim];
    var radius = y.start + (y.end - y.start) * point[yDim];
    return {
      x: center.x + Math.cos(angle) * radius,
      y: center.y + Math.sin(angle) * radius
    };
  };

  _proto.invertPoint = function invertPoint(point) {
    var self = this;
    var center = self.center,
        transposed = self.transposed,
        x = self.x,
        y = self.y;
    var xDim = transposed ? 'y' : 'x';
    var yDim = transposed ? 'x' : 'y';
    var m = [1, 0, 0, 1, 0, 0];
    Matrix.rotate(m, m, x.start);
    var startV = [1, 0];
    Vector2.transformMat2d(startV, startV, m);
    startV = [startV[0], startV[1]];
    var pointV = [point.x - center.x, point.y - center.y];

    if (Vector2.zero(pointV)) {
      return {
        x: 0,
        y: 0
      };
    }

    var theta = Vector2.angleTo(startV, pointV, x.end < x.start);

    if (Math.abs(theta - Math.PI * 2) < 0.001) {
      theta = 0;
    }

    var l = Vector2.length(pointV);
    var percentX = theta / (x.end - x.start);
    percentX = x.end - x.start > 0 ? percentX : -percentX;
    var percentY = (l - y.start) / (y.end - y.start);
    var rst = {};
    rst[xDim] = percentX;
    rst[yDim] = percentY;
    return rst;
  };

  return Polar;
}(Base);

Base.Polar = Polar;
module.exports = Polar;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @fileOverview 提取公共代码到util方法
 * @author dxq613@gmail.com
 */
var isString = __webpack_require__(18);

var isDate = __webpack_require__(118);

module.exports = {
  toTimeStamp: function toTimeStamp(value) {
    if (isString(value)) {
      if (value.indexOf('T') > 0) {
        value = new Date(value).getTime();
      } else {
        value = new Date(value.replace(/-/ig, '/')).getTime();
      }
    }

    if (isDate(value)) {
      value = value.getTime();
    }

    return value;
  }
};

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * marker shapes，used for tooltip and legend
 */
var Util = __webpack_require__(0);

var _require = __webpack_require__(5),
    Shape = _require.Shape;

var SYMBOLS = {
  circle: function circle(x, y, r, ctx) {
    ctx.arc(x, y, r, 0, Math.PI * 2, false);
  },
  square: function square(x, y, r, ctx) {
    ctx.moveTo(x - r, y - r);
    ctx.lineTo(x + r, y - r);
    ctx.lineTo(x + r, y + r);
    ctx.lineTo(x - r, y + r);
    ctx.closePath();
  }
};

var Marker =
/*#__PURE__*/
function (_Shape) {
  _inheritsLoose(Marker, _Shape);

  function Marker() {
    return _Shape.apply(this, arguments) || this;
  }

  var _proto = Marker.prototype;

  _proto._initProperties = function _initProperties() {
    _Shape.prototype._initProperties.call(this);

    this._attrs.canFill = true;
    this._attrs.canStroke = true;
    this._attrs.type = 'marker';
  };

  _proto.getDefaultAttrs = function getDefaultAttrs() {
    return {
      x: 0,
      y: 0,
      lineWidth: 0
    };
  };

  _proto.createPath = function createPath(context) {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        radius = attrs.radius;
    var symbol = attrs.symbol || 'circle';
    var method;

    if (Util.isFunction(symbol)) {
      method = symbol;
    } else {
      method = SYMBOLS[symbol];
    }

    context.beginPath();
    method(x, y, radius, context, this);
  };

  _proto.calculateBox = function calculateBox() {
    var attrs = this.get('attrs');
    var x = attrs.x,
        y = attrs.y,
        radius = attrs.radius;
    return {
      minX: x - radius,
      minY: y - radius,
      maxX: x + radius,
      maxY: y + radius
    };
  };

  return Marker;
}(Shape);

module.exports = Marker;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var _require = __webpack_require__(5),
    Group = _require.Group;

var Marker = __webpack_require__(100);

var MARKER_RADIUS = 3;

var List =
/*#__PURE__*/
function () {
  var _proto = List.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    return {
      showTitle: false,

      /**
       * title string
       * @type {?String}
       */
      title: null,

      /**
       * items array
       * @type {?Array}
       */
      items: null,

      /**
       * offset between title and items
       * @type {Number}
       */
      titleGap: 12,

      /**
       * offset between each item
       * @type {Number}
       */
      itemGap: 10,

      /**
       * the offset between each item in vertical direaction
       * @type {Number}
       */
      itemMarginBottom: 12,

      /**
       * the formatter for item text
       * @type {[type]}
       */
      itemFormatter: null,
      itemWidth: null,

      /**
       * offset between marker and text
       * @type {Number}
       */
      wordSpace: 6,
      x: 0,
      y: 0,
      layout: 'horizontal',

      /**
       * the join string of `name` and `value`
       * @type {String}
       */
      joinString: ': '
    };
  };

  function List(cfg) {
    Util.deepMix(this, this.getDefaultCfg(), cfg);

    this._init();

    this._renderTitle();

    this._renderItems();
  }

  _proto._init = function _init() {
    var container = new Group({
      zIndex: this.zIndex || 0
    });
    this.container = container;
    var wrapper = container.addGroup();
    this.wrapper = wrapper;
    var itemsGroup = wrapper.addGroup({
      className: 'itemsGroup'
    });
    this.itemsGroup = itemsGroup;

    if (this.parent) {
      this.parent.add(container);
    }
  };

  _proto._renderTitle = function _renderTitle(title) {
    title = title || this.title;
    var titleShape = this.titleShape;
    var titleHeight = 0;

    if (this.showTitle && title) {
      if (titleShape && !titleShape.get('destroyed')) {
        titleShape.attr('text', title);
      } else {
        var wrapper = this.wrapper,
            titleStyle = this.titleStyle;
        titleShape = wrapper.addShape('text', {
          className: 'title',
          attrs: Util.mix({
            x: 0,
            y: 0,
            text: title
          }, titleStyle)
        });
        this.titleShape = titleShape;
      }

      titleHeight = titleShape.getBBox().height + this.titleGap;
    }

    this._titleHeight = titleHeight;
  };

  _proto._renderItems = function _renderItems(items) {
    var self = this;
    items = items || self.items;

    if (!items) {
      return;
    }

    if (self.reversed) {
      items.reverse();
    }

    Util.each(items, function (item, index) {
      self._addItem(item, index);
    });

    if (items.length > 1) {
      this._adjustItems();
    }

    this._renderBackground();
  };

  _proto._renderBackground = function _renderBackground() {
    var background = this.background;

    if (background) {
      var container = this.container;
      var wrapper = this.wrapper;

      var _wrapper$getBBox = wrapper.getBBox(),
          minX = _wrapper$getBBox.minX,
          minY = _wrapper$getBBox.minY,
          width = _wrapper$getBBox.width,
          height = _wrapper$getBBox.height;

      var padding = background.padding || [0, 0, 0, 0];
      padding = Util.parsePadding(padding);
      var attrs = Util.mix({
        x: minX - padding[3],
        y: minY - padding[0],
        width: width + padding[1] + padding[3],
        height: height + padding[0] + padding[2]
      }, background);
      var backShape = this.backShape;

      if (backShape) {
        backShape.attr(attrs);
      } else {
        backShape = container.addShape('Rect', {
          zIndex: -1,
          attrs: attrs
        });
      }

      this.backShape = backShape;
      container.sort();
    }
  };

  _proto._addItem = function _addItem(item) {
    var itemsGroup = this.itemsGroup;
    var itemGroup = itemsGroup.addGroup({
      name: item.name,
      value: item.value,
      dataValue: item.dataValue,
      checked: item.checked
    });
    var unCheckStyle = this.unCheckStyle,
        unCheckColor = this.unCheckColor,
        nameStyle = this.nameStyle,
        valueStyle = this.valueStyle,
        wordSpace = this.wordSpace;
    var marker = item.marker,
        value = item.value;
    var startX = 0;

    if (unCheckColor) {
      unCheckStyle.fill = unCheckColor;
    }

    if (marker) {
      var radius = marker.radius || MARKER_RADIUS;
      var markerAttrs = Util.mix({
        x: radius,
        y: this._titleHeight
      }, marker);

      if (item.checked === false) {
        Util.mix(markerAttrs, unCheckStyle);
      }

      var markerShape = new Marker({
        className: 'item-marker',
        attrs: markerAttrs
      });
      itemGroup.add(markerShape);
      startX += markerShape.getBBox().width + wordSpace;
    }

    var nameText;
    var name = item.name;

    if (name) {
      var joinString = this.joinString || '';
      name = value ? name + joinString : name;
      nameText = itemGroup.addShape('text', {
        className: 'name',
        attrs: Util.mix({
          x: startX,
          y: this._titleHeight,
          text: this._formatItemValue(name)
        }, nameStyle, item.checked === false ? unCheckStyle : null)
      });
    }

    if (value) {
      var valueX = startX;

      if (nameText) {
        valueX += nameText.getBBox().width;
      }

      itemGroup.addShape('text', {
        className: 'value',
        attrs: Util.mix({
          x: valueX,
          y: this._titleHeight,
          text: value
        }, valueStyle, item.checked === false ? unCheckStyle : null)
      });
    }

    return itemGroup;
  };

  _proto._formatItemValue = function _formatItemValue(value) {
    var formatter = this.itemFormatter;

    if (formatter) {
      value = formatter.call(this, value);
    }

    return value;
  };

  _proto._getMaxItemWidth = function _getMaxItemWidth() {
    var width;
    var itemWidth = this.itemWidth;

    if (Util.isNumber(itemWidth) || Util.isNil(itemWidth)) {
      return itemWidth;
    }

    if (itemWidth === 'auto') {
      var itemsGroup = this.itemsGroup;
      var children = itemsGroup.get('children');
      var count = children.length;
      var maxItemWidth = 0;

      for (var i = 0; i < count; i++) {
        var _children$i$getBBox = children[i].getBBox(),
            _width = _children$i$getBBox.width;

        maxItemWidth = Math.max(maxItemWidth, _width);
      }

      var maxLength = this.maxLength;
      var itemGap = this.itemGap;
      var twoAvgWidth = (maxLength - itemGap) / 2;
      var threeAvgWidth = (maxLength - itemGap * 2) / 3;

      if (count === 2) {
        width = Math.max(maxItemWidth, twoAvgWidth);
      } else {
        // 1. max <= 3Avg, 3Avg
        // 2. 3Avg < max && max < 2avg, 2avg
        // 3. max > 2avg, max, one column
        if (maxItemWidth <= threeAvgWidth) {
          width = threeAvgWidth;
        } else if (maxItemWidth <= twoAvgWidth) {
          width = twoAvgWidth;
        } else {
          width = maxItemWidth;
        }
      }

      return width;
    }
  };

  _proto._adjustHorizontal = function _adjustHorizontal() {
    var maxLength = this.maxLength,
        itemsGroup = this.itemsGroup;
    var children = itemsGroup.get('children');
    var itemGap = this.itemGap,
        itemMarginBottom = this.itemMarginBottom;
    var titleHeight = this._titleHeight;
    var row = 0;
    var rowWidth = 0;
    var width;
    var height;

    var itemWidth = this._getMaxItemWidth();

    var legendHitBoxes = [];

    for (var i = 0, len = children.length; i < len; i++) {
      var child = children[i];
      var box = child.getBBox();
      var childHeight = box.height;
      var childWidth = box.width;
      width = itemWidth || childWidth;
      height = childHeight + itemMarginBottom;

      if (width - (maxLength - rowWidth) > 0.0001) {
        row++;
        rowWidth = 0;
      }

      child.moveTo(rowWidth, row * height);
      legendHitBoxes.push({
        x: rowWidth,
        y: row * height + titleHeight - childHeight / 2,
        width: childWidth * 1.375,
        height: childHeight * 1.375
      });
      rowWidth += width + itemGap;
    }

    this.legendHitBoxes = legendHitBoxes;
    return;
  };

  _proto._adjustVertical = function _adjustVertical() {
    var maxLength = this.maxLength,
        itemsGroup = this.itemsGroup;
    var itemGap = this.itemGap,
        itemMarginBottom = this.itemMarginBottom,
        itemWidth = this.itemWidth;
    var titleHeight = this._titleHeight;
    var children = itemsGroup.get('children');
    var colHeight = 0;
    var width;
    var height;
    var maxItemWidth = 0;
    var totalWidth = 0;
    var legendHitBoxes = [];

    for (var i = 0, length = children.length; i < length; i++) {
      var child = children[i];
      var bbox = child.getBBox();
      width = bbox.width;
      height = bbox.height;

      if (Util.isNumber(itemWidth)) {
        maxItemWidth = itemWidth + itemGap;
      } else if (width > maxItemWidth) {
        maxItemWidth = width + itemGap;
      }

      if (maxLength - colHeight < height) {
        colHeight = 0;
        totalWidth += maxItemWidth;
        child.moveTo(totalWidth, 0);
        legendHitBoxes.push({
          x: totalWidth,
          y: titleHeight - height / 2,
          width: width * 1.375,
          height: height * 1.375
        });
      } else {
        child.moveTo(totalWidth, colHeight);
        legendHitBoxes.push({
          x: totalWidth,
          y: colHeight - height / 2 + titleHeight,
          width: width * 1.375,
          height: height * 1.375
        });
      }

      colHeight += height + itemMarginBottom;
    }

    this.legendHitBoxes = legendHitBoxes;
    return;
  };

  _proto._adjustItems = function _adjustItems() {
    var layout = this.layout;

    if (layout === 'horizontal') {
      this._adjustHorizontal();
    } else {
      this._adjustVertical();
    }
  };

  _proto.moveTo = function moveTo(x, y) {
    this.x = x;
    this.y = y;
    var container = this.container;
    container && container.moveTo(x, y);
    return this;
  };

  _proto.setItems = function setItems(items) {
    this.clearItems();

    this._renderItems(items);
  };

  _proto.setTitle = function setTitle(title) {
    this._renderTitle(title);
  };

  _proto.clearItems = function clearItems() {
    var itemsGroup = this.itemsGroup;
    itemsGroup.clear();
  };

  _proto.getWidth = function getWidth() {
    var container = this.container;
    var bbox = container.getBBox();
    return bbox.width;
  };

  _proto.getHeight = function getHeight() {
    var container = this.container;
    var bbox = container.getBBox();
    return bbox.height;
  };

  _proto.show = function show() {
    var container = this.container;
    container.show();
  };

  _proto.hide = function hide() {
    var container = this.container;
    container.hide();
  };

  _proto.clear = function clear() {
    var container = this.container;
    container.clear();
    container.remove(true);
  };

  return List;
}();

module.exports = List;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Animate configuration and register
 * @author sima.zhang1990@gmail.com
 */
var Util = __webpack_require__(0);

var defaultAnimationCfg = {
  appear: {
    duration: 450,
    easing: 'quadraticOut'
  },
  // 'appear' animation options
  update: {
    duration: 300,
    easing: 'quadraticOut'
  },
  // 'update' animation options
  enter: {
    duration: 300,
    easing: 'quadraticOut'
  },
  // 'enter' animation options
  leave: {
    duration: 350,
    easing: 'quadraticIn' // 'leave' animation options

  }
};
var Animate = {
  defaultCfg: {},
  Action: {},
  getAnimation: function getAnimation(geomType, coord, animationType) {
    var geomAnimateCfg = this.defaultCfg[geomType];

    if (geomAnimateCfg) {
      var animation = geomAnimateCfg[animationType];

      if (Util.isFunction(animation)) {
        return animation(coord);
      }
    }

    return false;
  },
  getAnimateCfg: function getAnimateCfg(geomType, animationType) {
    var defaultCfg = defaultAnimationCfg[animationType];
    var geomConfig = this.defaultCfg[geomType];

    if (geomConfig && geomConfig.cfg && geomConfig.cfg[animationType]) {
      return Util.deepMix({}, defaultCfg, geomConfig.cfg[animationType]);
    }

    return defaultCfg;
  },
  registerAnimation: function registerAnimation(animationName, animationFun) {
    if (!this.Action) {
      this.Action = {};
    }

    this.Action[animationName] = animationFun;
  }
};
module.exports = Animate;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Utility
 * @author sima.zhang1990@gmail.com
 */
var _require = __webpack_require__(5),
    Matrix = _require.Matrix;

var Util = __webpack_require__(0);

var Helpers = {
  getCoordInfo: function getCoordInfo(coord) {
    var start = coord.start;
    var end = coord.end;
    return {
      start: start,
      end: end,
      width: end.x - start.x,
      height: Math.abs(end.y - start.y)
    };
  },
  getScaledMatrix: function getScaledMatrix(shape, v, direct) {
    var scaledMatrix;
    shape.apply(v);
    var x = v[0];
    var y = v[1];

    if (direct === 'x') {
      shape.transform([['t', x, y], ['s', 0.01, 1], ['t', -x, -y]]);
      var matrix = shape.getMatrix();
      scaledMatrix = Matrix.transform(matrix, [['t', x, y], ['s', 100, 1], ['t', -x, -y]]);
    } else if (direct === 'y') {
      shape.transform([['t', x, y], ['s', 1, 0.01], ['t', -x, -y]]);

      var _matrix = shape.getMatrix();

      scaledMatrix = Matrix.transform(_matrix, [['t', x, y], ['s', 1, 100], ['t', -x, -y]]);
    } else if (direct === 'xy') {
      shape.transform([['t', x, y], ['s', 0.01, 0.01], ['t', -x, -y]]);

      var _matrix2 = shape.getMatrix();

      scaledMatrix = Matrix.transform(_matrix2, [['t', x, y], ['s', 100, 100], ['t', -x, -y]]);
    }

    return scaledMatrix;
  },
  getAnimateParam: function getAnimateParam(animateCfg, index, id) {
    var result = {};

    if (animateCfg.delay) {
      result.delay = Util.isFunction(animateCfg.delay) ? animateCfg.delay(index, id) : animateCfg.delay;
    }

    result.easing = animateCfg.easing;
    result.duration = animateCfg.duration;
    result.delay = animateCfg.delay;
    return result;
  },
  doAnimation: function doAnimation(shape, endState, animateCfg, callback) {
    var id = shape._id;
    var index = shape.get('index');

    var _Helpers$getAnimatePa = Helpers.getAnimateParam(animateCfg, index, id),
        easing = _Helpers$getAnimatePa.easing,
        delay = _Helpers$getAnimatePa.delay,
        duration = _Helpers$getAnimatePa.duration;

    var anim = shape.animate().to({
      attrs: endState,
      duration: duration,
      delay: delay,
      easing: easing
    });

    if (callback) {
      anim.onEnd(function () {
        callback();
      });
    }
  }
};
module.exports = Helpers;

/***/ }),
/* 104 */,
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

var Geom = __webpack_require__(6);

__webpack_require__(106);

__webpack_require__(42);

__webpack_require__(90);

__webpack_require__(108);

__webpack_require__(91);

__webpack_require__(110);

__webpack_require__(112);

module.exports = Geom;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Geom = __webpack_require__(6);

__webpack_require__(107);

var Point =
/*#__PURE__*/
function (_Geom) {
  _inheritsLoose(Point, _Geom);

  function Point() {
    return _Geom.apply(this, arguments) || this;
  }

  var _proto = Point.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    var cfg = _Geom.prototype.getDefaultCfg.call(this);

    cfg.type = 'point';
    cfg.shapeType = 'point';
    cfg.generatePoints = true;
    return cfg;
  };

  _proto.draw = function draw(data, shapeFactory) {
    var self = this;
    var container = self.get('container');
    Util.each(data, function (obj) {
      var shape = obj.shape;
      var cfg = self.getDrawCfg(obj);

      if (Util.isArray(obj.y)) {
        var hasStack = self.hasAdjust('stack');
        Util.each(obj.y, function (y, idx) {
          cfg.y = y;

          if (!hasStack || idx !== 0) {
            self.drawShape(shape, obj, cfg, container, shapeFactory);
          }
        });
      } else if (!Util.isNil(obj.y)) {
        self.drawShape(shape, obj, cfg, container, shapeFactory);
      }
    });
  };

  return Point;
}(Geom);

Geom.Point = Point;
module.exports = Point;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Global = __webpack_require__(1);

var ShapeUtil = __webpack_require__(19);

var Shape = __webpack_require__(8);

var SHAPES = ['circle', 'hollowCircle', 'rect'];
var Point = Shape.registerFactory('point', {
  defaultShapeType: 'circle',
  getDefaultPoints: function getDefaultPoints(pointInfo) {
    return ShapeUtil.splitPoints(pointInfo);
  }
});

function getPointsCfg(cfg) {
  var style = {
    lineWidth: 0,
    stroke: cfg.color,
    fill: cfg.color
  };

  if (cfg.size) {
    style.size = cfg.size;
  }

  Util.mix(style, cfg.style);
  return Util.mix({}, Global.shape.point, style);
}

function drawShape(cfg, container, shape) {
  if (cfg.size === 0) return;
  var pointCfg = getPointsCfg(cfg);
  var size = pointCfg.r || pointCfg.size;
  var x = cfg.x;
  var y = !Util.isArray(cfg.y) ? [cfg.y] : cfg.y;

  if (shape === 'hollowCircle') {
    pointCfg.lineWidth = 1;
    pointCfg.fill = null;
  }

  for (var i = 0, len = y.length; i < len; i++) {
    if (shape === 'rect') {
      return container.addShape('Rect', {
        className: 'point',
        attrs: Util.mix({
          x: x - size,
          y: y[i] - size,
          width: size * 2,
          height: size * 2
        }, pointCfg)
      });
    }

    return container.addShape('Circle', {
      className: 'point',
      attrs: Util.mix({
        x: x,
        y: y[i],
        r: size
      }, pointCfg)
    });
  }
}

Util.each(SHAPES, function (shapeType) {
  Shape.registerShape('point', shapeType, {
    draw: function draw(cfg, container) {
      return drawShape(cfg, container, shapeType);
    }
  });
});
module.exports = Point;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * @fileOverview area geometry
 * @author dxq613 @gmail.com
 * @author sima.zhang1990@gmail.com
 */
var Geom = __webpack_require__(6);

var ShapeUtil = __webpack_require__(19);

var Util = __webpack_require__(0);

__webpack_require__(109);

var Area =
/*#__PURE__*/
function (_Geom) {
  _inheritsLoose(Area, _Geom);

  function Area() {
    return _Geom.apply(this, arguments) || this;
  }

  var _proto = Area.prototype;

  /**
   * get the default configuration
   * @protected
   * @return {Object} return the result
   */
  _proto.getDefaultCfg = function getDefaultCfg() {
    var cfg = _Geom.prototype.getDefaultCfg.call(this);

    cfg.type = 'area';
    cfg.shapeType = 'area';
    cfg.generatePoints = true;
    cfg.sortable = true;
    return cfg;
  };

  _proto.draw = function draw(data, shapeFactory) {
    var self = this;
    var container = self.get('container');
    var cfg = this.getDrawCfg(data[0]);
    var yScale = self.getYScale();
    var connectNulls = self.get('connectNulls');
    var splitArray = ShapeUtil.splitArray(data, yScale.field, connectNulls);
    cfg.origin = data;
    Util.each(splitArray, function (subData, splitedIndex) {
      cfg.splitedIndex = splitedIndex;
      var points = subData.map(function (obj) {
        return obj.points;
      });
      cfg.points = points;
      self.drawShape(cfg.shape, data[0], cfg, container, shapeFactory);
    });
  };

  return Area;
}(Geom);

Geom.Area = Area;
module.exports = Area;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Shape = __webpack_require__(8);

var Smooth = __webpack_require__(41);

var bbox = __webpack_require__(10);

var Global = __webpack_require__(1);

function equals(v1, v2) {
  return Math.abs(v1 - v2) < 0.00001;
}

function notEmpty(value) {
  return !isNaN(value) && !Util.isNil(value);
}

function filterPoints(points) {
  var filteredPoints = []; // filter the point which x or y is NaN

  for (var i = 0, len = points.length; i < len; i++) {
    var point = points[i];

    if (notEmpty(point.x) && notEmpty(point.y)) {
      filteredPoints.push(point);
    }
  }

  return filteredPoints;
}

function equalsCenter(points, center) {
  var eqls = true;
  Util.each(points, function (point) {
    if (!equals(point.x, center.x) || !equals(point.y, center.y)) {
      eqls = false;
      return false;
    }
  });
  return eqls;
}

function drawRectShape(topPoints, bottomPoints, container, style, isSmooth) {
  var shape;
  var points = topPoints.concat(bottomPoints);

  if (isSmooth) {
    shape = container.addShape('Custom', {
      className: 'area',
      attrs: Util.mix({
        points: points
      }, style),
      createPath: function createPath(context) {
        var constaint = [[0, 0], [1, 1]];
        var points = filterPoints(this._attrs.attrs.points);
        var pointsLen = points.length;
        var topPoints = points.slice(0, pointsLen / 2);
        var bottomPoints = points.slice(pointsLen / 2, pointsLen);
        var topSps = Smooth.smooth(topPoints, false, constaint);
        context.beginPath();
        context.moveTo(topPoints[0].x, topPoints[0].y);

        for (var i = 0, n = topSps.length; i < n; i++) {
          var sp = topSps[i];
          context.bezierCurveTo(sp[1], sp[2], sp[3], sp[4], sp[5], sp[6]);
        }

        if (bottomPoints.length) {
          var bottomSps = Smooth.smooth(bottomPoints, false, constaint);
          context.lineTo(bottomPoints[0].x, bottomPoints[0].y);

          for (var _i = 0, _n = bottomSps.length; _i < _n; _i++) {
            var _sp = bottomSps[_i];
            context.bezierCurveTo(_sp[1], _sp[2], _sp[3], _sp[4], _sp[5], _sp[6]);
          }
        }

        context.closePath();
      },
      calculateBox: function calculateBox() {
        var points = filterPoints(this._attrs.attrs.points);
        return bbox.getBBoxFromPoints(points);
      }
    });
  } else {
    shape = container.addShape('Polyline', {
      className: 'area',
      attrs: Util.mix({
        points: points
      }, style)
    });
  }

  return shape;
}

function drawShape(cfg, container, isSmooth) {
  var self = this;
  var points = cfg.points;
  var topPoints = [];
  var bottomPoints = [];
  Util.each(points, function (point) {
    bottomPoints.push(point[0]);
    topPoints.push(point[1]);
  });
  var style = Util.mix({
    fillStyle: cfg.color
  }, Global.shape.area, cfg.style);
  bottomPoints.reverse();
  topPoints = self.parsePoints(topPoints);
  bottomPoints = self.parsePoints(bottomPoints);

  if (cfg.isInCircle) {
    topPoints.push(topPoints[0]);
    bottomPoints.unshift(bottomPoints[bottomPoints.length - 1]);

    if (equalsCenter(bottomPoints, cfg.center)) {
      bottomPoints = [];
    }
  }

  return drawRectShape(topPoints, bottomPoints, container, style, isSmooth);
}

var Area = Shape.registerFactory('area', {
  defaultShapeType: 'area',
  getDefaultPoints: function getDefaultPoints(obj) {
    var x = obj.x;
    var y = obj.y;
    var y0 = obj.y0;
    y = Util.isArray(y) ? y : [y0, y];
    var points = [];
    points.push({
      x: x,
      y: y[0]
    }, {
      x: x,
      y: y[1]
    });
    return points;
  }
});
var SHAPES = ['area', 'smooth'];
Util.each(SHAPES, function (shapeType) {
  Shape.registerShape('area', shapeType, {
    draw: function draw(cfg, container) {
      var smooth = shapeType === 'smooth';
      return drawShape.call(this, cfg, container, smooth);
    }
  });
});
module.exports = Area;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Geom = __webpack_require__(6);

var Util = __webpack_require__(0);

__webpack_require__(111);

var Polygon =
/*#__PURE__*/
function (_Geom) {
  _inheritsLoose(Polygon, _Geom);

  function Polygon() {
    return _Geom.apply(this, arguments) || this;
  }

  var _proto = Polygon.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    var cfg = _Geom.prototype.getDefaultCfg.call(this);

    cfg.type = 'polygon';
    cfg.shapeType = 'polygon';
    cfg.generatePoints = true;
    return cfg;
  };

  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {
    var cfg = _Geom.prototype.createShapePointsCfg.call(this, obj);

    var self = this;
    var x = cfg.x;
    var y = cfg.y;
    var temp;

    if (!(Util.isArray(x) && Util.isArray(y))) {
      var xScale = self.getXScale();
      var yScale = self.getYScale();
      var xCount = xScale.values ? xScale.values.length : xScale.ticks.length;
      var yCount = yScale.values ? yScale.values.length : yScale.ticks.length;
      var xOffset = 0.5 * 1 / xCount;
      var yOffset = 0.5 * 1 / yCount;

      if (xScale.isCategory && yScale.isCategory) {
        x = [x - xOffset, x - xOffset, x + xOffset, x + xOffset];
        y = [y - yOffset, y + yOffset, y + yOffset, y - yOffset];
      } else if (Util.isArray(x)) {
        temp = x;
        x = [temp[0], temp[0], temp[1], temp[1]];
        y = [y - yOffset / 2, y + yOffset / 2, y + yOffset / 2, y - yOffset / 2];
      } else if (Util.isArray(y)) {
        temp = y;
        y = [temp[0], temp[1], temp[1], temp[0]];
        x = [x - xOffset / 2, x - xOffset / 2, x + xOffset / 2, x + xOffset / 2];
      }

      cfg.x = x;
      cfg.y = y;
    }

    return cfg;
  };

  return Polygon;
}(Geom);

Geom.Polygon = Polygon;
module.exports = Polygon;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var Shape = __webpack_require__(8);

var Util = __webpack_require__(0);

var Polygon = Shape.registerFactory('polygon', {
  defaultShapeType: 'polygon',
  getDefaultPoints: function getDefaultPoints(pointInfo) {
    var points = [];
    var x = pointInfo.x,
        y = pointInfo.y;

    for (var i = 0, len = x.length; i < len; i++) {
      points.push({
        x: x[i],
        y: y[i]
      });
    }

    return points;
  }
});
Shape.registerShape('polygon', 'polygon', {
  draw: function draw(cfg, container) {
    var points = this.parsePoints(cfg.points);
    var style = Util.mix({
      fill: cfg.color,
      points: points
    }, cfg.style);
    return container.addShape('Polygon', {
      className: 'polygon',
      attrs: style
    });
  }
});
module.exports = Polygon;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Geom = __webpack_require__(6);

var Util = __webpack_require__(0);

var SizeMixin = __webpack_require__(43);

__webpack_require__(113);

var Schema =
/*#__PURE__*/
function (_Geom) {
  _inheritsLoose(Schema, _Geom);

  var _proto = Schema.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    var cfg = _Geom.prototype.getDefaultCfg.call(this);

    cfg.type = 'schema';
    cfg.shapeType = 'schema';
    cfg.generatePoints = true;
    return cfg;
  };

  function Schema(cfg) {
    var _this;

    _this = _Geom.call(this, cfg) || this;
    Util.mix(_assertThisInitialized(_this), SizeMixin);
    return _this;
  }

  _proto.createShapePointsCfg = function createShapePointsCfg(obj) {
    var cfg = _Geom.prototype.createShapePointsCfg.call(this, obj);

    cfg.size = this.getNormalizedSize(obj);
    return cfg;
  };

  _proto.clearInner = function clearInner() {
    _Geom.prototype.clearInner.call(this);

    this.set('defaultSize', null);
  };

  return Schema;
}(Geom);

Geom.Schema = Schema;
module.exports = Schema;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var Shape = __webpack_require__(8);

var Util = __webpack_require__(0);

function _sortValue(value) {
  var sorted = value.sort(function (a, b) {
    return a < b ? 1 : -1;
  });
  var length = sorted.length;

  if (length < 4) {
    var min = sorted[length - 1];

    for (var i = 0; i < 4 - length; i++) {
      sorted.push(min);
    }
  }

  return sorted;
} // from left bottom corner, and clockwise


function getCandlePoints(x, y, width) {
  var yValues = _sortValue(y);

  var points = [{
    x: x,
    y: yValues[0]
  }, {
    x: x,
    y: yValues[1]
  }, {
    x: x - width / 2,
    y: yValues[2]
  }, {
    x: x - width / 2,
    y: yValues[1]
  }, {
    x: x + width / 2,
    y: yValues[1]
  }, {
    x: x + width / 2,
    y: yValues[2]
  }, {
    x: x,
    y: yValues[2]
  }, {
    x: x,
    y: yValues[3]
  }];
  return points;
}

var Schema = Shape.registerFactory('schema', {});
Shape.registerShape('schema', 'candle', {
  getPoints: function getPoints(cfg) {
    return getCandlePoints(cfg.x, cfg.y, cfg.size);
  },
  draw: function draw(cfg, container) {
    var points = this.parsePoints(cfg.points);
    var style = Util.mix({
      stroke: cfg.color,
      fill: cfg.color,
      lineWidth: 1
    }, cfg.style);
    return container.addShape('Custom', {
      className: 'schema',
      attrs: style,
      createPath: function createPath(ctx) {
        ctx.beginPath();
        ctx.moveTo(points[0].x, points[0].y);
        ctx.lineTo(points[1].x, points[1].y);
        ctx.moveTo(points[2].x, points[2].y);

        for (var i = 3; i < 6; i++) {
          ctx.lineTo(points[i].x, points[i].y);
        }

        ctx.closePath();
        ctx.moveTo(points[6].x, points[6].y);
        ctx.lineTo(points[7].x, points[7].y);
      }
    });
  }
});
module.exports = Schema;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var Abstract = __webpack_require__(26);

var Circle =
/*#__PURE__*/
function (_Abstract) {
  _inheritsLoose(Circle, _Abstract);

  function Circle() {
    return _Abstract.apply(this, arguments) || this;
  }

  var _proto = Circle.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    _Abstract.prototype._initDefaultCfg.call(this);

    this.startAngle = -Math.PI / 2; // start angle，in radian

    this.endAngle = Math.PI * 3 / 2; // end angle, in radian

    this.radius = null; // radius

    this.center = null; // center
  };

  _proto.getOffsetPoint = function getOffsetPoint(value) {
    var startAngle = this.startAngle,
        endAngle = this.endAngle;
    var angle = startAngle + (endAngle - startAngle) * value;
    return this._getCirclePoint(angle);
  };

  _proto._getCirclePoint = function _getCirclePoint(angle, radius) {
    var self = this;
    var center = self.center;
    radius = radius || self.radius;
    return {
      x: center.x + Math.cos(angle) * radius,
      y: center.y + Math.sin(angle) * radius
    };
  };

  _proto.getTextAlignInfo = function getTextAlignInfo(point, offset) {
    var self = this;
    var offsetVector = self.getOffsetVector(point, offset);
    var align;
    var baseLine = 'middle';

    if (offsetVector[0] > 0) {
      align = 'left';
    } else if (offsetVector[0] < 0) {
      align = 'right';
    } else {
      align = 'center';

      if (offsetVector[1] > 0) {
        baseLine = 'top';
      } else if (offsetVector[1] < 0) {
        baseLine = 'bottom';
      }
    }

    return {
      textAlign: align,
      textBaseline: baseLine
    };
  };

  _proto.getAxisVector = function getAxisVector(point) {
    var center = this.center;
    var factor = this.offsetFactor;
    return [(point.y - center.y) * factor, (point.x - center.x) * -1 * factor];
  };

  _proto.drawLine = function drawLine(lineCfg) {
    var center = this.center,
        radius = this.radius,
        startAngle = this.startAngle,
        endAngle = this.endAngle;
    var container = this.getContainer(lineCfg.top);
    container.addShape('arc', {
      className: 'axis-line',
      attrs: Util.mix({
        x: center.x,
        y: center.y,
        r: radius,
        startAngle: startAngle,
        endAngle: endAngle
      }, lineCfg)
    });
  };

  return Circle;
}(Abstract);

Abstract.Circle = Circle;
module.exports = Circle;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

var TimeCat = __webpack_require__(116);

module.exports = TimeCat;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
/**
 * @fileOverview 时间数据作为分类类型
 * @author dxq613@gmail.com
 */


var Base = __webpack_require__(12);

var Category = __webpack_require__(38);

var fecha = __webpack_require__(117);

var catAuto = __webpack_require__(39);

var TimeUtil = __webpack_require__(99);

var each = __webpack_require__(4);

var isNumber = __webpack_require__(17);

var isObject = __webpack_require__(25);

var isString = __webpack_require__(18);
/**
 * 度量的构造函数
 * @class Scale.TimeCategory
 */


var TimeCategory =
/*#__PURE__*/
function (_Category) {
  _inheritsLoose(TimeCategory, _Category);

  function TimeCategory() {
    return _Category.apply(this, arguments) || this;
  }

  var _proto = TimeCategory.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    _Category.prototype._initDefaultCfg.call(this);

    this.type = 'timeCat';
    /**
     * 是否需要排序，默认进行排序
     * @type {Boolean}
     */

    this.sortable = true;
    this.tickCount = 5;
    /**
     * 时间格式化
     * @type {String}
     */

    this.mask = 'YYYY-MM-DD';
  };

  _proto.init = function init() {
    var self = this;
    var values = this.values; // 针对时间分类类型，会将时间统一转换为时间戳

    each(values, function (v, i) {
      values[i] = self._toTimeStamp(v);
    });

    if (this.sortable) {
      // 允许排序
      values.sort(function (v1, v2) {
        return v1 - v2;
      });
    }

    if (!self.ticks) {
      self.ticks = this.calculateTicks();
    }
  }
  /**
   * 计算 ticks
   * @return {array} 返回 ticks 数组
   */
  ;

  _proto.calculateTicks = function calculateTicks() {
    var self = this;
    var count = self.tickCount;
    var ticks;

    if (count) {
      var temp = catAuto({
        maxCount: count,
        data: self.values,
        isRounding: self.isRounding
      });
      ticks = temp.ticks;
    } else {
      ticks = self.values;
    }

    return ticks;
  }
  /**
   * @override
   */
  ;

  _proto.translate = function translate(value) {
    value = this._toTimeStamp(value);
    var index = this.values.indexOf(value);

    if (index === -1) {
      if (isNumber(value) && value < this.values.length) {
        index = value;
      } else {
        index = NaN;
      }
    }

    return index;
  }
  /**
   * @override
   */
  ;

  _proto.scale = function scale(value) {
    var rangeMin = this.rangeMin();
    var rangeMax = this.rangeMax();
    var index = this.translate(value);
    var percent;

    if (this.values.length === 1 || isNaN(index)) {
      // is index is NAN should not be set as 0
      percent = index;
    } else if (index > -1) {
      percent = index / (this.values.length - 1);
    } else {
      percent = 0;
    }

    return rangeMin + percent * (rangeMax - rangeMin);
  }
  /**
   * @override
   */
  ;

  _proto.getText = function getText(value) {
    var result = '';
    var index = this.translate(value);

    if (index > -1) {
      result = this.values[index];
    } else {
      result = value;
    }

    var formatter = this.formatter;
    result = parseInt(result, 10);
    result = formatter ? formatter(result) : fecha.format(result, this.mask);
    return result;
  }
  /**
   * @override
   */
  ;

  _proto.getTicks = function getTicks() {
    var self = this;
    var ticks = this.ticks;
    var rst = [];
    each(ticks, function (tick) {
      var obj;

      if (isObject(tick)) {
        obj = tick;
      } else {
        obj = {
          text: isString(tick) ? tick : self.getText(tick),
          value: self.scale(tick),
          tickValue: tick // 用于坐标轴上文本动画时确定前后帧的对应关系

        };
      }

      rst.push(obj);
    });
    return rst;
  } // 将时间转换为时间戳
  ;

  _proto._toTimeStamp = function _toTimeStamp(value) {
    return TimeUtil.toTimeStamp(value);
  };

  return TimeCategory;
}(Category);

Base.TimeCat = TimeCategory;
module.exports = TimeCategory;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;(function (main) {
  'use strict';
  /**
   * Parse or format dates
   * @class fecha
   */

  var fecha = {};
  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g;
  var twoDigits = /\d\d?/;
  var threeDigits = /\d{3}/;
  var fourDigits = /\d{4}/;
  var word = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;
  var literal = /\[([^]*?)\]/gm;

  var noop = function () {};

  function shorten(arr, sLen) {
    var newArr = [];

    for (var i = 0, len = arr.length; i < len; i++) {
      newArr.push(arr[i].substr(0, sLen));
    }

    return newArr;
  }

  function monthUpdate(arrName) {
    return function (d, v, i18n) {
      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());

      if (~index) {
        d.month = index;
      }
    };
  }

  function pad(val, len) {
    val = String(val);
    len = len || 2;

    while (val.length < len) {
      val = '0' + val;
    }

    return val;
  }

  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  var monthNamesShort = shorten(monthNames, 3);
  var dayNamesShort = shorten(dayNames, 3);
  fecha.i18n = {
    dayNamesShort: dayNamesShort,
    dayNames: dayNames,
    monthNamesShort: monthNamesShort,
    monthNames: monthNames,
    amPm: ['am', 'pm'],
    DoFn: function DoFn(D) {
      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];
    }
  };
  var formatFlags = {
    D: function (dateObj) {
      return dateObj.getDate();
    },
    DD: function (dateObj) {
      return pad(dateObj.getDate());
    },
    Do: function (dateObj, i18n) {
      return i18n.DoFn(dateObj.getDate());
    },
    d: function (dateObj) {
      return dateObj.getDay();
    },
    dd: function (dateObj) {
      return pad(dateObj.getDay());
    },
    ddd: function (dateObj, i18n) {
      return i18n.dayNamesShort[dateObj.getDay()];
    },
    dddd: function (dateObj, i18n) {
      return i18n.dayNames[dateObj.getDay()];
    },
    M: function (dateObj) {
      return dateObj.getMonth() + 1;
    },
    MM: function (dateObj) {
      return pad(dateObj.getMonth() + 1);
    },
    MMM: function (dateObj, i18n) {
      return i18n.monthNamesShort[dateObj.getMonth()];
    },
    MMMM: function (dateObj, i18n) {
      return i18n.monthNames[dateObj.getMonth()];
    },
    YY: function (dateObj) {
      return String(dateObj.getFullYear()).substr(2);
    },
    YYYY: function (dateObj) {
      return pad(dateObj.getFullYear(), 4);
    },
    h: function (dateObj) {
      return dateObj.getHours() % 12 || 12;
    },
    hh: function (dateObj) {
      return pad(dateObj.getHours() % 12 || 12);
    },
    H: function (dateObj) {
      return dateObj.getHours();
    },
    HH: function (dateObj) {
      return pad(dateObj.getHours());
    },
    m: function (dateObj) {
      return dateObj.getMinutes();
    },
    mm: function (dateObj) {
      return pad(dateObj.getMinutes());
    },
    s: function (dateObj) {
      return dateObj.getSeconds();
    },
    ss: function (dateObj) {
      return pad(dateObj.getSeconds());
    },
    S: function (dateObj) {
      return Math.round(dateObj.getMilliseconds() / 100);
    },
    SS: function (dateObj) {
      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);
    },
    SSS: function (dateObj) {
      return pad(dateObj.getMilliseconds(), 3);
    },
    a: function (dateObj, i18n) {
      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];
    },
    A: function (dateObj, i18n) {
      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();
    },
    ZZ: function (dateObj) {
      var o = dateObj.getTimezoneOffset();
      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);
    }
  };
  var parseFlags = {
    D: [twoDigits, function (d, v) {
      d.day = v;
    }],
    Do: [new RegExp(twoDigits.source + word.source), function (d, v) {
      d.day = parseInt(v, 10);
    }],
    M: [twoDigits, function (d, v) {
      d.month = v - 1;
    }],
    YY: [twoDigits, function (d, v) {
      var da = new Date(),
          cent = +('' + da.getFullYear()).substr(0, 2);
      d.year = '' + (v > 68 ? cent - 1 : cent) + v;
    }],
    h: [twoDigits, function (d, v) {
      d.hour = v;
    }],
    m: [twoDigits, function (d, v) {
      d.minute = v;
    }],
    s: [twoDigits, function (d, v) {
      d.second = v;
    }],
    YYYY: [fourDigits, function (d, v) {
      d.year = v;
    }],
    S: [/\d/, function (d, v) {
      d.millisecond = v * 100;
    }],
    SS: [/\d{2}/, function (d, v) {
      d.millisecond = v * 10;
    }],
    SSS: [threeDigits, function (d, v) {
      d.millisecond = v;
    }],
    d: [twoDigits, noop],
    ddd: [word, noop],
    MMM: [word, monthUpdate('monthNamesShort')],
    MMMM: [word, monthUpdate('monthNames')],
    a: [word, function (d, v, i18n) {
      var val = v.toLowerCase();

      if (val === i18n.amPm[0]) {
        d.isPm = false;
      } else if (val === i18n.amPm[1]) {
        d.isPm = true;
      }
    }],
    ZZ: [/([\+\-]\d\d:?\d\d|Z)/, function (d, v) {
      if (v === 'Z') v = '+00:00';
      var parts = (v + '').match(/([\+\-]|\d\d)/gi),
          minutes;

      if (parts) {
        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);
        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;
      }
    }]
  };
  parseFlags.dd = parseFlags.d;
  parseFlags.dddd = parseFlags.ddd;
  parseFlags.DD = parseFlags.D;
  parseFlags.mm = parseFlags.m;
  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;
  parseFlags.MM = parseFlags.M;
  parseFlags.ss = parseFlags.s;
  parseFlags.A = parseFlags.a; // Some common format strings

  fecha.masks = {
    default: 'ddd MMM DD YYYY HH:mm:ss',
    shortDate: 'M/D/YY',
    mediumDate: 'MMM D, YYYY',
    longDate: 'MMMM D, YYYY',
    fullDate: 'dddd, MMMM D, YYYY',
    shortTime: 'HH:mm',
    mediumTime: 'HH:mm:ss',
    longTime: 'HH:mm:ss.SSS'
  };
  /***
   * Format a date
   * @method format
   * @param {Date|number} dateObj
   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'
   */

  fecha.format = function (dateObj, mask, i18nSettings) {
    var i18n = i18nSettings || fecha.i18n;

    if (typeof dateObj === 'number') {
      dateObj = new Date(dateObj);
    }

    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {
      throw new Error('Invalid Date in fecha.format');
    }

    mask = fecha.masks[mask] || mask || fecha.masks['default'];
    var literals = []; // Make literals inactive by replacing them with ??

    mask = mask.replace(literal, function ($0, $1) {
      literals.push($1);
      return '??';
    }); // Apply formatting rules

    mask = mask.replace(token, function ($0) {
      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);
    }); // Inline literal values back into the formatted value

    return mask.replace(/\?\?/g, function () {
      return literals.shift();
    });
  };
  /**
   * Parse a date string into an object, changes - into /
   * @method parse
   * @param {string} dateStr Date string
   * @param {string} format Date parse format
   * @returns {Date|boolean}
   */


  fecha.parse = function (dateStr, format, i18nSettings) {
    var i18n = i18nSettings || fecha.i18n;

    if (typeof format !== 'string') {
      throw new Error('Invalid format in fecha.parse');
    }

    format = fecha.masks[format] || format; // Avoid regular expression denial of service, fail early for really long strings
    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS

    if (dateStr.length > 1000) {
      return false;
    }

    var isValid = true;
    var dateInfo = {};
    format.replace(token, function ($0) {
      if (parseFlags[$0]) {
        var info = parseFlags[$0];
        var index = dateStr.search(info[0]);

        if (!~index) {
          isValid = false;
        } else {
          dateStr.replace(info[0], function (result) {
            info[1](dateInfo, result, i18n);
            dateStr = dateStr.substr(index + result.length);
            return result;
          });
        }
      }

      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);
    });

    if (!isValid) {
      return false;
    }

    var today = new Date();

    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {
      dateInfo.hour = +dateInfo.hour + 12;
    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {
      dateInfo.hour = 0;
    }

    var date;

    if (dateInfo.timezoneOffset != null) {
      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;
      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));
    } else {
      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);
    }

    return date;
  };
  /* istanbul ignore next */


  if (typeof module !== 'undefined' && module.exports) {
    module.exports = fecha;
  } else if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
      return fecha;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var isType = __webpack_require__(16);

var isDate = function isDate(value) {
  return isType(value, 'Date');
};

module.exports = isDate;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var GuideBase = __webpack_require__(11);

var Arc =
/*#__PURE__*/
function (_GuideBase) {
  _inheritsLoose(Arc, _GuideBase);

  function Arc() {
    return _GuideBase.apply(this, arguments) || this;
  }

  var _proto = Arc.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'arc';
    /**
     * start point
     * @type {Array | Function}
     */

    this.start = [];
    /**
     * end point
     * @type {Array | Function}
     */

    this.end = [];
    /**
     * style configuration
     * @type {Object}
     */

    this.style = {
      stroke: '#999',
      lineWidth: 1
    };
  };

  _proto.render = function render(coord, container) {
    var self = this;
    var start = self.parsePoint(coord, self.start);
    var end = self.parsePoint(coord, self.end);

    if (!start || !end) {
      return;
    }

    var coordCenter = coord.center;
    var radius = Math.sqrt((start.x - coordCenter.x) * (start.x - coordCenter.x) + (start.y - coordCenter.y) * (start.y - coordCenter.y));
    var startAngle = Math.atan2(start.y - coordCenter.y, start.x - coordCenter.x);
    var endAngle = Math.atan2(end.y - coordCenter.y, end.x - coordCenter.x);
    var shape = container.addShape('arc', {
      className: 'guide-arc',
      attrs: Util.mix({
        x: coordCenter.x,
        y: coordCenter.y,
        r: radius,
        startAngle: startAngle,
        endAngle: endAngle
      }, self.style)
    });
    self.element = shape;
    return shape;
  };

  return Arc;
}(GuideBase);

GuideBase.Arc = Arc;
module.exports = Arc;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var GuideBase = __webpack_require__(11);

function getOffsetFromAlign(alignX, alignY, width, height) {
  var result = [];

  if (alignX === 'left' && alignY === 'top') {
    result[0] = 0;
    result[1] = 0;
  } else if (alignX === 'right' && alignY === 'top') {
    result[0] = -width;
    result[1] = 0;
  } else if (alignX === 'left' && alignY === 'bottom') {
    result[0] = 0;
    result[1] = Math.floor(-height);
  } else if (alignX === 'right' && alignY === 'bottom') {
    result[0] = Math.floor(-width);
    result[1] = Math.floor(-height);
  } else if (alignX === 'right' && alignY === 'middle') {
    result[0] = Math.floor(-width);
    result[1] = Math.floor(-height / 2);
  } else if (alignX === 'left' && alignY === 'middle') {
    result[0] = 0;
    result[1] = Math.floor(-height / 2);
  } else if (alignX === 'center' && alignY === 'bottom') {
    result[0] = Math.floor(-width / 2);
    result[1] = Math.floor(-height);
  } else if (alignX === 'center' && alignY === 'top') {
    result[0] = Math.floor(-width / 2);
    result[1] = 0;
  } else {
    result[0] = Math.floor(-width / 2);
    result[1] = Math.floor(-height / 2);
  }

  return result;
}

function modifyCSS(DOM, CSS) {
  for (var key in CSS) {
    if (CSS.hasOwnProperty(key)) {
      DOM.style[key] = CSS[key];
    }
  }

  return DOM;
}

function createDom(str) {
  var container = document.createElement('div');
  str = str.replace(/(^\s*)|(\s*$)/g, '');
  container.innerHTML = '' + str;
  return container.childNodes[0];
}

var Html =
/*#__PURE__*/
function (_GuideBase) {
  _inheritsLoose(Html, _GuideBase);

  function Html() {
    return _GuideBase.apply(this, arguments) || this;
  }

  var _proto = Html.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'html';
    /**
     * dom position
     * @type {Object | Array}
     */

    this.position = null;
    /**
      * alignment for horizontal direction，can be 'left','center','right'
      * @type {String}
      */

    this.alignX = 'center';
    /**
      * alignment for vertical direction，can be 'top', 'middle', 'bottom'
      * @type {String}
      */

    this.alignY = 'middle';
    /**
      * offset for horizontal direction
      * @type {Number}
      */

    this.offsetX = null;
    /**
      * offset for vertical direction
      * @type {Number}
      */

    this.offsetY = null;
    /**
    * the html string
    *@type {String | Function}
    */

    this.html = null;
  } // override paint
  ;

  _proto.render = function render(coord, container) {
    var self = this;
    var position = self.parsePoint(coord, self.position);

    if (!position) {
      return;
    }

    var myNode = createDom(self.html);
    myNode = modifyCSS(myNode, {
      position: 'absolute',
      top: Math.floor(position.y) + 'px',
      left: Math.floor(position.x) + 'px',
      visibility: 'hidden'
    });
    var canvasDom = container.get('canvas').get('el');
    var parentNode = canvasDom.parentNode;
    parentNode = modifyCSS(parentNode, {
      position: 'relative'
    });
    var wrapperNode = createDom('<div class="guideWapper" style="position: absolute;top: 0; left: 0;"></div>');
    parentNode.appendChild(wrapperNode);
    wrapperNode.appendChild(myNode);
    var canvasOffsetTop = canvasDom.offsetTop;
    var canvasOffsetLeft = canvasDom.offsetLeft;
    var alignX = self.alignX,
        alignY = self.alignY,
        offsetX = self.offsetX,
        offsetY = self.offsetY;
    var width = Util.getWidth(myNode);
    var height = Util.getHeight(myNode);
    var newOffset = getOffsetFromAlign(alignX, alignY, width, height);
    position.x = position.x + newOffset[0] + canvasOffsetLeft;
    position.y = position.y + newOffset[1] + canvasOffsetTop;

    if (offsetX) {
      position.x += offsetX;
    }

    if (offsetY) {
      position.y += offsetY;
    }

    modifyCSS(myNode, {
      top: Math.floor(position.y) + 'px',
      left: Math.floor(position.x) + 'px',
      visibility: 'visible'
    });
    self.element = wrapperNode;
  };

  _proto.remove = function remove() {
    var element = this.element;
    element && element.parentNode && element.parentNode.removeChild(element);
  };

  return Html;
}(GuideBase);

GuideBase.Html = Html;
module.exports = Html;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var GuideBase = __webpack_require__(11);

var Line =
/*#__PURE__*/
function (_GuideBase) {
  _inheritsLoose(Line, _GuideBase);

  function Line() {
    return _GuideBase.apply(this, arguments) || this;
  }

  var _proto = Line.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'line';
    this.start = [];
    this.end = [];
    this.style = {
      stroke: '#000',
      lineWidth: 1
    };
  };

  _proto.render = function render(coord, container) {
    var points = [];
    points[0] = this.parsePoint(coord, this.start);
    points[1] = this.parsePoint(coord, this.end);

    if (!points[0] || !points[1]) {
      return;
    }

    var shape = container.addShape('Line', {
      className: 'guide-line',
      attrs: Util.mix({
        x1: points[0].x,
        y1: points[0].y,
        x2: points[1].x,
        y2: points[1].y
      }, this.style)
    });
    this.element = shape;
    return shape;
  };

  return Line;
}(GuideBase);

GuideBase.Line = Line;
module.exports = Line;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var GuideBase = __webpack_require__(11);

var Rect =
/*#__PURE__*/
function (_GuideBase) {
  _inheritsLoose(Rect, _GuideBase);

  function Rect() {
    return _GuideBase.apply(this, arguments) || this;
  }

  var _proto = Rect.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'rect';
    this.start = [];
    this.end = [];
    this.style = {
      fill: '#CCD7EB',
      opacity: 0.4
    };
  };

  _proto.render = function render(coord, container) {
    var start = this.parsePoint(coord, this.start);
    var end = this.parsePoint(coord, this.end);

    if (!start || !end) {
      return;
    }

    var shape = container.addShape('rect', {
      className: 'guide-rect',
      attrs: Util.mix({
        x: Math.min(start.x, end.x),
        y: Math.min(start.y, end.y),
        width: Math.abs(end.x - start.x),
        height: Math.abs(start.y - end.y)
      }, this.style)
    });
    this.element = shape;
    return shape;
  };

  return Rect;
}(GuideBase);

GuideBase.Rect = Rect;
module.exports = Rect;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var GuideBase = __webpack_require__(11);

var Text =
/*#__PURE__*/
function (_GuideBase) {
  _inheritsLoose(Text, _GuideBase);

  function Text() {
    return _GuideBase.apply(this, arguments) || this;
  }

  var _proto = Text.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'text';
    /**
     * the position of text
     * @type {Function | Array}
     */

    this.position = null;
    /**
     * the display content
     * @type {String}
     */

    this.content = null;
    /**
     * style configuration for text
     * @type {Object}
     */

    this.style = {
      fill: '#000'
    };
    /**
     * offset of horizontal direction
     * @type {Number}
     */

    this.offsetX = 0;
    /**
     * offset of vertical direction
     * @type {Number}
     */

    this.offsetY = 0;
  };

  _proto.render = function render(coord, container) {
    var position = this.position;
    var point = this.parsePoint(coord, position);

    if (!point) {
      return;
    }

    var content = this.content,
        style = this.style,
        offsetX = this.offsetX,
        offsetY = this.offsetY;

    if (offsetX) {
      point.x += offsetX;
    }

    if (offsetY) {
      point.y += offsetY;
    }

    var shape = container.addShape('text', {
      className: 'guide-text',
      attrs: Util.mix({
        x: point.x,
        y: point.y,
        text: content
      }, style)
    });
    this.element = shape;
    return shape;
  };

  return Text;
}(GuideBase);

GuideBase.Text = Text;
module.exports = Text;

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Util = __webpack_require__(0);

var GuideBase = __webpack_require__(11);

var Tag =
/*#__PURE__*/
function (_GuideBase) {
  _inheritsLoose(Tag, _GuideBase);

  function Tag() {
    return _GuideBase.apply(this, arguments) || this;
  }

  var _proto = Tag.prototype;

  _proto._initDefaultCfg = function _initDefaultCfg() {
    this.type = 'tag';
    this.position = null;
    this.content = null;
    this.direct = 'tl';
    this.autoAdjust = true;
    this.offsetX = 0;
    this.offsetY = 0;
    this.side = 4;
    this.background = {
      padding: 5,
      radius: 2,
      fill: '#1890FF'
    };
    this.textStyle = {
      fontSize: 12,
      fill: '#fff',
      textAlign: 'center',
      textBaseline: 'middle'
    };
    this.withPoint = true;
    this.pointStyle = {
      fill: '#1890FF',
      r: 3,
      lineWidth: 1,
      stroke: '#fff'
    };
  };

  _proto._getDirect = function _getDirect(container, point, tagWidth, tagHeight) {
    var direct = this.direct;
    var side = this.side;
    var canvas = container.get('canvas');
    var clientWidth = canvas.get('width');
    var clientHeight = canvas.get('height');
    var x = point.x,
        y = point.y;
    var vertical = direct[0];
    var horizontal = direct[1]; // adjust for vertical direction

    if (vertical === 't' && y - side - tagHeight < 0) {
      vertical = 'b';
    } else if (vertical === 'b' && y + side + tagHeight > clientHeight) {
      vertical = 't';
    } // adjust for horizontal direction


    var diff = vertical === 'c' ? side : 0;

    if (horizontal === 'l' && x - diff - tagWidth < 0) {
      horizontal = 'r';
    } else if (horizontal === 'r' && x + diff + tagWidth > clientWidth) {
      horizontal = 'l';
    } else if (horizontal === 'c') {
      if (tagWidth / 2 + x + diff > clientWidth) {
        horizontal = 'l';
      } else if (x - tagWidth / 2 - diff < 0) {
        horizontal = 'r';
      }
    }

    direct = vertical + horizontal;
    return direct;
  };

  _proto.render = function render(coord, container) {
    var position = this.parsePoint(coord, this.position);

    if (!position) {
      return;
    }

    var content = this.content,
        background = this.background,
        textStyle = this.textStyle;
    var shapes = [];
    var wrapperContainer = container.addGroup({
      className: 'guide-tag'
    });

    if (this.withPoint) {
      var pointShape = wrapperContainer.addShape('Circle', {
        className: 'guide-tag-point',
        attrs: Util.mix({
          x: position.x,
          y: position.y
        }, this.pointStyle)
      });
      shapes.push(pointShape);
    }

    var tagContainer = wrapperContainer.addGroup(); // create a text shape

    var tagText = tagContainer.addShape('text', {
      className: 'guide-tag-text',
      zIndex: 1,
      attrs: Util.mix({
        x: 0,
        y: 0,
        text: content
      }, textStyle)
    });
    shapes.push(tagText); // create background box

    var textBBox = tagText.getBBox();
    var padding = Util.parsePadding(background.padding);
    var tagWidth = textBBox.width + padding[1] + padding[3];
    var tagHeight = textBBox.height + padding[0] + padding[2];
    var yMin = textBBox.minY - padding[0];
    var xMin = textBBox.minX - padding[3];
    var tagBg = tagContainer.addShape('rect', {
      className: 'guide-tag-bg',
      zIndex: -1,
      attrs: Util.mix({
        x: xMin,
        y: yMin,
        width: tagWidth,
        height: tagHeight
      }, background)
    });
    shapes.push(tagBg);
    var direct = this.autoAdjust ? this._getDirect(container, position, tagWidth, tagHeight) : this.direct;
    var side = this.side;
    var x = position.x + this.offsetX;
    var y = position.y + this.offsetY;
    var arrowPoints;
    var radius = Util.parsePadding(background.radius);

    if (direct === 'tl') {
      arrowPoints = [{
        x: tagWidth + xMin - side - 1,
        y: tagHeight + yMin - 1
      }, // 这个 1 是为了防止出现白边
      {
        x: tagWidth + xMin,
        y: tagHeight + yMin - 1
      }, {
        x: tagWidth + xMin,
        y: tagHeight + side + yMin
      }];
      radius[2] = 0;
      x = x - tagWidth;
      y = y - side - tagHeight;
    } else if (direct === 'cl') {
      arrowPoints = [{
        x: tagWidth + xMin - 1,
        y: (tagHeight - side) / 2 + yMin - 1
      }, {
        x: tagWidth + xMin - 1,
        y: (tagHeight + side) / 2 + yMin + 1
      }, {
        x: tagWidth + side + xMin,
        y: tagHeight / 2 + yMin
      }];
      x = x - tagWidth - side;
      y = y - tagHeight / 2;
    } else if (direct === 'bl') {
      arrowPoints = [{
        x: tagWidth + xMin,
        y: -side + yMin
      }, {
        x: tagWidth + xMin - side - 1,
        y: yMin + 1
      }, {
        x: tagWidth + xMin,
        y: yMin + 1
      }];
      radius[1] = 0;
      x = x - tagWidth;
      y = y + side;
    } else if (direct === 'bc') {
      arrowPoints = [{
        x: tagWidth / 2 + xMin,
        y: -side + yMin
      }, {
        x: (tagWidth - side) / 2 + xMin - 1,
        y: yMin + 1
      }, {
        x: (tagWidth + side) / 2 + xMin + 1,
        y: yMin + 1
      }];
      x = x - tagWidth / 2;
      y = y + side;
    } else if (direct === 'br') {
      arrowPoints = [{
        x: xMin,
        y: yMin - side
      }, {
        x: xMin,
        y: yMin + 1
      }, {
        x: xMin + side + 1,
        y: yMin + 1
      }];
      radius[0] = 0;
      y = y + side;
    } else if (direct === 'cr') {
      arrowPoints = [{
        x: xMin - side,
        y: tagHeight / 2 + yMin
      }, {
        x: xMin + 1,
        y: (tagHeight - side) / 2 + yMin - 1
      }, {
        x: xMin + 1,
        y: (tagHeight + side) / 2 + yMin + 1
      }];
      x = x + side;
      y = y - tagHeight / 2;
    } else if (direct === 'tr') {
      arrowPoints = [{
        x: xMin,
        y: tagHeight + side + yMin
      }, {
        x: xMin,
        y: tagHeight + yMin - 1
      }, {
        x: side + xMin + 1,
        y: tagHeight + yMin - 1
      }];
      radius[3] = 0;
      y = y - tagHeight - side;
    } else if (direct === 'tc') {
      arrowPoints = [{
        x: (tagWidth - side) / 2 + xMin - 1,
        y: tagHeight + yMin - 1
      }, {
        x: (tagWidth + side) / 2 + xMin + 1,
        y: tagHeight + yMin - 1
      }, {
        x: tagWidth / 2 + xMin,
        y: tagHeight + side + yMin
      }];
      x = x - tagWidth / 2;
      y = y - tagHeight - side;
    }

    var sideShape = tagContainer.addShape('Polygon', {
      className: 'guide-tag-side',
      zIndex: 0,
      attrs: {
        points: arrowPoints,
        fill: background.fill
      }
    });
    shapes.push(sideShape);
    tagBg.attr('radius', radius);
    tagContainer.moveTo(x - xMin, y - yMin);
    tagContainer.sort();
    this.element = wrapperContainer;
    return shapes;
  };

  return Tag;
}(GuideBase);

GuideBase.Tag = Tag;
module.exports = Tag;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Global = __webpack_require__(1);

var Tooltip = __webpack_require__(126);

var Helper = __webpack_require__(28); // Register the default configuration for Tooltip


Global.tooltip = Util.deepMix({
  triggerOn: ['touchstart', 'touchmove'],
  // triggerOff: 'touchend',
  alwaysShow: false,
  showTitle: false,
  showCrosshairs: false,
  crosshairsStyle: {
    stroke: 'rgba(0, 0, 0, 0.25)',
    lineWidth: 1
  },
  showTooltipMarker: true,
  background: {
    radius: 1,
    fill: 'rgba(0, 0, 0, 0.65)',
    padding: [3, 5]
  },
  titleStyle: {
    fontSize: 12,
    fill: '#fff',
    textAlign: 'start',
    textBaseline: 'top'
  },
  nameStyle: {
    fontSize: 12,
    fill: 'rgba(255, 255, 255, 0.65)',
    textAlign: 'start',
    textBaseline: 'middle'
  },
  valueStyle: {
    fontSize: 12,
    fill: '#fff',
    textAlign: 'start',
    textBaseline: 'middle'
  },
  showItemMarker: true,
  itemMarkerStyle: {
    radius: 3,
    symbol: 'circle',
    lineWidth: 1,
    stroke: '#fff'
  },
  layout: 'horizontal',
  snap: false
}, Global.tooltip || {});

function _getTooltipValueScale(geom) {
  var colorAttr = geom.getAttr('color');

  if (colorAttr) {
    var colorScale = colorAttr.getScale(colorAttr.type);

    if (colorScale.isLinear) {
      return colorScale;
    }
  }

  var xScale = geom.getXScale();
  var yScale = geom.getYScale();

  if (yScale) {
    return yScale;
  }

  return xScale;
}

function getTooltipName(geom, origin) {
  var name;
  var nameScale;

  var groupScales = geom._getGroupScales();

  if (groupScales.length) {
    Util.each(groupScales, function (scale) {
      nameScale = scale;
      return false;
    });
  }

  if (nameScale) {
    var field = nameScale.field;
    name = nameScale.getText(origin[field]);
  } else {
    var valueScale = _getTooltipValueScale(geom);

    name = valueScale.alias || valueScale.field;
  }

  return name;
}

function getTooltipValue(geom, origin) {
  var scale = _getTooltipValueScale(geom);

  return scale.getText(origin[scale.field]);
}

function getTooltipTitle(geom, origin) {
  var position = geom.getAttr('position');
  var field = position.getFields()[0];
  var scale = geom.get('scales')[field];
  return scale.getText(origin[scale.field]);
}

function _indexOfArray(items, item) {
  var rst = -1;
  Util.each(items, function (sub, index) {
    if (sub.title === item.title && sub.name === item.name && sub.value === item.value && sub.color === item.color) {
      rst = index;
      return false;
    }
  });
  return rst;
}

function _uniqItems(items) {
  var tmp = [];
  Util.each(items, function (item) {
    var index = _indexOfArray(tmp, item);

    if (index === -1) {
      tmp.push(item);
    } else {
      tmp[index] = item;
    }
  });
  return tmp;
}

function isEqual(arr1, arr2) {
  return JSON.stringify(arr1) === JSON.stringify(arr2);
}

var TooltipController =
/*#__PURE__*/
function () {
  function TooltipController(cfg) {
    this.enable = true;
    this.cfg = {};
    this.tooltip = null;
    this.chart = null;
    this.timeStamp = 0;
    Util.mix(this, cfg);
    var chart = this.chart;
    this.canvasDom = chart.get('canvas').get('el');
  }

  var _proto = TooltipController.prototype;

  _proto._setCrosshairsCfg = function _setCrosshairsCfg() {
    var self = this;
    var chart = self.chart;
    var defaultCfg = Util.mix({}, Global.tooltip);
    var geoms = chart.get('geoms');
    var shapes = [];
    Util.each(geoms, function (geom) {
      var type = geom.get('type');

      if (shapes.indexOf(type) === -1) {
        shapes.push(type);
      }
    });
    var coordType = chart.get('coord').type;

    if (geoms.length && (coordType === 'cartesian' || coordType === 'rect')) {
      if (shapes.length === 1 && ['line', 'area', 'path', 'point'].indexOf(shapes[0]) !== -1) {
        Util.mix(defaultCfg, {
          showCrosshairs: true
        });
      }
    }

    return defaultCfg;
  };

  _proto._getMaxLength = function _getMaxLength(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    var _cfg = cfg,
        layout = _cfg.layout,
        plotRange = _cfg.plotRange;
    return layout === 'horizontal' ? plotRange.br.x - plotRange.bl.x : plotRange.bl.y - plotRange.tr.y;
  };

  _proto.render = function render() {
    var self = this;

    if (self.tooltip) {
      return;
    }

    var chart = self.chart;
    var canvas = chart.get('canvas');
    var frontPlot = chart.get('frontPlot').addGroup({
      className: 'tooltipContainer',
      zIndex: 10
    });
    var backPlot = chart.get('backPlot').addGroup({
      className: 'tooltipContainer'
    });
    var plotRange = chart.get('plotRange');
    var coord = chart.get('coord');

    var defaultCfg = self._setCrosshairsCfg();

    var cfg = self.cfg; // 通过 chart.tooltip() 接口传入的 tooltip 配置项

    var tooltipCfg = Util.deepMix({
      plotRange: plotRange,
      frontPlot: frontPlot,
      backPlot: backPlot,
      canvas: canvas,
      fixed: coord.transposed || coord.isPolar
    }, defaultCfg, cfg); // 创建 tooltip 实例需要的配置，不应该修改 this.cfg，即用户传入的配置

    tooltipCfg.maxLength = self._getMaxLength(tooltipCfg);
    this._tooltipCfg = tooltipCfg;
    var tooltip = new Tooltip(tooltipCfg);
    self.tooltip = tooltip;
    self.bindEvents();
  };

  _proto.clear = function clear() {
    var tooltip = this.tooltip;
    tooltip && tooltip.destroy();
    this.tooltip = null;
    this.prePoint = null;
    this._lastActive = null;
    this.unBindEvents();
  };

  _proto._getTooltipMarkerStyle = function _getTooltipMarkerStyle(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    var _cfg2 = cfg,
        type = _cfg2.type,
        items = _cfg2.items;
    var tooltipCfg = this._tooltipCfg;

    if (type === 'rect') {
      var x;
      var y;
      var width;
      var height;
      var chart = this.chart;

      var _chart$get = chart.get('plotRange'),
          tl = _chart$get.tl,
          br = _chart$get.br;

      var coord = chart.get('coord');
      var firstItem = items[0];
      var lastItem = items[items.length - 1];
      var intervalWidth = firstItem.width;

      if (coord.transposed) {
        x = tl.x;
        y = lastItem.y - intervalWidth * 0.75;
        width = br.x - tl.x;
        height = firstItem.y - lastItem.y + 1.5 * intervalWidth;
      } else {
        x = firstItem.x - intervalWidth * 0.75;
        y = tl.y;
        width = lastItem.x - firstItem.x + 1.5 * intervalWidth;
        height = br.y - tl.y;
      }

      cfg.style = Util.mix({
        x: x,
        y: y,
        width: width,
        height: height,
        fill: '#CCD6EC',
        opacity: 0.3
      }, tooltipCfg.tooltipMarkerStyle);
    } else {
      cfg.style = Util.mix({
        radius: 4,
        fill: '#fff',
        lineWidth: 2
      }, tooltipCfg.tooltipMarkerStyle);
    }

    return cfg;
  };

  _proto._setTooltip = function _setTooltip(point, items, tooltipMarkerCfg) {
    if (tooltipMarkerCfg === void 0) {
      tooltipMarkerCfg = {};
    }

    var lastActive = this._lastActive;
    var tooltip = this.tooltip;
    var cfg = this._tooltipCfg;
    items = _uniqItems(items);
    var chart = this.chart;
    var coord = chart.get('coord');
    var yScale = chart.getYScales()[0];
    var snap = cfg.snap;

    if (snap === false && yScale.isLinear) {
      var invertPoint = coord.invertPoint(point);
      var plot = chart.get('plotRange');
      var tip;
      var pos;

      if (Helper.isPointInPlot(point, plot)) {
        if (coord.transposed) {
          tip = yScale.invert(invertPoint.x);
          pos = point.x;
          tooltip.setXTipContent(tip);
          tooltip.setXTipPosition(pos);
          tooltip.setYCrosshairPosition(pos);
        } else {
          tip = yScale.invert(invertPoint.y);
          pos = point.y;
          tooltip.setYTipContent(tip);
          tooltip.setYTipPosition(pos);
          tooltip.setXCrosshairPosition(pos);
        }
      }
    }

    if (cfg.onShow) {
      cfg.onShow({
        x: point.x,
        y: point.y,
        tooltip: tooltip,
        items: items,
        tooltipMarkerCfg: tooltipMarkerCfg
      });
    }

    if (isEqual(lastActive, items)) {
      if (snap === false && (Util.directionEnabled(cfg.crosshairsType, 'y') || cfg.showYTip)) {
        var canvas = this.chart.get('canvas');
        canvas.draw();
      }

      return;
    }

    this._lastActive = items;
    var onChange = cfg.onChange;

    if (onChange) {
      onChange({
        x: point.x,
        y: point.y,
        tooltip: tooltip,
        items: items,
        tooltipMarkerCfg: tooltipMarkerCfg
      });
    }

    var first = items[0];
    var title = first.title || first.name;
    var xTipPosX = first.x;

    if (items.length > 1) {
      xTipPosX = (items[0].x + items[items.length - 1].x) / 2;
    }

    tooltip.setContent(title, items, coord.transposed);
    tooltip.setPosition(items, point);

    if (coord.transposed) {
      var yTipPosY = first.y;

      if (items.length > 1) {
        yTipPosY = (items[0].y + items[items.length - 1].y) / 2;
      }

      tooltip.setYTipContent(title);
      tooltip.setYTipPosition(yTipPosY);
      tooltip.setXCrosshairPosition(yTipPosY);

      if (snap) {
        tooltip.setXTipContent(first.value);
        tooltip.setXTipPosition(xTipPosX);
        tooltip.setYCrosshairPosition(xTipPosX);
      }
    } else {
      tooltip.setXTipContent(title);
      tooltip.setXTipPosition(xTipPosX);
      tooltip.setYCrosshairPosition(xTipPosX);

      if (snap) {
        tooltip.setYTipContent(first.value);
        tooltip.setYTipPosition(first.y);
        tooltip.setXCrosshairPosition(first.y);
      }
    }

    var markerItems = tooltipMarkerCfg.items;

    if (cfg.showTooltipMarker && markerItems.length) {
      tooltipMarkerCfg = this._getTooltipMarkerStyle(tooltipMarkerCfg);
      tooltip.setMarkers(tooltipMarkerCfg);
    } else {
      tooltip.clearMarkers();
    }

    tooltip.show();
  };

  _proto.showTooltip = function showTooltip(point) {
    var self = this;
    var chart = self.chart;
    var tooltipMarkerType;
    var tooltipMarkerItems = [];
    var items = [];
    var cfg = self._tooltipCfg;
    var marker;

    if (cfg.showItemMarker) {
      marker = cfg.itemMarkerStyle;
    }

    var geoms = chart.get('geoms');
    var coord = chart.get('coord');
    Util.each(geoms, function (geom) {
      if (geom.get('visible')) {
        var type = geom.get('type');
        var records = geom.getSnapRecords(point);
        Util.each(records, function (record) {
          if (record.x && record.y) {
            var x = record.x,
                y = record.y,
                _origin = record._origin,
                color = record.color;
            var tooltipItem = {
              x: x,
              y: Util.isArray(y) ? y[1] : y,
              color: color || Global.defaultColor,
              origin: _origin,
              name: getTooltipName(geom, _origin),
              value: getTooltipValue(geom, _origin),
              title: getTooltipTitle(geom, _origin)
            };

            if (marker) {
              tooltipItem.marker = Util.mix({
                fill: color || Global.defaultColor
              }, marker);
            }

            items.push(tooltipItem);

            if (['line', 'area', 'path'].indexOf(type) !== -1) {
              tooltipMarkerType = 'circle';
              tooltipMarkerItems.push(tooltipItem);
            } else if (type === 'interval' && (coord.type === 'cartesian' || coord.type === 'rect')) {
              tooltipMarkerType = 'rect';
              tooltipItem.width = geom.getSize(record._origin);
              tooltipMarkerItems.push(tooltipItem);
            }
          }
        });
      }
    });

    if (items.length) {
      var tooltipMarkerCfg = {
        items: tooltipMarkerItems,
        type: tooltipMarkerType
      };

      self._setTooltip(point, items, tooltipMarkerCfg);
    } else {
      self.hideTooltip();
    }
  };

  _proto.hideTooltip = function hideTooltip() {
    var cfg = this._tooltipCfg;
    this._lastActive = null;
    var tooltip = this.tooltip;

    if (tooltip) {
      tooltip.hide();

      if (cfg.onHide) {
        cfg.onHide({
          tooltip: tooltip
        });
      }

      var canvas = this.chart.get('canvas');
      canvas.draw();
    }
  };

  _proto.handleShowEvent = function handleShowEvent(ev) {
    var chart = this.chart;
    if (!this.enable || chart.get('_closeTooltip')) return;
    var plot = chart.get('plotRange');
    var point = Util.createEvent(ev, chart);

    if (!Helper.isPointInPlot(point, plot) && !this._tooltipCfg.alwaysShow) {
      // not in chart plot
      this.hideTooltip();
      return;
    }

    var lastTimeStamp = this.timeStamp;
    var timeStamp = +new Date();

    if (timeStamp - lastTimeStamp > 16) {
      this.showTooltip(point);
      this.timeStamp = timeStamp;
    }
  };

  _proto.handleHideEvent = function handleHideEvent() {
    var chart = this.chart;
    if (!this.enable || chart.get('_closeTooltip')) return;
    this.hideTooltip();
  };

  _proto.handleDocEvent = function handleDocEvent(ev) {
    var chart = this.chart;
    if (!this.enable || chart.get('_closeTooltip')) return;
    var canvasDom = this.canvasDom;

    if (ev.target !== canvasDom) {
      this.hideTooltip();
    }
  };

  _proto._handleEvent = function _handleEvent(methodName, method, action) {
    var canvasDom = this.canvasDom;
    Util.each([].concat(methodName), function (aMethod) {
      if (action === 'bind') {
        Util.addEventListener(canvasDom, aMethod, method);
      } else {
        Util.removeEventListener(canvasDom, aMethod, method);
      }
    });
  };

  _proto.bindEvents = function bindEvents() {
    var cfg = this._tooltipCfg;
    var triggerOn = cfg.triggerOn,
        triggerOff = cfg.triggerOff,
        alwaysShow = cfg.alwaysShow;
    var showMethod = Util.wrapBehavior(this, 'handleShowEvent');
    var hideMethod = Util.wrapBehavior(this, 'handleHideEvent');
    triggerOn && this._handleEvent(triggerOn, showMethod, 'bind');
    triggerOff && this._handleEvent(triggerOff, hideMethod, 'bind'); // TODO: 当用户点击 canvas 外的事件时 tooltip 消失

    if (!alwaysShow) {
      var docMethod = Util.wrapBehavior(this, 'handleDocEvent');
      Util.isBrowser && Util.addEventListener(document, 'touchstart', docMethod);
    }
  };

  _proto.unBindEvents = function unBindEvents() {
    var cfg = this._tooltipCfg;
    var triggerOn = cfg.triggerOn,
        triggerOff = cfg.triggerOff,
        alwaysShow = cfg.alwaysShow;
    var showMethod = Util.getWrapBehavior(this, 'handleShowEvent');
    var hideMethod = Util.getWrapBehavior(this, 'handleHideEvent');
    triggerOn && this._handleEvent(triggerOn, showMethod, 'unBind');
    triggerOff && this._handleEvent(triggerOff, hideMethod, 'unBind');

    if (!alwaysShow) {
      var docMethod = Util.getWrapBehavior(this, 'handleDocEvent');
      Util.isBrowser && Util.removeEventListener(document, 'touchstart', docMethod);
    }
  };

  return TooltipController;
}();

module.exports = {
  init: function init(chart) {
    var tooltipController = new TooltipController({
      chart: chart
    });
    chart.set('tooltipController', tooltipController);

    chart.tooltip = function (enable, cfg) {
      if (Util.isObject(enable)) {
        cfg = enable;
        enable = true;
      }

      tooltipController.enable = enable;

      if (cfg) {
        tooltipController.cfg = cfg;
      }

      return this;
    };
  },
  afterGeomDraw: function afterGeomDraw(chart) {
    var tooltipController = chart.get('tooltipController');
    tooltipController.render();

    chart.showTooltip = function (point) {
      tooltipController.showTooltip(point);
      return this;
    };

    chart.hideTooltip = function () {
      tooltipController.hideTooltip();
      return this;
    };
  },
  clearInner: function clearInner(chart) {
    var tooltipController = chart.get('tooltipController');
    tooltipController.clear();
  }
};

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Marker = __webpack_require__(100);

var Container = __webpack_require__(101);

var TextBox = __webpack_require__(127);

var GAP = 4;
/**
 * TODOList：
 * 1. 移除 fixed 参数
 */

var Tooltip =
/*#__PURE__*/
function () {
  var _proto = Tooltip.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    return {
      /**
       * wether show the crosshairs
       * @type {Object}
       */
      showCrosshairs: false,

      /**
       * the style for crosshairs
       * @type {Object}
       */
      crosshairsStyle: {
        stroke: 'rgba(0, 0, 0, 0.25)',
        lineWidth: 1
      },

      /**
       * the type of crosshairs, optional value is 'x', 'y' or 'xy', default is 'y'
       */
      crosshairsType: 'y',

      /**
       * show or hide the x axis tip
       */
      showXTip: false,

      /**
       * show or hide the y axis tip
       */
      showYTip: false,
      xTip: null,
      xTipBackground: {
        radius: 1,
        fill: 'rgba(0, 0, 0, 0.65)',
        padding: [3, 5]
      },
      yTip: null,
      yTipBackground: {
        radius: 1,
        fill: 'rgba(0, 0, 0, 0.65)',
        padding: [3, 5]
      },

      /**
       * the style for tooltip container's background
       * @type {Object}
       */
      background: null,

      /**
       * layout, can be horizontal or vertical
       * @type {String}
       */
      layout: 'horizontal',
      offsetX: 0,
      offsetY: 0
    };
  };

  function Tooltip(cfg) {
    Util.deepMix(this, this.getDefaultCfg(), cfg);
    var frontPlot = this.frontPlot,
        custom = this.custom;

    if (!custom) {
      // custom means user do customize
      var container = new Container(Util.mix({
        parent: frontPlot,
        zIndex: 3
      }, cfg));
      this.container = container;
      var fixed = this.fixed,
          background = this.background;

      if (!fixed) {
        this.tooltipArrow = frontPlot.addShape('Polygon', {
          className: 'tooltip-arrow',
          visible: false,
          zIndex: 2,
          attrs: Util.mix({
            points: []
          }, background)
        });
      }
    }

    if (this.showXTip) {
      var xTipBackground = this.xTipBackground;
      var xTipBox = new TextBox({
        className: 'xTip',
        background: xTipBackground,
        visible: false
      });
      frontPlot.add(xTipBox.container);
      this.xTipBox = xTipBox;
    }

    if (this.showYTip) {
      var yTipBackground = this.yTipBackground;
      var yTipBox = new TextBox({
        className: 'yTip',
        background: yTipBackground,
        visible: false
      });
      frontPlot.add(yTipBox.container);
      this.yTipBox = yTipBox;
    }

    if (this.showCrosshairs) {
      this._renderCrosshairs();
    }

    frontPlot.sort();
  }

  _proto.setContent = function setContent(title, items) {
    this.title = title;
    this.items = items;

    if (!this.custom) {
      var container = this.container;
      container.setTitle(title);
      container.setItems(items);
    }
  };

  _proto.setYTipContent = function setYTipContent(val) {
    var yTip = this.yTip;

    if (Util.isFunction(yTip)) {
      val = yTip(val);
    } else {
      val = Util.mix({
        text: val
      }, yTip);
    }

    this.yTipBox && this.yTipBox.updateContent(val);
  };

  _proto.setYTipPosition = function setYTipPosition(pos) {
    var plotRange = this.plotRange;
    var crosshairsShapeX = this.crosshairsShapeX;

    if (this.showYTip) {
      var yTipBox = this.yTipBox;
      var yTipHeight = yTipBox.getHeight();
      var yTipWidth = yTipBox.getWidth();
      var posX = plotRange.tl.x - yTipWidth;
      var posY = pos - yTipHeight / 2;

      if (posY <= plotRange.tl.y) {
        posY = plotRange.tl.y;
      }

      if (posY + yTipHeight >= plotRange.br.y) {
        posY = plotRange.br.y - yTipHeight;
      }

      if (posX < 0) {
        posX = plotRange.tl.x;
        crosshairsShapeX && crosshairsShapeX.attr('x1', plotRange.tl.x + yTipWidth);
      }

      yTipBox.updatePosition(posX, posY);
    }
  };

  _proto.setXTipContent = function setXTipContent(val) {
    var xTip = this.xTip;

    if (Util.isFunction(xTip)) {
      val = xTip(val);
    } else {
      val = Util.mix({
        text: val
      }, xTip);
    }

    this.xTipBox && this.xTipBox.updateContent(val);
  };

  _proto.setXTipPosition = function setXTipPosition(pos) {
    var showXTip = this.showXTip,
        canvas = this.canvas,
        plotRange = this.plotRange,
        xTipBox = this.xTipBox,
        crosshairsShapeY = this.crosshairsShapeY;

    if (showXTip) {
      // const el = canvas.get('el');
      // const canvasHeight = Util.getHeight(el);
      var canvasHeight = canvas.get('height');
      var xTipWidth = xTipBox.getWidth();
      var xTipHeight = xTipBox.getHeight();
      var posX = pos - xTipWidth / 2;
      var posY = plotRange.br.y;

      if (posX <= plotRange.tl.x) {
        posX = plotRange.tl.x;
      }

      if (posX + xTipWidth >= plotRange.tr.x) {
        posX = plotRange.tr.x - xTipWidth;
      }

      if (canvasHeight - posY < xTipHeight) {
        posY -= xTipHeight;
      }

      xTipBox.updatePosition(posX, posY);
      crosshairsShapeY && crosshairsShapeY.attr('y1', posY);
    }
  };

  _proto.setXCrosshairPosition = function setXCrosshairPosition(pos) {
    this.crosshairsShapeX && this.crosshairsShapeX.moveTo(0, pos);
  };

  _proto.setYCrosshairPosition = function setYCrosshairPosition(pos) {
    this.crosshairsShapeY && this.crosshairsShapeY.moveTo(pos, 0);
  };

  _proto.setPosition = function setPosition(items) {
    var container = this.container,
        plotRange = this.plotRange,
        offsetX = this.offsetX,
        offsetY = this.offsetY,
        fixed = this.fixed,
        tooltipArrow = this.tooltipArrow;

    if (!container) {
      return;
    }

    var containerBBox = container.container.getBBox();
    var minX = containerBBox.minX,
        minY = containerBBox.minY,
        width = containerBBox.width,
        height = containerBBox.height;
    var tl = plotRange.tl,
        tr = plotRange.tr;
    var posX = 0;
    var posY = tl.y - height - GAP + offsetY;

    if (fixed) {
      var x = (tl.x + tr.x) / 2;
      posX = x - width / 2 + offsetX;
    } else {
      var _x;

      if (items.length > 1) {
        _x = (items[0].x + items[items.length - 1].x) / 2;
      } else {
        _x = items[0].x;
      }

      posX = _x - width / 2 + offsetX;

      if (posX < tl.x) {
        posX = tl.x;
      }

      if (posX + width > tr.x) {
        posX = tr.x - width;
      }

      if (tooltipArrow) {
        tooltipArrow.attr('points', [{
          x: _x - 3,
          y: tl.y - GAP + offsetY
        }, {
          x: _x + 3,
          y: tl.y - GAP + offsetY
        }, {
          x: _x,
          y: tl.y + offsetY
        }]);
        var backShape = container.backShape;
        var radius = Util.parsePadding(backShape.attr('radius'));

        if (_x === tl.x) {
          radius[3] = 0;
          tooltipArrow.attr('points', [{
            x: tl.x,
            y: tl.y + offsetY
          }, {
            x: tl.x,
            y: tl.y - GAP + offsetY
          }, {
            x: tl.x + GAP,
            y: tl.y - GAP + offsetY
          }]);
        } else if (_x === tr.x) {
          radius[2] = 0;
          tooltipArrow.attr('points', [{
            x: tr.x,
            y: tl.y + offsetY
          }, {
            x: tr.x - GAP,
            y: tl.y - GAP + offsetY
          }, {
            x: tr.x,
            y: tl.y - GAP + offsetY
          }]);
        }

        backShape.attr('radius', radius);
      }
    }

    container.moveTo(posX - minX, posY - minY);
  };

  _proto.setMarkers = function setMarkers(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    var self = this;
    var _cfg = cfg,
        items = _cfg.items,
        style = _cfg.style,
        type = _cfg.type;

    var markerGroup = self._getMarkerGroup(type);

    if (type === 'circle') {
      for (var i = 0, length = items.length; i < length; i++) {
        var item = items[i];
        var marker = new Marker({
          className: 'tooltip-circle-marker',
          attrs: Util.mix({
            x: item.x,
            y: item.y,
            stroke: item.color
          }, style)
        });
        markerGroup.add(marker);
      }
    } else {
      markerGroup.addShape('rect', {
        className: 'tooltip-rect-marker',
        attrs: style
      });
    }
  };

  _proto.clearMarkers = function clearMarkers() {
    var markerGroup = this.markerGroup;
    markerGroup && markerGroup.clear();
  };

  _proto.show = function show() {
    var crosshairsShapeX = this.crosshairsShapeX;
    var crosshairsShapeY = this.crosshairsShapeY;
    var markerGroup = this.markerGroup;
    var container = this.container;
    var tooltipArrow = this.tooltipArrow;
    var xTipBox = this.xTipBox;
    var yTipBox = this.yTipBox;
    var canvas = this.canvas;
    crosshairsShapeX && crosshairsShapeX.show();
    crosshairsShapeY && crosshairsShapeY.show();
    markerGroup && markerGroup.show();
    container && container.show();
    tooltipArrow && tooltipArrow.show();
    xTipBox && xTipBox.show();
    yTipBox && yTipBox.show();
    canvas.draw();
  };

  _proto.hide = function hide() {
    var crosshairsShapeX = this.crosshairsShapeX;
    var crosshairsShapeY = this.crosshairsShapeY;
    var markerGroup = this.markerGroup;
    var container = this.container;
    var tooltipArrow = this.tooltipArrow;
    var xTipBox = this.xTipBox;
    var yTipBox = this.yTipBox;
    crosshairsShapeX && crosshairsShapeX.hide();
    crosshairsShapeY && crosshairsShapeY.hide();
    markerGroup && markerGroup.hide();
    container && container.hide();
    tooltipArrow && tooltipArrow.hide();
    xTipBox && xTipBox.hide();
    yTipBox && yTipBox.hide();
  };

  _proto.destroy = function destroy() {
    var crosshairsShapeX = this.crosshairsShapeX;
    var crosshairsShapeY = this.crosshairsShapeY;
    var markerGroup = this.markerGroup;
    var container = this.container;
    var tooltipArrow = this.tooltipArrow;
    var xTipBox = this.xTipBox;
    var yTipBox = this.yTipBox;
    crosshairsShapeX && crosshairsShapeX.remove(true);
    crosshairsShapeY && crosshairsShapeY.remove(true);
    markerGroup && markerGroup.remove(true);
    tooltipArrow && tooltipArrow.remove(true);
    container && container.clear();
    xTipBox && xTipBox.clear();
    yTipBox && yTipBox.clear();
    this.destroyed = true;
  };

  _proto._getMarkerGroup = function _getMarkerGroup(type) {
    var markerGroup = this.markerGroup;

    if (!markerGroup) {
      if (type === 'circle') {
        markerGroup = this.frontPlot.addGroup({
          zIndex: 1
        });
        this.frontPlot.sort();
      } else {
        markerGroup = this.backPlot.addGroup();
      }

      this.markerGroup = markerGroup;
    } else {
      markerGroup.clear();
    }

    return markerGroup;
  };

  _proto._renderCrosshairs = function _renderCrosshairs() {
    var crosshairsType = this.crosshairsType,
        crosshairsStyle = this.crosshairsStyle,
        frontPlot = this.frontPlot,
        plotRange = this.plotRange;
    var tl = plotRange.tl,
        br = plotRange.br;

    if (Util.directionEnabled(crosshairsType, 'x')) {
      this.crosshairsShapeX = frontPlot.addShape('Line', {
        className: 'tooltip-crosshairs-x',
        zIndex: 0,
        visible: false,
        attrs: Util.mix({
          x1: tl.x,
          y1: 0,
          x2: br.x,
          y2: 0
        }, crosshairsStyle)
      });
    }

    if (Util.directionEnabled(crosshairsType, 'y')) {
      this.crosshairsShapeY = frontPlot.addShape('Line', {
        className: 'tooltip-crosshairs-y',
        zIndex: 0,
        visible: false,
        attrs: Util.mix({
          x1: 0,
          y1: br.y,
          x2: 0,
          y2: tl.y
        }, crosshairsStyle)
      });
    }
  };

  return Tooltip;
}();

module.exports = Tooltip;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var _require = __webpack_require__(5),
    Group = _require.Group;

var TextBox =
/*#__PURE__*/
function () {
  var _proto = TextBox.prototype;

  _proto.getDefaultCfg = function getDefaultCfg() {
    return {
      x: 0,
      y: 0,
      content: '',
      textStyle: {
        fontSize: 12,
        fill: '#fff',
        textAlign: 'center',
        textBaseline: 'middle'
      },
      background: {
        radius: 1,
        fill: 'rgba(0, 0, 0, 0.65)',
        padding: [3, 5]
      },
      width: 0,
      height: 0,
      className: ''
    };
  };

  function TextBox(cfg) {
    Util.deepMix(this, this.getDefaultCfg(), cfg);

    this._init();

    var content = this.content,
        x = this.x,
        y = this.y;

    if (!Util.isNil(content)) {
      this.updateContent(content);
    }

    this.updatePosition(x, y);
  }

  _proto._init = function _init() {
    var content = this.content,
        textStyle = this.textStyle,
        background = this.background,
        className = this.className,
        visible = this.visible;
    var container = new Group({
      className: className,
      zIndex: 0,
      visible: visible
    });
    var text = container.addShape('Text', {
      className: className + '-text',
      zIndex: 1,
      attrs: Util.mix({
        text: content,
        x: 0,
        y: 0
      }, textStyle)
    });
    var backgroundShape = container.addShape('Rect', {
      className: className + '-bg',
      zIndex: -1,
      attrs: Util.mix({
        x: 0,
        y: 0,
        width: 0,
        height: 0
      }, background)
    });
    container.sort();
    this.container = container;
    this.textShape = text;
    this.backgroundShape = backgroundShape;
  };

  _proto._getBBox = function _getBBox() {
    var textShape = this.textShape;
    var background = this.background;
    var textBBox = textShape.getBBox();
    var padding = Util.parsePadding(background.padding);
    var width = textBBox.width + padding[1] + padding[3];
    var height = textBBox.height + padding[0] + padding[2];
    var x = textBBox.minX - padding[3];
    var y = textBBox.minY - padding[0];
    return {
      x: x,
      y: y,
      width: width,
      height: height
    };
  };

  _proto.updateContent = function updateContent(text) {
    var textShape = this.textShape,
        backgroundShape = this.backgroundShape;

    if (!Util.isNil(text)) {
      if (!Util.isObject(text)) {
        text = {
          text: text
        };
      }

      textShape.attr(text); // update box shape

      var _this$_getBBox = this._getBBox(),
          x = _this$_getBBox.x,
          y = _this$_getBBox.y,
          tipWidth = _this$_getBBox.width,
          tipHeight = _this$_getBBox.height;

      var width = this.width || tipWidth;
      var height = this.height || tipHeight;
      backgroundShape.attr({
        x: x,
        y: y,
        width: width,
        height: height
      });
      this._width = width;
      this._height = height;
      this.content = text.text;
    }
  };

  _proto.updatePosition = function updatePosition(x, y) {
    var container = this.container;

    var _this$_getBBox2 = this._getBBox(),
        xMin = _this$_getBBox2.x,
        yMin = _this$_getBBox2.y;

    container.moveTo(x - xMin, y - yMin);
    this.x = x - xMin;
    this.y = y - yMin;
  };

  _proto.getWidth = function getWidth() {
    return this._width;
  };

  _proto.getHeight = function getHeight() {
    return this._height;
  };

  _proto.show = function show() {
    this.container.show();
  };

  _proto.hide = function hide() {
    this.container.hide();
  };

  _proto.clear = function clear() {
    var container = this.container;
    container.clear();
    container.remove(true);
    this.container = null;
    this.textShape = null;
    this.backgroundShape = null;
  };

  return TextBox;
}();

module.exports = TextBox;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var Guide = __webpack_require__(11);

var Global = __webpack_require__(1); // register the default configuration for Guide


Global.guide = Util.deepMix({
  line: {
    style: {
      stroke: '#a3a3a3',
      lineWidth: 1
    },
    top: true
  },
  text: {
    style: {
      fill: '#787878',
      textAlign: 'center',
      textBaseline: 'middle'
    },
    offsetX: 0,
    offsetY: 0,
    top: true
  },
  rect: {
    style: {
      fill: '#fafafa'
    },
    top: false
  },
  arc: {
    style: {
      stroke: '#a3a3a3'
    },
    top: true
  },
  html: {
    offsetX: 0,
    offsetY: 0,
    alignX: 'center',
    alignY: 'middle'
  },
  tag: {
    top: true,
    offsetX: 0,
    offsetY: 0,
    side: 4,
    background: {
      padding: 5,
      radius: 2,
      fill: '#1890FF'
    },
    textStyle: {
      fontSize: 12,
      fill: '#fff',
      textAlign: 'center',
      textBaseline: 'middle'
    }
  },
  point: {
    top: true,
    offsetX: 0,
    offsetY: 0,
    style: {
      fill: '#fff',
      r: 3,
      lineWidth: 2,
      stroke: '#1890ff'
    }
  }
}, Global.guide || {});

var GuideController =
/*#__PURE__*/
function () {
  function GuideController(cfg) {
    this.guides = [];
    this.xScale = null;
    this.yScales = null;
    this.guideShapes = [];
    Util.mix(this, cfg);
  }

  var _proto = GuideController.prototype;

  _proto._toString = function _toString(position) {
    if (Util.isFunction(position)) {
      position = position(this.xScale, this.yScales);
    }

    position = position.toString();
    return position;
  };

  _proto._getId = function _getId(shape, guide) {
    var id = guide.id;

    if (!id) {
      var type = guide.type;

      if (type === 'arc' || type === 'line' || type === 'rect') {
        id = this._toString(guide.start) + '-' + this._toString(guide.end);
      } else {
        id = this._toString(guide.position);
      }
    }

    return id;
  };

  _proto.paint = function paint(coord) {
    var self = this;
    var chart = self.chart,
        guides = self.guides,
        xScale = self.xScale,
        yScales = self.yScales;
    var guideShapes = [];
    Util.each(guides, function (guide, idx) {
      guide.xScale = xScale;
      guide.yScales = yScales;
      var container;

      if (guide.type === 'regionFilter') {
        // TODO: RegionFilter support animation
        guide.chart = chart;
      } else {
        container = guide.top ? self.frontPlot : self.backPlot;
      }

      guide.coord = coord;
      guide.container = container;
      guide.canvas = chart.get('canvas');
      var shape = guide.render(coord, container);

      if (shape) {
        var id = self._getId(shape, guide);

        [].concat(shape).forEach(function (s) {
          s._id = s.get('className') + '-' + id;
          s.set('index', idx);
          guideShapes.push(s);
        });
      }
    });
    self.guideShapes = guideShapes;
  };

  _proto.clear = function clear() {
    this.reset();
    this.guides = [];
    return this;
  };

  _proto.reset = function reset() {
    var guides = this.guides;
    Util.each(guides, function (guide) {
      guide.remove();
    });
  };

  _proto._createGuide = function _createGuide(type, cfg) {
    var ClassName = Util.upperFirst(type);
    var guide = new Guide[ClassName](Util.deepMix({}, Global.guide[type], cfg));
    this.guides.push(guide);
    return guide;
  };

  _proto.line = function line(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('line', cfg);
  };

  _proto.text = function text(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('text', cfg);
  };

  _proto.arc = function arc(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('arc', cfg);
  };

  _proto.html = function html(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('html', cfg);
  };

  _proto.rect = function rect(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('rect', cfg);
  };

  _proto.tag = function tag(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('tag', cfg);
  };

  _proto.point = function point(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('point', cfg);
  };

  _proto.regionFilter = function regionFilter(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    return this._createGuide('regionFilter', cfg);
  };

  return GuideController;
}();

module.exports = {
  init: function init(chart) {
    var guideController = new GuideController({
      frontPlot: chart.get('frontPlot').addGroup({
        zIndex: 20,
        className: 'guideContainer'
      }),
      backPlot: chart.get('backPlot').addGroup({
        className: 'guideContainer'
      })
    });
    chart.set('guideController', guideController);
    /**
     * 为图表添加 guide
     * @return {GuideController} 返回 guide 控制器
     */

    chart.guide = function () {
      return guideController;
    };
  },
  afterGeomDraw: function afterGeomDraw(chart) {
    var guideController = chart.get('guideController');

    if (!guideController.guides.length) {
      return;
    }

    var xScale = chart.getXScale();
    var yScales = chart.getYScales();
    var coord = chart.get('coord');
    guideController.xScale = xScale;
    guideController.yScales = yScales;
    guideController.chart = chart; // for regionFilter

    guideController.paint(coord);
  },
  clear: function clear(chart) {
    chart.get('guideController').clear();
  },
  repaint: function repaint(chart) {
    chart.get('guideController').reset();
  }
};

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

var Util = __webpack_require__(0);

var List = __webpack_require__(101);

var Global = __webpack_require__(1);

var LEGEND_GAP = 12;
var MARKER_SIZE = 3;
var DEFAULT_CFG = {
  itemMarginBottom: 12,
  itemGap: 10,
  showTitle: false,
  titleStyle: {
    fontSize: 12,
    fill: '#808080',
    textAlign: 'start',
    textBaseline: 'top'
  },
  nameStyle: {
    fill: '#808080',
    fontSize: 12,
    textAlign: 'start',
    textBaseline: 'middle'
  },
  valueStyle: {
    fill: '#000000',
    fontSize: 12,
    textAlign: 'start',
    textBaseline: 'middle'
  },
  unCheckStyle: {
    fill: '#bfbfbf'
  },
  itemWidth: 'auto',
  wordSpace: 6,
  selectedMode: 'multiple' // 'multiple' or 'single'

}; // Register the default configuration for Legend

Global.legend = Util.deepMix({
  common: DEFAULT_CFG,
  // common legend configuration
  right: Util.mix({
    position: 'right',
    layout: 'vertical'
  }, DEFAULT_CFG),
  left: Util.mix({
    position: 'left',
    layout: 'vertical'
  }, DEFAULT_CFG),
  top: Util.mix({
    position: 'top',
    layout: 'horizontal'
  }, DEFAULT_CFG),
  bottom: Util.mix({
    position: 'bottom',
    layout: 'horizontal'
  }, DEFAULT_CFG)
}, Global.legend || {});

function getPaddingByPos(pos, appendPadding) {
  var padding = 0;
  appendPadding = Util.parsePadding(appendPadding);

  switch (pos) {
    case 'top':
      padding = appendPadding[0];
      break;

    case 'right':
      padding = appendPadding[1];
      break;

    case 'bottom':
      padding = appendPadding[2];
      break;

    case 'left':
      padding = appendPadding[3];
      break;

    default:
      break;
  }

  return padding;
}

var LegendController =
/*#__PURE__*/
function () {
  function LegendController(cfg) {
    this.legendCfg = {};
    this.enable = true;
    this.position = 'top';
    Util.mix(this, cfg);
    var chart = this.chart;
    this.canvasDom = chart.get('canvas').get('el');
    this.clear();
  }

  var _proto = LegendController.prototype;

  _proto.addLegend = function addLegend(scale, items, filterVals) {
    var self = this;
    var legendCfg = self.legendCfg;
    var field = scale.field;
    var fieldCfg = legendCfg[field];

    if (fieldCfg === false) {
      return null;
    }

    if (fieldCfg && fieldCfg.custom) {
      self.addCustomLegend(field);
    } else {
      var position = legendCfg.position || self.position;

      if (fieldCfg && fieldCfg.position) {
        position = fieldCfg.position;
      }

      if (scale.isCategory) {
        self._addCategoryLegend(scale, items, position, filterVals);
      }
    }
  };

  _proto.addCustomLegend = function addCustomLegend(field) {
    var self = this;
    var legendCfg = self.legendCfg;

    if (field && legendCfg[field]) {
      legendCfg = legendCfg[field];
    }

    var position = legendCfg.position || self.position;
    var legends = self.legends;
    legends[position] = legends[position] || [];
    var items = legendCfg.items;

    if (!items) {
      return null;
    }

    var container = self.container;
    Util.each(items, function (item) {
      if (!Util.isPlainObject(item.marker)) {
        item.marker = {
          symbol: item.marker || 'circle',
          fill: item.fill,
          radius: MARKER_SIZE
        };
      } else {
        item.marker.radius = item.marker.radius || MARKER_SIZE;
      }

      item.checked = Util.isNil(item.checked) ? true : item.checked;
      item.name = item.name || item.value;
    });
    var legend = new List(Util.deepMix({}, Global.legend[position], legendCfg, {
      maxLength: self._getMaxLength(position),
      items: items,
      parent: container
    }));
    legends[position].push(legend);
  };

  _proto.clear = function clear() {
    var legends = this.legends;
    Util.each(legends, function (legendItems) {
      Util.each(legendItems, function (legend) {
        legend.clear();
      });
    });
    this.legends = {};
    this.unBindEvents();
  };

  _proto._isFiltered = function _isFiltered(scale, values, value) {
    var rst = false;
    Util.each(values, function (val) {
      rst = rst || scale.getText(val) === scale.getText(value);

      if (rst) {
        return false;
      }
    });
    return rst;
  };

  _proto._getMaxLength = function _getMaxLength(position) {
    var chart = this.chart;
    var appendPadding = Util.parsePadding(chart.get('appendPadding'));
    return position === 'right' || position === 'left' ? chart.get('height') - (appendPadding[0] + appendPadding[2]) : chart.get('width') - (appendPadding[1] + appendPadding[3]);
  };

  _proto._addCategoryLegend = function _addCategoryLegend(scale, items, position, filterVals) {
    var self = this;
    var legendCfg = self.legendCfg,
        legends = self.legends,
        container = self.container,
        chart = self.chart;
    var field = scale.field;
    legends[position] = legends[position] || [];
    var symbol = 'circle';

    if (legendCfg[field] && legendCfg[field].marker) {
      symbol = legendCfg[field].marker;
    } else if (legendCfg.marker) {
      symbol = legendCfg.marker;
    }

    Util.each(items, function (item) {
      if (Util.isPlainObject(symbol)) {
        Util.mix(item.marker, symbol);
      } else {
        item.marker.symbol = symbol;
      }

      if (filterVals) {
        item.checked = self._isFiltered(scale, filterVals, item.dataValue);
      }
    });
    var legendItems = chart.get('legendItems');
    legendItems[field] = items;
    var lastCfg = Util.deepMix({}, Global.legend[position], legendCfg[field] || legendCfg, {
      maxLength: self._getMaxLength(position),
      items: items,
      field: field,
      filterVals: filterVals,
      parent: container
    });

    if (lastCfg.showTitle) {
      Util.deepMix(lastCfg, {
        title: scale.alias || scale.field
      });
    }

    var legend = new List(lastCfg);
    legends[position].push(legend);
    return legend;
  };

  _proto._alignLegend = function _alignLegend(legend, pre, position) {
    var self = this;
    var _self$plotRange = self.plotRange,
        tl = _self$plotRange.tl,
        bl = _self$plotRange.bl;
    var chart = self.chart;
    var offsetX = legend.offsetX || 0;
    var offsetY = legend.offsetY || 0;
    var chartWidth = chart.get('width');
    var chartHeight = chart.get('height');
    var appendPadding = Util.parsePadding(chart.get('appendPadding'));
    var legendHeight = legend.getHeight();
    var legendWidth = legend.getWidth();
    var x = 0;
    var y = 0;

    if (position === 'left' || position === 'right') {
      var verticalAlign = legend.verticalAlign || 'middle';
      var height = Math.abs(tl.y - bl.y);
      x = position === 'left' ? appendPadding[3] : chartWidth - legendWidth - appendPadding[1];
      y = (height - legendHeight) / 2 + tl.y;

      if (verticalAlign === 'top') {
        y = tl.y;
      } else if (verticalAlign === 'bottom') {
        y = bl.y - legendHeight;
      }

      if (pre) {
        y = pre.get('y') - legendHeight - LEGEND_GAP;
      }
    } else {
      var align = legend.align || 'left';
      x = appendPadding[3];

      if (align === 'center') {
        x = chartWidth / 2 - legendWidth / 2;
      } else if (align === 'right') {
        x = chartWidth - (legendWidth + appendPadding[1]);
      }

      y = position === 'top' ? appendPadding[0] + Math.abs(legend.container.getBBox().minY) : chartHeight - legendHeight;

      if (pre) {
        var preWidth = pre.getWidth();
        x = pre.x + preWidth + LEGEND_GAP;
      }
    }

    if (position === 'bottom' && offsetY > 0) {
      offsetY = 0;
    }

    if (position === 'right' && offsetX > 0) {
      offsetX = 0;
    }

    legend.moveTo(x + offsetX, y + offsetY);
  };

  _proto.alignLegends = function alignLegends() {
    var self = this;
    var legends = self.legends;
    Util.each(legends, function (legendItems, position) {
      Util.each(legendItems, function (legend, index) {
        var pre = legendItems[index - 1];

        self._alignLegend(legend, pre, position);
      });
    });
    return self;
  };

  _proto.handleEvent = function handleEvent(ev) {
    var self = this;

    function findItem(x, y) {
      var result = null;
      var legends = self.legends;
      Util.each(legends, function (legendItems) {
        Util.each(legendItems, function (legend) {
          var itemsGroup = legend.itemsGroup,
              legendHitBoxes = legend.legendHitBoxes;
          var children = itemsGroup.get('children');

          if (children.length) {
            var legendPosX = legend.x;
            var legendPosY = legend.y;
            Util.each(legendHitBoxes, function (box, index) {
              if (x >= box.x + legendPosX && x <= box.x + box.width + legendPosX && y >= box.y + legendPosY && y <= box.height + box.y + legendPosY) {
                // inbox
                result = {
                  clickedItem: children[index],
                  clickedLegend: legend
                };
                return false;
              }
            });
          }
        });
      });
      return result;
    }

    var chart = self.chart;

    var _Util$createEvent = Util.createEvent(ev, chart),
        x = _Util$createEvent.x,
        y = _Util$createEvent.y;

    var clicked = findItem(x, y);

    if (clicked && clicked.clickedLegend.clickable !== false) {
      var clickedItem = clicked.clickedItem,
          clickedLegend = clicked.clickedLegend;

      if (clickedLegend.onClick) {
        ev.clickedItem = clickedItem;
        clickedLegend.onClick(ev);
      } else if (!clickedLegend.custom) {
        var checked = clickedItem.get('checked');
        var value = clickedItem.get('dataValue');
        var filterVals = clickedLegend.filterVals,
            field = clickedLegend.field,
            selectedMode = clickedLegend.selectedMode;
        var isSingeSelected = selectedMode === 'single';

        if (isSingeSelected) {
          chart.filter(field, function (val) {
            return val === value;
          });
        } else {
          if (!checked) {
            filterVals.push(value);
          } else {
            Util.Array.remove(filterVals, value);
          }

          chart.filter(field, function (val) {
            return filterVals.indexOf(val) !== -1;
          });
        }

        chart.repaint();
      }
    }
  };

  _proto.bindEvents = function bindEvents() {
    var legendCfg = this.legendCfg;
    var triggerOn = legendCfg.triggerOn || 'touchstart';
    var method = Util.wrapBehavior(this, 'handleEvent');
    Util.addEventListener(this.canvasDom, triggerOn, method);
  };

  _proto.unBindEvents = function unBindEvents() {
    var legendCfg = this.legendCfg;
    var triggerOn = legendCfg.triggerOn || 'touchstart';
    var method = Util.getWrapBehavior(this, 'handleEvent');
    Util.removeEventListener(this.canvasDom, triggerOn, method);
  };

  return LegendController;
}();

module.exports = {
  init: function init(chart) {
    var legendController = new LegendController({
      container: chart.get('backPlot'),
      plotRange: chart.get('plotRange'),
      chart: chart
    });
    chart.set('legendController', legendController);

    chart.legend = function (field, cfg) {
      var legendCfg = legendController.legendCfg;
      legendController.enable = true;

      if (Util.isBoolean(field)) {
        legendController.enable = field;
        legendCfg = cfg || {};
      } else if (Util.isObject(field)) {
        legendCfg = field;
      } else {
        legendCfg[field] = cfg;
      }

      legendController.legendCfg = legendCfg;
      return this;
    };
  },
  beforeGeomDraw: function beforeGeomDraw(chart) {
    var legendController = chart.get('legendController');
    if (!legendController.enable) return null; // legend is not displayed

    var legendCfg = legendController.legendCfg;

    if (legendCfg && legendCfg.custom) {
      legendController.addCustomLegend();
    } else {
      var legendItems = chart.getLegendItems();
      var scales = chart.get('scales');
      var filters = chart.get('filters');
      Util.each(legendItems, function (items, field) {
        var scale = scales[field];
        var values = scale.values;
        var filterVals;

        if (filters && filters[field]) {
          filterVals = values.filter(filters[field]);
        } else {
          filterVals = values.slice(0);
        }

        legendController.addLegend(scale, items, filterVals);
      });
    }

    if (legendCfg && legendCfg.clickable !== false) {
      legendController.bindEvents();
    }

    var legends = legendController.legends;
    var legendRange = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
    Util.each(legends, function (legendItems, position) {
      var padding = 0;
      Util.each(legendItems, function (legend) {
        var width = legend.getWidth();
        var height = legend.getHeight();

        if (position === 'top' || position === 'bottom') {
          padding = Math.max(padding, height);

          if (legend.offsetY > 0) {
            padding += legend.offsetY;
          }
        } else {
          padding = Math.max(padding, width);

          if (legend.offsetX > 0) {
            padding += legend.offsetX;
          }
        }
      });
      legendRange[position] = padding + getPaddingByPos(position, chart.get('appendPadding'));
    });
    chart.set('legendRange', legendRange);
  },
  afterGeomDraw: function afterGeomDraw(chart) {
    var legendController = chart.get('legendController');
    legendController.alignLegends();
  },
  clearInner: function clearInner(chart) {
    var legendController = chart.get('legendController');
    legendController.clear();
    chart.set('legendRange', null);
  }
};

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Handle the detail animations
 * @author sima.zhang1990@gmail.com
 */
var Util = __webpack_require__(0);

var Element = __webpack_require__(27);

var Timeline = __webpack_require__(131);

var Animator = __webpack_require__(132);

var Animate = __webpack_require__(102);

var ShapeAction = __webpack_require__(134);

var GroupAction = __webpack_require__(135);

var Chart = __webpack_require__(15);

var timeline;

Element.prototype.animate = function () {
  var attrs = Util.mix({}, this.get('attrs'));
  return new Animator(this, attrs, timeline);
};

Chart.prototype.animate = function (cfg) {
  this.set('animate', cfg);
  return this;
};

Animate.Action = ShapeAction;
Animate.defaultCfg = {
  interval: {
    enter: function enter(coord) {
      if (coord.isPolar && coord.transposed) {
        // for pie chart
        return function (shape) {
          shape.set('zIndex', -1);
          var container = shape.get('parent');
          container.sort();
        };
      }

      return ShapeAction.fadeIn;
    }
  },
  area: {
    enter: function enter(coord) {
      if (coord.isPolar) return null;
      return ShapeAction.fadeIn;
    }
  },
  line: {
    enter: function enter(coord) {
      if (coord.isPolar) return null;
      return ShapeAction.fadeIn;
    }
  },
  path: {
    enter: function enter(coord) {
      if (coord.isPolar) return null;
      return ShapeAction.fadeIn;
    }
  }
};
var GROUP_ANIMATION = {
  line: function line(coord) {
    if (coord.isPolar) {
      return GroupAction.groupScaleInXY;
    }

    return GroupAction.groupWaveIn;
  },
  area: function area(coord) {
    if (coord.isPolar) {
      return GroupAction.groupScaleInXY;
    }

    return GroupAction.groupWaveIn;
  },
  path: function path(coord) {
    if (coord.isPolar) {
      return GroupAction.groupScaleInXY;
    }

    return GroupAction.groupWaveIn;
  },
  point: function point() {
    return GroupAction.shapesScaleInXY;
  },
  interval: function interval(coord) {
    var result;

    if (coord.isPolar) {
      // polar coodinate
      result = GroupAction.groupScaleInXY;

      if (coord.transposed) {
        // pie chart
        result = GroupAction.groupWaveIn;
      }
    } else {
      result = coord.transposed ? GroupAction.groupScaleInX : GroupAction.groupScaleInY;
    }

    return result;
  },
  schema: function schema() {
    return GroupAction.groupWaveIn;
  }
};

function diff(fromAttrs, toAttrs) {
  var endState = {};

  for (var k in toAttrs) {
    if (Util.isNumber(fromAttrs[k]) && fromAttrs[k] !== toAttrs[k]) {
      endState[k] = toAttrs[k];
    } else if (Util.isArray(fromAttrs[k]) && JSON.stringify(fromAttrs[k]) !== JSON.stringify(toAttrs[k])) {
      endState[k] = toAttrs[k];
    }
  }

  return endState;
} // Add a unique id identifier to each shape


function _getShapeId(geom, dataObj, geomIdx) {
  var type = geom.get('type');
  var id = 'geom' + geomIdx + '-' + type;
  var xScale = geom.getXScale();
  var yScale = geom.getYScale();
  var xField = xScale.field || 'x';
  var yField = yScale.field || 'y';
  var yVal = dataObj[yField];
  var xVal;

  if (xScale.isIdentity) {
    xVal = xScale.value;
  } else {
    xVal = dataObj[xField];
  }

  if (type === 'interval' || type === 'schema') {
    id += '-' + xVal;
  } else if (type === 'line' || type === 'area' || type === 'path') {
    id += '-' + type;
  } else {
    id += xScale.isCategory ? '-' + xVal : '-' + xVal + '-' + yVal;
  }

  var groupScales = geom._getGroupScales();

  Util.each(groupScales, function (groupScale) {
    var field = groupScale.field;

    if (groupScale.type !== 'identity') {
      id += '-' + dataObj[field];
    }
  });
  return id;
} // get geometry's shapes


function getShapes(geoms, chart, coord) {
  var shapes = [];
  Util.each(geoms, function (geom, geomIdx) {
    var geomContainer = geom.get('container');
    var geomShapes = geomContainer.get('children');
    var type = geom.get('type');
    var animateCfg = Util.isNil(geom.get('animateCfg')) ? _getAnimateCfgByShapeType(type, chart) : geom.get('animateCfg');

    if (animateCfg !== false) {
      Util.each(geomShapes, function (shape, index) {
        if (shape.get('className') === type) {
          shape._id = _getShapeId(geom, shape.get('origin')._origin, geomIdx);
          shape.set('coord', coord);
          shape.set('animateCfg', animateCfg);
          shape.set('index', index);
          shapes.push(shape);
        }
      });
    }

    geom.set('shapes', geomShapes);
  });
  return shapes;
}

function cache(shapes) {
  var rst = {};

  for (var i = 0, len = shapes.length; i < len; i++) {
    var shape = shapes[i];
    if (!shape._id || shape.isClip) continue;
    var id = shape._id;
    rst[id] = {
      _id: id,
      type: shape.get('type'),
      // the type of shape
      attrs: Util.mix({}, shape._attrs.attrs),
      // the graphics attributes of shape
      className: shape.get('className'),
      geomType: shape.get('className'),
      index: shape.get('index'),
      coord: shape.get('coord'),
      animateCfg: shape.get('animateCfg')
    };
  }

  return rst;
}

function getAnimate(geomType, coord, animationType, animationName) {
  var result;

  if (Util.isFunction(animationName)) {
    result = animationName;
  } else if (Util.isString(animationName)) {
    result = Animate.Action[animationName];
  } else {
    result = Animate.getAnimation(geomType, coord, animationType);
  }

  return result;
}

function getAnimateCfg(geomType, animationType, animateCfg) {
  if (animateCfg === false || Util.isObject(animateCfg) && animateCfg[animationType] === false) {
    return false;
  }

  var defaultCfg = Animate.getAnimateCfg(geomType, animationType);

  if (animateCfg && animateCfg[animationType]) {
    return Util.deepMix({}, defaultCfg, animateCfg[animationType]);
  }

  return defaultCfg;
}

function addAnimate(cache, shapes, canvas) {
  var animate;
  var animateCfg; // the order of animation: leave -> update -> enter

  var updateShapes = [];
  var newShapes = [];
  Util.each(shapes, function (shape) {
    var result = cache[shape._id];

    if (!result) {
      newShapes.push(shape);
    } else {
      shape.set('cacheShape', result);
      updateShapes.push(shape);
      delete cache[shape._id];
    }
  }); // first do the leave animation

  Util.each(cache, function (deletedShape) {
    var className = deletedShape.className,
        coord = deletedShape.coord,
        _id = deletedShape._id,
        attrs = deletedShape.attrs,
        index = deletedShape.index,
        type = deletedShape.type;
    animateCfg = getAnimateCfg(className, 'leave', deletedShape.animateCfg);
    if (animateCfg === false) return true;
    animate = getAnimate(className, coord, 'leave', animateCfg.animation);

    if (Util.isFunction(animate)) {
      var tempShape = canvas.addShape(type, {
        attrs: attrs,
        index: index,
        canvas: canvas,
        className: className
      });
      tempShape._id = _id;
      animate(tempShape, animateCfg, coord);
    }
  }); // then do the update animation

  Util.each(updateShapes, function (updateShape) {
    var className = updateShape.get('className');
    animateCfg = getAnimateCfg(className, 'update', updateShape.get('animateCfg'));
    if (animateCfg === false) return true;
    var coord = updateShape.get('coord');
    var cacheAttrs = updateShape.get('cacheShape').attrs;
    var endState = diff(cacheAttrs, updateShape._attrs.attrs); // 判断如果属性相同的话就不进行变换

    if (Object.keys(endState).length) {
      animate = getAnimate(className, coord, 'update', animateCfg.animation);

      if (Util.isFunction(animate)) {
        animate(updateShape, animateCfg, coord);
      } else {
        updateShape.attr(cacheAttrs);
        updateShape.animate().to({
          attrs: endState,
          duration: animateCfg.duration,
          easing: animateCfg.easing,
          delay: animateCfg.delay
        }).onEnd(function () {
          updateShape.set('cacheShape', null);
        });
      }
    }
  }); // last, enter animation

  Util.each(newShapes, function (newShape) {
    // 新图形元素的进场元素
    var className = newShape.get('className');
    var coord = newShape.get('coord');
    animateCfg = getAnimateCfg(className, 'enter', newShape.get('animateCfg'));
    if (animateCfg === false) return true;
    animate = getAnimate(className, coord, 'enter', animateCfg.animation);

    if (Util.isFunction(animate)) {
      if (className === 'interval' && coord.isPolar && coord.transposed) {
        var index = newShape.get('index');
        var lastShape = updateShapes[index - 1];
        animate(newShape, animateCfg, lastShape);
      } else {
        animate(newShape, animateCfg, coord);
      }
    }
  });
}

function _getAnimateCfgByShapeType(type, chart) {
  if (!type) {
    return null;
  }

  var animateCfg = chart.get('animate');

  if (type.indexOf('guide-tag') > -1) {
    type = 'guide-tag';
  }

  if (Util.isObject(animateCfg)) {
    return animateCfg[type];
  }

  if (animateCfg === false) {
    return false;
  }

  return null;
}

module.exports = {
  afterCanvasInit: function afterCanvasInit()
  /* chart */
  {
    timeline = new Timeline();
    timeline.play();
  },
  beforeCanvasDraw: function beforeCanvasDraw(chart) {
    if (chart.get('animate') === false) {
      return;
    }

    var isUpdate = chart.get('isUpdate');
    var canvas = chart.get('canvas');
    var coord = chart.get('coord');
    var geoms = chart.get('geoms');
    var caches = canvas.get('caches') || [];

    if (caches.length === 0) {
      isUpdate = false;
    }

    var cacheShapes = getShapes(geoms, chart, coord);

    var _chart$get = chart.get('axisController'),
        frontPlot = _chart$get.frontPlot,
        backPlot = _chart$get.backPlot;

    var axisShapes = frontPlot.get('children').concat(backPlot.get('children'));
    var guideShapes = [];

    if (chart.get('guideController')) {
      guideShapes = chart.get('guideController').guideShapes;
    }

    var componentShapes = [];
    axisShapes.concat(guideShapes).forEach(function (s) {
      var className = s.get('className');

      var animateCfg = _getAnimateCfgByShapeType(className, chart);

      s.set('coord', coord);
      s.set('animateCfg', animateCfg);
      componentShapes.push(s);
      cacheShapes.push(s);
    });
    canvas.set('caches', cache(cacheShapes));

    if (isUpdate) {
      addAnimate(caches, cacheShapes, canvas);
    } else {
      // do the appear animation
      var animateCfg;
      var animate;
      Util.each(geoms, function (geom) {
        var type = geom.get('type');
        var geomCfg = Util.isNil(geom.get('animateCfg')) ? _getAnimateCfgByShapeType(type, chart) : geom.get('animateCfg');

        if (geomCfg !== false) {
          animateCfg = getAnimateCfg(type, 'appear', geomCfg);
          animate = getAnimate(type, coord, 'appear', animateCfg.animation);

          if (Util.isFunction(animate)) {
            var shapes = geom.get('shapes');
            Util.each(shapes, function (shape) {
              animate(shape, animateCfg, coord);
            });
          } else if (GROUP_ANIMATION[type]) {
            // do the default animation
            animate = GroupAction[animateCfg.animation] || GROUP_ANIMATION[type](coord);
            var yScale = geom.getYScale();
            var zeroY = coord.convertPoint({
              x: 0,
              y: yScale.scale(geom.getYMinValue())
            });
            var container = geom.get('container');
            animate && animate(container, animateCfg, coord, zeroY);
          }
        }
      }); // do the animation of components

      Util.each(componentShapes, function (shape) {
        var animateCfg = shape.get('animateCfg');
        var className = shape.get('className');

        if (animateCfg && animateCfg.appear) {
          // if user configure
          var defaultCfg = Animate.getAnimateCfg(className, 'appear');
          var appearCfg = Util.deepMix({}, defaultCfg, animateCfg.appear);

          var _animate = getAnimate(className, coord, 'appear', appearCfg.animation);

          if (Util.isFunction(_animate)) {
            _animate(shape, appearCfg, coord);
          }
        }
      });
    }
  },
  afterCanvasDestroyed: function afterCanvasDestroyed()
  /* chart */
  {
    timeline.stop();
  }
};

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var _require = __webpack_require__(40),
    requestAnimationFrame = _require.requestAnimationFrame;

var clock = typeof performance === 'object' && performance.now ? performance : Date;

var Timeline =
/*#__PURE__*/
function () {
  function Timeline() {
    this.anims = [];
    this.time = null;
    this.playing = false;
    this.canvas = [];
  }

  var _proto = Timeline.prototype;

  _proto.play = function play() {
    var self = this;
    self.time = clock.now();
    self.playing = true;

    function step() {
      if (self.playing) {
        requestAnimationFrame(step);
        self.update();
      }
    }

    requestAnimationFrame(step);
  };

  _proto.stop = function stop() {
    this.playing = false;
    this.time = null;
    this.canvas = [];
  };

  _proto.update = function update() {
    var currentTime = clock.now();
    this.canvas = [];

    for (var i = 0; i < this.anims.length; i++) {
      var propertyAnim = this.anims[i];

      if (currentTime < propertyAnim.startTime || propertyAnim.hasEnded) {
        continue;
      }

      var shape = propertyAnim.shape; // shape

      if (shape.get('destroyed')) {
        this.anims.splice(i, 1);
        i--;
        continue;
      }

      var startState = propertyAnim.startState,
          endState = propertyAnim.endState,
          interpolate = propertyAnim.interpolate,
          duration = propertyAnim.duration;

      if (currentTime >= propertyAnim.startTime && !propertyAnim.hasStarted) {
        propertyAnim.hasStarted = true;

        if (propertyAnim.onStart) {
          propertyAnim.onStart();
        }
      }

      var t = (currentTime - propertyAnim.startTime) / duration;
      t = Math.max(0, Math.min(t, 1));
      t = propertyAnim.easing(t);

      if (propertyAnim.onFrame) {
        propertyAnim.onFrame(t);
      } else {
        for (var key in interpolate) {
          var diff = interpolate[key];
          var value = diff(t);
          var newValue = void 0;

          if (key === 'points') {
            newValue = [];
            var aLen = Math.max(startState.points.length, endState.points.length);

            for (var j = 0; j < aLen; j += 2) {
              newValue.push({
                x: value[j],
                y: value[j + 1]
              });
            }
          } else {
            newValue = value;
          }

          shape._attrs.attrs[key] = newValue;
          shape._attrs.bbox = null; // should clear calculated bbox
        }
      }

      var canvas = shape.get('canvas');

      if (this.canvas.indexOf(canvas) === -1) {
        this.canvas.push(canvas);
      }

      if (propertyAnim.onUpdate) {
        propertyAnim.onUpdate(t);
      }

      if (currentTime >= propertyAnim.endTime && !propertyAnim.hasEnded) {
        propertyAnim.hasEnded = true;

        if (propertyAnim.onEnd) {
          propertyAnim.onEnd();
        }
      }

      if (t === 1) {
        // end
        this.anims.splice(i, 1);
        i--;
      }
    }

    this.canvas.map(function (c) {
      c.draw();
      return c;
    });
    this.time = clock.now();
  };

  return Timeline;
}();

module.exports = Timeline;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

var Easing = __webpack_require__(133);

function plainArray(arr) {
  var result = [];

  for (var i = 0, len = arr.length; i < len; i++) {
    if (arr[i]) {
      result.push(arr[i].x);
      result.push(arr[i].y);
    }
  }

  return result;
}

function interpolateNumber(a, b) {
  a = +a;
  b -= a;
  return function (t) {
    return a + b * t;
  };
}

function interpolateArray(a, b) {
  var nb = b ? b.length : 0;
  var na = a ? Math.min(nb, a.length) : 0;
  var x = new Array(na);
  var c = new Array(nb);
  var i;

  for (i = 0; i < na; ++i) {
    x[i] = interpolateNumber(a[i], b[i]);
  }

  for (; i < nb; ++i) {
    c[i] = b[i];
  }

  return function (t) {
    for (i = 0; i < na; ++i) {
      c[i] = x[i](t);
    }

    return c;
  };
}

var Animator =
/*#__PURE__*/
function () {
  function Animator(shape, source, timeline) {
    this.hasStarted = false;
    this.hasEnded = false;
    this.shape = shape;
    this.source = source;
    this.timeline = timeline;
    this.animate = null;
  } // delay, attrs, duration, easing


  var _proto = Animator.prototype;

  _proto.to = function to(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    var delay = cfg.delay || 0;
    var attrs = cfg.attrs || {};
    var duration = cfg.duration || 1000;
    var easing; // 缓动函数

    if (typeof cfg.easing === 'function') {
      easing = cfg.easing;
    } else {
      easing = Easing[cfg.easing] || Easing.linear;
    }

    var animInfo = {
      shape: this.shape,
      startTime: this.timeline.time + delay,
      duration: duration,
      easing: easing
    };
    var interpolate = {}; // 差值函数

    for (var attrName in attrs) {
      var startValue = this.source[attrName];
      var endValue = attrs[attrName];

      if (attrName === 'points') {
        startValue = plainArray(startValue);
        endValue = plainArray(endValue);
        interpolate.points = interpolateArray(startValue, endValue);
        this.source.points = startValue;
        attrs.points = endValue;
      } else if (attrName === 'matrix') {
        interpolate.matrix = interpolateArray(startValue, endValue);
      } else {
        interpolate[attrName] = interpolateNumber(startValue, endValue);
      }
    }

    animInfo.interpolate = interpolate;
    animInfo.startState = this.source;
    animInfo.endState = attrs;
    animInfo.endTime = animInfo.startTime + duration;
    this.timeline.anims.push(animInfo);
    this.animate = animInfo;
    return this;
  };

  _proto.onFrame = function onFrame(callback) {
    // 自定义每一帧动画的动作
    if (this.animate) {
      this.animate.onFrame = function (frame) {
        callback(frame);
      };
    }

    return this;
  };

  _proto.onStart = function onStart(callback) {
    if (this.animate) {
      this.animate.onStart = function () {
        callback();
      };
    }

    return this;
  };

  _proto.onUpdate = function onUpdate(callback) {
    if (this.animate) {
      this.animate.onUpdate = function (frame) {
        callback(frame);
      };
    }

    return this;
  };

  _proto.onEnd = function onEnd(callback) {
    if (this.animate) {
      this.animate.onEnd = function () {
        callback();
      };
    }

    return this;
  };

  return Animator;
}();

module.exports = Animator;

/***/ }),
/* 133 */
/***/ (function(module, exports) {

var Easing = {
  linear: function linear(k) {
    return k;
  },
  quadraticIn: function quadraticIn(k) {
    return k * k;
  },
  quadraticOut: function quadraticOut(k) {
    return k * (2 - k);
  },
  quadraticInOut: function quadraticInOut(k) {
    if ((k *= 2) < 1) {
      return 0.5 * k * k;
    }

    return -0.5 * (--k * (k - 2) - 1);
  },
  cubicIn: function cubicIn(k) {
    return k * k * k;
  },
  cubicOut: function cubicOut(k) {
    return --k * k * k + 1;
  },
  cubicInOut: function cubicInOut(k) {
    if ((k *= 2) < 1) {
      return 0.5 * k * k * k;
    }

    return 0.5 * ((k -= 2) * k * k + 2);
  },
  elasticIn: function elasticIn(k) {
    var s;
    var a = 0.1;
    var p = 0.4;
    if (k === 0) return 0;
    if (k === 1) return 1;

    if (!p) {
      p = 0.3;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(1 / a);
    }

    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));
  },
  elasticOut: function elasticOut(k) {
    var s;
    var a = 0.1;
    var p = 0.4;
    if (k === 0) return 0;
    if (k === 1) return 1;

    if (!p) {
      p = 0.3;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(1 / a);
    }

    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;
  },
  elasticInOut: function elasticInOut(k) {
    var s;
    var a = 0.1;
    var p = 0.4;
    if (k === 0) return 0;
    if (k === 1) return 1;

    if (!p) {
      p = 0.3;
    }

    if (!a || a < 1) {
      a = 1;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(1 / a);
    }

    if ((k *= 2) < 1) {
      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));
    }

    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;
  },
  backIn: function backIn(k) {
    var s = 1.70158;
    return k * k * ((s + 1) * k - s);
  },
  backOut: function backOut(k) {
    var s = 1.70158;
    return (k = k - 1) * k * ((s + 1) * k + s) + 1;
  },
  backInOut: function backInOut(k) {
    var s = 1.70158 * 1.525;

    if ((k *= 2) < 1) {
      return 0.5 * (k * k * ((s + 1) * k - s));
    }

    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);
  },
  bounceIn: function bounceIn(k) {
    return 1 - Easing.bounceOut(1 - k);
  },
  bounceOut: function bounceOut(k) {
    if ((k /= 1) < 1 / 2.75) {
      return 7.5625 * k * k;
    } else if (k < 2 / 2.75) {
      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;
    } else if (k < 2.5 / 2.75) {
      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;
    }

    return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;
  },
  bounceInOut: function bounceInOut(k) {
    if (k < 0.5) {
      return Easing.bounceIn(k * 2) * 0.5;
    }

    return Easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;
  }
};
module.exports = Easing;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Animation functions for shape
 * @author sima.zhang1990@gmail.com
 */
var Util = __webpack_require__(0);

var Helpers = __webpack_require__(103);
/*
function waveIn(shape, animateCfg, coord) {
  const clip = Helpers.getClip(coord);
  clip.set('canvas', shape.get('canvas'));
  shape.attr('clip', clip);
  const onEnd = function() {
    shape.attr('clip', null);
    clip.remove(true);
  };
  Helpers.doAnimation(clip, clip.endState, animateCfg, onEnd);
}

function scaleInX(shape, animateCfg) {
  const box = shape.getBBox();
  const points = shape.get('origin').points;
  let x;
  const y = (box.minY + box.maxY) / 2;

  if (points[0].y - points[1].y > 0) { // 当顶点在零点之下
    x = box.maxX;
  } else {
    x = box.minX;
  }
  const scaledMatrix = Helpers.getScaledMatrix(shape, [ x, y ], 'x');
  Helpers.doAnimation(shape, { matrix: scaledMatrix }, animateCfg);
}

function scaleInY(shape, animateCfg) {
  const box = shape.getBBox();
  const points = shape.get('origin').points;
  const x = (box.minX + box.maxX) / 2;
  let y;

  if (points[0].y - points[1].y <= 0) { // 当顶点在零点之下
    y = box.maxY;
  } else {
    y = box.minY;
  }
  const scaledMatrix = Helpers.getScaledMatrix(shape, [ x, y ], 'x');
  Helpers.doAnimation(shape, { matrix: scaledMatrix }, animateCfg);
}
*/


function fadeIn(shape, animateCfg) {
  var fillOpacity = Util.isNil(shape.attr('fillOpacity')) ? 1 : shape.attr('fillOpacity');
  var strokeOpacity = Util.isNil(shape.attr('strokeOpacity')) ? 1 : shape.attr('strokeOpacity');
  shape.attr('fillOpacity', 0);
  shape.attr('strokeOpacity', 0);
  var endState = {
    fillOpacity: fillOpacity,
    strokeOpacity: strokeOpacity
  };
  Helpers.doAnimation(shape, endState, animateCfg);
}

module.exports = {
  // waveIn,
  // scaleInX,
  // scaleInY,
  fadeIn: fadeIn
};

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Group animate functions
 * @author sima.zhang1990@gmail.com
 */
var Util = __webpack_require__(103);

var Helper = __webpack_require__(28);

var _require = __webpack_require__(5),
    Shape = _require.Shape;

function _groupScaleIn(container, animateCfg, coord, zeroY, type) {
  var _Util$getCoordInfo = Util.getCoordInfo(coord),
      start = _Util$getCoordInfo.start,
      end = _Util$getCoordInfo.end,
      width = _Util$getCoordInfo.width,
      height = _Util$getCoordInfo.height;

  var x;
  var y;
  var clip = new Shape.Rect({
    attrs: {
      x: start.x,
      y: end.y,
      width: width,
      height: height
    }
  });

  if (type === 'y') {
    x = start.x + width / 2;
    y = zeroY.y < start.y ? zeroY.y : start.y;
  } else if (type === 'x') {
    x = zeroY.x > start.x ? zeroY.x : start.x;
    y = start.y + height / 2;
  } else if (type === 'xy') {
    if (coord.isPolar) {
      x = coord.center.x;
      y = coord.center.y;
    } else {
      x = (start.x + end.x) / 2;
      y = (start.y + end.y) / 2;
    }
  }

  var endMatrix = Util.getScaledMatrix(clip, [x, y], type);
  clip.isClip = true;
  clip.endState = {
    matrix: endMatrix
  };
  clip.set('canvas', container.get('canvas'));
  container.attr('clip', clip);

  var onEnd = function onEnd() {
    container.attr('clip', null);
    clip.remove(true);
  };

  Util.doAnimation(clip, clip.endState, animateCfg, onEnd);
}

function _shapeScale(container, animateCfg, type) {
  var shapes = container.get('children');
  var x;
  var y;
  var endMatrix;

  for (var i = 0, len = shapes.length; i < len; i++) {
    var shape = shapes[i];
    var box = shape.getBBox();
    x = (box.minX + box.maxX) / 2;
    y = (box.minY + box.maxY) / 2;
    endMatrix = Util.getScaledMatrix(shape, [x, y], type);
    Util.doAnimation(shape, {
      matrix: endMatrix
    }, animateCfg);
  }
}

function groupScaleInX(container, animateCfg, coord, zeroY) {
  _groupScaleIn(container, animateCfg, coord, zeroY, 'x');
}

function groupScaleInY(container, animateCfg, coord, zeroY) {
  _groupScaleIn(container, animateCfg, coord, zeroY, 'y');
}

function groupScaleInXY(container, animateCfg, coord, zeroY) {
  _groupScaleIn(container, animateCfg, coord, zeroY, 'xy');
}

function shapesScaleInX(container, animateCfg) {
  _shapeScale(container, animateCfg, 'x');
}

function shapesScaleInY(container, animateCfg) {
  _shapeScale(container, animateCfg, 'y');
}

function shapesScaleInXY(container, animateCfg) {
  _shapeScale(container, animateCfg, 'xy');
}

function groupWaveIn(container, animateCfg, coord) {
  var clip = Helper.getClip(coord);
  clip.set('canvas', container.get('canvas'));
  container.attr('clip', clip);

  var onEnd = function onEnd() {
    container.attr('clip', null);
    clip.remove(true);
  };

  var endState = {};

  if (coord.isPolar) {
    var startAngle = coord.startAngle,
        endAngle = coord.endAngle;
    endState.endAngle = endAngle;
    clip.attr('endAngle', startAngle);
  } else {
    var start = coord.start,
        end = coord.end;
    var width = Math.abs(start.x - end.x);
    var height = Math.abs(start.y - end.y);

    if (coord.isTransposed) {
      clip.attr('height', 0);
      endState.height = height;
    } else {
      clip.attr('width', 0);
      endState.width = width;
    }
  }

  Util.doAnimation(clip, endState, animateCfg, onEnd);
}

module.exports = {
  groupWaveIn: groupWaveIn,
  groupScaleInX: groupScaleInX,
  groupScaleInY: groupScaleInY,
  groupScaleInXY: groupScaleInXY,
  shapesScaleInX: shapesScaleInX,
  shapesScaleInY: shapesScaleInY,
  shapesScaleInXY: shapesScaleInXY
};

/***/ }),
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Default, without interactins
 */
var F2 = __webpack_require__(45);

__webpack_require__(105);

__webpack_require__(93);

__webpack_require__(98); // polar coordinate


__webpack_require__(114); // the axis for polar coordinate


__webpack_require__(115); // timeCat scale


__webpack_require__(119);

__webpack_require__(120);

__webpack_require__(121);

__webpack_require__(122);

__webpack_require__(123);

__webpack_require__(124);

var Tooltip = __webpack_require__(125);

var Guide = __webpack_require__(128);

var Legend = __webpack_require__(129);

var Animation = __webpack_require__(130);

F2.Animate = __webpack_require__(102); // register plugins

F2.Chart.plugins.register([Tooltip, Legend, Guide, Animation]);
module.exports = F2;

/***/ })
/******/ ]);
});

/***/ }),

/***/ "20ba":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.presetPrimaryColors = exports.presetPalettes = exports.generate = undefined;

var _generate = __webpack_require__("b897");

var _generate2 = _interopRequireDefault(_generate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var presetPrimaryColors = {
  red: '#F5222D',
  volcano: '#FA541C',
  orange: '#FA8C16',
  gold: '#FAAD14',
  yellow: '#FADB14',
  lime: '#A0D911',
  green: '#52C41A',
  cyan: '#13C2C2',
  blue: '#1890FF',
  geekblue: '#2F54EB',
  purple: '#722ED1',
  magenta: '#EB2F96',
  grey: '#666666'
};

var presetPalettes = {};

Object.keys(presetPrimaryColors).forEach(function (key) {
  presetPalettes[key] = (0, _generate2.default)(presetPrimaryColors[key]);
});

exports.generate = _generate2.default;
exports.presetPalettes = presetPalettes;
exports.presetPrimaryColors = presetPrimaryColors;

/***/ }),

/***/ "20d6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__("5ca1");
var $find = __webpack_require__("0a49")(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__("9c6c")(KEY);


/***/ }),

/***/ "20fd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__("d9f6");
var createDesc = __webpack_require__("aebd");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "214f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("b0c5");
var redefine = __webpack_require__("2aba");
var hide = __webpack_require__("32e9");
var fails = __webpack_require__("79e5");
var defined = __webpack_require__("be13");
var wks = __webpack_require__("2b4c");
var regexpExec = __webpack_require__("520a");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "218f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _classnames = __webpack_require__("4d26");

var _classnames2 = _interopRequireDefault(_classnames);

var _warning = __webpack_require__("a7e2");

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var calcPoints = function calcPoints(vertical, marks, dots, step, min, max) {
  (0, _warning2['default'])(dots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
  var points = Object.keys(marks).map(parseFloat).sort(function (a, b) {
    return a - b;
  });
  if (dots) {
    for (var i = min; i <= max; i += step) {
      if (points.indexOf(i) === -1) {
        points.push(i);
      }
    }
  }
  return points;
};

var Steps = {
  functional: true,
  render: function render(h, context) {
    var _context$props = context.props,
        prefixCls = _context$props.prefixCls,
        vertical = _context$props.vertical,
        marks = _context$props.marks,
        dots = _context$props.dots,
        step = _context$props.step,
        included = _context$props.included,
        lowerBound = _context$props.lowerBound,
        upperBound = _context$props.upperBound,
        max = _context$props.max,
        min = _context$props.min,
        dotStyle = _context$props.dotStyle,
        activeDotStyle = _context$props.activeDotStyle;

    var range = max - min;
    var elements = calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
      var _classNames;

      var offset = Math.abs(point - min) / range * 100 + '%';

      var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
      var style = vertical ? (0, _extends3['default'])({ bottom: offset }, dotStyle) : (0, _extends3['default'])({ left: offset }, dotStyle);
      if (isActived) {
        style = (0, _extends3['default'])({}, style, activeDotStyle);
      }

      var pointClassName = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-dot', true), (0, _defineProperty3['default'])(_classNames, prefixCls + '-dot-active', isActived), _classNames));

      return h('span', { 'class': pointClassName, style: style, key: point });
    });

    return h(
      'div',
      { 'class': prefixCls + '-step' },
      [elements]
    );
  }
};

exports['default'] = Steps;

/***/ }),

/***/ "230e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var document = __webpack_require__("7726").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "23c6":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("2d95");
var TAG = __webpack_require__("2b4c")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "241e":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("25eb");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "2474":
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__("2b3e");

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),

/***/ "2478":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),

/***/ "24c5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("b8e3");
var global = __webpack_require__("e53d");
var ctx = __webpack_require__("d864");
var classof = __webpack_require__("40c3");
var $export = __webpack_require__("63b6");
var isObject = __webpack_require__("f772");
var aFunction = __webpack_require__("79aa");
var anInstance = __webpack_require__("1173");
var forOf = __webpack_require__("a22a");
var speciesConstructor = __webpack_require__("f201");
var task = __webpack_require__("4178").set;
var microtask = __webpack_require__("aba2")();
var newPromiseCapabilityModule = __webpack_require__("656e");
var perform = __webpack_require__("4439");
var userAgent = __webpack_require__("bc13");
var promiseResolve = __webpack_require__("cd78");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__("5168")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__("5c95")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__("45f2")($Promise, PROMISE);
__webpack_require__("4c95")(PROMISE);
Wrapper = __webpack_require__("584a")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__("4ee1")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "2524":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),

/***/ "253c":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ "25b0":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("1df8");
module.exports = __webpack_require__("584a").Object.setPrototypeOf;


/***/ }),

/***/ "25eb":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "2638":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=["attrs","props","domProps"],toArrayMerge=["class","style","directives"],functionalMerge=["on","nativeOn"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if("hook"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;


/***/ }),

/***/ "267e":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "268f":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("fde4");

/***/ }),

/***/ "28a5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__("aae3");
var anObject = __webpack_require__("cb7c");
var speciesConstructor = __webpack_require__("ebd6");
var advanceStringIndex = __webpack_require__("0390");
var toLength = __webpack_require__("9def");
var callRegExpExec = __webpack_require__("5f1b");
var regexpExec = __webpack_require__("520a");
var fails = __webpack_require__("79e5");
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__("214f")('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),

/***/ "28c9":
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),

/***/ "294c":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "29f3":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "2aba":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var hide = __webpack_require__("32e9");
var has = __webpack_require__("69a8");
var SRC = __webpack_require__("ca5a")('src');
var $toString = __webpack_require__("fa5b");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__("8378").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "2adb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return isIconDefinition; });
/* unused harmony export normalizeAttrs */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MiniMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return generate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return getSecondaryColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return withSuffix; });
/* harmony import */ var babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("41b2");
/* harmony import */ var babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("8827");
/* harmony import */ var babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("57ba");
/* harmony import */ var babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var ant_design_palettes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("20ba");
/* harmony import */ var ant_design_palettes__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ant_design_palettes__WEBPACK_IMPORTED_MODULE_3__);





function log(message) {
  if (!(process && Object({"NODE_ENV":"production","VUE_APP_CURRENTMODE":"production","BASE_URL":"/"}) && "production" === 'production')) {
    console.error('[@ant-design/icons-vue]: ' + message + '.');
  }
}

function isIconDefinition(target) {
  return typeof target === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (typeof target.icon === 'object' || typeof target.icon === 'function');
}

function normalizeAttrs() {
  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return Object.keys(attrs).reduce(function (acc, key) {
    var val = attrs[key];
    switch (key) {
      case 'class':
        acc.className = val;
        delete acc['class'];
        break;
      default:
        acc[key] = val;
    }
    return acc;
  }, {});
}

var MiniMap = function () {
  function MiniMap() {
    babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, MiniMap);

    this.collection = {};
  }

  babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(MiniMap, [{
    key: 'clear',
    value: function clear() {
      this.collection = {};
    }
  }, {
    key: 'delete',
    value: function _delete(key) {
      return delete this.collection[key];
    }
  }, {
    key: 'get',
    value: function get(key) {
      return this.collection[key];
    }
  }, {
    key: 'has',
    value: function has(key) {
      return Boolean(this.collection[key]);
    }
  }, {
    key: 'set',
    value: function set(key, value) {
      this.collection[key] = value;
      return this;
    }
  }, {
    key: 'size',
    get: function get() {
      return Object.keys(this.collection).length;
    }
  }]);

  return MiniMap;
}();

function generate(h, node, key, rootProps) {
  if (!rootProps) {
    return h(node.tag, { key: key, attrs: babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, normalizeAttrs(node.attrs)) }, (node.children || []).map(function (child, index) {
      return generate(h, child, key + '-' + node.tag + '-' + index);
    }));
  }
  return h(node.tag, babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({
    key: key
  }, rootProps, {
    attrs: babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, normalizeAttrs(node.attrs), rootProps.attrs)
  }), (node.children || []).map(function (child, index) {
    return generate(h, child, key + '-' + node.tag + '-' + index);
  }));
}

function getSecondaryColor(primaryColor) {
  // choose the second color
  return Object(ant_design_palettes__WEBPACK_IMPORTED_MODULE_3__["generate"])(primaryColor)[0];
}

function withSuffix(name, theme) {
  switch (theme) {
    case 'fill':
      return name + '-fill';
    case 'outline':
      return name + '-o';
    case 'twotone':
      return name + '-twotone';
    default:
      throw new TypeError('Unknown theme type: ' + theme + ', name: ' + name);
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "2aeb":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("cb7c");
var dPs = __webpack_require__("1495");
var enumBugKeys = __webpack_require__("e11e");
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("230e")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("fab2").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "2b3e":
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__("585a");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "2b4c":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("5537")('wks');
var uid = __webpack_require__("ca5a");
var Symbol = __webpack_require__("7726").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "2c80":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = addEventListener;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _EventObject = __webpack_require__("134b");

var _EventObject2 = _interopRequireDefault(_EventObject);

function addEventListener(target, eventType, callback, option) {
  function wrapCallback(e) {
    var ne = new _EventObject2['default'](e);
    callback.call(target, ne);
  }

  if (target.addEventListener) {
    var _ret = (function () {
      var useCapture = false;
      if (typeof option === 'object') {
        useCapture = option.capture || false;
      } else if (typeof option === 'boolean') {
        useCapture = option;
      }

      target.addEventListener(eventType, wrapCallback, option || false);

      return {
        v: {
          remove: function remove() {
            target.removeEventListener(eventType, wrapCallback, useCapture);
          }
        }
      };
    })();

    if (typeof _ret === 'object') return _ret.v;
  } else if (target.attachEvent) {
    target.attachEvent('on' + eventType, wrapCallback);
    return {
      remove: function remove() {
        target.detachEvent('on' + eventType, wrapCallback);
      }
    };
  }
}

module.exports = exports['default'];

/***/ }),

/***/ "2d00":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "2d38":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _babelHelperVueJsxMergeProps = __webpack_require__("92fa");

var _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _objectWithoutProperties2 = __webpack_require__("8e8e");

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

var _classnames = __webpack_require__("4d26");

var _classnames2 = _interopRequireDefault(_classnames);

var _propsUtil = __webpack_require__("73c8");

var _BaseMixin = __webpack_require__("48bb");

var _BaseMixin2 = _interopRequireDefault(_BaseMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  name: 'Checkbox',
  mixins: [_BaseMixin2['default']],
  inheritAttrs: false,
  model: {
    prop: 'checked',
    event: 'change'
  },
  props: (0, _propsUtil.initDefaultProps)({
    prefixCls: _vueTypes2['default'].string,
    name: _vueTypes2['default'].string,
    id: _vueTypes2['default'].string,
    type: _vueTypes2['default'].string,
    defaultChecked: _vueTypes2['default'].oneOfType([_vueTypes2['default'].number, _vueTypes2['default'].bool]),
    checked: _vueTypes2['default'].oneOfType([_vueTypes2['default'].number, _vueTypes2['default'].bool]),
    disabled: _vueTypes2['default'].bool,
    // onFocus: PropTypes.func,
    // onBlur: PropTypes.func,
    // onChange: PropTypes.func,
    // onClick: PropTypes.func,
    tabIndex: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].number]),
    readOnly: _vueTypes2['default'].bool,
    autoFocus: _vueTypes2['default'].bool,
    value: _vueTypes2['default'].any
  }, {
    prefixCls: 'rc-checkbox',
    type: 'checkbox',
    defaultChecked: false
  }),
  data: function data() {
    var checked = (0, _propsUtil.hasProp)(this, 'checked') ? this.checked : this.defaultChecked;
    return {
      sChecked: checked
    };
  },

  watch: {
    checked: function checked(val) {
      this.sChecked = val;
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      if (_this.autoFocus) {
        _this.$refs.input && _this.$refs.input.focus();
      }
    });
  },

  methods: {
    focus: function focus() {
      this.$refs.input.focus();
    },
    blur: function blur() {
      this.$refs.input.blur();
    },
    handleChange: function handleChange(e) {
      var props = (0, _propsUtil.getOptionProps)(this);
      if (props.disabled) {
        return;
      }
      if (!('checked' in props)) {
        this.sChecked = e.target.checked;
      }
      this.$forceUpdate(); // change前，维持现有状态
      this.__emit('change', {
        target: (0, _extends3['default'])({}, props, {
          checked: e.target.checked
        }),
        stopPropagation: function stopPropagation() {
          e.stopPropagation();
        },
        preventDefault: function preventDefault() {
          e.preventDefault();
        },

        nativeEvent: (0, _extends3['default'])({}, e, { shiftKey: this.eventShiftKey })
      });
      this.eventShiftKey = false;
    },
    onClick: function onClick(e) {
      this.__emit('click', e);
      // onChange没能获取到shiftKey，使用onClick hack
      this.eventShiftKey = e.shiftKey;
    }
  },

  render: function render() {
    var _classNames;

    var h = arguments[0];

    var _getOptionProps = (0, _propsUtil.getOptionProps)(this),
        prefixCls = _getOptionProps.prefixCls,
        name = _getOptionProps.name,
        id = _getOptionProps.id,
        type = _getOptionProps.type,
        disabled = _getOptionProps.disabled,
        readOnly = _getOptionProps.readOnly,
        tabIndex = _getOptionProps.tabIndex,
        autoFocus = _getOptionProps.autoFocus,
        value = _getOptionProps.value,
        others = (0, _objectWithoutProperties3['default'])(_getOptionProps, ['prefixCls', 'name', 'id', 'type', 'disabled', 'readOnly', 'tabIndex', 'autoFocus', 'value']);

    var attrs = (0, _propsUtil.getAttrs)(this);
    var globalProps = Object.keys((0, _extends3['default'])({}, others, attrs)).reduce(function (prev, key) {
      if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
        prev[key] = others[key];
      }
      return prev;
    }, {});

    var sChecked = this.sChecked;

    var classString = (0, _classnames2['default'])(prefixCls, (_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-checked', sChecked), (0, _defineProperty3['default'])(_classNames, prefixCls + '-disabled', disabled), _classNames));

    return h(
      'span',
      { 'class': classString },
      [h('input', (0, _babelHelperVueJsxMergeProps2['default'])([{
        attrs: {
          name: name,
          id: id,
          type: type,
          readOnly: readOnly,
          disabled: disabled,
          tabIndex: tabIndex,

          autoFocus: autoFocus
        },
        'class': prefixCls + '-input',
        domProps: {
          'checked': !!sChecked,
          'value': value
        },
        ref: 'input'
      }, {
        attrs: globalProps,
        on: (0, _extends3['default'])({}, this.$listeners, {
          change: this.handleChange,
          click: this.onClick
        })
      }])), h('span', { 'class': prefixCls + '-inner' })]
    );
  }
};

/***/ }),

/***/ "2d59":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _vmc_date_picker_locale_zh_CN__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ffc9");

/* harmony default export */ __webpack_exports__["default"] = ({
  okText: '确定',
  dismissText: '取消',
  extra: '请选择',
  DatePickerLocale: _vmc_date_picker_locale_zh_CN__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]
});

/***/ }),

/***/ "2d7c":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),

/***/ "2d7d":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("5037");

/***/ }),

/***/ "2d95":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "2dcb":
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__("91e9");

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),

/***/ "2f21":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("79e5");

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),

/***/ "2f37":
/***/ (function(module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = __webpack_require__("63b6");

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });


/***/ }),

/***/ "2f6c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a regular expression pattern.
 *
 *  Performs validation when a rule only contains
 *  a pattern property but is not declared as a string type.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (!(0, _util.isEmptyValue)(value, 'string')) {
      _rule2['default'].pattern(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = pattern;

/***/ }),

/***/ "2fcc":
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),

/***/ "2fdb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __webpack_require__("5ca1");
var context = __webpack_require__("d2c8");
var INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__("5147")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "3024":
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "30c9":
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__("9520"),
    isLength = __webpack_require__("b218");

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ "30f1":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__("b8e3");
var $export = __webpack_require__("63b6");
var redefine = __webpack_require__("9138");
var hide = __webpack_require__("35e8");
var Iterators = __webpack_require__("481b");
var $iterCreate = __webpack_require__("8f60");
var setToStringTag = __webpack_require__("45f2");
var getPrototypeOf = __webpack_require__("53e2");
var ITERATOR = __webpack_require__("5168")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "31f2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestAnimationTimeout = exports.cancelAnimationTimeout = undefined;

var _getRequestAnimationFrame = __webpack_require__("0ca5");

var _getRequestAnimationFrame2 = _interopRequireDefault(_getRequestAnimationFrame);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var raf = (0, _getRequestAnimationFrame2['default'])();

var cancelAnimationTimeout = exports.cancelAnimationTimeout = function cancelAnimationTimeout(frame) {
  return (0, _getRequestAnimationFrame.cancelRequestAnimationFrame)(frame.id);
};

var requestAnimationTimeout = exports.requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {
  var start = Date.now();
  function timeout() {
    if (Date.now() - start >= delay) {
      callback.call();
    } else {
      frame.id = raf(timeout);
    }
  }

  var frame = {
    id: raf(timeout)
  };

  return frame;
};

/***/ }),

/***/ "320c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "32a6":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__("241e");
var $keys = __webpack_require__("c3a1");

__webpack_require__("ce7e")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "32b3":
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__("872a"),
    eq = __webpack_require__("9638");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),

/***/ "32e9":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc");
var createDesc = __webpack_require__("4630");
module.exports = __webpack_require__("9e1e") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "32f4":
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__("2d7c"),
    stubArray = __webpack_require__("d327");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),

/***/ "32fc":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("e53d").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "335c":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("6b4c");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "34ac":
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__("9520"),
    isMasked = __webpack_require__("1368"),
    isObject = __webpack_require__("1a8c"),
    toSource = __webpack_require__("dc57");

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ "353c":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "355d":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "35e8":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("d9f6");
var createDesc = __webpack_require__("aebd");
module.exports = __webpack_require__("8e60") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "3698":
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ "36c3":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("335c");
var defined = __webpack_require__("25eb");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "3702":
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__("481b");
var ITERATOR = __webpack_require__("5168")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "3719":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("75b5");
module.exports = 0x1fffffffffffff;


/***/ }),

/***/ "3729":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69"),
    getRawTag = __webpack_require__("00fd"),
    objectToString = __webpack_require__("29f3");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "3818":
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__("7e64"),
    arrayEach = __webpack_require__("8057"),
    assignValue = __webpack_require__("32b3"),
    baseAssign = __webpack_require__("5b01"),
    baseAssignIn = __webpack_require__("0f0f"),
    cloneBuffer = __webpack_require__("e538"),
    copyArray = __webpack_require__("4359"),
    copySymbols = __webpack_require__("54eb"),
    copySymbolsIn = __webpack_require__("1041"),
    getAllKeys = __webpack_require__("a994"),
    getAllKeysIn = __webpack_require__("1bac"),
    getTag = __webpack_require__("42a2"),
    initCloneArray = __webpack_require__("c87c"),
    initCloneByTag = __webpack_require__("c2b6"),
    initCloneObject = __webpack_require__("fa21"),
    isArray = __webpack_require__("6747"),
    isBuffer = __webpack_require__("0d24"),
    isMap = __webpack_require__("cc45"),
    isObject = __webpack_require__("1a8c"),
    isSet = __webpack_require__("d7ee"),
    keys = __webpack_require__("ec69");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),

/***/ "3846":
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__("9e1e") && /./g.flags != 'g') __webpack_require__("86cc").f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__("0bfb")
});


/***/ }),

/***/ "386b":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("5ca1");
var fails = __webpack_require__("79e5");
var defined = __webpack_require__("be13");
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};


/***/ }),

/***/ "38fd":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__("69a8");
var toObject = __webpack_require__("4bf8");
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "39ff":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),

/***/ "3a38":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "3b2b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var inheritIfRequired = __webpack_require__("5dbc");
var dP = __webpack_require__("86cc").f;
var gOPN = __webpack_require__("9093").f;
var isRegExp = __webpack_require__("aae3");
var $flags = __webpack_require__("0bfb");
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__("9e1e") && (!CORRECT_NEW || __webpack_require__("79e5")(function () {
  re2[__webpack_require__("2b4c")('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__("2aba")(global, 'RegExp', $RegExp);
}

__webpack_require__("7a56")('RegExp');


/***/ }),

/***/ "3b4a":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07");

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),

/***/ "3c11":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__("63b6");
var core = __webpack_require__("584a");
var global = __webpack_require__("e53d");
var speciesConstructor = __webpack_require__("f201");
var promiseResolve = __webpack_require__("cd78");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "3c55":
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

try {
  var index = __webpack_require__("cecd");
} catch (err) {
  var index = __webpack_require__("cecd");
}

/**
 * Whitespace regexp.
 */

var re = /\s+/;

/**
 * toString reference.
 */

var toString = Object.prototype.toString;

/**
 * Wrap `el` in a `ClassList`.
 *
 * @param {Element} el
 * @return {ClassList}
 * @api public
 */

module.exports = function(el){
  return new ClassList(el);
};

/**
 * Initialize a new ClassList for `el`.
 *
 * @param {Element} el
 * @api private
 */

function ClassList(el) {
  if (!el || !el.nodeType) {
    throw new Error('A DOM element reference is required');
  }
  this.el = el;
  this.list = el.classList;
}

/**
 * Add class `name` if not already present.
 *
 * @param {String} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.add = function(name){
  // classList
  if (this.list) {
    this.list.add(name);
    return this;
  }

  // fallback
  var arr = this.array();
  var i = index(arr, name);
  if (!~i) arr.push(name);
  this.el.className = arr.join(' ');
  return this;
};

/**
 * Remove class `name` when present, or
 * pass a regular expression to remove
 * any which match.
 *
 * @param {String|RegExp} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.remove = function(name){
  if ('[object RegExp]' == toString.call(name)) {
    return this.removeMatching(name);
  }

  // classList
  if (this.list) {
    this.list.remove(name);
    return this;
  }

  // fallback
  var arr = this.array();
  var i = index(arr, name);
  if (~i) arr.splice(i, 1);
  this.el.className = arr.join(' ');
  return this;
};

/**
 * Remove all classes matching `re`.
 *
 * @param {RegExp} re
 * @return {ClassList}
 * @api private
 */

ClassList.prototype.removeMatching = function(re){
  var arr = this.array();
  for (var i = 0; i < arr.length; i++) {
    if (re.test(arr[i])) {
      this.remove(arr[i]);
    }
  }
  return this;
};

/**
 * Toggle class `name`, can force state via `force`.
 *
 * For browsers that support classList, but do not support `force` yet,
 * the mistake will be detected and corrected.
 *
 * @param {String} name
 * @param {Boolean} force
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.toggle = function(name, force){
  // classList
  if (this.list) {
    if ("undefined" !== typeof force) {
      if (force !== this.list.toggle(name, force)) {
        this.list.toggle(name); // toggle again to correct
      }
    } else {
      this.list.toggle(name);
    }
    return this;
  }

  // fallback
  if ("undefined" !== typeof force) {
    if (!force) {
      this.remove(name);
    } else {
      this.add(name);
    }
  } else {
    if (this.has(name)) {
      this.remove(name);
    } else {
      this.add(name);
    }
  }

  return this;
};

/**
 * Return an array of classes.
 *
 * @return {Array}
 * @api public
 */

ClassList.prototype.array = function(){
  var className = this.el.getAttribute('class') || '';
  var str = className.replace(/^\s+|\s+$/g, '');
  var arr = str.split(re);
  if ('' === arr[0]) arr.shift();
  return arr;
};

/**
 * Check if class `name` is present.
 *
 * @param {String} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.has =
ClassList.prototype.contains = function(name){
  return this.list
    ? this.list.contains(name)
    : !! ~index(this.array(), name);
};


/***/ }),

/***/ "3f6b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("51b6"), __esModule: true };

/***/ }),

/***/ "3ffb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  okText: '确定',
  cancelText: '取消'
});

/***/ }),

/***/ "401b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isCssAnimationSupported = undefined;

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _Event = __webpack_require__("e098");

var _Event2 = _interopRequireDefault(_Event);

var _componentClasses = __webpack_require__("3c55");

var _componentClasses2 = _interopRequireDefault(_componentClasses);

var _requestAnimationTimeout = __webpack_require__("31f2");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var isCssAnimationSupported = _Event2['default'].endEvents.length !== 0; // https://github.com/yiminghe/css-animation 1.5.0

var capitalPrefixes = ['Webkit', 'Moz', 'O',
// ms is special .... !
'ms'];
var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];

function getStyleProperty(node, name) {
  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
  var style = window.getComputedStyle(node, null);
  var ret = '';
  for (var i = 0; i < prefixes.length; i++) {
    ret = style.getPropertyValue(prefixes[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
}

function fixBrowserByTimeout(node) {
  if (isCssAnimationSupported) {
    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
    // sometimes, browser bug
    node.rcEndAnimTimeout = setTimeout(function () {
      node.rcEndAnimTimeout = null;
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }, time * 1000 + 200);
  }
}

function clearBrowserBugTimeout(node) {
  if (node.rcEndAnimTimeout) {
    clearTimeout(node.rcEndAnimTimeout);
    node.rcEndAnimTimeout = null;
  }
}

var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : (0, _typeof3['default'])(transitionName)) === 'object';
  var className = nameIsObj ? transitionName.name : transitionName;
  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';
  var end = endCallback;
  var start = void 0;
  var active = void 0;
  var nodeClasses = (0, _componentClasses2['default'])(node);

  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
    end = endCallback.end;
    start = endCallback.start;
    active = endCallback.active;
  }

  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      (0, _requestAnimationTimeout.cancelAnimationTimeout)(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);

    nodeClasses.remove(className);
    nodeClasses.remove(activeClassName);

    _Event2['default'].removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;

    // Usually this optional end is used for informing an owner of
    // a leave animation and telling it to remove the child.
    if (end) {
      end();
    }
  };

  _Event2['default'].addEndEventListener(node, node.rcEndListener);

  if (start) {
    start();
  }
  nodeClasses.add(className);

  node.rcAnimTimeout = (0, _requestAnimationTimeout.requestAnimationTimeout)(function () {
    node.rcAnimTimeout = null;
    nodeClasses.add(activeClassName);
    if (active) {
      (0, _requestAnimationTimeout.requestAnimationTimeout)(active, 0);
    }
    fixBrowserByTimeout(node);
    // 30ms for firefox
  }, 30);

  return {
    stop: function stop() {
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }
  };
};

cssAnimation.style = function (node, style, callback) {
  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      (0, _requestAnimationTimeout.cancelAnimationTimeout)(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);

    _Event2['default'].removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;

    // Usually this optional callback is used for informing an owner of
    // a leave animation and telling it to remove the child.
    if (callback) {
      callback();
    }
  };

  _Event2['default'].addEndEventListener(node, node.rcEndListener);

  node.rcAnimTimeout = (0, _requestAnimationTimeout.requestAnimationTimeout)(function () {
    for (var s in style) {
      if (style.hasOwnProperty(s)) {
        node.style[s] = style[s];
      }
    }
    node.rcAnimTimeout = null;
    fixBrowserByTimeout(node);
  }, 0);
};

cssAnimation.setTransition = function (node, p, value) {
  var property = p;
  var v = value;
  if (value === undefined) {
    v = property;
    property = '';
  }
  property = property || '';
  capitalPrefixes.forEach(function (prefix) {
    node.style[prefix + 'Transition' + property] = v;
  });
};

cssAnimation.isCssAnimationSupported = isCssAnimationSupported;

exports.isCssAnimationSupported = isCssAnimationSupported;
exports['default'] = cssAnimation;

/***/ }),

/***/ "4039":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @ignore
 * base event object for custom and dom event.
 * @author yiminghe@gmail.com
 */



Object.defineProperty(exports, "__esModule", {
  value: true
});
function returnFalse() {
  return false;
}

function returnTrue() {
  return true;
}

function EventBaseObject() {
  this.timeStamp = Date.now();
  this.target = undefined;
  this.currentTarget = undefined;
}

EventBaseObject.prototype = {
  isEventObject: 1,

  constructor: EventBaseObject,

  isDefaultPrevented: returnFalse,

  isPropagationStopped: returnFalse,

  isImmediatePropagationStopped: returnFalse,

  preventDefault: function preventDefault() {
    this.isDefaultPrevented = returnTrue;
  },

  stopPropagation: function stopPropagation() {
    this.isPropagationStopped = returnTrue;
  },

  stopImmediatePropagation: function stopImmediatePropagation() {
    this.isImmediatePropagationStopped = returnTrue;
    // fixed 1.2
    // call stopPropagation implicitly
    this.stopPropagation();
  },

  halt: function halt(immediate) {
    if (immediate) {
      this.stopImmediatePropagation();
    } else {
      this.stopPropagation();
    }
    this.preventDefault();
  }
};

exports["default"] = EventBaseObject;
module.exports = exports["default"];

/***/ }),

/***/ "40c3":
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__("6b4c");
var TAG = __webpack_require__("5168")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "4178":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("d864");
var invoke = __webpack_require__("3024");
var html = __webpack_require__("32fc");
var cel = __webpack_require__("1ec9");
var global = __webpack_require__("e53d");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__("6b4c")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "41a0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__("2aeb");
var descriptor = __webpack_require__("4630");
var setToStringTag = __webpack_require__("7f20");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__("32e9")(IteratorPrototype, __webpack_require__("2b4c")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "41b2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _assign = __webpack_require__("3f6b");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ }),

/***/ "41c3":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("1a8c"),
    isPrototype = __webpack_require__("eac5"),
    nativeKeysIn = __webpack_require__("ec8c");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),

/***/ "4245":
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__("1290");

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),

/***/ "425a":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "42a2":
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__("b5a7"),
    Map = __webpack_require__("79bc"),
    Promise = __webpack_require__("1cec"),
    Set = __webpack_require__("c869"),
    WeakMap = __webpack_require__("39ff"),
    baseGetTag = __webpack_require__("3729"),
    toSource = __webpack_require__("dc57");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),

/***/ "4359":
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),

/***/ "4362":
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
	setTimeout(fn, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__("df7c");
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),

/***/ "43fc":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__("63b6");
var newPromiseCapability = __webpack_require__("656e");
var perform = __webpack_require__("4439");

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),

/***/ "4439":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "44e6":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "4517":
/***/ (function(module, exports, __webpack_require__) {

var forOf = __webpack_require__("a22a");

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};


/***/ }),

/***/ "454f":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("46a7");
var $Object = __webpack_require__("584a").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "4588":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "45f2":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("d9f6").f;
var has = __webpack_require__("07e3");
var TAG = __webpack_require__("5168")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "45fd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classnames = __webpack_require__("4d26");

var _classnames2 = _interopRequireDefault(_classnames);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

var _BaseMixin = __webpack_require__("48bb");

var _BaseMixin2 = _interopRequireDefault(_BaseMixin);

var _propsUtil = __webpack_require__("73c8");

var _addEventListener = __webpack_require__("9778");

var _addEventListener2 = _interopRequireDefault(_addEventListener);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  name: 'Handle',
  mixins: [_BaseMixin2['default']],
  props: {
    prefixCls: _vueTypes2['default'].string,
    vertical: _vueTypes2['default'].bool,
    offset: _vueTypes2['default'].number,
    disabled: _vueTypes2['default'].bool,
    min: _vueTypes2['default'].number,
    max: _vueTypes2['default'].number,
    value: _vueTypes2['default'].number,
    tabIndex: _vueTypes2['default'].number,
    className: _vueTypes2['default'].string
    // handleFocus: PropTypes.func.def(noop),
    // handleBlur: PropTypes.func.def(noop),
  },
  data: function data() {
    return {
      clickFocused: false
    };
  },
  mounted: function mounted() {
    // mouseup won't trigger if mouse moved out of handle
    // so we listen on document here.
    this.onMouseUpListener = (0, _addEventListener2['default'])(document, 'mouseup', this.handleMouseUp);
  },
  beforeDestroy: function beforeDestroy() {
    if (this.onMouseUpListener) {
      this.onMouseUpListener.remove();
    }
  },

  methods: {
    setClickFocus: function setClickFocus(focused) {
      this.setState({ clickFocused: focused });
    },
    handleMouseUp: function handleMouseUp() {
      if (document.activeElement === this.$refs.handle) {
        this.setClickFocus(true);
      }
    },
    handleBlur: function handleBlur(e) {
      this.setClickFocus(false);
      this.__emit('blur', e);
    },
    handleKeyDown: function handleKeyDown() {
      this.setClickFocus(false);
    },
    clickFocus: function clickFocus() {
      this.setClickFocus(true);
      this.focus();
    },
    focus: function focus() {
      this.$refs.handle.focus();
    },
    blur: function blur() {
      this.$refs.handle.blur();
    },

    // when click can not focus in vue, use mousedown trigger focus
    handleMousedown: function handleMousedown(e) {
      this.focus();
      this.__emit('mousedown', e);
    }
  },
  render: function render() {
    var h = arguments[0];

    var _getOptionProps = (0, _propsUtil.getOptionProps)(this),
        prefixCls = _getOptionProps.prefixCls,
        vertical = _getOptionProps.vertical,
        offset = _getOptionProps.offset,
        disabled = _getOptionProps.disabled,
        min = _getOptionProps.min,
        max = _getOptionProps.max,
        value = _getOptionProps.value,
        tabIndex = _getOptionProps.tabIndex;

    var className = (0, _classnames2['default'])(this.$props.className, (0, _defineProperty3['default'])({}, prefixCls + '-handle-click-focused', this.clickFocused));

    var postionStyle = vertical ? { bottom: offset + '%' } : { left: offset + '%' };

    var ariaProps = {
      'aria-valuemin': min,
      'aria-valuemax': max,
      'aria-valuenow': value,
      'aria-disabled': !!disabled
    };

    var handleProps = {
      attrs: (0, _extends3['default'])({
        role: 'slider',
        tabIndex: disabled ? null : tabIndex || 0
      }, ariaProps),
      'class': className,
      on: (0, _extends3['default'])({}, this.$listeners, {
        blur: this.handleBlur,
        keydown: this.handleKeyDown,
        mousedown: this.handleMousedown
      }),
      ref: 'handle',
      style: postionStyle
    };
    return h('div', handleProps);
  }
};

/***/ }),

/***/ "4630":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "4671":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _PanelContent = __webpack_require__("72d3");

var _PanelContent2 = _interopRequireDefault(_PanelContent);

var _propsUtil = __webpack_require__("73c8");

var _vnode = __webpack_require__("d2f9");

var _commonProps = __webpack_require__("84e7");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  name: 'Panel',
  props: (0, _propsUtil.initDefaultProps)(_commonProps.panelProps, {
    showArrow: true,
    isActive: false,
    destroyInactivePanel: false,
    headerClass: '',
    forceRender: false
  }),
  methods: {
    handleItemClick: function handleItemClick() {
      this.$emit('itemClick');
    },
    handleKeyPress: function handleKeyPress(e) {
      if (e.key === 'Enter' || e.keyCode === 13 || e.which === 13) {
        this.handleItemClick();
      }
    }
  },
  render: function render() {
    var _headerCls, _itemCls;

    var h = arguments[0];
    var _$props = this.$props,
        prefixCls = _$props.prefixCls,
        headerClass = _$props.headerClass,
        isActive = _$props.isActive,
        showArrow = _$props.showArrow,
        destroyInactivePanel = _$props.destroyInactivePanel,
        disabled = _$props.disabled,
        openAnimation = _$props.openAnimation,
        accordion = _$props.accordion,
        forceRender = _$props.forceRender,
        expandIcon = _$props.expandIcon;
    var $slots = this.$slots;


    var transitionProps = {
      props: (0, _extends3['default'])({
        appear: true,
        css: false
      }),
      on: (0, _extends3['default'])({}, openAnimation)
    };
    var headerCls = (_headerCls = {}, (0, _defineProperty3['default'])(_headerCls, prefixCls + '-header', true), (0, _defineProperty3['default'])(_headerCls, headerClass, headerClass), _headerCls);
    var header = (0, _propsUtil.getComponentFromProp)(this, 'header');
    var itemCls = (_itemCls = {}, (0, _defineProperty3['default'])(_itemCls, prefixCls + '-item', true), (0, _defineProperty3['default'])(_itemCls, prefixCls + '-item-active', isActive), (0, _defineProperty3['default'])(_itemCls, prefixCls + '-item-disabled', disabled), _itemCls);
    var icon = null;
    if (showArrow && typeof expandIcon === 'function') {
      icon = (0, _vnode.cloneElement)(expandIcon(this.$props));
    }
    return h(
      'div',
      { 'class': itemCls, attrs: { role: 'tablist' }
      },
      [h(
        'div',
        {
          'class': headerCls,
          on: {
            'click': this.handleItemClick.bind(this),
            'keypress': this.handleKeyPress
          },
          attrs: {
            role: accordion ? 'tab' : 'button',
            tabIndex: disabled ? -1 : 0,
            'aria-expanded': isActive
          }
        },
        [showArrow && (icon || h('i', { 'class': 'arrow' })), header]
      ), h(
        'transition',
        transitionProps,
        [h(
          _PanelContent2['default'],
          {
            directives: [{
              name: 'show',
              value: isActive
            }],
            attrs: {
              prefixCls: prefixCls,
              isActive: isActive,
              destroyInactivePanel: destroyInactivePanel,
              forceRender: forceRender,
              role: accordion ? 'tabpanel' : null
            }
          },
          [$slots['default']]
        )]
      )]
    );
  }
};

/***/ }),

/***/ "469f":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6c1c");
__webpack_require__("1654");
module.exports = __webpack_require__("7d7b");


/***/ }),

/***/ "46a7":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("63b6");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__("8e60"), 'Object', { defineProperty: __webpack_require__("d9f6").f });


/***/ }),

/***/ "46cf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  install: function install(Vue) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var directiveName = options.name || 'ref';
    Vue.directive(directiveName, {
      bind: function bind(el, binding, vnode) {
        binding.value(vnode.componentInstance || el, vnode.key);
      },
      update: function update(el, binding, vnode, oldVnode) {
        if (oldVnode.data && oldVnode.data.directives) {
          var oldBinding = oldVnode.data.directives.find(function (directive) {
            var name = directive.name;
            return name === directiveName;
          });
          if (oldBinding && oldBinding.value !== binding.value) {
            oldBinding && oldBinding.value(null, oldVnode.key);
            binding.value(vnode.componentInstance || el, vnode.key);
            return;
          }
        }
        // Should not have this situation
        if (vnode.componentInstance !== oldVnode.componentInstance || vnode.elm !== oldVnode.elm) {
          binding.value(vnode.componentInstance || el, vnode.key);
        }
      },
      unbind: function unbind(el, binding, vnode) {
        binding.value(null, vnode.key);
      }
    });
  }
};

/***/ }),

/***/ "47ee":
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__("c3a1");
var gOPS = __webpack_require__("9aa9");
var pIE = __webpack_require__("355d");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "47fc":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "481b":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "4849":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("454f"), __esModule: true };

/***/ }),

/***/ "48bb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = __webpack_require__("9b57");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  // directives: {
  //   ref: {
  //     bind: function (el, binding, vnode) {
  //       binding.value(vnode.componentInstance ? vnode.componentInstance : vnode.elm)
  //     },
  //     update: function (el, binding, vnode) {
  //       binding.value(vnode.componentInstance ? vnode.componentInstance : vnode.elm)
  //     },
  //     unbind: function (el, binding, vnode) {
  //       binding.value(null)
  //     },
  //   },
  // },
  methods: {
    setState: function setState(state, callback) {
      var newState = typeof state === 'function' ? state(this.$data, this.$props) : state;
      // if (this.getDerivedStateFromProps) {
      //   Object.assign(newState, this.getDerivedStateFromProps(getOptionProps(this), { ...this.$data, ...newState }, true) || {})
      // }
      (0, _extends3['default'])(this.$data, newState);
      this.$nextTick(function () {
        callback && callback();
      });
    },
    __emit: function __emit() {
      // 直接调用listeners，底层组件不需要vueTool记录events
      var args = [].slice.call(arguments, 0);
      var filterEvent = [];
      var eventName = args[0];
      if (args.length && this.$listeners[eventName]) {
        if (filterEvent.includes(eventName)) {
          this.$emit.apply(this, [eventName].concat((0, _toConsumableArray3['default'])(args.slice(1))));
        } else {
          var _$listeners;

          (_$listeners = this.$listeners)[eventName].apply(_$listeners, (0, _toConsumableArray3['default'])(args.slice(1)));
        }
      }
    }
  }
};

/***/ }),

/***/ "49f4":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),

/***/ "4aa6":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("dc62");

/***/ }),

/***/ "4bf8":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "4c95":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("e53d");
var core = __webpack_require__("584a");
var dP = __webpack_require__("d9f6");
var DESCRIPTORS = __webpack_require__("8e60");
var SPECIES = __webpack_require__("5168")('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "4d16":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("25b0");

/***/ }),

/***/ "4d26":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "4ee1":
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__("5168")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "5037":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("c207");
__webpack_require__("1654");
__webpack_require__("6c1c");
__webpack_require__("837d");
__webpack_require__("5cb6");
__webpack_require__("fe1e");
__webpack_require__("7554");
module.exports = __webpack_require__("584a").Map;


/***/ }),

/***/ "50d8":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),

/***/ "50ed":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "5147":
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__("2b4c")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "5168":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("dbdb")('wks');
var uid = __webpack_require__("62a0");
var Symbol = __webpack_require__("e53d").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "5176":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("51b6");

/***/ }),

/***/ "51b6":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("a3c3");
module.exports = __webpack_require__("584a").Object.assign;


/***/ }),

/***/ "51eb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function required(rule, value, callback, source, options) {
  var errors = [];
  var type = Array.isArray(value) ? 'array' : typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value);
  _rule2['default'].required(rule, value, source, errors, options, type);
  callback(errors);
}

exports['default'] = required;

/***/ }),

/***/ "520a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__("0bfb");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "52a7":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "532b":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "53e2":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__("07e3");
var toObject = __webpack_require__("241e");
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "545c":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "5486":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__("658b");

__webpack_require__("5ac5");

__webpack_require__("8147");

/***/ }),

/***/ "549b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__("d864");
var $export = __webpack_require__("63b6");
var toObject = __webpack_require__("241e");
var call = __webpack_require__("b0dc");
var isArrayIter = __webpack_require__("3702");
var toLength = __webpack_require__("b447");
var createProperty = __webpack_require__("20fd");
var getIterFn = __webpack_require__("7cd6");

$export($export.S + $export.F * !__webpack_require__("4ee1")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "54a1":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6c1c");
__webpack_require__("1654");
module.exports = __webpack_require__("95d5");


/***/ }),

/***/ "54eb":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    getSymbols = __webpack_require__("32f4");

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),

/***/ "5537":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("8378");
var global = __webpack_require__("7726");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("2d00") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "5559":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("dbdb")('keys');
var uid = __webpack_require__("62a0");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "55a3":
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),

/***/ "55af":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "55dd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__("5ca1");
var aFunction = __webpack_require__("d8e8");
var toObject = __webpack_require__("4bf8");
var fails = __webpack_require__("79e5");
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__("2f21")($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "57a5":
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__("91e9");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ "57b1":
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__("d864");
var IObject = __webpack_require__("335c");
var toObject = __webpack_require__("241e");
var toLength = __webpack_require__("b447");
var asc = __webpack_require__("bfac");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "57ba":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__("4849");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),

/***/ "584a":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "585a":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "59ad":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("7be7");

/***/ }),

/***/ "5ac5":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("658b");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("938f");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);



/***/ }),

/***/ "5aee":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__("d9f6").f;
var create = __webpack_require__("a159");
var redefineAll = __webpack_require__("5c95");
var ctx = __webpack_require__("d864");
var anInstance = __webpack_require__("1173");
var forOf = __webpack_require__("a22a");
var $iterDefine = __webpack_require__("30f1");
var step = __webpack_require__("50ed");
var setSpecies = __webpack_require__("4c95");
var DESCRIPTORS = __webpack_require__("8e60");
var fastKey = __webpack_require__("ebfd").fastKey;
var validate = __webpack_require__("9f79");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "5b01":
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__("8eeb"),
    keys = __webpack_require__("ec69");

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),

/***/ "5b4e":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("36c3");
var toLength = __webpack_require__("b447");
var toAbsoluteIndex = __webpack_require__("0fc9");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "5bba":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9d98");
var $Object = __webpack_require__("584a").Object;
module.exports = function defineProperties(T, D) {
  return $Object.defineProperties(T, D);
};


/***/ }),

/***/ "5c25":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cssAnimation = __webpack_require__("401b");

var _cssAnimation2 = _interopRequireDefault(_cssAnimation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var noop = function noop() {};
var getTransitionProps = function getTransitionProps(transitionName) {
  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var beforeEnter = opt.beforeEnter,
      enter = opt.enter,
      afterEnter = opt.afterEnter,
      leave = opt.leave,
      afterLeave = opt.afterLeave,
      _opt$appear = opt.appear,
      appear = _opt$appear === undefined ? true : _opt$appear,
      tag = opt.tag;

  var transitionProps = {
    props: {
      appear: appear,
      css: false
    },
    on: {
      beforeEnter: beforeEnter || noop,
      enter: enter || function (el, done) {
        (0, _cssAnimation2['default'])(el, transitionName + '-enter', done);
      },
      afterEnter: afterEnter || noop,
      leave: leave || function (el, done) {
        (0, _cssAnimation2['default'])(el, transitionName + '-leave', done);
      },
      afterLeave: afterLeave || noop
    }
  };
  // transition-group
  if (tag) {
    transitionProps.tag = tag;
  }
  return transitionProps;
};

exports['default'] = getTransitionProps;

/***/ }),

/***/ "5c95":
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__("35e8");
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),

/***/ "5ca1":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("7726");
var core = __webpack_require__("8378");
var hide = __webpack_require__("32e9");
var redefine = __webpack_require__("2aba");
var ctx = __webpack_require__("9b43");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "5cb6":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = __webpack_require__("63b6");

$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__("f228")('Map') });


/***/ }),

/***/ "5cdc":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "5d1f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a number is an integer.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function integer(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = integer;

/***/ }),

/***/ "5d58":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("d8d6");

/***/ }),

/***/ "5d6b":
/***/ (function(module, exports, __webpack_require__) {

var $parseInt = __webpack_require__("e53d").parseInt;
var $trim = __webpack_require__("a1ce").trim;
var ws = __webpack_require__("e692");
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;


/***/ }),

/***/ "5d89":
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__("f8af");

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),

/***/ "5d90":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates an object.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function object(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = object;

/***/ }),

/***/ "5dbc":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var setPrototypeOf = __webpack_require__("8b97").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "5df3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__("02f4")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__("01f9")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "5e2e":
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__("28c9"),
    listCacheDelete = __webpack_require__("69d5"),
    listCacheGet = __webpack_require__("b4c0"),
    listCacheHas = __webpack_require__("fba5"),
    listCacheSet = __webpack_require__("67ca");

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),

/***/ "5f1b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__("23c6");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "5f3d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "6042":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__("4849");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ }),

/***/ "6044":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07");

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),

/***/ "60ed":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    getPrototype = __webpack_require__("2dcb"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),

/***/ "613b":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5537")('keys');
var uid = __webpack_require__("ca5a");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "626a":
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__("2d95");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "62a0":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "62e4":
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "63b6":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var core = __webpack_require__("584a");
var ctx = __webpack_require__("d864");
var hide = __webpack_require__("35e8");
var has = __webpack_require__("07e3");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "656e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__("79aa");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "658b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var normalize_css_normalize_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("f5df");
/* harmony import */ var normalize_css_normalize_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(normalize_css_normalize_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("19dd");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_1__);



/***/ }),

/***/ "65d9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
  * vue-class-component v6.3.2
  * (c) 2015-present Evan You
  * @license MIT
  */


Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Vue = _interopDefault(__webpack_require__("8bbf"));

var reflectionIsSupported = typeof Reflect !== 'undefined' && Reflect.defineMetadata;
function copyReflectionMetadata(to, from) {
    forwardMetadata(to, from);
    Object.getOwnPropertyNames(from.prototype).forEach(function (key) {
        forwardMetadata(to.prototype, from.prototype, key);
    });
    Object.getOwnPropertyNames(from).forEach(function (key) {
        forwardMetadata(to, from, key);
    });
}
function forwardMetadata(to, from, propertyKey) {
    var metaKeys = propertyKey
        ? Reflect.getOwnMetadataKeys(from, propertyKey)
        : Reflect.getOwnMetadataKeys(from);
    metaKeys.forEach(function (metaKey) {
        var metadata = propertyKey
            ? Reflect.getOwnMetadata(metaKey, from, propertyKey)
            : Reflect.getOwnMetadata(metaKey, from);
        if (propertyKey) {
            Reflect.defineMetadata(metaKey, metadata, to, propertyKey);
        }
        else {
            Reflect.defineMetadata(metaKey, metadata, to);
        }
    });
}

var fakeArray = { __proto__: [] };
var hasProto = fakeArray instanceof Array;
function createDecorator(factory) {
    return function (target, key, index) {
        var Ctor = typeof target === 'function'
            ? target
            : target.constructor;
        if (!Ctor.__decorators__) {
            Ctor.__decorators__ = [];
        }
        if (typeof index !== 'number') {
            index = undefined;
        }
        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });
    };
}
function mixins() {
    var Ctors = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        Ctors[_i] = arguments[_i];
    }
    return Vue.extend({ mixins: Ctors });
}
function isPrimitive(value) {
    var type = typeof value;
    return value == null || (type !== 'object' && type !== 'function');
}
function warn(message) {
    if (typeof console !== 'undefined') {
        console.warn('[vue-class-component] ' + message);
    }
}

function collectDataFromConstructor(vm, Component) {
    // override _init to prevent to init as Vue instance
    var originalInit = Component.prototype._init;
    Component.prototype._init = function () {
        var _this = this;
        // proxy to actual vm
        var keys = Object.getOwnPropertyNames(vm);
        // 2.2.0 compat (props are no longer exposed as self properties)
        if (vm.$options.props) {
            for (var key in vm.$options.props) {
                if (!vm.hasOwnProperty(key)) {
                    keys.push(key);
                }
            }
        }
        keys.forEach(function (key) {
            if (key.charAt(0) !== '_') {
                Object.defineProperty(_this, key, {
                    get: function () { return vm[key]; },
                    set: function (value) { vm[key] = value; },
                    configurable: true
                });
            }
        });
    };
    // should be acquired class property values
    var data = new Component();
    // restore original _init to avoid memory leak (#209)
    Component.prototype._init = originalInit;
    // create plain data object
    var plainData = {};
    Object.keys(data).forEach(function (key) {
        if (data[key] !== undefined) {
            plainData[key] = data[key];
        }
    });
    if (false) {}
    return plainData;
}

var $internalHooks = [
    'data',
    'beforeCreate',
    'created',
    'beforeMount',
    'mounted',
    'beforeDestroy',
    'destroyed',
    'beforeUpdate',
    'updated',
    'activated',
    'deactivated',
    'render',
    'errorCaptured' // 2.5
];
function componentFactory(Component, options) {
    if (options === void 0) { options = {}; }
    options.name = options.name || Component._componentTag || Component.name;
    // prototype props.
    var proto = Component.prototype;
    Object.getOwnPropertyNames(proto).forEach(function (key) {
        if (key === 'constructor') {
            return;
        }
        // hooks
        if ($internalHooks.indexOf(key) > -1) {
            options[key] = proto[key];
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        if (descriptor.value !== void 0) {
            // methods
            if (typeof descriptor.value === 'function') {
                (options.methods || (options.methods = {}))[key] = descriptor.value;
            }
            else {
                // typescript decorated data
                (options.mixins || (options.mixins = [])).push({
                    data: function () {
                        var _a;
                        return _a = {}, _a[key] = descriptor.value, _a;
                    }
                });
            }
        }
        else if (descriptor.get || descriptor.set) {
            // computed properties
            (options.computed || (options.computed = {}))[key] = {
                get: descriptor.get,
                set: descriptor.set
            };
        }
    });
    (options.mixins || (options.mixins = [])).push({
        data: function () {
            return collectDataFromConstructor(this, Component);
        }
    });
    // decorate options
    var decorators = Component.__decorators__;
    if (decorators) {
        decorators.forEach(function (fn) { return fn(options); });
        delete Component.__decorators__;
    }
    // find super
    var superProto = Object.getPrototypeOf(Component.prototype);
    var Super = superProto instanceof Vue
        ? superProto.constructor
        : Vue;
    var Extended = Super.extend(options);
    forwardStaticMembers(Extended, Component, Super);
    if (reflectionIsSupported) {
        copyReflectionMetadata(Extended, Component);
    }
    return Extended;
}
var reservedPropertyNames = [
    // Unique id
    'cid',
    // Super Vue constructor
    'super',
    // Component options that will be used by the component
    'options',
    'superOptions',
    'extendOptions',
    'sealedOptions',
    // Private assets
    'component',
    'directive',
    'filter'
];
function forwardStaticMembers(Extended, Original, Super) {
    // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable
    Object.getOwnPropertyNames(Original).forEach(function (key) {
        // `prototype` should not be overwritten
        if (key === 'prototype') {
            return;
        }
        // Some browsers does not allow reconfigure built-in properties
        var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);
        if (extendedDescriptor && !extendedDescriptor.configurable) {
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(Original, key);
        // If the user agent does not support `__proto__` or its family (IE <= 10),
        // the sub class properties may be inherited properties from the super class in TypeScript.
        // We need to exclude such properties to prevent to overwrite
        // the component options object which stored on the extended constructor (See #192).
        // If the value is a referenced value (object or function),
        // we can check equality of them and exclude it if they have the same reference.
        // If it is a primitive value, it will be forwarded for safety.
        if (!hasProto) {
            // Only `cid` is explicitly exluded from property forwarding
            // because we cannot detect whether it is a inherited property or not
            // on the no `__proto__` environment even though the property is reserved.
            if (key === 'cid') {
                return;
            }
            var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);
            if (!isPrimitive(descriptor.value) &&
                superDescriptor &&
                superDescriptor.value === descriptor.value) {
                return;
            }
        }
        // Warn if the users manually declare reserved properties
        if (false) {}
        Object.defineProperty(Extended, key, descriptor);
    });
}

function Component(options) {
    if (typeof options === 'function') {
        return componentFactory(options);
    }
    return function (Component) {
        return componentFactory(Component, options);
    };
}
Component.registerHooks = function registerHooks(keys) {
    $internalHooks.push.apply($internalHooks, keys);
};

exports.default = Component;
exports.createDecorator = createDecorator;
exports.mixins = mixins;


/***/ }),

/***/ "6692":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "66cb":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1
// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License

(function(Math) {

var trimLeft = /^\s+/,
    trimRight = /\s+$/,
    tinyCounter = 0,
    mathRound = Math.round,
    mathMin = Math.min,
    mathMax = Math.max,
    mathRandom = Math.random;

function tinycolor (color, opts) {

    color = (color) ? color : '';
    opts = opts || { };

    // If input is already a tinycolor, return itself
    if (color instanceof tinycolor) {
       return color;
    }
    // If we are called as a function, call using new instead
    if (!(this instanceof tinycolor)) {
        return new tinycolor(color, opts);
    }

    var rgb = inputToRGB(color);
    this._originalInput = color,
    this._r = rgb.r,
    this._g = rgb.g,
    this._b = rgb.b,
    this._a = rgb.a,
    this._roundA = mathRound(100*this._a) / 100,
    this._format = opts.format || rgb.format;
    this._gradientType = opts.gradientType;

    // Don't let the range of [0,255] come back in [0,1].
    // Potentially lose a little bit of precision here, but will fix issues where
    // .5 gets interpreted as half of the total, instead of half of 1
    // If it was supposed to be 128, this was already taken care of by `inputToRgb`
    if (this._r < 1) { this._r = mathRound(this._r); }
    if (this._g < 1) { this._g = mathRound(this._g); }
    if (this._b < 1) { this._b = mathRound(this._b); }

    this._ok = rgb.ok;
    this._tc_id = tinyCounter++;
}

tinycolor.prototype = {
    isDark: function() {
        return this.getBrightness() < 128;
    },
    isLight: function() {
        return !this.isDark();
    },
    isValid: function() {
        return this._ok;
    },
    getOriginalInput: function() {
      return this._originalInput;
    },
    getFormat: function() {
        return this._format;
    },
    getAlpha: function() {
        return this._a;
    },
    getBrightness: function() {
        //http://www.w3.org/TR/AERT#color-contrast
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    },
    getLuminance: function() {
        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        var rgb = this.toRgb();
        var RsRGB, GsRGB, BsRGB, R, G, B;
        RsRGB = rgb.r/255;
        GsRGB = rgb.g/255;
        BsRGB = rgb.b/255;

        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}
        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}
        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}
        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);
    },
    setAlpha: function(value) {
        this._a = boundAlpha(value);
        this._roundA = mathRound(100*this._a) / 100;
        return this;
    },
    toHsv: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
    },
    toHsvString: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
        return (this._a == 1) ?
          "hsv("  + h + ", " + s + "%, " + v + "%)" :
          "hsva(" + h + ", " + s + "%, " + v + "%, "+ this._roundA + ")";
    },
    toHsl: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
    },
    toHslString: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
        return (this._a == 1) ?
          "hsl("  + h + ", " + s + "%, " + l + "%)" :
          "hsla(" + h + ", " + s + "%, " + l + "%, "+ this._roundA + ")";
    },
    toHex: function(allow3Char) {
        return rgbToHex(this._r, this._g, this._b, allow3Char);
    },
    toHexString: function(allow3Char) {
        return '#' + this.toHex(allow3Char);
    },
    toHex8: function(allow4Char) {
        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
    },
    toHex8String: function(allow4Char) {
        return '#' + this.toHex8(allow4Char);
    },
    toRgb: function() {
        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
    },
    toRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :
          "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
    },
    toPercentageRgb: function() {
        return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
    },
    toPercentageRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" :
          "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
    },
    toName: function() {
        if (this._a === 0) {
            return "transparent";
        }

        if (this._a < 1) {
            return false;
        }

        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
    },
    toFilter: function(secondColor) {
        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);
        var secondHex8String = hex8String;
        var gradientType = this._gradientType ? "GradientType = 1, " : "";

        if (secondColor) {
            var s = tinycolor(secondColor);
            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);
        }

        return "progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";
    },
    toString: function(format) {
        var formatSet = !!format;
        format = format || this._format;

        var formattedString = false;
        var hasAlpha = this._a < 1 && this._a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");

        if (needsAlphaFormat) {
            // Special case for "transparent", all other non-alpha formats
            // will return rgba when there is transparency.
            if (format === "name" && this._a === 0) {
                return this.toName();
            }
            return this.toRgbString();
        }
        if (format === "rgb") {
            formattedString = this.toRgbString();
        }
        if (format === "prgb") {
            formattedString = this.toPercentageRgbString();
        }
        if (format === "hex" || format === "hex6") {
            formattedString = this.toHexString();
        }
        if (format === "hex3") {
            formattedString = this.toHexString(true);
        }
        if (format === "hex4") {
            formattedString = this.toHex8String(true);
        }
        if (format === "hex8") {
            formattedString = this.toHex8String();
        }
        if (format === "name") {
            formattedString = this.toName();
        }
        if (format === "hsl") {
            formattedString = this.toHslString();
        }
        if (format === "hsv") {
            formattedString = this.toHsvString();
        }

        return formattedString || this.toHexString();
    },
    clone: function() {
        return tinycolor(this.toString());
    },

    _applyModification: function(fn, args) {
        var color = fn.apply(null, [this].concat([].slice.call(args)));
        this._r = color._r;
        this._g = color._g;
        this._b = color._b;
        this.setAlpha(color._a);
        return this;
    },
    lighten: function() {
        return this._applyModification(lighten, arguments);
    },
    brighten: function() {
        return this._applyModification(brighten, arguments);
    },
    darken: function() {
        return this._applyModification(darken, arguments);
    },
    desaturate: function() {
        return this._applyModification(desaturate, arguments);
    },
    saturate: function() {
        return this._applyModification(saturate, arguments);
    },
    greyscale: function() {
        return this._applyModification(greyscale, arguments);
    },
    spin: function() {
        return this._applyModification(spin, arguments);
    },

    _applyCombination: function(fn, args) {
        return fn.apply(null, [this].concat([].slice.call(args)));
    },
    analogous: function() {
        return this._applyCombination(analogous, arguments);
    },
    complement: function() {
        return this._applyCombination(complement, arguments);
    },
    monochromatic: function() {
        return this._applyCombination(monochromatic, arguments);
    },
    splitcomplement: function() {
        return this._applyCombination(splitcomplement, arguments);
    },
    triad: function() {
        return this._applyCombination(triad, arguments);
    },
    tetrad: function() {
        return this._applyCombination(tetrad, arguments);
    }
};

// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
tinycolor.fromRatio = function(color, opts) {
    if (typeof color == "object") {
        var newColor = {};
        for (var i in color) {
            if (color.hasOwnProperty(i)) {
                if (i === "a") {
                    newColor[i] = color[i];
                }
                else {
                    newColor[i] = convertToPercentage(color[i]);
                }
            }
        }
        color = newColor;
    }

    return tinycolor(color, opts);
};

// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function inputToRGB(color) {

    var rgb = { r: 0, g: 0, b: 0 };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;

    if (typeof color == "string") {
        color = stringInputToObject(color);
    }

    if (typeof color == "object") {
        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s = convertToPercentage(color.s);
            v = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, s, v);
            ok = true;
            format = "hsv";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s = convertToPercentage(color.s);
            l = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, s, l);
            ok = true;
            format = "hsl";
        }

        if (color.hasOwnProperty("a")) {
            a = color.a;
        }
    }

    a = boundAlpha(a);

    return {
        ok: ok,
        format: color.format || format,
        r: mathMin(255, mathMax(rgb.r, 0)),
        g: mathMin(255, mathMax(rgb.g, 0)),
        b: mathMin(255, mathMax(rgb.b, 0)),
        a: a
    };
}


// Conversion Functions
// --------------------

// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

// `rgbToRgb`
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
function rgbToRgb(r, g, b){
    return {
        r: bound01(r, 255) * 255,
        g: bound01(g, 255) * 255,
        b: bound01(b, 255) * 255
    };
}

// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
function rgbToHsl(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, l = (max + min) / 2;

    if(max == min) {
        h = s = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }

        h /= 6;
    }

    return { h: h, s: s, l: l };
}

// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function hslToRgb(h, s, l) {
    var r, g, b;

    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);

    function hue2rgb(p, q, t) {
        if(t < 0) t += 1;
        if(t > 1) t -= 1;
        if(t < 1/6) return p + (q - p) * 6 * t;
        if(t < 1/2) return q;
        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
        return p;
    }

    if(s === 0) {
        r = g = b = l; // achromatic
    }
    else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1/3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1/3);
    }

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
function rgbToHsv(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, v = max;

    var d = max - min;
    s = max === 0 ? 0 : d / max;

    if(max == min) {
        h = 0; // achromatic
    }
    else {
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }
        h /= 6;
    }
    return { h: h, s: s, v: v };
}

// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
 function hsvToRgb(h, s, v) {

    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);

    var i = Math.floor(h),
        f = h - i,
        p = v * (1 - s),
        q = v * (1 - f * s),
        t = v * (1 - (1 - f) * s),
        mod = i % 6,
        r = [v, q, p, p, t, v][mod],
        g = [t, v, v, q, p, p][mod],
        b = [p, p, t, v, v, q][mod];

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
function rgbToHex(r, g, b, allow3Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    // Return a 3 character hex if possible
    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }

    return hex.join("");
}

// `rgbaToHex`
// Converts an RGBA color plus alpha transparency to hex
// Assumes r, g, b are contained in the set [0, 255] and
// a in [0, 1]. Returns a 4 or 8 character rgba hex
function rgbaToHex(r, g, b, a, allow4Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16)),
        pad2(convertDecimalToHex(a))
    ];

    // Return a 4 character hex if possible
    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }

    return hex.join("");
}

// `rgbaToArgbHex`
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
function rgbaToArgbHex(r, g, b, a) {

    var hex = [
        pad2(convertDecimalToHex(a)),
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    return hex.join("");
}

// `equals`
// Can be called with any tinycolor input
tinycolor.equals = function (color1, color2) {
    if (!color1 || !color2) { return false; }
    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};

tinycolor.random = function() {
    return tinycolor.fromRatio({
        r: mathRandom(),
        g: mathRandom(),
        b: mathRandom()
    });
};


// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

function desaturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function saturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function greyscale(color) {
    return tinycolor(color).desaturate(100);
}

function lighten (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

function brighten(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var rgb = tinycolor(color).toRgb();
    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));
    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));
    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));
    return tinycolor(rgb);
}

function darken (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function spin(color, amount) {
    var hsl = tinycolor(color).toHsl();
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    return tinycolor(hsl);
}

// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

function complement(color) {
    var hsl = tinycolor(color).toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return tinycolor(hsl);
}

function triad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
    ];
}

function tetrad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
    ];
}

function splitcomplement(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),
        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})
    ];
}

function analogous(color, results, slices) {
    results = results || 6;
    slices = slices || 30;

    var hsl = tinycolor(color).toHsl();
    var part = 360 / slices;
    var ret = [tinycolor(color)];

    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(tinycolor(hsl));
    }
    return ret;
}

function monochromatic(color, results) {
    results = results || 6;
    var hsv = tinycolor(color).toHsv();
    var h = hsv.h, s = hsv.s, v = hsv.v;
    var ret = [];
    var modification = 1 / results;

    while (results--) {
        ret.push(tinycolor({ h: h, s: s, v: v}));
        v = (v + modification) % 1;
    }

    return ret;
}

// Utility Functions
// ---------------------

tinycolor.mix = function(color1, color2, amount) {
    amount = (amount === 0) ? 0 : (amount || 50);

    var rgb1 = tinycolor(color1).toRgb();
    var rgb2 = tinycolor(color2).toRgb();

    var p = amount / 100;

    var rgba = {
        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,
        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,
        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,
        a: ((rgb2.a - rgb1.a) * p) + rgb1.a
    };

    return tinycolor(rgba);
};


// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)

// `contrast`
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
tinycolor.readability = function(color1, color2) {
    var c1 = tinycolor(color1);
    var c2 = tinycolor(color2);
    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);
};

// `isReadable`
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.

// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
tinycolor.isReadable = function(color1, color2, wcag2) {
    var readability = tinycolor.readability(color1, color2);
    var wcag2Parms, out;

    out = false;

    wcag2Parms = validateWCAG2Parms(wcag2);
    switch (wcag2Parms.level + wcag2Parms.size) {
        case "AAsmall":
        case "AAAlarge":
            out = readability >= 4.5;
            break;
        case "AAlarge":
            out = readability >= 3;
            break;
        case "AAAsmall":
            out = readability >= 7;
            break;
    }
    return out;

};

// `mostReadable`
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
tinycolor.mostReadable = function(baseColor, colorList, args) {
    var bestColor = null;
    var bestScore = 0;
    var readability;
    var includeFallbackColors, level, size ;
    args = args || {};
    includeFallbackColors = args.includeFallbackColors ;
    level = args.level;
    size = args.size;

    for (var i= 0; i < colorList.length ; i++) {
        readability = tinycolor.readability(baseColor, colorList[i]);
        if (readability > bestScore) {
            bestScore = readability;
            bestColor = tinycolor(colorList[i]);
        }
    }

    if (tinycolor.isReadable(baseColor, bestColor, {"level":level,"size":size}) || !includeFallbackColors) {
        return bestColor;
    }
    else {
        args.includeFallbackColors=false;
        return tinycolor.mostReadable(baseColor,["#fff", "#000"],args);
    }
};


// Big List of Colors
// ------------------
// <http://www.w3.org/TR/css3-color/#svg-color>
var names = tinycolor.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32"
};

// Make it easy to access colors via `hexNames[hex]`
var hexNames = tinycolor.hexNames = flip(names);


// Utilities
// ---------

// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
function flip(o) {
    var flipped = { };
    for (var i in o) {
        if (o.hasOwnProperty(i)) {
            flipped[o[i]] = i;
        }
    }
    return flipped;
}

// Return a valid alpha value [0,1] with all invalid values being set to 1
function boundAlpha(a) {
    a = parseFloat(a);

    if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
    }

    return a;
}

// Take input from [0, n] and return it as [0, 1]
function bound01(n, max) {
    if (isOnePointZero(n)) { n = "100%"; }

    var processPercent = isPercentage(n);
    n = mathMin(max, mathMax(0, parseFloat(n)));

    // Automatically convert percentage into number
    if (processPercent) {
        n = parseInt(n * max, 10) / 100;
    }

    // Handle floating point rounding errors
    if ((Math.abs(n - max) < 0.000001)) {
        return 1;
    }

    // Convert into [0, 1] range if it isn't already
    return (n % max) / parseFloat(max);
}

// Force a number between 0 and 1
function clamp01(val) {
    return mathMin(1, mathMax(0, val));
}

// Parse a base-16 hex value into a base-10 integer
function parseIntFromHex(val) {
    return parseInt(val, 16);
}

// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
function isOnePointZero(n) {
    return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
}

// Check to see if string passed in is a percentage
function isPercentage(n) {
    return typeof n === "string" && n.indexOf('%') != -1;
}

// Force a hex value to have 2 characters
function pad2(c) {
    return c.length == 1 ? '0' + c : '' + c;
}

// Replace a decimal with it's percentage value
function convertToPercentage(n) {
    if (n <= 1) {
        n = (n * 100) + "%";
    }

    return n;
}

// Converts a decimal to a hex value
function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
}
// Converts a hex value to a decimal
function convertHexToDecimal(h) {
    return (parseIntFromHex(h) / 255);
}

var matchers = (function() {

    // <http://www.w3.org/TR/css3-values/#integers>
    var CSS_INTEGER = "[-\\+]?\\d+%?";

    // <http://www.w3.org/TR/css3-values/#number-value>
    var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

    // Actual matching.
    // Parentheses and commas are optional, but not required.
    // Whitespace can take the place of commas or opening paren
    var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

    return {
        CSS_UNIT: new RegExp(CSS_UNIT),
        rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
        rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
        hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
        hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
        hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
        hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };
})();

// `isValidCSSUnit`
// Take in a single string / number and check to see if it looks like a CSS unit
// (see `matchers` above for definition).
function isValidCSSUnit(color) {
    return !!matchers.CSS_UNIT.exec(color);
}

// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function stringInputToObject(color) {

    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();
    var named = false;
    if (names[color]) {
        color = names[color];
        named = true;
    }
    else if (color == 'transparent') {
        return { r: 0, g: 0, b: 0, a: 0, format: "name" };
    }

    // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.
    var match;
    if ((match = matchers.rgb.exec(color))) {
        return { r: match[1], g: match[2], b: match[3] };
    }
    if ((match = matchers.rgba.exec(color))) {
        return { r: match[1], g: match[2], b: match[3], a: match[4] };
    }
    if ((match = matchers.hsl.exec(color))) {
        return { h: match[1], s: match[2], l: match[3] };
    }
    if ((match = matchers.hsla.exec(color))) {
        return { h: match[1], s: match[2], l: match[3], a: match[4] };
    }
    if ((match = matchers.hsv.exec(color))) {
        return { h: match[1], s: match[2], v: match[3] };
    }
    if ((match = matchers.hsva.exec(color))) {
        return { h: match[1], s: match[2], v: match[3], a: match[4] };
    }
    if ((match = matchers.hex8.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex6.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? "name" : "hex"
        };
    }
    if ((match = matchers.hex4.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            a: convertHexToDecimal(match[4] + '' + match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex3.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            format: named ? "name" : "hex"
        };
    }

    return false;
}

function validateWCAG2Parms(parms) {
    // return valid WCAG2 parms for isReadable.
    // If input parms are invalid, return {"level":"AA", "size":"small"}
    var level, size;
    parms = parms || {"level":"AA", "size":"small"};
    level = (parms.level || "AA").toUpperCase();
    size = (parms.size || "small").toLowerCase();
    if (level !== "AA" && level !== "AAA") {
        level = "AA";
    }
    if (size !== "small" && size !== "large") {
        size = "small";
    }
    return {"level":level, "size":size};
}

// Node: Export function
if ( true && module.exports) {
    module.exports = tinycolor;
}
// AMD/requirejs: Define the module
else if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}
// Browser: Expose to window
else {}

})(Math);


/***/ }),

/***/ "6718":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var core = __webpack_require__("584a");
var LIBRARY = __webpack_require__("b8e3");
var wksExt = __webpack_require__("ccb9");
var defineProperty = __webpack_require__("d9f6").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "6747":
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "6762":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__("5ca1");
var $includes = __webpack_require__("c366")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__("9c6c")('includes');


/***/ }),

/***/ "67bb":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("f921");

/***/ }),

/***/ "67ca":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),

/***/ "6821":
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__("626a");
var defined = __webpack_require__("be13");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "68f7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__("63b6");
var aFunction = __webpack_require__("79aa");
var ctx = __webpack_require__("d864");
var forOf = __webpack_require__("a22a");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};


/***/ }),

/***/ "696e":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("c207");
__webpack_require__("1654");
__webpack_require__("6c1c");
__webpack_require__("24c5");
__webpack_require__("3c11");
__webpack_require__("43fc");
module.exports = __webpack_require__("584a").Promise;


/***/ }),

/***/ "69a8":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "69d3":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6718")('asyncIterator');


/***/ }),

/***/ "69d5":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),

/***/ "6a99":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__("d3f4");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "6abf":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__("e6f3");
var hiddenKeys = __webpack_require__("1691").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "6b4c":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "6b54":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("3846");
var anObject = __webpack_require__("cb7c");
var $flags = __webpack_require__("0bfb");
var DESCRIPTORS = __webpack_require__("9e1e");
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__("2aba")(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__("79e5")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),

/***/ "6c1c":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("c367");
var global = __webpack_require__("e53d");
var hide = __webpack_require__("35e8");
var Iterators = __webpack_require__("481b");
var TO_STRING_TAG = __webpack_require__("5168")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "6d08":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "6f6c":
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),

/***/ "6fcd":
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__("50d8"),
    isArguments = __webpack_require__("d370"),
    isArray = __webpack_require__("6747"),
    isBuffer = __webpack_require__("0d24"),
    isIndex = __webpack_require__("c098"),
    isTypedArray = __webpack_require__("73ac");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),

/***/ "7075":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__("63b6");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};


/***/ }),

/***/ "70b3":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "71c1":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("3a38");
var defined = __webpack_require__("25eb");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "721c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function type(rule, value, callback, source, options) {
  var ruleType = rule.type;
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, ruleType) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options, ruleType);
    if (!(0, _util.isEmptyValue)(value, ruleType)) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = type;

/***/ }),

/***/ "722e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _cssAnimation = __webpack_require__("401b");

var _cssAnimation2 = _interopRequireDefault(_cssAnimation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function animate(node, show, transitionName, done) {
  var height = void 0;
  return (0, _cssAnimation2['default'])(node, transitionName, {
    start: function start() {
      if (!show) {
        node.style.height = node.offsetHeight + 'px';
      } else {
        height = node.offsetHeight;
        node.style.height = 0;
      }
    },
    active: function active() {
      node.style.height = (show ? height : 0) + 'px';
    },
    end: function end() {
      node.style.height = '';
      done();
    }
  });
}

function animation(prefixCls) {
  return {
    enter: function enter(node, done) {
      return animate(node, true, prefixCls + '-anim', done);
    },
    leave: function leave(node, done) {
      return animate(node, false, prefixCls + '-anim', done);
    }
  };
}

exports['default'] = animation;

/***/ }),

/***/ "7277":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "72d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  name: 'PanelContent',
  props: {
    prefixCls: _vueTypes2['default'].string,
    isActive: _vueTypes2['default'].bool,
    destroyInactivePanel: _vueTypes2['default'].bool,
    forceRender: _vueTypes2['default'].bool,
    role: _vueTypes2['default'].any
  },
  data: function data() {
    return {
      _isActive: undefined
    };
  },
  render: function render() {
    var _contentCls;

    var h = arguments[0];

    this._isActive = this.forceRender || this._isActive || this.isActive;
    if (!this._isActive) {
      return null;
    }
    var _$props = this.$props,
        prefixCls = _$props.prefixCls,
        isActive = _$props.isActive,
        destroyInactivePanel = _$props.destroyInactivePanel,
        forceRender = _$props.forceRender,
        role = _$props.role;
    var $slots = this.$slots;

    var contentCls = (_contentCls = {}, (0, _defineProperty3['default'])(_contentCls, prefixCls + '-content', true), (0, _defineProperty3['default'])(_contentCls, prefixCls + '-content-active', isActive), _contentCls);
    var child = !forceRender && !isActive && destroyInactivePanel ? null : h(
      'div',
      { 'class': prefixCls + '-content-box' },
      [$slots['default']]
    );
    return h(
      'div',
      { 'class': contentCls, attrs: { role: role }
      },
      [child]
    );
  }
};

/***/ }),

/***/ "730c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates an array.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function array(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, 'array') && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options, 'array');
    if (!(0, _util.isEmptyValue)(value, 'array')) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = array;

/***/ }),

/***/ "73ac":
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__("743f"),
    baseUnary = __webpack_require__("b047"),
    nodeUtil = __webpack_require__("99d3");

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ "73c8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAllChildren = exports.getAllProps = exports.getSlots = exports.camelize = exports.isValidElement = exports.initDefaultProps = exports.parseStyleText = exports.getValueByProp = exports.getAttrs = exports.getKey = exports.getPropsData = exports.slotHasProp = exports.getSlotOptions = exports.getComponentFromProp = exports.getOptionProps = exports.filterProps = exports.hasProp = undefined;

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _slicedToArray2 = __webpack_require__("b24f");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

exports.getEvents = getEvents;
exports.getClass = getClass;
exports.getStyle = getStyle;
exports.getComponentName = getComponentName;
exports.isEmptyElement = isEmptyElement;
exports.filterEmpty = filterEmpty;
exports.mergeProps = mergeProps;

var _isPlainObject = __webpack_require__("60ed");

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _classnames = __webpack_require__("4d26");

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function getType(fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : '';
}

var camelizeRE = /-(\w)/g;
var camelize = function camelize(str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
};
var parseStyleText = function parseStyleText() {
  var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var camel = arguments[1];

  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      if (tmp.length > 1) {
        var k = camel ? camelize(tmp[0].trim()) : tmp[0].trim();
        res[k] = tmp[1].trim();
      }
    }
  });
  return res;
};

var hasProp = function hasProp(instance, prop) {
  var $options = instance.$options || {};
  var propsData = $options.propsData || {};
  return prop in propsData;
};
var slotHasProp = function slotHasProp(slot, prop) {
  var $options = slot.componentOptions || {};
  var propsData = $options.propsData || {};
  return prop in propsData;
};
var filterProps = function filterProps(props) {
  var propsData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var res = {};
  Object.keys(props).forEach(function (k) {
    if (k in propsData || props[k] !== undefined) {
      res[k] = props[k];
    }
  });
  return res;
};
var getSlots = function getSlots(ele) {
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }
  var children = ele.children || componentOptions.children || [];
  var slots = {};
  children.forEach(function (child) {
    if (!isEmptyElement(child)) {
      var name = child.data && child.data.slot || 'default';
      slots[name] = slots[name] || [];
      slots[name].push(child);
    }
  });
  return slots;
};
var getAllChildren = function getAllChildren(ele) {
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }
  return ele.children || componentOptions.children || [];
};
var getSlotOptions = function getSlotOptions(ele) {
  if (ele.fnOptions) {
    // 函数式组件
    return ele.fnOptions;
  }
  var componentOptions = ele.componentOptions;
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions;
  }
  return componentOptions ? componentOptions.Ctor.options || {} : {};
};
var getOptionProps = function getOptionProps(instance) {
  if (instance.componentOptions) {
    var componentOptions = instance.componentOptions;
    var _componentOptions$pro = componentOptions.propsData,
        propsData = _componentOptions$pro === undefined ? {} : _componentOptions$pro,
        _componentOptions$Cto = componentOptions.Ctor,
        Ctor = _componentOptions$Cto === undefined ? {} : _componentOptions$Cto;

    var props = (Ctor.options || {}).props || {};
    var res = {};
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = Object.entries(props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _ref = _step.value;

        var _ref2 = (0, _slicedToArray3['default'])(_ref, 2);

        var k = _ref2[0];
        var v = _ref2[1];

        var def = v['default'];
        if (def !== undefined) {
          res[k] = typeof def === 'function' && getType(v.type) !== 'Function' ? def.call(instance) : def;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return (0, _extends3['default'])({}, res, propsData);
  }
  var _instance$$options = instance.$options,
      $options = _instance$$options === undefined ? {} : _instance$$options,
      _instance$$props = instance.$props,
      $props = _instance$$props === undefined ? {} : _instance$$props;

  return filterProps($props, $options.propsData);
};

var getComponentFromProp = function getComponentFromProp(instance, prop) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (instance.$createElement) {
    var h = instance.$createElement;
    var temp = instance[prop];
    if (temp !== undefined) {
      return typeof temp === 'function' && execute ? temp(h, options) : temp;
    }
    return instance.$slots[prop] || instance.$scopedSlots[prop] && execute && instance.$scopedSlots[prop](options) || instance.$scopedSlots[prop] || undefined;
  } else {
    var _h = instance.context.$createElement;
    var _temp = getPropsData(instance)[prop];
    if (_temp !== undefined) {
      return typeof _temp === 'function' && execute ? _temp(_h, options) : _temp;
    }
    var slotsProp = [];
    var componentOptions = instance.componentOptions || {};
    (componentOptions.children || []).forEach(function (child) {
      if (child.data && child.data.slot === prop) {
        if (child.tag === 'template') {
          slotsProp.push(child.children);
        } else {
          slotsProp.push(child);
        }
      }
    });
    return slotsProp.length ? slotsProp : undefined;
  }
};

var getAllProps = function getAllProps(ele) {
  var data = ele.data || {};
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    data = ele.$vnode.data || {};
    componentOptions = ele.$vnode.componentOptions || {};
  }
  return (0, _extends3['default'])({}, data.props, data.attrs, componentOptions.propsData);
};

var getPropsData = function getPropsData(ele) {
  var componentOptions = ele.componentOptions;
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions;
  }
  return componentOptions ? componentOptions.propsData || {} : {};
};
var getValueByProp = function getValueByProp(ele, prop) {
  return getPropsData(ele)[prop];
};

var getAttrs = function getAttrs(ele) {
  var data = ele.data;
  if (ele.$vnode) {
    data = ele.$vnode.data;
  }
  return data ? data.attrs || {} : {};
};

var getKey = function getKey(ele) {
  var key = ele.key;
  if (ele.$vnode) {
    key = ele.$vnode.key;
  }
  return key;
};

function getEvents(child) {
  var events = {};
  if (child.componentOptions && child.componentOptions.listeners) {
    events = child.componentOptions.listeners;
  } else if (child.data && child.data.on) {
    events = child.data.on;
  }
  return (0, _extends3['default'])({}, events);
}
function getClass(ele) {
  var data = {};
  if (ele.data) {
    data = ele.data;
  } else if (ele.$vnode && ele.$vnode.data) {
    data = ele.$vnode.data;
  }
  var tempCls = data['class'] || {};
  var staticClass = data.staticClass;
  var cls = {};
  staticClass && staticClass.split(' ').forEach(function (c) {
    cls[c.trim()] = true;
  });
  if (typeof tempCls === 'string') {
    tempCls.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else if (Array.isArray(tempCls)) {
    (0, _classnames2['default'])(tempCls).split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = (0, _extends3['default'])({}, cls, tempCls);
  }
  return cls;
}
function getStyle(ele, camel) {
  var data = {};
  if (ele.data) {
    data = ele.data;
  } else if (ele.$vnode && ele.$vnode.data) {
    data = ele.$vnode.data;
  }
  var style = data.style || data.staticStyle;
  if (typeof style === 'string') {
    style = parseStyleText(style, camel);
  } else if (camel && style) {
    // 驼峰化
    var res = {};
    Object.keys(style).forEach(function (k) {
      return res[camelize(k)] = style[k];
    });
    return res;
  }
  return style;
}

function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}

function isEmptyElement(c) {
  return !(c.tag || c.text && c.text.trim() !== '');
}

function filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  return children.filter(function (c) {
    return !isEmptyElement(c);
  });
}
var initDefaultProps = function initDefaultProps(propTypes, defaultProps) {
  Object.keys(defaultProps).forEach(function (k) {
    if (propTypes[k]) {
      propTypes[k].def && (propTypes[k] = propTypes[k].def(defaultProps[k]));
    } else {
      throw new Error('not have ' + k + ' prop');
    }
  });
  return propTypes;
};

function mergeProps() {
  var args = [].slice.call(arguments, 0);
  var props = {};
  args.forEach(function () {
    var p = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = Object.entries(p)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var _ref3 = _step2.value;

        var _ref4 = (0, _slicedToArray3['default'])(_ref3, 2);

        var k = _ref4[0];
        var v = _ref4[1];

        props[k] = props[k] || {};
        if ((0, _isPlainObject2['default'])(v)) {
          (0, _extends3['default'])(props[k], v);
        } else {
          props[k] = v;
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  });
  return props;
}

function isValidElement(element) {
  return element && (typeof element === 'undefined' ? 'undefined' : (0, _typeof3['default'])(element)) === 'object' && 'componentOptions' in element && 'context' in element && element.tag !== undefined; // remove text node
}

exports.hasProp = hasProp;
exports.filterProps = filterProps;
exports.getOptionProps = getOptionProps;
exports.getComponentFromProp = getComponentFromProp;
exports.getSlotOptions = getSlotOptions;
exports.slotHasProp = slotHasProp;
exports.getPropsData = getPropsData;
exports.getKey = getKey;
exports.getAttrs = getAttrs;
exports.getValueByProp = getValueByProp;
exports.parseStyleText = parseStyleText;
exports.initDefaultProps = initDefaultProps;
exports.isValidElement = isValidElement;
exports.camelize = camelize;
exports.getSlots = getSlots;
exports.getAllProps = getAllProps;
exports.getAllChildren = getAllChildren;
exports['default'] = hasProp;

/***/ }),

/***/ "743f":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    isLength = __webpack_require__("b218"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ "7445":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("63b6");
var $parseInt = __webpack_require__("5d6b");
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });


/***/ }),

/***/ "7477":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "7514":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__("5ca1");
var $find = __webpack_require__("0a49")(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__("9c6c")(KEY);


/***/ }),

/***/ "7530":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("1a8c");

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),

/***/ "7554":
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
__webpack_require__("68f7")('Map');


/***/ }),

/***/ "75b5":
/***/ (function(module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = __webpack_require__("63b6");

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });


/***/ }),

/***/ "765d":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("6718")('observable');


/***/ }),

/***/ "7726":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "774e":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("d2d5");

/***/ }),

/***/ "77f1":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("4588");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "78e1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  prevText: '上一页',
  nextText: '下一页'
});

/***/ }),

/***/ "794b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("8e60") && !__webpack_require__("294c")(function () {
  return Object.defineProperty(__webpack_require__("1ec9")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "795b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("696e");

/***/ }),

/***/ "79aa":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "79bc":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ "79e5":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "7a48":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),

/***/ "7a56":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("7726");
var dP = __webpack_require__("86cc");
var DESCRIPTORS = __webpack_require__("9e1e");
var SPECIES = __webpack_require__("2b4c")('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "7b44":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _isPlainObject = __webpack_require__("60ed");

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _utils = __webpack_require__("bb78");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var VuePropTypes = {
  get any() {
    return (0, _utils.toType)('any', {
      type: null
    });
  },

  get func() {
    return (0, _utils.toType)('function', {
      type: Function
    }).def(currentDefaults.func);
  },

  get bool() {
    return (0, _utils.toType)('boolean', {
      type: Boolean
    }).def(currentDefaults.bool);
  },

  get string() {
    return (0, _utils.toType)('string', {
      type: String
    }).def(currentDefaults.string);
  },

  get number() {
    return (0, _utils.toType)('number', {
      type: Number
    }).def(currentDefaults.number);
  },

  get array() {
    return (0, _utils.toType)('array', {
      type: Array
    }).def(currentDefaults.array);
  },

  get object() {
    return (0, _utils.toType)('object', {
      type: Object
    }).def(currentDefaults.object);
  },

  get integer() {
    return (0, _utils.toType)('integer', {
      type: Number,
      validator: function validator(value) {
        return (0, _utils.isInteger)(value);
      }
    }).def(currentDefaults.integer);
  },

  get symbol() {
    return (0, _utils.toType)('symbol', {
      type: null,
      validator: function validator(value) {
        return (typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value)) === 'symbol';
      }
    });
  },

  custom: function custom(validatorFn) {
    var warnMsg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'custom validation failed';

    if (typeof validatorFn !== 'function') {
      throw new TypeError('[VueTypes error]: You must provide a function as argument');
    }

    return (0, _utils.toType)(validatorFn.name || '<<anonymous function>>', {
      validator: function validator() {
        var valid = validatorFn.apply(undefined, arguments);
        if (!valid) (0, _utils.warn)(this._vueTypes_name + ' - ' + warnMsg);
        return valid;
      }
    });
  },
  oneOf: function oneOf(arr) {
    if (!(0, _utils.isArray)(arr)) {
      throw new TypeError('[VueTypes error]: You must provide an array as argument');
    }
    var msg = 'oneOf - value should be one of "' + arr.join('", "') + '"';
    var allowedTypes = arr.reduce(function (ret, v) {
      if (v !== null && v !== undefined) {
        ret.indexOf(v.constructor) === -1 && ret.push(v.constructor);
      }
      return ret;
    }, []);

    return (0, _utils.toType)('oneOf', {
      type: allowedTypes.length > 0 ? allowedTypes : null,
      validator: function validator(value) {
        var valid = arr.indexOf(value) !== -1;
        if (!valid) (0, _utils.warn)(msg);
        return valid;
      }
    });
  },
  instanceOf: function instanceOf(instanceConstructor) {
    return (0, _utils.toType)('instanceOf', {
      type: instanceConstructor
    });
  },
  oneOfType: function oneOfType(arr) {
    if (!(0, _utils.isArray)(arr)) {
      throw new TypeError('[VueTypes error]: You must provide an array as argument');
    }

    var hasCustomValidators = false;

    var nativeChecks = arr.reduce(function (ret, type) {
      if ((0, _isPlainObject2['default'])(type)) {
        if (type._vueTypes_name === 'oneOf') {
          return ret.concat(type.type || []);
        }
        if (type.type && !(0, _utils.isFunction)(type.validator)) {
          if ((0, _utils.isArray)(type.type)) return ret.concat(type.type);
          ret.push(type.type);
        } else if ((0, _utils.isFunction)(type.validator)) {
          hasCustomValidators = true;
        }
        return ret;
      }
      ret.push(type);
      return ret;
    }, []);

    if (!hasCustomValidators) {
      // we got just native objects (ie: Array, Object)
      // delegate to Vue native prop check
      return (0, _utils.toType)('oneOfType', {
        type: nativeChecks
      }).def(undefined);
    }

    var typesStr = arr.map(function (type) {
      if (type && (0, _utils.isArray)(type.type)) {
        return type.type.map(_utils.getType);
      }
      return (0, _utils.getType)(type);
    }).reduce(function (ret, type) {
      return ret.concat((0, _utils.isArray)(type) ? type : [type]);
    }, []).join('", "');

    return this.custom(function oneOfType(value) {
      var valid = arr.some(function (type) {
        if (type._vueTypes_name === 'oneOf') {
          return type.type ? (0, _utils.validateType)(type.type, value, true) : true;
        }
        return (0, _utils.validateType)(type, value, true);
      });
      if (!valid) (0, _utils.warn)('oneOfType - value type should be one of "' + typesStr + '"');
      return valid;
    }).def(undefined);
  },
  arrayOf: function arrayOf(type) {
    return (0, _utils.toType)('arrayOf', {
      type: Array,
      validator: function validator(values) {
        var valid = values.every(function (value) {
          return (0, _utils.validateType)(type, value);
        });
        if (!valid) (0, _utils.warn)('arrayOf - value must be an array of "' + (0, _utils.getType)(type) + '"');
        return valid;
      }
    });
  },
  objectOf: function objectOf(type) {
    return (0, _utils.toType)('objectOf', {
      type: Object,
      validator: function validator(obj) {
        var valid = Object.keys(obj).every(function (key) {
          return (0, _utils.validateType)(type, obj[key]);
        });
        if (!valid) (0, _utils.warn)('objectOf - value must be an object of "' + (0, _utils.getType)(type) + '"');
        return valid;
      }
    });
  },
  shape: function shape(obj) {
    var keys = Object.keys(obj);
    var requiredKeys = keys.filter(function (key) {
      return obj[key] && obj[key].required === true;
    });

    var type = (0, _utils.toType)('shape', {
      type: Object,
      validator: function validator(value) {
        var _this = this;

        if (!(0, _isPlainObject2['default'])(value)) {
          return false;
        }
        var valueKeys = Object.keys(value);

        // check for required keys (if any)
        if (requiredKeys.length > 0 && requiredKeys.some(function (req) {
          return valueKeys.indexOf(req) === -1;
        })) {
          (0, _utils.warn)('shape - at least one of required properties "' + requiredKeys.join('", "') + '" is not present');
          return false;
        }

        return valueKeys.every(function (key) {
          if (keys.indexOf(key) === -1) {
            if (_this._vueTypes_isLoose === true) return true;
            (0, _utils.warn)('shape - object is missing "' + key + '" property');
            return false;
          }
          var type = obj[key];
          return (0, _utils.validateType)(type, value[key]);
        });
      }
    });

    Object.defineProperty(type, '_vueTypes_isLoose', {
      enumerable: false,
      writable: true,
      value: false
    });

    Object.defineProperty(type, 'loose', {
      get: function get() {
        this._vueTypes_isLoose = true;
        return this;
      },

      enumerable: false
    });

    return type;
  }
};

var typeDefaults = function typeDefaults() {
  return {
    func: undefined,
    bool: undefined,
    string: undefined,
    number: undefined,
    array: undefined,
    object: undefined,
    integer: undefined
  };
};

var currentDefaults = typeDefaults();

Object.defineProperty(VuePropTypes, 'sensibleDefaults', {
  enumerable: false,
  set: function set(value) {
    if (value === false) {
      currentDefaults = {};
    } else if (value === true) {
      currentDefaults = typeDefaults();
    } else if ((0, _isPlainObject2['default'])(value)) {
      currentDefaults = value;
    }
  },
  get: function get() {
    return currentDefaults;
  }
});

exports['default'] = VuePropTypes;

/***/ }),

/***/ "7b83":
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__("7c64"),
    mapCacheDelete = __webpack_require__("93ed"),
    mapCacheGet = __webpack_require__("2478"),
    mapCacheHas = __webpack_require__("a524"),
    mapCacheSet = __webpack_require__("1fc8");

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),

/***/ "7be7":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("0a90");
module.exports = __webpack_require__("584a").parseFloat;


/***/ }),

/***/ "7c64":
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__("e24b"),
    ListCache = __webpack_require__("5e2e"),
    Map = __webpack_require__("79bc");

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),

/***/ "7cd6":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("40c3");
var ITERATOR = __webpack_require__("5168")('iterator');
var Iterators = __webpack_require__("481b");
module.exports = __webpack_require__("584a").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "7d1f":
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__("087d"),
    isArray = __webpack_require__("6747");

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),

/***/ "7d6d":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__("63b6");
var $values = __webpack_require__("13c8")(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),

/***/ "7d7b":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("e4ae");
var get = __webpack_require__("7cd6");
module.exports = __webpack_require__("584a").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "7e64":
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__("5e2e"),
    stackClear = __webpack_require__("efb6"),
    stackDelete = __webpack_require__("2fcc"),
    stackGet = __webpack_require__("802a"),
    stackHas = __webpack_require__("55a3"),
    stackSet = __webpack_require__("d02c");

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),

/***/ "7e90":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("d9f6");
var anObject = __webpack_require__("e4ae");
var getKeys = __webpack_require__("c3a1");

module.exports = __webpack_require__("8e60") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "7f20":
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__("86cc").f;
var has = __webpack_require__("69a8");
var TAG = __webpack_require__("2b4c")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "7f7f":
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__("86cc").f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__("9e1e") && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),

/***/ "802a":
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),

/***/ "8034":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("a21f"), __esModule: true };

/***/ }),

/***/ "8057":
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),

/***/ "8147":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8378":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "837d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__("5aee");
var validate = __webpack_require__("9f79");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__("ada4")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),

/***/ "8436":
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "84e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.panelProps = exports.collapseProps = undefined;

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var collapseProps = {
  prefixCls: _vueTypes2['default'].string,
  activeKey: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].arrayOf(_vueTypes2['default'].string)]),
  defaultActiveKey: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].arrayOf(_vueTypes2['default'].string)]),
  accordion: _vueTypes2['default'].bool,
  destroyInactivePanel: _vueTypes2['default'].bool,
  bordered: _vueTypes2['default'].bool,
  expandIcon: _vueTypes2['default'].func,
  openAnimation: _vueTypes2['default'].object
};

var panelProps = {
  openAnimation: _vueTypes2['default'].object,
  prefixCls: _vueTypes2['default'].string,
  header: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].number, _vueTypes2['default'].node]),
  headerClass: _vueTypes2['default'].string,
  showArrow: _vueTypes2['default'].bool,
  isActive: _vueTypes2['default'].bool,
  destroyInactivePanel: _vueTypes2['default'].bool,
  disabled: _vueTypes2['default'].bool,
  accordion: _vueTypes2['default'].bool,
  forceRender: _vueTypes2['default'].bool,
  expandIcon: _vueTypes2['default'].func
};

exports.collapseProps = collapseProps;
exports.panelProps = panelProps;

/***/ }),

/***/ "84f2":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "85f2":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("454f");

/***/ }),

/***/ "86cc":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("cb7c");
var IE8_DOM_DEFINE = __webpack_require__("c69a");
var toPrimitive = __webpack_require__("6a99");
var dP = Object.defineProperty;

exports.f = __webpack_require__("9e1e") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "86e5":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "872a":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("3b4a");

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),

/***/ "87d7":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8827":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),

/***/ "887c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a number.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function number(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if (value === '') {
      value = undefined;
    }
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = number;

/***/ }),

/***/ "89d7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),

/***/ "8aae":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("32a6");
module.exports = __webpack_require__("584a").Object.keys;


/***/ }),

/***/ "8b54":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Notification = __webpack_require__("1af7");

var _Notification2 = _interopRequireDefault(_Notification);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = _Notification2['default']; // based on rc-notification 3.3.0

/***/ }),

/***/ "8b97":
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__("d3f4");
var anObject = __webpack_require__("cb7c");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__("9b43")(Function.call, __webpack_require__("11e9").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = require("Vue");

/***/ }),

/***/ "8bd2":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("3719");

/***/ }),

/***/ "8c44":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _string = __webpack_require__("ccff");

var _string2 = _interopRequireDefault(_string);

var _method = __webpack_require__("acdb");

var _method2 = _interopRequireDefault(_method);

var _number = __webpack_require__("887c");

var _number2 = _interopRequireDefault(_number);

var _boolean = __webpack_require__("12d4");

var _boolean2 = _interopRequireDefault(_boolean);

var _regexp = __webpack_require__("1ce5");

var _regexp2 = _interopRequireDefault(_regexp);

var _integer = __webpack_require__("5d1f");

var _integer2 = _interopRequireDefault(_integer);

var _float = __webpack_require__("123a");

var _float2 = _interopRequireDefault(_float);

var _array = __webpack_require__("730c");

var _array2 = _interopRequireDefault(_array);

var _object = __webpack_require__("5d90");

var _object2 = _interopRequireDefault(_object);

var _enum = __webpack_require__("ae3c");

var _enum2 = _interopRequireDefault(_enum);

var _pattern = __webpack_require__("2f6c");

var _pattern2 = _interopRequireDefault(_pattern);

var _date = __webpack_require__("9b23");

var _date2 = _interopRequireDefault(_date);

var _required = __webpack_require__("51eb");

var _required2 = _interopRequireDefault(_required);

var _type = __webpack_require__("721c");

var _type2 = _interopRequireDefault(_type);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  string: _string2['default'],
  method: _method2['default'],
  number: _number2['default'],
  boolean: _boolean2['default'],
  regexp: _regexp2['default'],
  integer: _integer2['default'],
  float: _float2['default'],
  array: _array2['default'],
  object: _object2['default'],
  'enum': _enum2['default'],
  pattern: _pattern2['default'],
  date: _date2['default'],
  url: _type2['default'],
  hex: _type2['default'],
  email: _type2['default'],
  required: _required2['default']
};

/***/ }),

/***/ "8cd7":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8e34":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8e60":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("294c")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "8e8e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

/***/ }),

/***/ "8eeb":
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__("32b3"),
    baseAssignValue = __webpack_require__("872a");

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),

/***/ "8f3c":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "8f60":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__("a159");
var descriptor = __webpack_require__("aebd");
var setToStringTag = __webpack_require__("45f2");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__("35e8")(IteratorPrototype, __webpack_require__("5168")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "8fcf":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9003":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__("6b4c");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "9093":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__("ce10");
var hiddenKeys = __webpack_require__("e11e").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "9138":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("35e8");


/***/ }),

/***/ "91dd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ "91e9":
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ "92fa":
/***/ (function(module, exports) {

var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/

module.exports = function mergeJSXProps (objs) {
  return objs.reduce(function (a, b) {
    var aa, bb, key, nestedKey, temp
    for (key in b) {
      aa = a[key]
      bb = b[key]
      if (aa && nestRE.test(key)) {
        // normalize class
        if (key === 'class') {
          if (typeof aa === 'string') {
            temp = aa
            a[key] = aa = {}
            aa[temp] = true
          }
          if (typeof bb === 'string') {
            temp = bb
            b[key] = bb = {}
            bb[temp] = true
          }
        }
        if (key === 'on' || key === 'nativeOn' || key === 'hook') {
          // merge functions
          for (nestedKey in bb) {
            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey])
          }
        } else if (Array.isArray(aa)) {
          a[key] = aa.concat(bb)
        } else if (Array.isArray(bb)) {
          a[key] = [aa].concat(bb)
        } else {
          for (nestedKey in bb) {
            aa[nestedKey] = bb[nestedKey]
          }
        }
      } else {
        a[key] = b[key]
      }
    }
    return a
  }, {})
}

function mergeFn (a, b) {
  return function () {
    a && a.apply(this, arguments)
    b && b.apply(this, arguments)
  }
}


/***/ }),

/***/ "9306":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__("c3a1");
var gOPS = __webpack_require__("9aa9");
var pIE = __webpack_require__("355d");
var toObject = __webpack_require__("241e");
var IObject = __webpack_require__("335c");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__("294c")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "9372":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "938f":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "93ed":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),

/***/ "93ff":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("54a1"), __esModule: true };

/***/ }),

/***/ "9427":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("63b6");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__("a159") });


/***/ }),

/***/ "9479":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var ILazyRenderBoxPropTypes = {
  visible: _vueTypes2['default'].bool,
  hiddenClassName: _vueTypes2['default'].string
};

exports['default'] = {
  props: ILazyRenderBoxPropTypes,
  render: function render() {
    var h = arguments[0];

    return h('div', [this.$slots['default']]);
  }
};

/***/ }),

/***/ "9517":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _babelHelperVueJsxMergeProps = __webpack_require__("92fa");

var _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends3 = __webpack_require__("41b2");

var _extends4 = _interopRequireDefault(_extends3);

var _propsUtil = __webpack_require__("73c8");

var _KeyCode = __webpack_require__("af09");

var _KeyCode2 = _interopRequireDefault(_KeyCode);

var _contains = __webpack_require__("ac69");

var _contains2 = _interopRequireDefault(_contains);

var _LazyRenderBox = __webpack_require__("9479");

var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);

var _BaseMixin = __webpack_require__("48bb");

var _BaseMixin2 = _interopRequireDefault(_BaseMixin);

var _getTransitionProps = __webpack_require__("5c25");

var _getTransitionProps2 = _interopRequireDefault(_getTransitionProps);

var _getScrollBarSize = __webpack_require__("c26e");

var _getScrollBarSize2 = _interopRequireDefault(_getScrollBarSize);

var _IDialogPropTypes = __webpack_require__("9a8b");

var _IDialogPropTypes2 = _interopRequireDefault(_IDialogPropTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var IDialogPropTypes = (0, _IDialogPropTypes2['default'])();

var uuid = 0;
var openCount = 0;

/* eslint react/no-is-mounted:0 */
function noop() {}
function getScroll(w, top) {
  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
  var method = 'scroll' + (top ? 'Top' : 'Left');
  if (typeof ret !== 'number') {
    var d = w.document;
    ret = d.documentElement[method];
    if (typeof ret !== 'number') {
      ret = d.body[method];
    }
  }
  return ret;
}

function setTransformOrigin(node, value) {
  var style = node.style;
  ['Webkit', 'Moz', 'Ms', 'ms'].forEach(function (prefix) {
    style[prefix + 'TransformOrigin'] = value;
  });
  style['transformOrigin'] = value;
}

function offset(el) {
  var rect = el.getBoundingClientRect();
  var pos = {
    left: rect.left,
    top: rect.top
  };
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScroll(w);
  pos.top += getScroll(w, true);
  return pos;
}
var initDefaultProps = function initDefaultProps(propTypes, defaultProps) {
  return Object.keys(defaultProps).map(function (k) {
    return propTypes[k].def(defaultProps[k]);
  });
};
exports['default'] = {
  mixins: [_BaseMixin2['default']],
  props: (0, _extends4['default'])({}, IDialogPropTypes, initDefaultProps(IDialogPropTypes, {
    mask: true,
    visible: false,
    keyboard: true,
    closable: true,
    maskClosable: true,
    destroyOnClose: false,
    prefixCls: 'rc-dialog'
  })),
  data: function data() {
    return {
      destroyPopup: false
    };
  },


  watch: {
    visible: function visible(val) {
      var _this = this;

      if (val) {
        this.destroyPopup = false;
      }
      this.$nextTick(function () {
        _this.updatedCallback(!val);
      });
    }
  },

  // private inTransition: boolean;
  // private titleId: string;
  // private openTime: number;
  // private lastOutSideFocusNode: HTMLElement | null;
  // private wrap: HTMLElement;
  // private dialog: any;
  // private sentinel: HTMLElement;
  // private bodyIsOverflowing: boolean;
  // private scrollbarWidth: number;

  beforeMount: function beforeMount() {
    this.inTransition = false;
    this.titleId = 'rcDialogTitle' + uuid++;
  },
  mounted: function mounted() {
    var _this2 = this;

    this.$nextTick(function () {
      _this2.updatedCallback(false);
    });
  },
  beforeDestroy: function beforeDestroy() {
    if (this.visible || this.inTransition) {
      this.removeScrollingEffect();
    }
  },

  methods: {
    updatedCallback: function updatedCallback(visible) {
      var mousePosition = this.mousePosition;
      if (this.visible) {
        // first show
        if (!visible) {
          this.openTime = Date.now();
          // this.lastOutSideFocusNode = document.activeElement
          this.addScrollingEffect();
          // this.$refs.wrap.focus()
          this.tryFocus();
          var dialogNode = this.$refs.dialog.$el;
          if (mousePosition) {
            var elOffset = offset(dialogNode);
            setTransformOrigin(dialogNode, mousePosition.x - elOffset.left + 'px ' + (mousePosition.y - elOffset.top) + 'px');
          } else {
            setTransformOrigin(dialogNode, '');
          }
        }
      } else if (visible) {
        this.inTransition = true;
        if (this.mask && this.lastOutSideFocusNode) {
          try {
            this.lastOutSideFocusNode.focus();
          } catch (e) {
            this.lastOutSideFocusNode = null;
          }
          this.lastOutSideFocusNode = null;
        }
      }
    },
    tryFocus: function tryFocus() {
      if (!(0, _contains2['default'])(this.$refs.wrap, document.activeElement)) {
        this.lastOutSideFocusNode = document.activeElement;
        this.$refs.sentinelStart.focus();
      }
    },
    onAnimateLeave: function onAnimateLeave() {
      var afterClose = this.afterClose,
          destroyOnClose = this.destroyOnClose;
      // need demo?
      // https://github.com/react-component/dialog/pull/28

      if (this.$refs.wrap) {
        this.$refs.wrap.style.display = 'none';
      }
      if (destroyOnClose) {
        this.destroyPopup = true;
      }
      this.inTransition = false;
      this.removeScrollingEffect();
      if (afterClose) {
        afterClose();
      }
    },
    onMaskClick: function onMaskClick(e) {
      // android trigger click on open (fastclick??)
      if (Date.now() - this.openTime < 300) {
        return;
      }
      if (e.target === e.currentTarget) {
        this.close(e);
      }
    },
    onKeydown: function onKeydown(e) {
      var props = this.$props;
      if (props.keyboard && e.keyCode === _KeyCode2['default'].ESC) {
        e.stopPropagation();
        this.close(e);
        return;
      }
      // keep focus inside dialog
      if (props.visible) {
        if (e.keyCode === _KeyCode2['default'].TAB) {
          var activeElement = document.activeElement;
          var sentinelStart = this.$refs.sentinelStart;
          if (e.shiftKey) {
            if (activeElement === sentinelStart) {
              this.$refs.sentinelEnd.focus();
            }
          } else if (activeElement === this.$refs.sentinelEnd) {
            sentinelStart.focus();
          }
        }
      }
    },
    getDialogElement: function getDialogElement() {
      var h = this.$createElement;
      var closable = this.closable,
          prefixCls = this.prefixCls,
          width = this.width,
          height = this.height,
          title = this.title,
          tempFooter = this.footer,
          bodyStyle = this.bodyStyle,
          visible = this.visible,
          bodyProps = this.bodyProps;

      var dest = {};
      if (width !== undefined) {
        dest.width = typeof width === 'number' ? width + 'px' : width;
      }
      if (height !== undefined) {
        dest.height = typeof height === 'number' ? height + 'px' : height;
      }

      var footer = void 0;
      if (tempFooter) {
        footer = h(
          'div',
          { key: 'footer', 'class': prefixCls + '-footer', ref: 'footer' },
          [tempFooter]
        );
      }

      var header = void 0;
      if (title) {
        header = h(
          'div',
          { key: 'header', 'class': prefixCls + '-header', ref: 'header' },
          [h(
            'div',
            { 'class': prefixCls + '-title', attrs: { id: this.titleId }
            },
            [title]
          )]
        );
      }

      var closer = void 0;
      if (closable) {
        var closeIcon = (0, _propsUtil.getComponentFromProp)(this, 'closeIcon');
        closer = h(
          'button',
          {
            key: 'close',
            on: {
              'click': this.close || noop
            },
            attrs: {
              'aria-label': 'Close'
            },
            'class': prefixCls + '-close'
          },
          [closeIcon || h('span', { 'class': prefixCls + '-close-x' })]
        );
      }

      var style = (0, _extends4['default'])({}, this.dialogStyle, dest);
      var sentinelStyle = { width: 0, height: 0, overflow: 'hidden' };
      var cls = (0, _extends4['default'])((0, _defineProperty3['default'])({}, prefixCls, true), this.dialogClass);
      var transitionName = this.getTransitionName();
      var dialogElement = h(
        _LazyRenderBox2['default'],
        {
          directives: [{
            name: 'show',
            value: visible
          }],

          key: 'dialog-element',
          attrs: { role: 'document'
          },
          ref: 'dialog',
          style: style,
          'class': cls
        },
        [h(
          'div',
          {
            attrs: { tabIndex: 0 },
            ref: 'sentinelStart', style: sentinelStyle },
          ['sentinelStart']
        ), h(
          'div',
          { 'class': prefixCls + '-content' },
          [closer, header, h(
            'div',
            (0, _babelHelperVueJsxMergeProps2['default'])([{ key: 'body', 'class': prefixCls + '-body', style: bodyStyle, ref: 'body' }, bodyProps]),
            [this.$slots['default']]
          ), footer]
        ), h(
          'div',
          {
            attrs: { tabIndex: 0 },
            ref: 'sentinelEnd', style: sentinelStyle },
          ['sentinelEnd']
        )]
      );
      var dialogTransitionProps = (0, _getTransitionProps2['default'])(transitionName, {
        afterLeave: this.onAnimateLeave
      });
      return h(
        'transition',
        (0, _babelHelperVueJsxMergeProps2['default'])([{ key: 'dialog' }, dialogTransitionProps]),
        [visible || !this.destroyPopup ? dialogElement : null]
      );
    },
    getZIndexStyle: function getZIndexStyle() {
      var style = {};
      var props = this.$props;
      if (props.zIndex !== undefined) {
        style.zIndex = props.zIndex;
      }
      return style;
    },
    getWrapStyle: function getWrapStyle() {
      return (0, _extends4['default'])({}, this.getZIndexStyle(), this.wrapStyle);
    },
    getMaskStyle: function getMaskStyle() {
      return (0, _extends4['default'])({}, this.getZIndexStyle(), this.maskStyle);
    },
    getMaskElement: function getMaskElement() {
      var h = this.$createElement;

      var props = this.$props;
      var maskElement = void 0;
      if (props.mask) {
        var maskTransition = this.getMaskTransitionName();
        maskElement = h(_LazyRenderBox2['default'], (0, _babelHelperVueJsxMergeProps2['default'])([{
          directives: [{
            name: 'show',
            value: props.visible
          }],

          style: this.getMaskStyle(),
          key: 'mask',
          'class': props.prefixCls + '-mask'
        }, props.maskProps]));
        if (maskTransition) {
          var maskTransitionProps = (0, _getTransitionProps2['default'])(maskTransition);
          maskElement = h(
            'transition',
            (0, _babelHelperVueJsxMergeProps2['default'])([{ key: 'mask' }, maskTransitionProps]),
            [maskElement]
          );
        }
      }
      return maskElement;
    },
    getMaskTransitionName: function getMaskTransitionName() {
      var props = this.$props;
      var transitionName = props.maskTransitionName;
      var animation = props.maskAnimation;
      if (!transitionName && animation) {
        transitionName = props.prefixCls + '-' + animation;
      }
      return transitionName;
    },
    getTransitionName: function getTransitionName() {
      var props = this.$props;
      var transitionName = props.transitionName;
      var animation = props.animation;
      if (!transitionName && animation) {
        transitionName = props.prefixCls + '-' + animation;
      }
      return transitionName;
    },
    setScrollbar: function setScrollbar() {
      if (this.bodyIsOverflowing && this.scrollbarWidth !== undefined) {
        document.body.style.paddingRight = this.scrollbarWidth + 'px';
      }
    },
    addScrollingEffect: function addScrollingEffect() {
      openCount++;
      if (openCount !== 1) {
        return;
      }
      this.checkScrollbar();
      this.setScrollbar();
      document.body.style.overflow = 'hidden';
      // this.adjustDialog();
    },
    removeScrollingEffect: function removeScrollingEffect() {
      openCount--;
      if (openCount !== 0) {
        return;
      }
      document.body.style.overflow = '';
      this.resetScrollbar();
      // this.resetAdjustments();
    },
    close: function close(e) {
      this.__emit('close', e);
    },
    checkScrollbar: function checkScrollbar() {
      var fullWindowWidth = window.innerWidth;
      if (!fullWindowWidth) {
        // workaround for missing window.innerWidth in IE8
        var documentElementRect = document.documentElement.getBoundingClientRect();
        fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);
      }
      this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;
      if (this.bodyIsOverflowing) {
        this.scrollbarWidth = (0, _getScrollBarSize2['default'])();
      }
    },
    resetScrollbar: function resetScrollbar() {
      document.body.style.paddingRight = '';
    },
    adjustDialog: function adjustDialog() {
      if (this.$refs.wrap && this.scrollbarWidth !== undefined) {
        var modalIsOverflowing = this.$refs.wrap.scrollHeight > document.documentElement.clientHeight;
        this.$refs.wrap.style.paddingLeft = (!this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '') + 'px';
        this.$refs.wrap.style.paddingRight = (this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : '') + 'px';
      }
    },
    resetAdjustments: function resetAdjustments() {
      if (this.$refs.wrap) {
        this.$refs.wrap.style.paddingLeft = this.$refs.wrap.style.paddingLeft = '';
      }
    }
  },
  render: function render() {
    var h = arguments[0];
    var prefixCls = this.prefixCls,
        maskClosable = this.maskClosable,
        visible = this.visible,
        wrapClassName = this.wrapClassName,
        title = this.title,
        wrapProps = this.wrapProps;

    var style = this.getWrapStyle();
    // clear hide display
    // and only set display after async anim, not here for hide
    if (visible) {
      style.display = null;
    }
    return h('div', [this.getMaskElement(), h(
      'div',
      (0, _babelHelperVueJsxMergeProps2['default'])([{
        attrs: {
          tabIndex: -1,

          role: 'dialog',
          'aria-labelledby': title ? this.titleId : null
        },
        on: {
          'keydown': this.onKeydown,
          'click': maskClosable ? this.onMaskClick : noop
        },

        'class': prefixCls + '-wrap ' + (wrapClassName || ''),
        ref: 'wrap',
        style: style
      }, wrapProps]),
      [this.getDialogElement()]
    )]);
  }
};

/***/ }),

/***/ "9520":
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__("3729"),
    isObject = __webpack_require__("1a8c");

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ "956e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var locale = {
  title: '日期选择',
  today: '今天',
  month: '月',
  year: '年',
  am: '上午',
  pm: '下午',
  dateTimeFormat: 'yyyy年MM月dd日 星期w hh:mm',
  dateFormat: 'yyyy年MM月dd日 星期w',
  noChoose: '未选择',
  week: ['日', '一', '二', '三', '四', '五', '六'],
  clear: '清除',
  selectTime: '选择时间',
  selectStartTime: '选择开始时间',
  selectEndTime: '选择结束时间',
  start: '开始',
  end: '结束',
  begin: '起',
  over: '止',
  begin_over: '起/止',
  confirm: '确认',
  monthTitle: 'yyyy年MM月',
  loadPrevMonth: '加载上一个月',
  yesterday: '昨天',
  lastWeek: '近一周',
  lastMonth: '近一个月'
};
/* harmony default export */ __webpack_exports__["a"] = (locale);

/***/ }),

/***/ "95d5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("40c3");
var ITERATOR = __webpack_require__("5168")('iterator');
var Iterators = __webpack_require__("481b");
module.exports = __webpack_require__("584a").isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),

/***/ "9638":
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),

/***/ "96cf":
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "975a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating required fields.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function required(rule, value, source, errors, options, type) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || util.isEmptyValue(value, type || rule.type))) {
    errors.push(util.format(options.messages.required, rule.fullField));
  }
}

exports['default'] = required;

/***/ }),

/***/ "9778":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = addEventListenerWrap;

var _addDomEventListener = __webpack_require__("2c80");

var _addDomEventListener2 = _interopRequireDefault(_addDomEventListener);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function addEventListenerWrap(target, eventType, cb, option) {
  return (0, _addDomEventListener2['default'])(target, eventType, cb, option);
}

/***/ }),

/***/ "97c3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating minimum and maximum allowed values.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function range(rule, value, source, errors, options) {
  var len = typeof rule.len === 'number';
  var min = typeof rule.min === 'number';
  var max = typeof rule.max === 'number';
  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value;
  var key = null;
  var num = typeof value === 'number';
  var str = typeof value === 'string';
  var arr = Array.isArray(value);
  if (num) {
    key = 'number';
  } else if (str) {
    key = 'string';
  } else if (arr) {
    key = 'array';
  }
  // if the value is not of a supported type for range validation
  // the validation rule rule should use the
  // type property to also test for a particular type
  if (!key) {
    return false;
  }
  if (arr) {
    val = value.length;
  }
  if (str) {
    // 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
    val = value.replace(spRegexp, '_').length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));
    }
  } else if (min && !max && val < rule.min) {
    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));
  } else if (max && !min && val > rule.max) {
    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));
  } else if (min && max && (val < rule.min || val > rule.max)) {
    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));
  }
}

exports['default'] = range;

/***/ }),

/***/ "9934":
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__("6fcd"),
    baseKeysIn = __webpack_require__("41c3"),
    isArrayLike = __webpack_require__("30c9");

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),

/***/ "99d3":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__("585a");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("62e4")(module)))

/***/ }),

/***/ "9a85":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

/**
 *  Rule for validating a regular expression pattern.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function pattern(rule, value, source, errors, options) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      // if a RegExp instance is passed, reset `lastIndex` in case its `global`
      // flag is accidentally set to `true`, which in a validation scenario
      // is not necessary and the result might be misleading
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value)) {
        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    } else if (typeof rule.pattern === 'string') {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value)) {
        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
      }
    }
  }
}

exports['default'] = pattern;

/***/ }),

/***/ "9a8b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function IDialogPropTypes() {
  return {
    keyboard: _vueTypes2['default'].bool,
    mask: _vueTypes2['default'].bool,
    afterClose: _vueTypes2['default'].func,
    // onClose: PropTypes. (e: SyntheticEvent<HTMLDivElement>) =>any,
    closable: _vueTypes2['default'].bool,
    maskClosable: _vueTypes2['default'].bool,
    visible: _vueTypes2['default'].bool,
    destroyOnClose: _vueTypes2['default'].bool,
    mousePosition: _vueTypes2['default'].shape({
      x: _vueTypes2['default'].number,
      y: _vueTypes2['default'].number
    }).loose,
    title: _vueTypes2['default'].any,
    footer: _vueTypes2['default'].any,
    transitionName: _vueTypes2['default'].string,
    maskTransitionName: _vueTypes2['default'].string,
    animation: _vueTypes2['default'].any,
    maskAnimation: _vueTypes2['default'].any,
    wrapStyle: _vueTypes2['default'].object,
    bodyStyle: _vueTypes2['default'].object,
    maskStyle: _vueTypes2['default'].object,
    prefixCls: _vueTypes2['default'].string,
    wrapClassName: _vueTypes2['default'].string,
    width: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].number]),
    height: _vueTypes2['default'].oneOfType([_vueTypes2['default'].string, _vueTypes2['default'].number]),
    zIndex: _vueTypes2['default'].number,
    bodyProps: _vueTypes2['default'].any,
    maskProps: _vueTypes2['default'].any,
    wrapProps: _vueTypes2['default'].any,
    getContainer: _vueTypes2['default'].func,
    dialogStyle: _vueTypes2['default'].object.def({}),
    dialogClass: _vueTypes2['default'].object.def({}),
    closeIcon: _vueTypes2['default'].any
  };
}

exports['default'] = IDialogPropTypes;

/***/ }),

/***/ "9aa9":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "9b23":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function date(rule, value, callback, source, options) {
  // console.log('integer rule called %j', rule);
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  // console.log('validate on %s value', value);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (!(0, _util.isEmptyValue)(value)) {
      var dateObject = void 0;

      if (typeof value === 'number') {
        dateObject = new Date(value);
      } else {
        dateObject = value;
      }

      _rule2['default'].type(rule, dateObject, source, errors, options);
      if (dateObject) {
        _rule2['default'].range(rule, dateObject.getTime(), source, errors, options);
      }
    }
  }
  callback(errors);
}

exports['default'] = date;

/***/ }),

/***/ "9b43":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("d8e8");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "9b57":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _from = __webpack_require__("adf5");

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ }),

/***/ "9bac":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9c4a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messages = undefined;

var _stringify = __webpack_require__("8034");

var _stringify2 = _interopRequireDefault(_stringify);

exports.newMessages = newMessages;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function newMessages() {
  return {
    'default': 'Validation error on field %s',
    required: '%s is required',
    'enum': '%s must be one of %s',
    whitespace: '%s cannot be empty',
    date: {
      format: '%s date %s is invalid for format %s',
      parse: '%s date could not be parsed, %s is invalid ',
      invalid: '%s date %s is invalid'
    },
    types: {
      string: '%s is not a %s',
      method: '%s is not a %s (function)',
      array: '%s is not an %s',
      object: '%s is not an %s',
      number: '%s is not a %s',
      date: '%s is not a %s',
      boolean: '%s is not a %s',
      integer: '%s is not an %s',
      float: '%s is not a %s',
      regexp: '%s is not a valid %s',
      email: '%s is not a valid %s',
      url: '%s is not a valid %s',
      hex: '%s is not a valid %s'
    },
    string: {
      len: '%s must be exactly %s characters',
      min: '%s must be at least %s characters',
      max: '%s cannot be longer than %s characters',
      range: '%s must be between %s and %s characters'
    },
    number: {
      len: '%s must equal %s',
      min: '%s cannot be less than %s',
      max: '%s cannot be greater than %s',
      range: '%s must be between %s and %s'
    },
    array: {
      len: '%s must be exactly %s in length',
      min: '%s cannot be less than %s in length',
      max: '%s cannot be greater than %s in length',
      range: '%s must be between %s and %s in length'
    },
    pattern: {
      mismatch: '%s value %s does not match pattern %s'
    },
    clone: function clone() {
      var cloned = JSON.parse((0, _stringify2['default'])(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}

var messages = exports.messages = newMessages();

/***/ }),

/***/ "9c6c":
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__("2b4c")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__("32e9")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "9d03":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

var _propsUtil = __webpack_require__("73c8");

var _BaseMixin = __webpack_require__("48bb");

var _BaseMixin2 = _interopRequireDefault(_BaseMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function noop() {}

exports['default'] = {
  mixins: [_BaseMixin2['default']],
  props: {
    duration: _vueTypes2['default'].number.def(1.5),
    closable: _vueTypes2['default'].bool,
    prefixCls: _vueTypes2['default'].string,
    update: _vueTypes2['default'].bool,
    closeIcon: _vueTypes2['default'].any
  },
  watch: {
    duration: function duration() {
      this.restartCloseTimer();
    }
  },

  mounted: function mounted() {
    this.startCloseTimer();
  },
  updated: function updated() {
    if (this.update) {
      this.restartCloseTimer();
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.clearCloseTimer();
    this.willDestroy = true; // beforeDestroy调用后依然会触发onMouseleave事件
  },

  methods: {
    close: function close() {
      this.clearCloseTimer();
      this.__emit('close');
    },
    startCloseTimer: function startCloseTimer() {
      var _this = this;

      this.clearCloseTimer();
      if (!this.willDestroy && this.duration) {
        this.closeTimer = setTimeout(function () {
          _this.close();
        }, this.duration * 1000);
      }
    },
    clearCloseTimer: function clearCloseTimer() {
      if (this.closeTimer) {
        clearTimeout(this.closeTimer);
        this.closeTimer = null;
      }
    },
    restartCloseTimer: function restartCloseTimer() {
      this.clearCloseTimer();
      this.startCloseTimer();
    }
  },

  render: function render() {
    var _className;

    var h = arguments[0];
    var prefixCls = this.prefixCls,
        closable = this.closable,
        clearCloseTimer = this.clearCloseTimer,
        startCloseTimer = this.startCloseTimer,
        $slots = this.$slots,
        close = this.close,
        $listeners = this.$listeners;

    var componentClass = prefixCls + '-notice';
    var className = (_className = {}, (0, _defineProperty3['default'])(_className, '' + componentClass, 1), (0, _defineProperty3['default'])(_className, componentClass + '-closable', closable), _className);
    var style = (0, _propsUtil.getStyle)(this);
    var closeIcon = (0, _propsUtil.getComponentFromProp)(this, 'closeIcon');
    return h(
      'div',
      {
        'class': className,
        style: style || { right: '50%' },
        on: {
          'mouseenter': clearCloseTimer,
          'mouseleave': startCloseTimer,
          'click': $listeners.click || noop
        }
      },
      [h(
        'div',
        { 'class': componentClass + '-content' },
        [$slots['default']]
      ), closable ? h(
        'a',
        {
          attrs: { tabIndex: '0' },
          on: {
            'click': close
          },
          'class': componentClass + '-close' },
        [closeIcon || h('span', { 'class': componentClass + '-close-x' })]
      ) : null]
    );
  }
};

/***/ }),

/***/ "9d5f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/* eslint-disable */
var Track = {
  functional: true,
  render: function render(createElement, context) {
    var h = arguments[0];
    var _context$props = context.props,
        included = _context$props.included,
        vertical = _context$props.vertical,
        offset = _context$props.offset,
        length = _context$props.length;
    var _context$data = context.data,
        style = _context$data.style,
        className = _context$data["class"];


    var positonStyle = vertical ? {
      bottom: offset + "%",
      height: length + "%"
    } : {
      left: offset + "%",
      width: length + "%"
    };

    var elStyle = (0, _extends3["default"])({}, style, positonStyle);
    return included ? h("div", { "class": className, style: elStyle }) : null;
  }
};

exports["default"] = Track;

/***/ }),

/***/ "9d67":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9d98":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("63b6");
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !__webpack_require__("8e60"), 'Object', { defineProperties: __webpack_require__("7e90") });


/***/ }),

/***/ "9dee":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _DialogWrap = __webpack_require__("1318");

var _DialogWrap2 = _interopRequireDefault(_DialogWrap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = _DialogWrap2['default']; // based on vc-dialog 7.2.1

/***/ }),

/***/ "9def":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("4588");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "9e1c":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("7d6d");
module.exports = __webpack_require__("584a").Object.values;


/***/ }),

/***/ "9e1e":
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__("79e5")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "9e2d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "9e69":
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__("2b3e");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "9f79":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "a029":
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__("087d"),
    getPrototype = __webpack_require__("2dcb"),
    getSymbols = __webpack_require__("32f4"),
    stubArray = __webpack_require__("d327");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),

/***/ "a043":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _util = __webpack_require__("fa49");

var util = _interopRequireWildcard(_util);

var _required = __webpack_require__("975a");

var _required2 = _interopRequireDefault(_required);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* eslint max-len:0 */

var pattern = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$', 'i'),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};

var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  float: function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  regexp: function regexp(value) {
    if (value instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value);
    } catch (e) {
      return false;
    }
  },
  date: function date(value) {
    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }
    return typeof value === 'number';
  },
  object: function object(value) {
    return (typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value)) === 'object' && !types.array(value);
  },
  method: function method(value) {
    return typeof value === 'function';
  },
  email: function email(value) {
    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;
  },
  url: function url(value) {
    return typeof value === 'string' && !!value.match(pattern.url);
  },
  hex: function hex(value) {
    return typeof value === 'string' && !!value.match(pattern.hex);
  }
};

/**
 *  Rule for validating the type of a value.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param source The source object being validated.
 *  @param errors An array of errors that this rule may add
 *  validation errors to.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function type(rule, value, source, errors, options) {
  if (rule.required && value === undefined) {
    (0, _required2['default'])(rule, value, source, errors, options);
    return;
  }
  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value)) {
      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
    }
    // straight typeof check
  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value)) !== rule.type) {
    errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
  }
}

exports['default'] = type;

/***/ }),

/***/ "a159":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__("e4ae");
var dPs = __webpack_require__("7e90");
var enumBugKeys = __webpack_require__("1691");
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__("1ec9")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__("32fc").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "a15e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _promise = __webpack_require__("e1de");

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__("1907");

var _keys2 = _interopRequireDefault(_keys);

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _util = __webpack_require__("fa49");

var _validator = __webpack_require__("8c44");

var _validator2 = _interopRequireDefault(_validator);

var _messages2 = __webpack_require__("9c4a");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Encapsulates a validation schema.
 *
 *  @param descriptor An object declaring validation rules
 *  for this schema.
 */
function Schema(descriptor) {
  this.rules = null;
  this._messages = _messages2.messages;
  this.define(descriptor);
}

Schema.prototype = {
  messages: function messages(_messages) {
    if (_messages) {
      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);
    }
    return this._messages;
  },
  define: function define(rules) {
    if (!rules) {
      throw new Error('Cannot configure a schema with no rules');
    }
    if ((typeof rules === 'undefined' ? 'undefined' : (0, _typeof3['default'])(rules)) !== 'object' || Array.isArray(rules)) {
      throw new Error('Rules must be an object');
    }
    this.rules = {};
    var z = void 0;
    var item = void 0;
    for (z in rules) {
      if (rules.hasOwnProperty(z)) {
        item = rules[z];
        this.rules[z] = Array.isArray(item) ? item : [item];
      }
    }
  },
  validate: function validate(source_) {
    var _this = this;

    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var oc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};

    var source = source_;
    var options = o;
    var callback = oc;
    if (typeof options === 'function') {
      callback = options;
      options = {};
    }
    if (!this.rules || (0, _keys2['default'])(this.rules).length === 0) {
      if (callback) {
        callback();
      }
      return _promise2['default'].resolve();
    }
    function complete(results) {
      var i = void 0;
      var errors = [];
      var fields = {};

      function add(e) {
        if (Array.isArray(e)) {
          var _errors;

          errors = (_errors = errors).concat.apply(_errors, e);
        } else {
          errors.push(e);
        }
      }

      for (i = 0; i < results.length; i++) {
        add(results[i]);
      }
      if (!errors.length) {
        errors = null;
        fields = null;
      } else {
        fields = (0, _util.convertFieldsError)(errors);
      }
      callback(errors, fields);
    }

    if (options.messages) {
      var messages = this.messages();
      if (messages === _messages2.messages) {
        messages = (0, _messages2.newMessages)();
      }
      (0, _util.deepMerge)(messages, options.messages);
      options.messages = messages;
    } else {
      options.messages = this.messages();
    }
    var arr = void 0;
    var value = void 0;
    var series = {};
    var keys = options.keys || (0, _keys2['default'])(this.rules);
    keys.forEach(function (z) {
      arr = _this.rules[z];
      value = source[z];
      arr.forEach(function (r) {
        var rule = r;
        if (typeof rule.transform === 'function') {
          if (source === source_) {
            source = (0, _extends3['default'])({}, source);
          }
          value = source[z] = rule.transform(value);
        }
        if (typeof rule === 'function') {
          rule = {
            validator: rule
          };
        } else {
          rule = (0, _extends3['default'])({}, rule);
        }
        rule.validator = _this.getValidationMethod(rule);
        rule.field = z;
        rule.fullField = rule.fullField || z;
        rule.type = _this.getType(rule);
        if (!rule.validator) {
          return;
        }
        series[z] = series[z] || [];
        series[z].push({
          rule: rule,
          value: value,
          source: source,
          field: z
        });
      });
    });
    var errorFields = {};
    return (0, _util.asyncMap)(series, options, function (data, doIt) {
      var rule = data.rule;
      var deep = (rule.type === 'object' || rule.type === 'array') && ((0, _typeof3['default'])(rule.fields) === 'object' || (0, _typeof3['default'])(rule.defaultField) === 'object');
      deep = deep && (rule.required || !rule.required && data.value);
      rule.field = data.field;
      function addFullfield(key, schema) {
        return (0, _extends3['default'])({}, schema, {
          fullField: rule.fullField + '.' + key
        });
      }

      function cb() {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        var errors = e;
        if (!Array.isArray(errors)) {
          errors = [errors];
        }
        if (errors.length) {
          Schema.warning('async-validator:', errors);
        }
        if (errors.length && rule.message) {
          errors = [].concat(rule.message);
        }

        errors = errors.map((0, _util.complementError)(rule));

        if (options.first && errors.length) {
          errorFields[rule.field] = 1;
          return doIt(errors);
        }
        if (!deep) {
          doIt(errors);
        } else {
          // if rule is required but the target object
          // does not exist fail at the rule level and don't
          // go deeper
          if (rule.required && !data.value) {
            if (rule.message) {
              errors = [].concat(rule.message).map((0, _util.complementError)(rule));
            } else if (options.error) {
              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];
            } else {
              errors = [];
            }
            return doIt(errors);
          }

          var fieldsSchema = {};
          if (rule.defaultField) {
            for (var k in data.value) {
              if (data.value.hasOwnProperty(k)) {
                fieldsSchema[k] = rule.defaultField;
              }
            }
          }
          fieldsSchema = (0, _extends3['default'])({}, fieldsSchema, data.rule.fields);
          for (var f in fieldsSchema) {
            if (fieldsSchema.hasOwnProperty(f)) {
              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];
              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
            }
          }
          var schema = new Schema(fieldsSchema);
          schema.messages(options.messages);
          if (data.rule.options) {
            data.rule.options.messages = options.messages;
            data.rule.options.error = options.error;
          }
          schema.validate(data.value, data.rule.options || options, function (errs) {
            doIt(errs && errs.length ? errors.concat(errs) : errs);
          });
        }
      }

      var res = void 0;
      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data.value, cb, data.source, options);
      } else if (rule.validator) {
        res = rule.validator(rule, data.value, cb, data.source, options);
        if (res === true) {
          cb();
        } else if (res === false) {
          cb(rule.message || rule.field + ' fails');
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }
      if (res && res.then) {
        res.then(function () {
          return cb();
        }, function (e) {
          return cb(e);
        });
      }
    }, function (results) {
      complete(results);
    });
  },
  getType: function getType(rule) {
    if (rule.type === undefined && rule.pattern instanceof RegExp) {
      rule.type = 'pattern';
    }
    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {
      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));
    }
    return rule.type || 'string';
  },
  getValidationMethod: function getValidationMethod(rule) {
    if (typeof rule.validator === 'function') {
      return rule.validator;
    }
    var keys = (0, _keys2['default'])(rule);
    var messageIndex = keys.indexOf('message');
    if (messageIndex !== -1) {
      keys.splice(messageIndex, 1);
    }
    if (keys.length === 1 && keys[0] === 'required') {
      return _validator2['default'].required;
    }
    return _validator2['default'][this.getType(rule)] || false;
  }
};

Schema.register = function register(type, validator) {
  if (typeof validator !== 'function') {
    throw new Error('Cannot register a validator by type, validator is not a function');
  }
  _validator2['default'][type] = validator;
};

Schema.warning = _util.warning;

Schema.messages = _messages2.messages;

exports['default'] = Schema;

/***/ }),

/***/ "a1ce":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("63b6");
var defined = __webpack_require__("25eb");
var fails = __webpack_require__("294c");
var spaces = __webpack_require__("e692");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "a21f":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("584a");
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),

/***/ "a22a":
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__("d864");
var call = __webpack_require__("b0dc");
var isArrayIter = __webpack_require__("3702");
var anObject = __webpack_require__("e4ae");
var toLength = __webpack_require__("b447");
var getIterFn = __webpack_require__("7cd6");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "a27d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "a2db":
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__("9e69");

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),

/***/ "a3c3":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__("63b6");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__("9306") });


/***/ }),

/***/ "a481":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__("cb7c");
var toObject = __webpack_require__("4bf8");
var toLength = __webpack_require__("9def");
var toInteger = __webpack_require__("4588");
var advanceStringIndex = __webpack_require__("0390");
var regExpExec = __webpack_require__("5f1b");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__("214f")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "a4bb":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("8aae");

/***/ }),

/***/ "a524":
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__("4245");

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),

/***/ "a5a7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = createChainedFunction;
/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @returns {function|null}
 */
function createChainedFunction() {
  var args = [].slice.call(arguments, 0);
  if (args.length === 1) {
    return args[0];
  }

  return function chainedFunction() {
    for (var i = 0; i < args.length; i++) {
      if (args[i] && args[i].apply) {
        args[i].apply(this, arguments);
      }
    }
  };
}

/***/ }),

/***/ "a745":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("f410");

/***/ }),

/***/ "a7e2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _warning = __webpack_require__("2045");

var _warning2 = _interopRequireDefault(_warning);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var warned = {};

exports['default'] = function (valid, message) {
  if (!valid && !warned[message]) {
    (0, _warning2['default'])(false, message);
    warned[message] = true;
  }
};

/***/ }),

/***/ "a994":
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__("7d1f"),
    getSymbols = __webpack_require__("32f4"),
    keys = __webpack_require__("ec69");

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),

/***/ "aa77":
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__("5ca1");
var defined = __webpack_require__("be13");
var fails = __webpack_require__("79e5");
var spaces = __webpack_require__("fdef");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "aae3":
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__("d3f4");
var cof = __webpack_require__("2d95");
var MATCH = __webpack_require__("2b4c")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "aba2":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var macrotask = __webpack_require__("4178").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__("6b4c")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "ac69":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = contains;
function contains(root, n) {
  var node = n;
  while (node) {
    if (node === root) {
      return true;
    }
    node = node.parentNode;
  }

  return false;
}

/***/ }),

/***/ "ac6a":
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__("cadf");
var getKeys = __webpack_require__("0d58");
var redefine = __webpack_require__("2aba");
var global = __webpack_require__("7726");
var hide = __webpack_require__("32e9");
var Iterators = __webpack_require__("84f2");
var wks = __webpack_require__("2b4c");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "acdb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Validates a function.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function method(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value !== undefined) {
      _rule2['default'].type(rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = method;

/***/ }),

/***/ "ada4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("e53d");
var $export = __webpack_require__("63b6");
var meta = __webpack_require__("ebfd");
var fails = __webpack_require__("294c");
var hide = __webpack_require__("35e8");
var redefineAll = __webpack_require__("5c95");
var forOf = __webpack_require__("a22a");
var anInstance = __webpack_require__("1173");
var isObject = __webpack_require__("f772");
var setToStringTag = __webpack_require__("45f2");
var dP = __webpack_require__("d9f6").f;
var each = __webpack_require__("57b1")(0);
var DESCRIPTORS = __webpack_require__("8e60");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    C = wrapper(function (target, iterable) {
      anInstance(target, C, NAME, '_c');
      target._c = new Base();
      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
    });
    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
      var IS_ADDER = KEY == 'add' || KEY == 'set';
      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
        anInstance(this, C, KEY);
        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
        var result = this._c[KEY](a === 0 ? 0 : a, b);
        return IS_ADDER ? this : result;
      });
    });
    IS_WEAK || dP(C.prototype, 'size', {
      get: function () {
        return this._c.size;
      }
    });
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F, O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "adf5":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("d2d5"), __esModule: true };

/***/ }),

/***/ "ae3c":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var ENUM = 'enum';

/**
 *  Validates an enumerable list.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function enumerable(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value) && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options);
    if (value) {
      _rule2['default'][ENUM](rule, value, source, errors, options);
    }
  }
  callback(errors);
}

exports['default'] = enumerable;

/***/ }),

/***/ "aebd":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "aef6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

var $export = __webpack_require__("5ca1");
var toLength = __webpack_require__("9def");
var context = __webpack_require__("d2c8");
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * __webpack_require__("5147")(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),

/***/ "af09":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * @ignore
 * some key-codes definition and utils from closure-library
 * @author yiminghe@gmail.com
 */

var KeyCode = {
  /**
   * MAC_ENTER
   */
  MAC_ENTER: 3,
  /**
   * BACKSPACE
   */
  BACKSPACE: 8,
  /**
   * TAB
   */
  TAB: 9,
  /**
   * NUMLOCK on FF/Safari Mac
   */
  NUM_CENTER: 12, // NUMLOCK on FF/Safari Mac
  /**
   * ENTER
   */
  ENTER: 13,
  /**
   * SHIFT
   */
  SHIFT: 16,
  /**
   * CTRL
   */
  CTRL: 17,
  /**
   * ALT
   */
  ALT: 18,
  /**
   * PAUSE
   */
  PAUSE: 19,
  /**
   * CAPS_LOCK
   */
  CAPS_LOCK: 20,
  /**
   * ESC
   */
  ESC: 27,
  /**
   * SPACE
   */
  SPACE: 32,
  /**
   * PAGE_UP
   */
  PAGE_UP: 33, // also NUM_NORTH_EAST
  /**
   * PAGE_DOWN
   */
  PAGE_DOWN: 34, // also NUM_SOUTH_EAST
  /**
   * END
   */
  END: 35, // also NUM_SOUTH_WEST
  /**
   * HOME
   */
  HOME: 36, // also NUM_NORTH_WEST
  /**
   * LEFT
   */
  LEFT: 37, // also NUM_WEST
  /**
   * UP
   */
  UP: 38, // also NUM_NORTH
  /**
   * RIGHT
   */
  RIGHT: 39, // also NUM_EAST
  /**
   * DOWN
   */
  DOWN: 40, // also NUM_SOUTH
  /**
   * PRINT_SCREEN
   */
  PRINT_SCREEN: 44,
  /**
   * INSERT
   */
  INSERT: 45, // also NUM_INSERT
  /**
   * DELETE
   */
  DELETE: 46, // also NUM_DELETE
  /**
   * ZERO
   */
  ZERO: 48,
  /**
   * ONE
   */
  ONE: 49,
  /**
   * TWO
   */
  TWO: 50,
  /**
   * THREE
   */
  THREE: 51,
  /**
   * FOUR
   */
  FOUR: 52,
  /**
   * FIVE
   */
  FIVE: 53,
  /**
   * SIX
   */
  SIX: 54,
  /**
   * SEVEN
   */
  SEVEN: 55,
  /**
   * EIGHT
   */
  EIGHT: 56,
  /**
   * NINE
   */
  NINE: 57,
  /**
   * QUESTION_MARK
   */
  QUESTION_MARK: 63, // needs localization
  /**
   * A
   */
  A: 65,
  /**
   * B
   */
  B: 66,
  /**
   * C
   */
  C: 67,
  /**
   * D
   */
  D: 68,
  /**
   * E
   */
  E: 69,
  /**
   * F
   */
  F: 70,
  /**
   * G
   */
  G: 71,
  /**
   * H
   */
  H: 72,
  /**
   * I
   */
  I: 73,
  /**
   * J
   */
  J: 74,
  /**
   * K
   */
  K: 75,
  /**
   * L
   */
  L: 76,
  /**
   * M
   */
  M: 77,
  /**
   * N
   */
  N: 78,
  /**
   * O
   */
  O: 79,
  /**
   * P
   */
  P: 80,
  /**
   * Q
   */
  Q: 81,
  /**
   * R
   */
  R: 82,
  /**
   * S
   */
  S: 83,
  /**
   * T
   */
  T: 84,
  /**
   * U
   */
  U: 85,
  /**
   * V
   */
  V: 86,
  /**
   * W
   */
  W: 87,
  /**
   * X
   */
  X: 88,
  /**
   * Y
   */
  Y: 89,
  /**
   * Z
   */
  Z: 90,
  /**
   * META
   */
  META: 91, // WIN_KEY_LEFT
  /**
   * WIN_KEY_RIGHT
   */
  WIN_KEY_RIGHT: 92,
  /**
   * CONTEXT_MENU
   */
  CONTEXT_MENU: 93,
  /**
   * NUM_ZERO
   */
  NUM_ZERO: 96,
  /**
   * NUM_ONE
   */
  NUM_ONE: 97,
  /**
   * NUM_TWO
   */
  NUM_TWO: 98,
  /**
   * NUM_THREE
   */
  NUM_THREE: 99,
  /**
   * NUM_FOUR
   */
  NUM_FOUR: 100,
  /**
   * NUM_FIVE
   */
  NUM_FIVE: 101,
  /**
   * NUM_SIX
   */
  NUM_SIX: 102,
  /**
   * NUM_SEVEN
   */
  NUM_SEVEN: 103,
  /**
   * NUM_EIGHT
   */
  NUM_EIGHT: 104,
  /**
   * NUM_NINE
   */
  NUM_NINE: 105,
  /**
   * NUM_MULTIPLY
   */
  NUM_MULTIPLY: 106,
  /**
   * NUM_PLUS
   */
  NUM_PLUS: 107,
  /**
   * NUM_MINUS
   */
  NUM_MINUS: 109,
  /**
   * NUM_PERIOD
   */
  NUM_PERIOD: 110,
  /**
   * NUM_DIVISION
   */
  NUM_DIVISION: 111,
  /**
   * F1
   */
  F1: 112,
  /**
   * F2
   */
  F2: 113,
  /**
   * F3
   */
  F3: 114,
  /**
   * F4
   */
  F4: 115,
  /**
   * F5
   */
  F5: 116,
  /**
   * F6
   */
  F6: 117,
  /**
   * F7
   */
  F7: 118,
  /**
   * F8
   */
  F8: 119,
  /**
   * F9
   */
  F9: 120,
  /**
   * F10
   */
  F10: 121,
  /**
   * F11
   */
  F11: 122,
  /**
   * F12
   */
  F12: 123,
  /**
   * NUMLOCK
   */
  NUMLOCK: 144,
  /**
   * SEMICOLON
   */
  SEMICOLON: 186, // needs localization
  /**
   * DASH
   */
  DASH: 189, // needs localization
  /**
   * EQUALS
   */
  EQUALS: 187, // needs localization
  /**
   * COMMA
   */
  COMMA: 188, // needs localization
  /**
   * PERIOD
   */
  PERIOD: 190, // needs localization
  /**
   * SLASH
   */
  SLASH: 191, // needs localization
  /**
   * APOSTROPHE
   */
  APOSTROPHE: 192, // needs localization
  /**
   * SINGLE_QUOTE
   */
  SINGLE_QUOTE: 222, // needs localization
  /**
   * OPEN_SQUARE_BRACKET
   */
  OPEN_SQUARE_BRACKET: 219, // needs localization
  /**
   * BACKSLASH
   */
  BACKSLASH: 220, // needs localization
  /**
   * CLOSE_SQUARE_BRACKET
   */
  CLOSE_SQUARE_BRACKET: 221, // needs localization
  /**
   * WIN_KEY
   */
  WIN_KEY: 224,
  /**
   * MAC_FF_META
   */
  MAC_FF_META: 224, // Firefox (Gecko) fires this for the meta key instead of 91
  /**
   * WIN_IME
   */
  WIN_IME: 229
};

/*
 whether text and modified key is entered at the same time.
 */
KeyCode.isTextModifyingKeyEvent = function isTextModifyingKeyEvent(e) {
  var keyCode = e.keyCode;
  if (e.altKey && !e.ctrlKey || e.metaKey ||
  // Function keys don't generate text
  keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {
    return false;
  }

  // The following keys are quite harmless, even in combination with
  // CTRL, ALT or SHIFT.
  switch (keyCode) {
    case KeyCode.ALT:
    case KeyCode.CAPS_LOCK:
    case KeyCode.CONTEXT_MENU:
    case KeyCode.CTRL:
    case KeyCode.DOWN:
    case KeyCode.END:
    case KeyCode.ESC:
    case KeyCode.HOME:
    case KeyCode.INSERT:
    case KeyCode.LEFT:
    case KeyCode.MAC_FF_META:
    case KeyCode.META:
    case KeyCode.NUMLOCK:
    case KeyCode.NUM_CENTER:
    case KeyCode.PAGE_DOWN:
    case KeyCode.PAGE_UP:
    case KeyCode.PAUSE:
    case KeyCode.PRINT_SCREEN:
    case KeyCode.RIGHT:
    case KeyCode.SHIFT:
    case KeyCode.UP:
    case KeyCode.WIN_KEY:
    case KeyCode.WIN_KEY_RIGHT:
      return false;
    default:
      return true;
  }
};

/*
 whether character is entered.
 */
KeyCode.isCharacterKey = function isCharacterKey(keyCode) {
  if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {
    return true;
  }

  if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {
    return true;
  }

  if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {
    return true;
  }

  // Safari sends zero key code for non-latin characters.
  if (window.navigation.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {
    return true;
  }

  switch (keyCode) {
    case KeyCode.SPACE:
    case KeyCode.QUESTION_MARK:
    case KeyCode.NUM_PLUS:
    case KeyCode.NUM_MINUS:
    case KeyCode.NUM_PERIOD:
    case KeyCode.NUM_DIVISION:
    case KeyCode.SEMICOLON:
    case KeyCode.DASH:
    case KeyCode.EQUALS:
    case KeyCode.COMMA:
    case KeyCode.PERIOD:
    case KeyCode.SLASH:
    case KeyCode.APOSTROPHE:
    case KeyCode.SINGLE_QUOTE:
    case KeyCode.OPEN_SQUARE_BRACKET:
    case KeyCode.BACKSLASH:
    case KeyCode.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false;
  }
};

exports['default'] = KeyCode;

/***/ }),

/***/ "b012":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "b047":
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ "b084":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "b0c5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__("520a");
__webpack_require__("5ca1")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "b0dc":
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__("e4ae");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "b218":
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ "b24f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__("93ff");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__("1727");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),

/***/ "b2a3":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "b383":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__("91dd");
exports.encode = exports.stringify = __webpack_require__("e099");


/***/ }),

/***/ "b447":
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__("3a38");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "b4c0":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),

/***/ "b5a7":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),

/***/ "b897":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = generate;

var _tinycolor = __webpack_require__("66cb");

var _tinycolor2 = _interopRequireDefault(_tinycolor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hueStep = 2; // 色相阶梯
var saturationStep = 16; // 饱和度阶梯，浅色部分
var saturationStep2 = 5; // 饱和度阶梯，深色部分
var brightnessStep1 = 5; // 亮度阶梯，浅色部分
var brightnessStep2 = 15; // 亮度阶梯，深色部分
var lightColorCount = 5; // 浅色数量，主色上
var darkColorCount = 4; // 深色数量，主色下

function getHue(hsv, i, light) {
  var hue = void 0;
  // 根据色相不同，色相转向不同
  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {
    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;
  } else {
    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;
  }
  if (hue < 0) {
    hue += 360;
  } else if (hue >= 360) {
    hue -= 360;
  }
  return hue;
}

function getSaturation(hsv, i, light) {
  // grey color don't change saturation
  if (hsv.h === 0 && hsv.s === 0) {
    return hsv.s;
  }
  var saturation = void 0;
  if (light) {
    saturation = Math.round(hsv.s * 100) - saturationStep * i;
  } else if (i === darkColorCount) {
    saturation = Math.round(hsv.s * 100) + saturationStep;
  } else {
    saturation = Math.round(hsv.s * 100) + saturationStep2 * i;
  }
  // 边界值修正
  if (saturation > 100) {
    saturation = 100;
  }
  // 第一格的 s 限制在 6-10 之间
  if (light && i === lightColorCount && saturation > 10) {
    saturation = 10;
  }
  if (saturation < 6) {
    saturation = 6;
  }
  return saturation;
}

function getValue(hsv, i, light) {
  if (light) {
    return Math.round(hsv.v * 100) + brightnessStep1 * i;
  }
  return Math.round(hsv.v * 100) - brightnessStep2 * i;
}

function generate(color) {
  var patterns = [];
  var pColor = (0, _tinycolor2.default)(color);
  for (var i = lightColorCount; i > 0; i -= 1) {
    var hsv = pColor.toHsv();
    var colorString = (0, _tinycolor2.default)({
      h: getHue(hsv, i, true),
      s: getSaturation(hsv, i, true),
      v: getValue(hsv, i, true)
    }).toHexString();
    patterns.push(colorString);
  }
  patterns.push(pColor.toHexString());
  for (var _i = 1; _i <= darkColorCount; _i += 1) {
    var _hsv = pColor.toHsv();
    var _colorString = (0, _tinycolor2.default)({
      h: getHue(_hsv, _i),
      s: getSaturation(_hsv, _i),
      v: getValue(_hsv, _i)
    }).toHexString();
    patterns.push(_colorString);
  }
  return patterns;
}

/***/ }),

/***/ "b8ad":
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

function arrayTreeFilter(data, filterFn, options) {
    options = options || {};
    options.childrenKeyName = options.childrenKeyName || "children";
    var children = data || [];
    var result = [];
    var level = 0;
    do {
        var foundItem = children.filter(function (item) {
            return filterFn(item, level);
        })[0];
        if (!foundItem) {
            break;
        }
        result.push(foundItem);
        children = foundItem[options.childrenKeyName] || [];
        level += 1;
    } while (children.length > 0);
    return result;
}

return arrayTreeFilter;

})));


/***/ }),

/***/ "b8e3":
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "b9e9":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("7445");
module.exports = __webpack_require__("584a").parseInt;


/***/ }),

/***/ "bb78":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warn = exports.validateType = exports.toType = exports.withRequired = exports.withDefault = exports.isFunction = exports.isArray = exports.isInteger = exports.has = exports.noop = exports.getNativeType = exports.getType = exports.hasOwn = undefined;

var _isPlainObject = __webpack_require__("60ed");

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var ObjProto = Object.prototype;
var toString = ObjProto.toString;
var hasOwn = exports.hasOwn = ObjProto.hasOwnProperty;

var FN_MATCH_REGEXP = /^\s*function (\w+)/;

// https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L159
var getType = exports.getType = function getType(fn) {
  var type = fn !== null && fn !== undefined ? fn.type ? fn.type : fn : null;
  var match = type && type.toString().match(FN_MATCH_REGEXP);
  return match && match[1];
};

var getNativeType = exports.getNativeType = function getNativeType(value) {
  if (value === null || value === undefined) return null;
  var match = value.constructor.toString().match(FN_MATCH_REGEXP);
  return match && match[1];
};

/**
 * No-op function
 */
var noop = exports.noop = function noop() {};

/**
 * Checks for a own property in an object
 *
 * @param {object} obj - Object
 * @param {string} prop - Property to check
 */
var has = exports.has = function has(obj, prop) {
  return hasOwn.call(obj, prop);
};

/**
 * Determines whether the passed value is an integer. Uses `Number.isInteger` if available
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger
 * @param {*} value - The value to be tested for being an integer.
 * @returns {boolean}
 */
var isInteger = exports.isInteger = Number.isInteger || function (value) {
  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
};

/**
 * Determines whether the passed value is an Array.
 *
 * @param {*} value - The value to be tested for being an array.
 * @returns {boolean}
 */
var isArray = exports.isArray = Array.isArray || function (value) {
  return toString.call(value) === '[object Array]';
};

/**
 * Checks if a value is a function
 *
 * @param {any} value - Value to check
 * @returns {boolean}
 */
var isFunction = exports.isFunction = function isFunction(value) {
  return toString.call(value) === '[object Function]';
};

/**
 * Adds a `def` method to the object returning a new object with passed in argument as `default` property
 *
 * @param {object} type - Object to enhance
 */
var withDefault = exports.withDefault = function withDefault(type) {
  Object.defineProperty(type, 'def', {
    value: function value(def) {
      if (def === undefined && this['default'] === undefined) {
        this['default'] = undefined;
        return this;
      }
      if (!isFunction(def) && !validateType(this, def)) {
        warn(this._vueTypes_name + ' - invalid default value: "' + def + '"', def);
        return this;
      }
      this['default'] = isArray(def) || (0, _isPlainObject2['default'])(def) ? function () {
        return def;
      } : def;

      return this;
    },

    enumerable: false,
    writable: false
  });
};

/**
 * Adds a `isRequired` getter returning a new object with `required: true` key-value
 *
 * @param {object} type - Object to enhance
 */
var withRequired = exports.withRequired = function withRequired(type) {
  Object.defineProperty(type, 'isRequired', {
    get: function get() {
      this.required = true;
      return this;
    },

    enumerable: false
  });
};

/**
 * Adds `isRequired` and `def` modifiers to an object
 *
 * @param {string} name - Type internal name
 * @param {object} obj - Object to enhance
 * @returns {object}
 */
var toType = exports.toType = function toType(name, obj) {
  Object.defineProperty(obj, '_vueTypes_name', {
    enumerable: false,
    writable: false,
    value: name
  });
  withRequired(obj);
  withDefault(obj);

  if (isFunction(obj.validator)) {
    obj.validator = obj.validator.bind(obj);
  }
  return obj;
};

/**
 * Validates a given value against a prop type object
 *
 * @param {Object|*} type - Type to use for validation. Either a type object or a constructor
 * @param {*} value - Value to check
 * @param {boolean} silent - Silence warnings
 * @returns {boolean}
 */
var validateType = exports.validateType = function validateType(type, value) {
  var silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var typeToCheck = type;
  var valid = true;
  var expectedType = void 0;
  if (!(0, _isPlainObject2['default'])(type)) {
    typeToCheck = { type: type };
  }
  var namePrefix = typeToCheck._vueTypes_name ? typeToCheck._vueTypes_name + ' - ' : '';

  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {
    if (isArray(typeToCheck.type)) {
      valid = typeToCheck.type.some(function (type) {
        return validateType(type, value, true);
      });
      expectedType = typeToCheck.type.map(function (type) {
        return getType(type);
      }).join(' or ');
    } else {
      expectedType = getType(typeToCheck);

      if (expectedType === 'Array') {
        valid = isArray(value);
      } else if (expectedType === 'Object') {
        valid = (0, _isPlainObject2['default'])(value);
      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {
        valid = getNativeType(value) === expectedType;
      } else {
        valid = value instanceof typeToCheck.type;
      }
    }
  }

  if (!valid) {
    silent === false && warn(namePrefix + 'value "' + value + '" should be of type "' + expectedType + '"');
    return false;
  }

  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {
    valid = typeToCheck.validator(value);
    if (!valid && silent === false) warn(namePrefix + 'custom validation failed');
    return valid;
  }
  return valid;
};

var warn = noop;

if (false) { var hasConsole; }

exports.warn = warn;

/***/ }),

/***/ "bbc0":
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__("6044");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),

/***/ "bc13":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("e53d");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "be13":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "be2f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_cli_service_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_html_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("9d67");
/* harmony import */ var _node_modules_vue_cli_service_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_html_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_cli_service_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_html_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */
 /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_vue_cli_service_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_html_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default.a); 

/***/ }),

/***/ "bf0b":
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__("355d");
var createDesc = __webpack_require__("aebd");
var toIObject = __webpack_require__("36c3");
var toPrimitive = __webpack_require__("1bc3");
var has = __webpack_require__("07e3");
var IE8_DOM_DEFINE = __webpack_require__("794b");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__("8e60") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "bf90":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__("36c3");
var $getOwnPropertyDescriptor = __webpack_require__("bf0b").f;

__webpack_require__("ce7e")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "bfac":
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__("0b64");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "c05b":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _toConsumableArray2 = __webpack_require__("9b57");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _BaseMixin = __webpack_require__("48bb");

var _BaseMixin2 = _interopRequireDefault(_BaseMixin);

var _propsUtil = __webpack_require__("73c8");

var _vnode = __webpack_require__("d2f9");

var _openAnimationFactory = __webpack_require__("722e");

var _openAnimationFactory2 = _interopRequireDefault(_openAnimationFactory);

var _commonProps = __webpack_require__("84e7");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _toArray(activeKey) {
  var currentActiveKey = activeKey;
  if (!Array.isArray(currentActiveKey)) {
    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];
  }
  return currentActiveKey;
}

exports['default'] = {
  name: 'Collapse',
  mixins: [_BaseMixin2['default']],
  model: {
    prop: 'activeKey',
    event: 'change'
  },
  props: (0, _propsUtil.initDefaultProps)(_commonProps.collapseProps, {
    prefixCls: 'rc-collapse',
    accordion: false,
    destroyInactivePanel: false
  }),
  data: function data() {
    var _$props = this.$props,
        activeKey = _$props.activeKey,
        defaultActiveKey = _$props.defaultActiveKey,
        openAnimation = _$props.openAnimation,
        prefixCls = _$props.prefixCls;

    var currentActiveKey = defaultActiveKey;
    if ((0, _propsUtil.hasProp)(this, 'activeKey')) {
      currentActiveKey = activeKey;
    }
    var currentOpenAnimations = openAnimation || (0, _openAnimationFactory2['default'])(prefixCls);
    return {
      currentOpenAnimations: currentOpenAnimations,
      stateActiveKey: _toArray(currentActiveKey)
    };
  },

  watch: {
    activeKey: function activeKey(val) {
      this.setState({
        stateActiveKey: _toArray(val)
      });
    },
    openAnimation: function openAnimation(val) {
      this.setState({
        currentOpenAnimations: val
      });
    }
  },
  methods: {
    onClickItem: function onClickItem(key) {
      var activeKey = this.stateActiveKey;
      if (this.accordion) {
        activeKey = activeKey[0] === key ? [] : [key];
      } else {
        activeKey = [].concat((0, _toConsumableArray3['default'])(activeKey));
        var index = activeKey.indexOf(key);
        var isActive = index > -1;
        if (isActive) {
          // remove active state
          activeKey.splice(index, 1);
        } else {
          activeKey.push(key);
        }
      }
      this.setActiveKey(activeKey);
    },
    getItems: function getItems() {
      var _this = this;

      var activeKey = this.stateActiveKey;
      var _$props2 = this.$props,
          prefixCls = _$props2.prefixCls,
          accordion = _$props2.accordion,
          destroyInactivePanel = _$props2.destroyInactivePanel,
          expandIcon = _$props2.expandIcon;

      var newChildren = [];
      this.$slots['default'].forEach(function (child, index) {
        if ((0, _propsUtil.isEmptyElement)(child)) return;

        var _getPropsData = (0, _propsUtil.getPropsData)(child),
            header = _getPropsData.header,
            headerClass = _getPropsData.headerClass,
            disabled = _getPropsData.disabled;

        var isActive = false;
        var key = child.key || String(index);
        if (accordion) {
          isActive = activeKey[0] === key;
        } else {
          isActive = activeKey.indexOf(key) > -1;
        }

        var panelEvents = {};
        if (!disabled && disabled !== '') {
          panelEvents = {
            itemClick: function itemClick() {
              _this.onClickItem(key);
            }
          };
        }

        var props = {
          props: {
            header: header,
            headerClass: headerClass,
            isActive: isActive,
            prefixCls: prefixCls,
            destroyInactivePanel: destroyInactivePanel,
            openAnimation: _this.currentOpenAnimations,
            accordion: accordion,
            expandIcon: expandIcon
          },
          on: (0, _extends3['default'])({}, panelEvents)
        };

        newChildren.push((0, _vnode.cloneElement)(child, props));
      });
      return newChildren;
    },
    setActiveKey: function setActiveKey(activeKey) {
      this.setState({ stateActiveKey: activeKey });
      this.$emit('change', this.accordion ? activeKey[0] : activeKey);
    }
  },
  render: function render() {
    var h = arguments[0];
    var _$props3 = this.$props,
        prefixCls = _$props3.prefixCls,
        accordion = _$props3.accordion;

    var collapseClassName = (0, _defineProperty3['default'])({}, prefixCls, true);
    return h(
      'div',
      { 'class': collapseClassName, attrs: { role: accordion ? 'tablist' : null }
      },
      [this.getItems()]
    );
  }
};

/***/ }),

/***/ "c098":
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),

/***/ "c0ad":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "c207":
/***/ (function(module, exports) {



/***/ }),

/***/ "c26e":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports['default'] = getScrollBarSize;
var cached = void 0;

function getScrollBarSize(fresh) {
  if (fresh || cached === undefined) {
    var inner = document.createElement('div');
    inner.style.width = '100%';
    inner.style.height = '200px';

    var outer = document.createElement('div');
    var outerStyle = outer.style;

    outerStyle.position = 'absolute';
    outerStyle.top = 0;
    outerStyle.left = 0;
    outerStyle.pointerEvents = 'none';
    outerStyle.visibility = 'hidden';
    outerStyle.width = '200px';
    outerStyle.height = '150px';
    outerStyle.overflow = 'hidden';

    outer.appendChild(inner);

    document.body.appendChild(outer);

    var widthContained = inner.offsetWidth;
    outer.style.overflow = 'scroll';
    var widthScroll = inner.offsetWidth;

    if (widthContained === widthScroll) {
      widthScroll = outer.clientWidth;
    }

    document.body.removeChild(outer);

    cached = widthContained - widthScroll;
  }
  return cached;
}

/***/ }),

/***/ "c2b6":
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__("f8af"),
    cloneDataView = __webpack_require__("5d89"),
    cloneRegExp = __webpack_require__("6f6c"),
    cloneSymbol = __webpack_require__("a2db"),
    cloneTypedArray = __webpack_require__("c8fe");

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),

/***/ "c326":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "c366":
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__("6821");
var toLength = __webpack_require__("9def");
var toAbsoluteIndex = __webpack_require__("77f1");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "c367":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__("8436");
var step = __webpack_require__("50ed");
var Iterators = __webpack_require__("481b");
var toIObject = __webpack_require__("36c3");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__("30f1")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "c3a1":
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__("e6f3");
var enumBugKeys = __webpack_require__("1691");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "c3fc":
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__("42a2"),
    isObjectLike = __webpack_require__("1310");

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),

/***/ "c426":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "c449":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__("6d08")
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "c5f6":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("7726");
var has = __webpack_require__("69a8");
var cof = __webpack_require__("2d95");
var inheritIfRequired = __webpack_require__("5dbc");
var toPrimitive = __webpack_require__("6a99");
var fails = __webpack_require__("79e5");
var gOPN = __webpack_require__("9093").f;
var gOPD = __webpack_require__("11e9").f;
var dP = __webpack_require__("86cc").f;
var $trim = __webpack_require__("aa77").trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__("2aeb")(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__("9e1e") ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__("2aba")(global, NUMBER, $Number);
}


/***/ }),

/***/ "c69a":
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__("9e1e") && !__webpack_require__("79e5")(function () {
  return Object.defineProperty(__webpack_require__("230e")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "c869":
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__("0b07"),
    root = __webpack_require__("2b3e");

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),

/***/ "c87c":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),

/***/ "c89a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
  * vue-class-component v7.0.2
  * (c) 2015-present Evan You
  * @license MIT
  */


Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Vue = _interopDefault(__webpack_require__("8bbf"));

// The rational behind the verbose Reflect-feature check below is the fact that there are polyfills
// which add an implementation for Reflect.defineMetadata but not for Reflect.getOwnMetadataKeys.
// Without this check consumers will encounter hard to track down runtime errors.
var reflectionIsSupported = typeof Reflect !== 'undefined' && Reflect.defineMetadata && Reflect.getOwnMetadataKeys;
function copyReflectionMetadata(to, from) {
    forwardMetadata(to, from);
    Object.getOwnPropertyNames(from.prototype).forEach(function (key) {
        forwardMetadata(to.prototype, from.prototype, key);
    });
    Object.getOwnPropertyNames(from).forEach(function (key) {
        forwardMetadata(to, from, key);
    });
}
function forwardMetadata(to, from, propertyKey) {
    var metaKeys = propertyKey
        ? Reflect.getOwnMetadataKeys(from, propertyKey)
        : Reflect.getOwnMetadataKeys(from);
    metaKeys.forEach(function (metaKey) {
        var metadata = propertyKey
            ? Reflect.getOwnMetadata(metaKey, from, propertyKey)
            : Reflect.getOwnMetadata(metaKey, from);
        if (propertyKey) {
            Reflect.defineMetadata(metaKey, metadata, to, propertyKey);
        }
        else {
            Reflect.defineMetadata(metaKey, metadata, to);
        }
    });
}

var fakeArray = { __proto__: [] };
var hasProto = fakeArray instanceof Array;
function createDecorator(factory) {
    return function (target, key, index) {
        var Ctor = typeof target === 'function'
            ? target
            : target.constructor;
        if (!Ctor.__decorators__) {
            Ctor.__decorators__ = [];
        }
        if (typeof index !== 'number') {
            index = undefined;
        }
        Ctor.__decorators__.push(function (options) { return factory(options, key, index); });
    };
}
function mixins() {
    var Ctors = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        Ctors[_i] = arguments[_i];
    }
    return Vue.extend({ mixins: Ctors });
}
function isPrimitive(value) {
    var type = typeof value;
    return value == null || (type !== 'object' && type !== 'function');
}
function warn(message) {
    if (typeof console !== 'undefined') {
        console.warn('[vue-class-component] ' + message);
    }
}

function collectDataFromConstructor(vm, Component) {
    // override _init to prevent to init as Vue instance
    var originalInit = Component.prototype._init;
    Component.prototype._init = function () {
        var _this = this;
        // proxy to actual vm
        var keys = Object.getOwnPropertyNames(vm);
        // 2.2.0 compat (props are no longer exposed as self properties)
        if (vm.$options.props) {
            for (var key in vm.$options.props) {
                if (!vm.hasOwnProperty(key)) {
                    keys.push(key);
                }
            }
        }
        keys.forEach(function (key) {
            if (key.charAt(0) !== '_') {
                Object.defineProperty(_this, key, {
                    get: function () { return vm[key]; },
                    set: function (value) { vm[key] = value; },
                    configurable: true
                });
            }
        });
    };
    // should be acquired class property values
    var data = new Component();
    // restore original _init to avoid memory leak (#209)
    Component.prototype._init = originalInit;
    // create plain data object
    var plainData = {};
    Object.keys(data).forEach(function (key) {
        if (data[key] !== undefined) {
            plainData[key] = data[key];
        }
    });
    if (false) {}
    return plainData;
}

var $internalHooks = [
    'data',
    'beforeCreate',
    'created',
    'beforeMount',
    'mounted',
    'beforeDestroy',
    'destroyed',
    'beforeUpdate',
    'updated',
    'activated',
    'deactivated',
    'render',
    'errorCaptured',
    'serverPrefetch' // 2.6
];
function componentFactory(Component, options) {
    if (options === void 0) { options = {}; }
    options.name = options.name || Component._componentTag || Component.name;
    // prototype props.
    var proto = Component.prototype;
    Object.getOwnPropertyNames(proto).forEach(function (key) {
        if (key === 'constructor') {
            return;
        }
        // hooks
        if ($internalHooks.indexOf(key) > -1) {
            options[key] = proto[key];
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        if (descriptor.value !== void 0) {
            // methods
            if (typeof descriptor.value === 'function') {
                (options.methods || (options.methods = {}))[key] = descriptor.value;
            }
            else {
                // typescript decorated data
                (options.mixins || (options.mixins = [])).push({
                    data: function () {
                        var _a;
                        return _a = {}, _a[key] = descriptor.value, _a;
                    }
                });
            }
        }
        else if (descriptor.get || descriptor.set) {
            // computed properties
            (options.computed || (options.computed = {}))[key] = {
                get: descriptor.get,
                set: descriptor.set
            };
        }
    });
    (options.mixins || (options.mixins = [])).push({
        data: function () {
            return collectDataFromConstructor(this, Component);
        }
    });
    // decorate options
    var decorators = Component.__decorators__;
    if (decorators) {
        decorators.forEach(function (fn) { return fn(options); });
        delete Component.__decorators__;
    }
    // find super
    var superProto = Object.getPrototypeOf(Component.prototype);
    var Super = superProto instanceof Vue
        ? superProto.constructor
        : Vue;
    var Extended = Super.extend(options);
    forwardStaticMembers(Extended, Component, Super);
    if (reflectionIsSupported) {
        copyReflectionMetadata(Extended, Component);
    }
    return Extended;
}
var reservedPropertyNames = [
    // Unique id
    'cid',
    // Super Vue constructor
    'super',
    // Component options that will be used by the component
    'options',
    'superOptions',
    'extendOptions',
    'sealedOptions',
    // Private assets
    'component',
    'directive',
    'filter'
];
var shouldIgnore = {
    prototype: true,
    arguments: true,
    callee: true,
    caller: true
};
function forwardStaticMembers(Extended, Original, Super) {
    // We have to use getOwnPropertyNames since Babel registers methods as non-enumerable
    Object.getOwnPropertyNames(Original).forEach(function (key) {
        // Skip the properties that should not be overwritten
        if (shouldIgnore[key]) {
            return;
        }
        // Some browsers does not allow reconfigure built-in properties
        var extendedDescriptor = Object.getOwnPropertyDescriptor(Extended, key);
        if (extendedDescriptor && !extendedDescriptor.configurable) {
            return;
        }
        var descriptor = Object.getOwnPropertyDescriptor(Original, key);
        // If the user agent does not support `__proto__` or its family (IE <= 10),
        // the sub class properties may be inherited properties from the super class in TypeScript.
        // We need to exclude such properties to prevent to overwrite
        // the component options object which stored on the extended constructor (See #192).
        // If the value is a referenced value (object or function),
        // we can check equality of them and exclude it if they have the same reference.
        // If it is a primitive value, it will be forwarded for safety.
        if (!hasProto) {
            // Only `cid` is explicitly exluded from property forwarding
            // because we cannot detect whether it is a inherited property or not
            // on the no `__proto__` environment even though the property is reserved.
            if (key === 'cid') {
                return;
            }
            var superDescriptor = Object.getOwnPropertyDescriptor(Super, key);
            if (!isPrimitive(descriptor.value) &&
                superDescriptor &&
                superDescriptor.value === descriptor.value) {
                return;
            }
        }
        // Warn if the users manually declare reserved properties
        if (false) {}
        Object.defineProperty(Extended, key, descriptor);
    });
}

function Component(options) {
    if (typeof options === 'function') {
        return componentFactory(options);
    }
    return function (Component) {
        return componentFactory(Component, options);
    };
}
Component.registerHooks = function registerHooks(keys) {
    $internalHooks.push.apply($internalHooks, keys);
};

exports.default = Component;
exports.createDecorator = createDecorator;
exports.mixins = mixins;


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c8bb":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("54a1");

/***/ }),

/***/ "c8fe":
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__("f8af");

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),

/***/ "ca06":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.panelProps = exports.collapseProps = undefined;

var _Panel = __webpack_require__("4671");

var _Panel2 = _interopRequireDefault(_Panel);

var _Collapse = __webpack_require__("c05b");

var _Collapse2 = _interopRequireDefault(_Collapse);

var _commonProps = __webpack_require__("84e7");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

_Collapse2['default'].Panel = _Panel2['default']; // based on rc-collapse 1.10.2
exports.collapseProps = _commonProps.collapseProps;
exports.panelProps = _commonProps.panelProps;
exports['default'] = _Collapse2['default'];

/***/ }),

/***/ "ca5a":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "cadf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__("9c6c");
var step = __webpack_require__("d53b");
var Iterators = __webpack_require__("84f2");
var toIObject = __webpack_require__("6821");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__("01f9")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "cb5a":
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__("9638");

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),

/***/ "cb7c":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "cc45":
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__("1a2d"),
    baseUnary = __webpack_require__("b047"),
    nodeUtil = __webpack_require__("99d3");

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),

/***/ "ccb9":
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__("5168");


/***/ }),

/***/ "ccff":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _rule = __webpack_require__("1afe");

var _rule2 = _interopRequireDefault(_rule);

var _util = __webpack_require__("fa49");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/**
 *  Performs validation for string types.
 *
 *  @param rule The validation rule.
 *  @param value The value of the field on the source object.
 *  @param callback The callback function.
 *  @param source The source object being validated.
 *  @param options The validation options.
 *  @param options.messages The validation messages.
 */
function string(rule, value, callback, source, options) {
  var errors = [];
  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate) {
    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {
      return callback();
    }
    _rule2['default'].required(rule, value, source, errors, options, 'string');
    if (!(0, _util.isEmptyValue)(value, 'string')) {
      _rule2['default'].type(rule, value, source, errors, options);
      _rule2['default'].range(rule, value, source, errors, options);
      _rule2['default'].pattern(rule, value, source, errors, options);
      if (rule.whitespace === true) {
        _rule2['default'].whitespace(rule, value, source, errors, options);
      }
    }
  }
  callback(errors);
}

exports['default'] = string;

/***/ }),

/***/ "cd1c":
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__("e853");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "cd3f":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "cd78":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("e4ae");
var isObject = __webpack_require__("f772");
var newPromiseCapability = __webpack_require__("656e");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "ce10":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("69a8");
var toIObject = __webpack_require__("6821");
var arrayIndexOf = __webpack_require__("c366")(false);
var IE_PROTO = __webpack_require__("613b")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "ce7e":
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__("63b6");
var core = __webpack_require__("584a");
var fails = __webpack_require__("294c");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "cebe":
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),

/***/ "cecd":
/***/ (function(module, exports) {

module.exports = function(arr, obj){
  if (arr.indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),

/***/ "d02c":
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__("5e2e"),
    Map = __webpack_require__("79bc"),
    MapCache = __webpack_require__("7b83");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),

/***/ "d0ed":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "d1dd":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _src = __webpack_require__("0422");

Object.defineProperty(exports, 'default', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_src)['default'];
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/***/ }),

/***/ "d22a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _toConsumableArray2 = __webpack_require__("9b57");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _classnames = __webpack_require__("4d26");

var _classnames2 = _interopRequireDefault(_classnames);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

var _BaseMixin = __webpack_require__("48bb");

var _BaseMixin2 = _interopRequireDefault(_BaseMixin);

var _propsUtil = __webpack_require__("73c8");

var _Track = __webpack_require__("9d5f");

var _Track2 = _interopRequireDefault(_Track);

var _createSlider = __webpack_require__("f15d");

var _createSlider2 = _interopRequireDefault(_createSlider);

var _utils = __webpack_require__("f4aa");

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var rangeProps = {
  defaultValue: _vueTypes2['default'].arrayOf(_vueTypes2['default'].number),
  value: _vueTypes2['default'].arrayOf(_vueTypes2['default'].number),
  count: _vueTypes2['default'].number,
  pushable: _vueTypes2['default'].oneOfType([_vueTypes2['default'].bool, _vueTypes2['default'].number]),
  allowCross: _vueTypes2['default'].bool,
  disabled: _vueTypes2['default'].bool,
  tabIndex: _vueTypes2['default'].arrayOf(_vueTypes2['default'].number),
  prefixCls: _vueTypes2['default'].string,
  min: _vueTypes2['default'].number,
  max: _vueTypes2['default'].number
};
var Range = {
  name: 'Range',
  displayName: 'Range',
  mixins: [_BaseMixin2['default']],
  props: (0, _propsUtil.initDefaultProps)(rangeProps, {
    count: 1,
    allowCross: true,
    pushable: false,
    tabIndex: []
  }),
  data: function data() {
    var _this = this;

    var count = this.count,
        min = this.min,
        max = this.max;

    var initialValue = Array.apply(undefined, (0, _toConsumableArray3['default'])(Array(count + 1))).map(function () {
      return min;
    });
    var defaultValue = (0, _propsUtil.hasProp)(this, 'defaultValue') ? this.defaultValue : initialValue;
    var value = this.value;

    if (value === undefined) {
      value = defaultValue;
    }
    var bounds = value.map(function (v, i) {
      return _this.trimAlignValue(v, i);
    });
    var recent = bounds[0] === max ? 0 : bounds.length - 1;
    return {
      sHandle: null,
      recent: recent,
      bounds: bounds
    };
  },

  watch: {
    value: {
      handler: function handler(val) {
        var min = this.min,
            max = this.max;

        this.setChangeValue(val, min, max);
      },

      deep: true
    },
    min: function min(val) {
      var bounds = this.bounds,
          max = this.max;

      this.setChangeValue(bounds, val, max);
    },
    max: function max(val) {
      var bounds = this.bounds,
          min = this.min;

      this.setChangeValue(bounds, min, val);
    }
  },
  methods: {
    setChangeValue: function setChangeValue(value, min, max) {
      var _this2 = this;

      var bounds = this.bounds;

      var newValue = value || bounds;
      var minAmaxProps = {
        min: min,
        max: max
      };
      var nextBounds = newValue.map(function (v, i) {
        return _this2.trimAlignValue(v, i, minAmaxProps);
      });
      if (nextBounds.length === bounds.length && nextBounds.every(function (v, i) {
        return v === bounds[i];
      })) return;

      this.setState({ bounds: nextBounds });

      if (value.some(function (v) {
        return utils.isValueOutOfRange(v, minAmaxProps);
      })) {
        var newValues = value.map(function (v) {
          return utils.ensureValueInRange(v, minAmaxProps);
        });
        this.$emit('change', newValues);
      }
    },
    onChange: function onChange(state) {
      var isNotControlled = !(0, _propsUtil.hasProp)(this, 'value');
      if (isNotControlled) {
        this.setState(state);
      } else if (state.sHandle !== undefined) {
        this.setState({ sHandle: state.sHandle });
      }

      var data = (0, _extends3['default'])({}, this.$data, state);
      var changedValue = data.bounds;
      this.$emit('change', changedValue);
    },
    onStart: function onStart(position) {
      var bounds = this.bounds;

      this.$emit('beforeChange', bounds);

      var value = this.calcValueByPos(position);
      this.startValue = value;
      this.startPosition = position;

      var closestBound = this.getClosestBound(value);
      this.prevMovedHandleIndex = this.getBoundNeedMoving(value, closestBound);

      this.setState({
        sHandle: this.prevMovedHandleIndex,
        recent: this.prevMovedHandleIndex
      });

      var prevValue = bounds[this.prevMovedHandleIndex];
      if (value === prevValue) return;
      var nextBounds = [].concat((0, _toConsumableArray3['default'])(bounds));
      nextBounds[this.prevMovedHandleIndex] = value;
      this.onChange({ bounds: nextBounds });
    },
    onEnd: function onEnd() {
      this.setState({ sHandle: null });
      this.removeDocumentEvents();
      this.$emit('afterChange', this.bounds);
    },
    onMove: function onMove(e, position) {
      utils.pauseEvent(e);
      var bounds = this.bounds,
          sHandle = this.sHandle;

      var value = this.calcValueByPos(position);
      var oldValue = bounds[sHandle];
      if (value === oldValue) return;

      this.moveTo(value);
    },
    onKeyboard: function onKeyboard(e) {
      var valueMutator = utils.getKeyboardValueMutator(e);

      if (valueMutator) {
        utils.pauseEvent(e);
        var bounds = this.bounds,
            sHandle = this.sHandle;

        var oldValue = bounds[sHandle];
        var mutatedValue = valueMutator(oldValue, this.$props);
        var value = this.trimAlignValue(mutatedValue);
        if (value === oldValue) return;
        var isFromKeyboardEvent = true;
        this.moveTo(value, isFromKeyboardEvent);
      }
    },
    getClosestBound: function getClosestBound(value) {
      var bounds = this.bounds;

      var closestBound = 0;
      for (var i = 1; i < bounds.length - 1; ++i) {
        if (value > bounds[i]) {
          closestBound = i;
        }
      }
      if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {
        closestBound += 1;
      }
      return closestBound;
    },
    getBoundNeedMoving: function getBoundNeedMoving(value, closestBound) {
      var bounds = this.bounds,
          recent = this.recent;

      var boundNeedMoving = closestBound;
      var isAtTheSamePoint = bounds[closestBound + 1] === bounds[closestBound];

      if (isAtTheSamePoint && bounds[recent] === bounds[closestBound]) {
        boundNeedMoving = recent;
      }

      if (isAtTheSamePoint && value !== bounds[closestBound + 1]) {
        boundNeedMoving = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;
      }
      return boundNeedMoving;
    },
    getLowerBound: function getLowerBound() {
      return this.bounds[0];
    },
    getUpperBound: function getUpperBound() {
      var bounds = this.bounds;

      return bounds[bounds.length - 1];
    },

    /**
     * Returns an array of possible slider points, taking into account both
     * `marks` and `step`. The result is cached.
     */
    getPoints: function getPoints() {
      var marks = this.marks,
          step = this.step,
          min = this.min,
          max = this.max;

      var cache = this._getPointsCache;
      if (!cache || cache.marks !== marks || cache.step !== step) {
        var pointsObject = (0, _extends3['default'])({}, marks);
        if (step !== null) {
          for (var point = min; point <= max; point += step) {
            pointsObject[point] = point;
          }
        }
        var points = Object.keys(pointsObject).map(parseFloat);
        points.sort(function (a, b) {
          return a - b;
        });
        this._getPointsCache = { marks: marks, step: step, points: points };
      }
      return this._getPointsCache.points;
    },
    moveTo: function moveTo(value, isFromKeyboardEvent) {
      var _this3 = this;

      var nextBounds = [].concat((0, _toConsumableArray3['default'])(this.bounds));
      var sHandle = this.sHandle;

      nextBounds[sHandle] = value;
      var nextHandle = sHandle;
      if (this.$props.pushable !== false) {
        this.pushSurroundingHandles(nextBounds, nextHandle);
      } else if (this.$props.allowCross) {
        nextBounds.sort(function (a, b) {
          return a - b;
        });
        nextHandle = nextBounds.indexOf(value);
      }
      this.onChange({
        sHandle: nextHandle,
        bounds: nextBounds
      });
      if (isFromKeyboardEvent) {
        // known problem: because setState is async,
        // so trigger focus will invoke handler's onEnd and another handler's onStart too early,
        // cause onBeforeChange and onAfterChange receive wrong value.
        // here use setState callback to hack，but not elegant
        this.setState({}, function () {
          _this3.handlesRefs[nextHandle].focus();
        });
      }
    },
    pushSurroundingHandles: function pushSurroundingHandles(bounds, handle) {
      var value = bounds[handle];
      var threshold = this.pushable;

      threshold = Number(threshold);

      var direction = 0;
      if (bounds[handle + 1] - value < threshold) {
        direction = +1; // push to right
      }
      if (value - bounds[handle - 1] < threshold) {
        direction = -1; // push to left
      }

      if (direction === 0) {
        return;
      }

      var nextHandle = handle + direction;
      var diffToNext = direction * (bounds[nextHandle] - value);
      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        // revert to original value if pushing is impossible
        bounds[handle] = bounds[nextHandle] - direction * threshold;
      }
    },
    pushHandle: function pushHandle(bounds, handle, direction, amount) {
      var originalValue = bounds[handle];
      var currentValue = bounds[handle];
      while (direction * (currentValue - originalValue) < amount) {
        if (!this.pushHandleOnePoint(bounds, handle, direction)) {
          // can't push handle enough to create the needed `amount` gap, so we
          // revert its position to the original value
          bounds[handle] = originalValue;
          return false;
        }
        currentValue = bounds[handle];
      }
      // the handle was pushed enough to create the needed `amount` gap
      return true;
    },
    pushHandleOnePoint: function pushHandleOnePoint(bounds, handle, direction) {
      var points = this.getPoints();
      var pointIndex = points.indexOf(bounds[handle]);
      var nextPointIndex = pointIndex + direction;
      if (nextPointIndex >= points.length || nextPointIndex < 0) {
        // reached the minimum or maximum available point, can't push anymore
        return false;
      }
      var nextHandle = handle + direction;
      var nextValue = points[nextPointIndex];
      var threshold = this.pushable;

      var diffToNext = direction * (bounds[nextHandle] - nextValue);
      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        // couldn't push next handle, so we won't push this one either
        return false;
      }
      // push the handle
      bounds[handle] = nextValue;
      return true;
    },
    trimAlignValue: function trimAlignValue(v, handle) {
      var nextProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var mergedProps = (0, _extends3['default'])({}, this.$props, nextProps);
      var valInRange = utils.ensureValueInRange(v, mergedProps);
      var valNotConflict = this.ensureValueNotConflict(handle, valInRange, mergedProps);
      return utils.ensureValuePrecision(valNotConflict, mergedProps);
    },
    ensureValueNotConflict: function ensureValueNotConflict(handle, val, _ref) {
      var allowCross = _ref.allowCross,
          thershold = _ref.pushable;

      var state = this.$data || {};
      var bounds = state.bounds;

      handle = handle === undefined ? state.sHandle : handle;
      thershold = Number(thershold);
      /* eslint-disable eqeqeq */
      if (!allowCross && handle != null && bounds !== undefined) {
        if (handle > 0 && val <= bounds[handle - 1] + thershold) {
          return bounds[handle - 1] + thershold;
        }
        if (handle < bounds.length - 1 && val >= bounds[handle + 1] - thershold) {
          return bounds[handle + 1] - thershold;
        }
      }
      /* eslint-enable eqeqeq */
      return val;
    },
    getTrack: function getTrack(_ref2) {
      var bounds = _ref2.bounds,
          prefixCls = _ref2.prefixCls,
          vertical = _ref2.vertical,
          included = _ref2.included,
          offsets = _ref2.offsets,
          trackStyle = _ref2.trackStyle;
      var h = this.$createElement;

      return bounds.slice(0, -1).map(function (_, index) {
        var _classNames;

        var i = index + 1;
        var trackClassName = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-track', true), (0, _defineProperty3['default'])(_classNames, prefixCls + '-track-' + i, true), _classNames));
        return h(_Track2['default'], {
          'class': trackClassName,
          attrs: { vertical: vertical,
            included: included,
            offset: offsets[i - 1],
            length: offsets[i] - offsets[i - 1]
          },
          style: trackStyle[index],
          key: i
        });
      });
    },
    renderSlider: function renderSlider() {
      var _this4 = this;

      var sHandle = this.sHandle,
          bounds = this.bounds,
          prefixCls = this.prefixCls,
          vertical = this.vertical,
          included = this.included,
          disabled = this.disabled,
          min = this.min,
          max = this.max,
          handle = this.handle,
          defaultHandle = this.defaultHandle,
          trackStyle = this.trackStyle,
          handleStyle = this.handleStyle,
          tabIndex = this.tabIndex;

      var handleGenerator = handle || defaultHandle;
      var offsets = bounds.map(function (v) {
        return _this4.calcOffset(v);
      });

      var handleClassName = prefixCls + '-handle';
      var handles = bounds.map(function (v, i) {
        var _classNames2;

        return handleGenerator({
          className: (0, _classnames2['default'])((_classNames2 = {}, (0, _defineProperty3['default'])(_classNames2, handleClassName, true), (0, _defineProperty3['default'])(_classNames2, handleClassName + '-' + (i + 1), true), _classNames2)),
          prefixCls: prefixCls,
          vertical: vertical,
          offset: offsets[i],
          value: v,
          dragging: sHandle === i,
          index: i,
          tabIndex: tabIndex[i] || 0,
          min: min,
          max: max,
          disabled: disabled,
          style: handleStyle[i],
          directives: [{
            name: 'ant-ref',
            value: function value(h) {
              return _this4.saveHandle(i, h);
            }
          }],
          on: {
            focus: _this4.onFocus,
            blur: _this4.onBlur
          }
        });
      });

      return {
        tracks: this.getTrack({ bounds: bounds, prefixCls: prefixCls, vertical: vertical, included: included, offsets: offsets, trackStyle: trackStyle }),
        handles: handles
      };
    }
  }
};

exports['default'] = (0, _createSlider2['default'])(Range);

/***/ }),

/***/ "d2c8":
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__("aae3");
var defined = __webpack_require__("be13");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "d2d5":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("1654");
__webpack_require__("549b");
module.exports = __webpack_require__("584a").Array.from;


/***/ }),

/***/ "d2f9":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = __webpack_require__("9b57");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

exports.cloneVNode = cloneVNode;
exports.cloneVNodes = cloneVNodes;
exports.cloneElement = cloneElement;

var _propsUtil = __webpack_require__("73c8");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function cloneVNode(vnode, deep) {
  var componentOptions = vnode.componentOptions;
  var data = vnode.data;

  var listeners = {};
  if (componentOptions && componentOptions.listeners) {
    listeners = (0, _extends3['default'])({}, componentOptions.listeners);
  }

  var on = {};
  if (data && data.on) {
    on = (0, _extends3['default'])({}, data.on);
  }

  var cloned = new vnode.constructor(vnode.tag, data ? (0, _extends3['default'])({}, data, { on: on }) : data, vnode.children, vnode.text, vnode.elm, vnode.context, componentOptions ? (0, _extends3['default'])({}, componentOptions, { listeners: listeners }) : componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;
  if (deep) {
    if (vnode.children) {
      cloned.children = cloneVNodes(vnode.children, true);
    }
    if (componentOptions && componentOptions.children) {
      componentOptions.children = cloneVNodes(componentOptions.children, true);
    }
  }
  return cloned;
}

function cloneVNodes(vnodes, deep) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i], deep);
  }
  return res;
}

function cloneElement(n) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var deep = arguments[2];

  var ele = n;
  if (Array.isArray(n)) {
    ele = (0, _propsUtil.filterEmpty)(n)[0];
  }
  if (!ele) {
    return null;
  }
  var node = cloneVNode(ele, deep);
  var _nodeProps$props = nodeProps.props,
      props = _nodeProps$props === undefined ? {} : _nodeProps$props,
      key = nodeProps.key,
      _nodeProps$on = nodeProps.on,
      on = _nodeProps$on === undefined ? {} : _nodeProps$on,
      children = nodeProps.children,
      _nodeProps$directives = nodeProps.directives,
      directives = _nodeProps$directives === undefined ? [] : _nodeProps$directives;

  var data = node.data || {};
  var cls = {};
  var style = {};
  var _nodeProps$attrs = nodeProps.attrs,
      attrs = _nodeProps$attrs === undefined ? {} : _nodeProps$attrs,
      ref = nodeProps.ref,
      _nodeProps$domProps = nodeProps.domProps,
      domProps = _nodeProps$domProps === undefined ? {} : _nodeProps$domProps,
      _nodeProps$style = nodeProps.style,
      tempStyle = _nodeProps$style === undefined ? {} : _nodeProps$style,
      _nodeProps$class = nodeProps['class'],
      tempCls = _nodeProps$class === undefined ? {} : _nodeProps$class,
      _nodeProps$scopedSlot = nodeProps.scopedSlots,
      scopedSlots = _nodeProps$scopedSlot === undefined ? {} : _nodeProps$scopedSlot;


  if (typeof data.style === 'string') {
    style = (0, _propsUtil.parseStyleText)(data.style);
  } else {
    style = (0, _extends3['default'])({}, data.style, style);
  }
  if (typeof tempStyle === 'string') {
    style = (0, _extends3['default'])({}, style, (0, _propsUtil.parseStyleText)(style));
  } else {
    style = (0, _extends3['default'])({}, style, tempStyle);
  }

  if (typeof data['class'] === 'string' && data['class'].trim() !== '') {
    data['class'].split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = (0, _extends3['default'])({}, data['class'], cls);
  }
  if (typeof tempCls === 'string' && tempCls.trim() !== '') {
    tempCls.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = (0, _extends3['default'])({}, cls, tempCls);
  }
  node.data = (0, _extends3['default'])({}, data, {
    style: style,
    attrs: (0, _extends3['default'])({}, data.attrs, attrs),
    'class': cls,
    domProps: (0, _extends3['default'])({}, data.domProps, domProps),
    scopedSlots: (0, _extends3['default'])({}, data.scopedSlots, scopedSlots),
    directives: [].concat((0, _toConsumableArray3['default'])(data.directives || []), (0, _toConsumableArray3['default'])(directives))
  });

  if (node.componentOptions) {
    node.componentOptions.propsData = node.componentOptions.propsData || {};
    node.componentOptions.listeners = node.componentOptions.listeners || {};
    node.componentOptions.propsData = (0, _extends3['default'])({}, node.componentOptions.propsData, props);
    node.componentOptions.listeners = (0, _extends3['default'])({}, node.componentOptions.listeners, on);
    if (children) {
      node.componentOptions.children = children;
    }
  } else {
    node.data.on = (0, _extends3['default'])({}, node.data.on || {}, on);
  }

  if (key !== undefined) {
    node.key = key;
    node.data.key = key;
  }
  if (typeof ref === 'string') {
    node.data.ref = ref;
  }
  return node;
}

/***/ }),

/***/ "d327":
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),

/***/ "d370":
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__("253c"),
    isObjectLike = __webpack_require__("1310");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ "d3f4":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "d409":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "d53b":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "d7ee":
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__("c3fc"),
    baseUnary = __webpack_require__("b047"),
    nodeUtil = __webpack_require__("99d3");

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),

/***/ "d847":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("5bba");

/***/ }),

/***/ "d864":
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__("79aa");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "d8d6":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("1654");
__webpack_require__("6c1c");
module.exports = __webpack_require__("ccb9").f('iterator');


/***/ }),

/***/ "d8e5":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "d8e8":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "d9f6":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("e4ae");
var IE8_DOM_DEFINE = __webpack_require__("794b");
var toPrimitive = __webpack_require__("1bc3");
var dP = Object.defineProperty;

exports.f = __webpack_require__("8e60") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "da03":
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__("2b3e");

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ "da81":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {/**
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright JS Foundation and other contributors <https://js.foundation/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    asyncTag = '[object AsyncFunction]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    nullTag = '[object Null]',
    objectTag = '[object Object]',
    proxyTag = '[object Proxy]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    undefinedTag = '[object Undefined]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Gets the value at `key`, unless `key` is "__proto__".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  return key == '__proto__'
    ? undefined
    : object[key];
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    objectCreate = Object.create,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice,
    symToStringTag = Symbol ? Symbol.toStringTag : undefined;

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
    nativeMax = Math.max,
    nativeNow = Date.now;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    if (isObject(srcValue)) {
      stack || (stack = new Stack);
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = merge;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba"), __webpack_require__("62e4")(module)))

/***/ }),

/***/ "dab3":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
/* global define */

(function () {
	'use strict';

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners:
			canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if (true) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return ExecutionEnvironment;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}());


/***/ }),

/***/ "db0c":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("9e1c");

/***/ }),

/***/ "dbdb":
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__("584a");
var global = __webpack_require__("e53d");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__("b8e3") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "dc57":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ "dc62":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("9427");
var $Object = __webpack_require__("584a").Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _classnames = __webpack_require__("4d26");

var _classnames2 = _interopRequireDefault(_classnames);

var _propsUtil = __webpack_require__("73c8");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var Marks = {
  functional: true,
  render: function render(h, context) {
    var _context$props = context.props,
        className = _context$props.className,
        vertical = _context$props.vertical,
        marks = _context$props.marks,
        included = _context$props.included,
        upperBound = _context$props.upperBound,
        lowerBound = _context$props.lowerBound,
        max = _context$props.max,
        min = _context$props.min;
    var clickLabel = context.listeners.clickLabel;

    var marksKeys = Object.keys(marks);
    var marksCount = marksKeys.length;
    var unit = marksCount > 1 ? 100 / (marksCount - 1) : 100;
    var markWidth = unit * 0.9;

    var range = max - min;
    var elements = marksKeys.map(parseFloat).sort(function (a, b) {
      return a - b;
    }).map(function (point) {
      var _classNames;

      var markPoint = typeof marks[point] === 'function' ? marks[point](h) : marks[point];
      var markPointIsObject = (typeof markPoint === 'undefined' ? 'undefined' : (0, _typeof3['default'])(markPoint)) === 'object' && !(0, _propsUtil.isValidElement)(markPoint);
      var markLabel = markPointIsObject ? markPoint.label : markPoint;
      if (!markLabel && markLabel !== 0) {
        return null;
      }

      var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
      var markClassName = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, className + '-text', true), (0, _defineProperty3['default'])(_classNames, className + '-text-active', isActive), _classNames));

      var bottomStyle = {
        marginBottom: '-50%',
        bottom: (point - min) / range * 100 + '%'
      };

      var leftStyle = {
        width: markWidth + '%',
        marginLeft: -markWidth / 2 + '%',
        left: (point - min) / range * 100 + '%'
      };

      var style = vertical ? bottomStyle : leftStyle;
      var markStyle = markPointIsObject ? (0, _extends3['default'])({}, style, markPoint.style) : style;
      return h(
        'span',
        {
          'class': markClassName,
          style: markStyle,
          key: point,
          on: {
            'mousedown': function mousedown(e) {
              return clickLabel(e, point);
            },
            'touchstart': function touchstart(e) {
              return clickLabel(e, point);
            }
          }
        },
        [markLabel]
      );
    });

    return h(
      'div',
      { 'class': className },
      [elements]
    );
  }
};

exports['default'] = Marks;

/***/ }),

/***/ "deaf":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "df7c":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "e098":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var START_EVENT_NAME_MAP = {
  transitionstart: {
    transition: 'transitionstart',
    WebkitTransition: 'webkitTransitionStart',
    MozTransition: 'mozTransitionStart',
    OTransition: 'oTransitionStart',
    msTransition: 'MSTransitionStart'
  },

  animationstart: {
    animation: 'animationstart',
    WebkitAnimation: 'webkitAnimationStart',
    MozAnimation: 'mozAnimationStart',
    OAnimation: 'oAnimationStart',
    msAnimation: 'MSAnimationStart'
  }
};

var END_EVENT_NAME_MAP = {
  transitionend: {
    transition: 'transitionend',
    WebkitTransition: 'webkitTransitionEnd',
    MozTransition: 'mozTransitionEnd',
    OTransition: 'oTransitionEnd',
    msTransition: 'MSTransitionEnd'
  },

  animationend: {
    animation: 'animationend',
    WebkitAnimation: 'webkitAnimationEnd',
    MozAnimation: 'mozAnimationEnd',
    OAnimation: 'oAnimationEnd',
    msAnimation: 'MSAnimationEnd'
  }
};

var startEvents = [];
var endEvents = [];

function detectEvents() {
  var testEl = document.createElement('div');
  var style = testEl.style;

  if (!('AnimationEvent' in window)) {
    delete START_EVENT_NAME_MAP.animationstart.animation;
    delete END_EVENT_NAME_MAP.animationend.animation;
  }

  if (!('TransitionEvent' in window)) {
    delete START_EVENT_NAME_MAP.transitionstart.transition;
    delete END_EVENT_NAME_MAP.transitionend.transition;
  }

  function process(EVENT_NAME_MAP, events) {
    for (var baseEventName in EVENT_NAME_MAP) {
      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
        var baseEvents = EVENT_NAME_MAP[baseEventName];
        for (var styleName in baseEvents) {
          if (styleName in style) {
            events.push(baseEvents[styleName]);
            break;
          }
        }
      }
    }
  }

  process(START_EVENT_NAME_MAP, startEvents);
  process(END_EVENT_NAME_MAP, endEvents);
}

if (typeof window !== 'undefined' && typeof document !== 'undefined') {
  detectEvents();
}

function addEventListener(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}

function removeEventListener(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}

var TransitionEvents = {
  // Start events
  startEvents: startEvents,

  addStartEventListener: function addStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    startEvents.forEach(function (startEvent) {
      addEventListener(node, startEvent, eventListener);
    });
  },
  removeStartEventListener: function removeStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      return;
    }
    startEvents.forEach(function (startEvent) {
      removeEventListener(node, startEvent, eventListener);
    });
  },


  // End events
  endEvents: endEvents,

  addEndEventListener: function addEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    endEvents.forEach(function (endEvent) {
      addEventListener(node, endEvent, eventListener);
    });
  },
  removeEndEventListener: function removeEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }
    endEvents.forEach(function (endEvent) {
      removeEventListener(node, endEvent, eventListener);
    });
  }
};

exports['default'] = TransitionEvents;

/***/ }),

/***/ "e099":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),

/***/ "e11e":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "e170":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "e1de":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("696e"), __esModule: true };

/***/ }),

/***/ "e24b":
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__("49f4"),
    hashDelete = __webpack_require__("1efc"),
    hashGet = __webpack_require__("bbc0"),
    hashHas = __webpack_require__("7a48"),
    hashSet = __webpack_require__("2524");

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),

/***/ "e265":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("ed33");

/***/ }),

/***/ "e4ae":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("f772");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__("2b3e");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("62e4")(module)))

/***/ }),

/***/ "e53d":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "e679":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "e692":
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "e6ea":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "e6f3":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("07e3");
var toIObject = __webpack_require__("36c3");
var arrayIndexOf = __webpack_require__("5b4e")(false);
var IE_PROTO = __webpack_require__("5559")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "e811":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _vmc_calendar_locale_zh_CN__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("956e");

/* harmony default export */ __webpack_exports__["default"] = (_vmc_calendar_locale_zh_CN__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]);

/***/ }),

/***/ "e814":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("b9e9");

/***/ }),

/***/ "e829":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("2f37");
module.exports = __webpack_require__("584a").Date.now;


/***/ }),

/***/ "e82a":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "e853":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("d3f4");
var isArray = __webpack_require__("1169");
var SPECIES = __webpack_require__("2b4c")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "eac5":
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ "ead6":
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__("f772");
var anObject = __webpack_require__("e4ae");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__("d864")(Function.call, __webpack_require__("bf0b").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "eb40":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "ebd6":
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__("cb7c");
var aFunction = __webpack_require__("d8e8");
var SPECIES = __webpack_require__("2b4c")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "ebfd":
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__("62a0")('meta');
var isObject = __webpack_require__("f772");
var has = __webpack_require__("07e3");
var setDesc = __webpack_require__("d9f6").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__("294c")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "ec69":
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__("6fcd"),
    baseKeys = __webpack_require__("03dd"),
    isArrayLike = __webpack_require__("30c9");

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),

/***/ "ec8c":
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),

/***/ "ec9d":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "ed33":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("014b");
module.exports = __webpack_require__("584a").Object.getOwnPropertySymbols;


/***/ }),

/***/ "eef0":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "efb6":
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__("5e2e");

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),

/***/ "f15d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__("6042");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = __webpack_require__("8e8e");

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

exports['default'] = createSlider;

var _classnames = __webpack_require__("4d26");

var _classnames2 = _interopRequireDefault(_classnames);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

var _addEventListener = __webpack_require__("9778");

var _addEventListener2 = _interopRequireDefault(_addEventListener);

var _warning = __webpack_require__("a7e2");

var _warning2 = _interopRequireDefault(_warning);

var _propsUtil = __webpack_require__("73c8");

var _Steps = __webpack_require__("218f");

var _Steps2 = _interopRequireDefault(_Steps);

var _Marks = __webpack_require__("ddb0");

var _Marks2 = _interopRequireDefault(_Marks);

var _Handle = __webpack_require__("45fd");

var _Handle2 = _interopRequireDefault(_Handle);

var _utils = __webpack_require__("f4aa");

var utils = _interopRequireWildcard(_utils);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function noop() {}

function createSlider(Component) {
  // const displayName = `ComponentEnhancer(${Component.displayName})`
  var propTypes = {
    min: _vueTypes2['default'].number,
    max: _vueTypes2['default'].number,
    step: _vueTypes2['default'].number,
    marks: _vueTypes2['default'].object,
    included: _vueTypes2['default'].bool,
    prefixCls: _vueTypes2['default'].string,
    disabled: _vueTypes2['default'].bool,
    handle: _vueTypes2['default'].func,
    dots: _vueTypes2['default'].bool,
    vertical: _vueTypes2['default'].bool,
    minimumTrackStyle: _vueTypes2['default'].object, // just for compatibility, will be deperecate
    maximumTrackStyle: _vueTypes2['default'].object, // just for compatibility, will be deperecate
    handleStyle: _vueTypes2['default'].oneOfType([_vueTypes2['default'].object, _vueTypes2['default'].arrayOf(_vueTypes2['default'].object)]),
    trackStyle: _vueTypes2['default'].oneOfType([_vueTypes2['default'].object, _vueTypes2['default'].arrayOf(_vueTypes2['default'].object)]),
    railStyle: _vueTypes2['default'].object,
    dotStyle: _vueTypes2['default'].object,
    activeDotStyle: _vueTypes2['default'].object,
    autoFocus: _vueTypes2['default'].bool
  };
  return {
    name: 'createSlider',
    mixins: [Component],
    model: {
      prop: 'value',
      event: 'change'
    },
    props: (0, _propsUtil.initDefaultProps)(propTypes, {
      prefixCls: 'rc-slider',
      min: 0,
      max: 100,
      step: 1,
      marks: {},
      // handle ({ index, ref, className, style, ...restProps }) {
      //   delete restProps.dragging
      //   const handleProps = {
      //     props: {
      //       ...restProps,
      //     },
      //     class: className,
      //     style,
      //     key: index,
      //     ref,
      //   }
      //   return <Handle {...handleProps} />
      // },
      included: true,
      disabled: false,
      dots: false,
      vertical: false,
      trackStyle: [{}],
      handleStyle: [{}],
      railStyle: {},
      dotStyle: {},
      activeDotStyle: {}
    }),
    data: function data() {
      if (utils.isDev()) {
        var step = this.step,
            max = this.max,
            min = this.min;

        var isPointDiffEven = isFinite(max - min) ? (max - min) % step === 0 : true; // eslint-disable-line
        (0, _warning2['default'])(step && Math.floor(step) === step ? isPointDiffEven : true, 'Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)', max - min, step);
      }
      this.handlesRefs = {};
      return {};
    },
    mounted: function mounted() {
      var _this = this;

      this.$nextTick(function () {
        // Snapshot testing cannot handle refs, so be sure to null-check this.
        _this.document = _this.$refs.sliderRef && _this.$refs.sliderRef.ownerDocument;
        // this.setHandleRefs()
      });
    },
    beforeDestroy: function beforeDestroy() {
      var _this2 = this;

      this.$nextTick(function () {
        // if (super.componentWillUnmount) super.componentWillUnmount()
        _this2.removeDocumentEvents();
      });
    },

    methods: {
      defaultHandle: function defaultHandle(_ref) {
        var index = _ref.index,
            directives = _ref.directives,
            className = _ref.className,
            style = _ref.style,
            on = _ref.on,
            restProps = (0, _objectWithoutProperties3['default'])(_ref, ['index', 'directives', 'className', 'style', 'on']);
        var h = this.$createElement;

        delete restProps.dragging;
        if (restProps.value === null) {
          return null;
        }
        var handleProps = {
          props: (0, _extends3['default'])({}, restProps),
          'class': className,
          style: style,
          key: index,
          directives: directives,
          on: on
        };
        return h(_Handle2['default'], handleProps);
      },
      onMouseDown: function onMouseDown(e) {
        if (e.button !== 0) {
          return;
        }
        var isVertical = this.vertical;
        var position = utils.getMousePosition(isVertical, e);
        if (!utils.isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = utils.getHandleCenterPosition(isVertical, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.removeDocumentEvents();
        this.onStart(position);
        this.addDocumentMouseEvents();
        utils.pauseEvent(e);
      },
      onTouchStart: function onTouchStart(e) {
        if (utils.isNotTouchEvent(e)) return;

        var isVertical = this.vertical;
        var position = utils.getTouchPosition(isVertical, e);
        if (!utils.isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = utils.getHandleCenterPosition(isVertical, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.onStart(position);
        this.addDocumentTouchEvents();
        utils.pauseEvent(e);
      },
      onFocus: function onFocus(e) {
        var vertical = this.vertical;

        if (utils.isEventFromHandle(e, this.handlesRefs)) {
          var handlePosition = utils.getHandleCenterPosition(vertical, e.target);
          this.dragOffset = 0;
          this.onStart(handlePosition);
          utils.pauseEvent(e);
          this.$emit('focus', e);
        }
      },
      onBlur: function onBlur(e) {
        this.onEnd(e);
        this.$emit('blur', e);
      },
      onMouseUp: function onMouseUp() {
        if (this.handlesRefs[this.prevMovedHandleIndex]) {
          this.handlesRefs[this.prevMovedHandleIndex].clickFocus();
        }
      },
      onMouseMove: function onMouseMove(e) {
        if (!this.$refs.sliderRef) {
          this.onEnd();
          return;
        }
        var position = utils.getMousePosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onTouchMove: function onTouchMove(e) {
        if (utils.isNotTouchEvent(e) || !this.$refs.sliderRef) {
          this.onEnd();
          return;
        }

        var position = utils.getTouchPosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onKeyDown: function onKeyDown(e) {
        if (this.$refs.sliderRef && utils.isEventFromHandle(e, this.handlesRefs)) {
          this.onKeyboard(e);
        }
      },
      onClickMarkLabel: function onClickMarkLabel(e, value) {
        e.stopPropagation();
        this.onChange({ sValue: value });
        this.onEnd();
      },
      getSliderStart: function getSliderStart() {
        var slider = this.$refs.sliderRef;
        var rect = slider.getBoundingClientRect();

        return this.vertical ? rect.top : rect.left + window.pageXOffset;
      },
      getSliderLength: function getSliderLength() {
        var slider = this.$refs.sliderRef;
        if (!slider) {
          return 0;
        }

        var coords = slider.getBoundingClientRect();
        return this.vertical ? coords.height : coords.width;
      },
      addDocumentTouchEvents: function addDocumentTouchEvents() {
        // just work for Chrome iOS Safari and Android Browser
        this.onTouchMoveListener = (0, _addEventListener2['default'])(this.document, 'touchmove', this.onTouchMove);
        this.onTouchUpListener = (0, _addEventListener2['default'])(this.document, 'touchend', this.onEnd);
      },
      addDocumentMouseEvents: function addDocumentMouseEvents() {
        this.onMouseMoveListener = (0, _addEventListener2['default'])(this.document, 'mousemove', this.onMouseMove);
        this.onMouseUpListener = (0, _addEventListener2['default'])(this.document, 'mouseup', this.onEnd);
      },
      removeDocumentEvents: function removeDocumentEvents() {
        /* eslint-disable no-unused-expressions */
        this.onTouchMoveListener && this.onTouchMoveListener.remove();
        this.onTouchUpListener && this.onTouchUpListener.remove();

        this.onMouseMoveListener && this.onMouseMoveListener.remove();
        this.onMouseUpListener && this.onMouseUpListener.remove();
        /* eslint-enable no-unused-expressions */
      },
      focus: function focus() {
        if (!this.disabled) {
          this.handlesRefs[0].focus();
        }
      },
      blur: function blur() {
        var _this3 = this;

        if (!this.disabled) {
          Object.keys(this.handlesRefs).forEach(function (key) {
            if (_this3.handlesRefs[key] && _this3.handlesRefs[key].blur) {
              _this3.handlesRefs[key].blur();
            }
          });
        }
      },
      calcValue: function calcValue(offset) {
        var vertical = this.vertical,
            min = this.min,
            max = this.max;

        var ratio = Math.abs(Math.max(offset, 0) / this.getSliderLength());
        var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
        return value;
      },
      calcValueByPos: function calcValueByPos(position) {
        var pixelOffset = position - this.getSliderStart();
        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
        return nextValue;
      },
      calcOffset: function calcOffset(value) {
        var min = this.min,
            max = this.max;

        var ratio = (value - min) / (max - min);
        return ratio * 100;
      },
      saveHandle: function saveHandle(index, handle) {
        this.handlesRefs[index] = handle;
      }
    },
    render: function render(h) {
      var _classNames;

      var prefixCls = this.prefixCls,
          marks = this.marks,
          dots = this.dots,
          step = this.step,
          included = this.included,
          disabled = this.disabled,
          vertical = this.vertical,
          min = this.min,
          max = this.max,
          maximumTrackStyle = this.maximumTrackStyle,
          railStyle = this.railStyle,
          dotStyle = this.dotStyle,
          activeDotStyle = this.activeDotStyle;

      var _renderSlider = this.renderSlider(h),
          tracks = _renderSlider.tracks,
          handles = _renderSlider.handles;

      var sliderClassName = (0, _classnames2['default'])(prefixCls, (_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-with-marks', Object.keys(marks).length), (0, _defineProperty3['default'])(_classNames, prefixCls + '-disabled', disabled), (0, _defineProperty3['default'])(_classNames, prefixCls + '-vertical', vertical), _classNames));
      var markProps = {
        props: {
          vertical: vertical,
          marks: marks,
          included: included,
          lowerBound: this.getLowerBound(),
          upperBound: this.getUpperBound(),
          max: max,
          min: min,
          className: prefixCls + '-mark'
        },
        on: {
          clickLabel: disabled ? noop : this.onClickMarkLabel
        }
      };
      return h(
        'div',
        {
          ref: 'sliderRef',
          attrs: { tabIndex: '-1'
          },
          'class': sliderClassName,
          on: {
            'touchstart': disabled ? noop : this.onTouchStart,
            'mousedown': disabled ? noop : this.onMouseDown,
            'mouseup': disabled ? noop : this.onMouseUp,
            'keydown': disabled ? noop : this.onKeyDown,
            'focus': disabled ? noop : this.onFocus,
            'blur': disabled ? noop : this.onBlur
          }
        },
        [h('div', {
          'class': prefixCls + '-rail',
          style: (0, _extends3['default'])({}, maximumTrackStyle, railStyle)
        }), tracks, h(_Steps2['default'], {
          attrs: {
            prefixCls: prefixCls,
            vertical: vertical,
            marks: marks,
            dots: dots,
            step: step,
            included: included,
            lowerBound: this.getLowerBound(),
            upperBound: this.getUpperBound(),
            max: max,
            min: min,
            dotStyle: dotStyle,
            activeDotStyle: activeDotStyle
          }
        }), handles, h(_Marks2['default'], markProps), this.$slots['default']]
      );
    }
  };
}

/***/ }),

/***/ "f201":
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__("e4ae");
var aFunction = __webpack_require__("79aa");
var SPECIES = __webpack_require__("5168")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "f228":
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = __webpack_require__("40c3");
var from = __webpack_require__("4517");
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};


/***/ }),

/***/ "f386":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// B.2.3.11 String.prototype.small()
__webpack_require__("386b")('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});


/***/ }),

/***/ "f410":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("1af6");
module.exports = __webpack_require__("584a").Array.isArray;


/***/ }),

/***/ "f499":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("a21f");

/***/ }),

/***/ "f4aa":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = __webpack_require__("9b57");

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

exports.isDev = isDev;
exports.isEventFromHandle = isEventFromHandle;
exports.isValueOutOfRange = isValueOutOfRange;
exports.isNotTouchEvent = isNotTouchEvent;
exports.getClosestPoint = getClosestPoint;
exports.getPrecision = getPrecision;
exports.getMousePosition = getMousePosition;
exports.getTouchPosition = getTouchPosition;
exports.getHandleCenterPosition = getHandleCenterPosition;
exports.ensureValueInRange = ensureValueInRange;
exports.ensureValuePrecision = ensureValuePrecision;
exports.pauseEvent = pauseEvent;
exports.calculateNextValue = calculateNextValue;
exports.getKeyboardValueMutator = getKeyboardValueMutator;

var _KeyCode = __webpack_require__("af09");

var _KeyCode2 = _interopRequireDefault(_KeyCode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function isDev() {
  return "production" !== 'production';
}

function isEventFromHandle(e, handles) {
  try {
    return Object.keys(handles).some(function (key) {
      return e.target === handles[key].$el || e.target === handles[key];
    });
  } catch (error) {
    return false;
  }
}

function isValueOutOfRange(value, _ref) {
  var min = _ref.min,
      max = _ref.max;

  return value < min || value > max;
}

function isNotTouchEvent(e) {
  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
}

function getClosestPoint(val, _ref2) {
  var marks = _ref2.marks,
      step = _ref2.step,
      min = _ref2.min;

  var points = Object.keys(marks).map(parseFloat);
  if (step !== null) {
    var closestStep = Math.round((val - min) / step) * step + min;
    points.push(closestStep);
  }
  var diffs = points.map(function (point) {
    return Math.abs(val - point);
  });
  return points[diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray3['default'])(diffs)))];
}

function getPrecision(step) {
  var stepString = step.toString();
  var precision = 0;
  if (stepString.indexOf('.') >= 0) {
    precision = stepString.length - stepString.indexOf('.') - 1;
  }
  return precision;
}

function getMousePosition(vertical, e) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical ? e.clientY : e.pageX) / zoom;
}

function getTouchPosition(vertical, e) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical ? e.touches[0].clientY : e.touches[0].pageX) / zoom;
}

function getHandleCenterPosition(vertical, handle) {
  var coords = handle.getBoundingClientRect();
  return vertical ? coords.top + coords.height * 0.5 : window.pageXOffset + coords.left + coords.width * 0.5;
}

function ensureValueInRange(val, _ref3) {
  var max = _ref3.max,
      min = _ref3.min;

  if (val <= min) {
    return min;
  }
  if (val >= max) {
    return max;
  }
  return val;
}

function ensureValuePrecision(val, props) {
  var step = props.step;

  var closestPoint = isFinite(getClosestPoint(val, props)) ? getClosestPoint(val, props) : 0; // eslint-disable-line
  return step === null ? closestPoint : parseFloat(closestPoint.toFixed(getPrecision(step)));
}

function pauseEvent(e) {
  e.stopPropagation();
  e.preventDefault();
}

function calculateNextValue(func, value, props) {
  var operations = {
    increase: function increase(a, b) {
      return a + b;
    },
    decrease: function decrease(a, b) {
      return a - b;
    }
  };

  var indexToGet = operations[func](Object.keys(props.marks).indexOf(JSON.stringify(value)), 1);
  var keyToGet = Object.keys(props.marks)[indexToGet];

  if (props.step) {
    return operations[func](value, props.step);
  } else if (!!Object.keys(props.marks).length && !!props.marks[keyToGet]) {
    return props.marks[keyToGet];
  }
  return value;
}

function getKeyboardValueMutator(e) {
  switch (e.keyCode) {
    case _KeyCode2['default'].UP:
    case _KeyCode2['default'].RIGHT:
      return function (value, props) {
        return calculateNextValue('increase', value, props);
      };

    case _KeyCode2['default'].DOWN:
    case _KeyCode2['default'].LEFT:
      return function (value, props) {
        return calculateNextValue('decrease', value, props);
      };

    case _KeyCode2['default'].END:
      return function (value, props) {
        return props.max;
      };
    case _KeyCode2['default'].HOME:
      return function (value, props) {
        return props.min;
      };
    case _KeyCode2['default'].PAGE_UP:
      return function (value, props) {
        return value + props.step * 2;
      };
    case _KeyCode2['default'].PAGE_DOWN:
      return function (value, props) {
        return value - props.step * 2;
      };

    default:
      return undefined;
  }
}

/***/ }),

/***/ "f559":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__("5ca1");
var toLength = __webpack_require__("9def");
var context = __webpack_require__("d2c8");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__("5147")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "f66e":
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "f772":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "f772d":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue = __webpack_require__("8bbf");

var _vue2 = _interopRequireDefault(_vue);

var _vueTypes = __webpack_require__("7b44");

var _vueTypes2 = _interopRequireDefault(_vueTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

exports['default'] = {
  props: {
    autoMount: _vueTypes2['default'].bool.def(true),
    autoDestroy: _vueTypes2['default'].bool.def(true),
    visible: _vueTypes2['default'].bool,
    forceRender: _vueTypes2['default'].bool.def(false),
    parent: _vueTypes2['default'].any,
    getComponent: _vueTypes2['default'].func.isRequired,
    getContainer: _vueTypes2['default'].func.isRequired,
    children: _vueTypes2['default'].func.isRequired
  },

  mounted: function mounted() {
    if (this.autoMount) {
      this.renderComponent();
    }
  },
  updated: function updated() {
    if (this.autoMount) {
      this.renderComponent();
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.autoDestroy) {
      this.removeContainer();
    }
  },

  methods: {
    removeContainer: function removeContainer() {
      if (this.container) {
        this._component && this._component.$destroy();
        this.container.parentNode.removeChild(this.container);
        this.container = null;
        this._component = null;
      }
    },
    renderComponent: function renderComponent() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var ready = arguments[1];
      var visible = this.visible,
          forceRender = this.forceRender,
          getContainer = this.getContainer,
          parent = this.parent;

      var self = this;
      if (visible || parent.$refs._component || forceRender) {
        var el = this.componentEl;
        if (!this.container) {
          this.container = getContainer();
          el = document.createElement('div');
          this.componentEl = el;
          this.container.appendChild(el);
        }

        if (!this._component) {
          this._component = new _vue2['default']({
            el: el,
            parent: self.parent,
            data: {
              comProps: props
            },
            mounted: function mounted() {
              this.$nextTick(function () {
                if (ready) {
                  ready.call(self);
                }
              });
            },
            updated: function updated() {
              this.$nextTick(function () {
                if (ready) {
                  ready.call(self);
                }
              });
            },
            render: function render() {
              return self.getComponent(this.comProps);
            }
          });
        } else {
          this._component.comProps = props;
        }
      }
    }
  },

  render: function render() {
    return this.children({
      renderComponent: this.renderComponent,
      removeContainer: this.removeContainer
    });
  }
};

/***/ }),

/***/ "f893":
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__("f921"), __esModule: true };

/***/ }),

/***/ "f8af":
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__("2474");

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),

/***/ "f921":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("014b");
__webpack_require__("c207");
__webpack_require__("69d3");
__webpack_require__("765d");
module.exports = __webpack_require__("584a").Symbol;


/***/ }),

/***/ "fa21":
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__("7530"),
    getPrototype = __webpack_require__("2dcb"),
    isPrototype = __webpack_require__("eac5");

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),

/***/ "fa49":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.warning = undefined;

var _extends2 = __webpack_require__("41b2");

var _extends3 = _interopRequireDefault(_extends2);

var _typeof2 = __webpack_require__("1098");

var _typeof3 = _interopRequireDefault(_typeof2);

var _promise = __webpack_require__("e1de");

var _promise2 = _interopRequireDefault(_promise);

var _keys = __webpack_require__("1907");

var _keys2 = _interopRequireDefault(_keys);

var _stringify = __webpack_require__("8034");

var _stringify2 = _interopRequireDefault(_stringify);

exports.convertFieldsError = convertFieldsError;
exports.format = format;
exports.isEmptyValue = isEmptyValue;
exports.isEmptyObject = isEmptyObject;
exports.asyncMap = asyncMap;
exports.complementError = complementError;
exports.deepMerge = deepMerge;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

/* eslint no-console:0 */

var formatRegExp = /%[sdj%]/g;

var warning = exports.warning = function warning() {};

// don't print warning message when in production env or node runtime
if (false) {}

function convertFieldsError(errors) {
  if (!errors || !errors.length) return null;
  var fields = {};
  errors.forEach(function (error) {
    var field = error.field;
    fields[field] = fields[field] || [];
    fields[field].push(error);
  });
  return fields;
}

function format() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var i = 1;
  var f = args[0];
  var len = args.length;
  if (typeof f === 'function') {
    return f.apply(null, args.slice(1));
  }
  if (typeof f === 'string') {
    var str = String(f).replace(formatRegExp, function (x) {
      if (x === '%%') {
        return '%';
      }
      if (i >= len) {
        return x;
      }
      switch (x) {
        case '%s':
          return String(args[i++]);
        case '%d':
          return Number(args[i++]);
        case '%j':
          try {
            return (0, _stringify2['default'])(args[i++]);
          } catch (_) {
            return '[Circular]';
          }
          break;
        default:
          return x;
      }
    });
    for (var arg = args[i]; i < len; arg = args[++i]) {
      str += ' ' + arg;
    }
    return str;
  }
  return f;
}

function isNativeStringType(type) {
  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'pattern';
}

function isEmptyValue(value, type) {
  if (value === undefined || value === null) {
    return true;
  }
  if (type === 'array' && Array.isArray(value) && !value.length) {
    return true;
  }
  if (isNativeStringType(type) && typeof value === 'string' && !value) {
    return true;
  }
  return false;
}

function isEmptyObject(obj) {
  return (0, _keys2['default'])(obj).length === 0;
}

function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total = 0;
  var arrLength = arr.length;

  function count(errors) {
    results.push.apply(results, errors);
    total++;
    if (total === arrLength) {
      callback(results);
    }
  }

  arr.forEach(function (a) {
    func(a, count);
  });
}

function asyncSerialArray(arr, func, callback) {
  var index = 0;
  var arrLength = arr.length;

  function next(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index;
    index = index + 1;
    if (original < arrLength) {
      func(arr[original], next);
    } else {
      callback([]);
    }
  }

  next([]);
}

function flattenObjArr(objArr) {
  var ret = [];
  (0, _keys2['default'])(objArr).forEach(function (k) {
    ret.push.apply(ret, objArr[k]);
  });
  return ret;
}

function asyncMap(objArr, option, func, callback) {
  if (option.first) {
    var flattenArr = flattenObjArr(objArr);
    return asyncSerialArray(flattenArr, func, callback);
  }
  var firstFields = option.firstFields || [];
  if (firstFields === true) {
    firstFields = (0, _keys2['default'])(objArr);
  }
  var objArrKeys = (0, _keys2['default'])(objArr);
  var objArrLength = objArrKeys.length;
  var total = 0;
  var results = [];
  var pending = new _promise2['default'](function (resolve, reject) {
    var next = function next(errors) {
      results.push.apply(results, errors);
      total++;
      if (total === objArrLength) {
        callback(results);
        return results.length ? reject({ errors: results, fields: convertFieldsError(results) }) : resolve();
      }
    };
    objArrKeys.forEach(function (key) {
      var arr = objArr[key];
      if (firstFields.indexOf(key) !== -1) {
        asyncSerialArray(arr, func, next);
      } else {
        asyncParallelArray(arr, func, next);
      }
    });
  });
  pending['catch'](function (e) {
    return e;
  });
  return pending;
}

function complementError(rule) {
  return function (oe) {
    if (oe && oe.message) {
      oe.field = oe.field || rule.fullField;
      return oe;
    }
    return {
      message: oe,
      field: oe.field || rule.fullField
    };
  };
}

function deepMerge(target, source) {
  if (source) {
    for (var s in source) {
      if (source.hasOwnProperty(s)) {
        var value = source[s];
        if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3['default'])(value)) === 'object' && (0, _typeof3['default'])(target[s]) === 'object') {
          target[s] = (0, _extends3['default'])({}, target[s], value);
        } else {
          target[s] = value;
        }
      }
    }
  }
  return target;
}

/***/ }),

/***/ "fa5b":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("5537")('native-function-to-string', Function.toString);


/***/ }),

/***/ "fa99":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("0293");
module.exports = __webpack_require__("584a").Object.getPrototypeOf;


/***/ }),

/***/ "fab2":
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__("7726").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var setPublicPath_i
  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __webpack_require__.p = setPublicPath_i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/keys.js
var object_keys = __webpack_require__("a4bb");
var keys_default = /*#__PURE__*/__webpack_require__.n(object_keys);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__("ac6a");

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js
var define_properties = __webpack_require__("d847");
var define_properties_default = /*#__PURE__*/__webpack_require__.n(define_properties);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/promise.js
var core_js_promise = __webpack_require__("795b");
var promise_default = /*#__PURE__*/__webpack_require__.n(core_js_promise);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js
var iterator = __webpack_require__("5d58");
var iterator_default = /*#__PURE__*/__webpack_require__.n(iterator);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/symbol.js
var symbol = __webpack_require__("67bb");
var symbol_default = /*#__PURE__*/__webpack_require__.n(symbol);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js



function typeof_typeof2(obj) { if (typeof symbol_default.a === "function" && typeof iterator_default.a === "symbol") { typeof_typeof2 = function _typeof2(obj) { return typeof obj; }; } else { typeof_typeof2 = function _typeof2(obj) { return obj && typeof symbol_default.a === "function" && obj.constructor === symbol_default.a && obj !== symbol_default.a.prototype ? "symbol" : typeof obj; }; } return typeof_typeof2(obj); }

function typeof_typeof(obj) {
  if (typeof symbol_default.a === "function" && typeof_typeof2(iterator_default.a) === "symbol") {
    typeof_typeof = function _typeof(obj) {
      return typeof_typeof2(obj);
    };
  } else {
    typeof_typeof = function _typeof(obj) {
      return obj && typeof symbol_default.a === "function" && obj.constructor === symbol_default.a && obj !== symbol_default.a.prototype ? "symbol" : typeof_typeof2(obj);
    };
  }

  return typeof_typeof(obj);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/assign.js
var object_assign = __webpack_require__("5176");
var assign_default = /*#__PURE__*/__webpack_require__.n(object_assign);

// EXTERNAL MODULE: external "axios"
var external_axios_ = __webpack_require__("cebe");
var external_axios_default = /*#__PURE__*/__webpack_require__.n(external_axios_);

// EXTERNAL MODULE: ./node_modules/lodash.merge/index.js
var lodash_merge = __webpack_require__("da81");
var lodash_merge_default = /*#__PURE__*/__webpack_require__.n(lodash_merge);

// CONCATENATED MODULE: ./src/packages/http-method/index.ts
var HttpMethod;

(function (HttpMethod) {
  HttpMethod["GET"] = "GET";
  HttpMethod["POST"] = "POST";
  HttpMethod["PUT"] = "PUT";
  HttpMethod["DELETE"] = "DELETE";
})(HttpMethod || (HttpMethod = {}));

/* harmony default export */ var http_method = (HttpMethod);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __webpack_require__("6762");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __webpack_require__("2fdb");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__("6b54");

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js
var is_array = __webpack_require__("a745");
var is_array_default = /*#__PURE__*/__webpack_require__.n(is_array);

// EXTERNAL MODULE: ./node_modules/querystring-es3/index.js
var querystring_es3 = __webpack_require__("b383");
var querystring_es3_default = /*#__PURE__*/__webpack_require__.n(querystring_es3);

// CONCATENATED MODULE: ./src/packages/api-proxy/src/param-handler.ts







/**
 * 判断对象是不是数组
 * @type {(arr) => boolean}
 */

var isArray = is_array_default.a || function (arr) {
  return Object.prototype.toString.call(arr) === '[object Array]';
};
/**
 * 替换请求路径中的路径参数名称为实际的参数值，并将在路径中的参数从请求参数中去除
 * @param {string} path 待处理的请求路径
 * @param {object} params 请求的所有参数
 * @return {string}
 */


function replaceRestParams(path, params) {
  var pathSegments = toSegments(path);

  for (var index = 0; index < pathSegments.length; index++) {
    var segment = pathSegments[index];

    if (segment.indexOf(':') === 0) {
      var paramName = segment.substr(1);

      if (params[paramName] !== null && params[paramName] !== undefined) {
        pathSegments[index] = params[paramName];
        delete params[paramName];
      } else {
        throw Error("\u7F3A\u5C11\u8DEF\u5F84\u53C2\u6570".concat(paramName, ", \u8BF7\u6C42\u8DEF\u5F84\u4E3A: ").concat(path, "\uFF0C\u8BF7\u6C42\u7684\u53C2\u6570\u4E3A").concat(params));
      }
    }
  }

  return pathSegments.join('');
}
/**
 * 将请求路径进行分段，解析出其中以:开头的部分，即为路径参数
 * @param {string} path 待解析的路径
 * @return {string[]} 路径分段后的字符串数组，数组中的字符串顺序连接即为原路径
 */


function toSegments(path) {
  var result = [];
  var start = -1;

  for (var index = 0; index < path.length; index++) {
    var char = path[index];

    if (char === ':' && (index === 0 || path[index - 1] === '/') || ['/', '?', '&', '#'].indexOf(char) >= 0 && start >= 0) {
      if (index > 0) {
        result.push(path.substring(start, index));
      }

      start = index;
    } else if (index === path.length - 1 && start >= 0) {
      if (index > 0) {
        result.push(path.substring(start, index + 1));
      }

      start = index;
    } else if (start === -1) {
      start = index;
    }
  }

  return result;
}
/**
 * 将对象参数转化为axis请求的数据格式
 * @param {API & AxiosRequestConfig} obj 接口对象
 * @param {object} params 请求参数
 * @return {API & AxiosRequestConfig} 接口对象
 */


var param_handler_assignParams = function assignParams(obj, params) {
  if (params) {
    if (isArray(params)) {
      throw Error('不接受数组参数');
    }

    var copyParams = assign_default()({}, params);

    obj.url = replaceRestParams(obj.url, copyParams);

    if (obj.isFormData && [http_method.POST, http_method.PUT].includes(obj.method)) {
      obj.data = querystring_es3_default.a.stringify(copyParams);
    } else if ([http_method.GET, http_method.DELETE].includes(obj.method)) {
      obj.url = "".concat(obj.url, "?").concat(querystring_es3_default.a.stringify(copyParams));
    } else {
      obj.data = copyParams;
    }

    return obj;
  } else {
    return obj;
  }
};
// CONCATENATED MODULE: ./src/packages/api-proxy/src/index.ts







/**
 * Created by wuhao on 2017/1/16.
 */

/* harmony default export */ var src = (function (apiObj, config) {
  var commonSettings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  external_axios_default.a.defaults.baseURL = config.basePath;

  var newObj = assign_default()({}, apiObj);

  function defineReq(obj, options) {
    var copyObj = obj;

    if (copyObj.url) {
      copyObj = lodash_merge_default()({}, copyObj, options);
      /**
       * 发送ajax请求
       * @param {object} settings
       * @param {object|array} params
       */

      copyObj.request = function (params, settings) {
        return request.call(copyObj, lodash_merge_default()({}, settings, copyObj), params);
      };

      copyObj.req = function (params, settings) {
        return requestData.call(copyObj, lodash_merge_default()({}, settings, copyObj), params, false);
      };

      copyObj.r = function (params, settings) {
        return requestData.call(copyObj, lodash_merge_default()({}, settings, copyObj), params, true);
      };
    }

    for (var property in copyObj) {
      if (copyObj.hasOwnProperty(property) && typeof_typeof(copyObj[property]) === 'object') {
        copyObj[property] = defineReq(copyObj[property], options);
      }
    }

    return copyObj;
  }

  var api = defineReq(newObj, commonSettings);

  var requestData = function requestData(obj, params) {
    var pure = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var p = request(obj, params); // @ts-ignore

    return promise_default.a.resolve(p).then(function (v) {
      return new promise_default.a(function (resolve, reject) {
        if (v.data.code) {
          reject(v.data);
        } else {
          if (pure) {
            resolve(v.data.data);
          } else {
            resolve(v.data);
          }
        }
      });
    });
  };

  var request = function request(obj, params) {
    obj.url = obj.url + (config.pathSuffix || '');
    obj.method = obj.method || http_method.GET;
    param_handler_assignParams(obj, params);
    var p = external_axios_default.a.request(obj);
    return promise_default.a.resolve(p).then(function (v) {
      return new promise_default.a(function (resolve) {
        if ((obj.errorHandleType === undefined || obj.errorHandleType === 'global') && config.logicErrorHandler && v.data.code) {
          config.logicErrorHandler(v.data, v.data.code);
        }

        resolve(v);
      });
    }).catch(function (err) {
      return new promise_default.a(function (resolve, reject) {
        if ((obj.errorHandleType === undefined || obj.errorHandleType === 'global') && config.httpStatusErrorHandler) {
          if (err.response) {
            config.httpStatusErrorHandler(err, err.response.status);
          } else {
            config.httpStatusErrorHandler(err);
          }
        }

        reject(err);
      });
    });
  };

  return api;
});
// CONCATENATED MODULE: ./src/packages/api-proxy/index.ts

/* harmony default export */ var api_proxy = (src);
// EXTERNAL MODULE: external "Vue"
var external_Vue_ = __webpack_require__("8bbf");
var external_Vue_default = /*#__PURE__*/__webpack_require__.n(external_Vue_);

// CONCATENATED MODULE: ./src/packages/global/index.ts





var global_apiProxy = function apiProxy(apiObject, config, axiosConfig) {
  external_axios_default.a.defaults.baseURL = config.basePath;
  var apiProxy = api_proxy(apiObject, config, axiosConfig || {});
  var plugin = {
    installed: false,
    install: function install(vue) {
      if (plugin.installed) {
        return;
      }

      if (!vue.prototype.$api) {
        define_properties_default()(vue.prototype, {
          $api: {
            get: function get() {
              return apiProxy;
            }
          }
        });
      }
    }
  };
  external_Vue_default.a.use(plugin);
  return apiProxy;
};

/* harmony default export */ var global = ({
  proxyAPI: global_apiProxy
});
// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/extends.js
var helpers_extends = __webpack_require__("41b2");
var extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);

// EXTERNAL MODULE: ./node_modules/@ant-design/icons-vue/es/utils.js
var utils = __webpack_require__("2adb");

// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/components/Icon.js



var twoToneColorPalette = {
  primaryColor: '#333',
  secondaryColor: '#E6E6E6'
};

var Icon_Icon = {
  name: 'AntdIcon',
  props: ['type', 'primaryColor', 'secondaryColor'],
  displayName: 'IconVue',
  definitions: new utils["a" /* MiniMap */](),
  data: function data() {
    return {
      twoToneColorPalette: twoToneColorPalette
    };
  },
  add: function add() {
    for (var _len = arguments.length, icons = Array(_len), _key = 0; _key < _len; _key++) {
      icons[_key] = arguments[_key];
    }

    icons.forEach(function (icon) {
      Icon_Icon.definitions.set(Object(utils["f" /* withSuffix */])(icon.name, icon.theme), icon);
    });
  },
  clear: function clear() {
    Icon_Icon.definitions.clear();
  },
  get: function get(key) {
    var colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : twoToneColorPalette;

    if (key) {
      var target = Icon_Icon.definitions.get(key);
      if (target && typeof target.icon === 'function') {
        target = extends_default()({}, target, {
          icon: target.icon(colors.primaryColor, colors.secondaryColor)
        });
      }
      return target;
    }
  },
  setTwoToneColors: function setTwoToneColors(_ref) {
    var primaryColor = _ref.primaryColor,
        secondaryColor = _ref.secondaryColor;

    twoToneColorPalette.primaryColor = primaryColor;
    twoToneColorPalette.secondaryColor = secondaryColor || Object(utils["c" /* getSecondaryColor */])(primaryColor);
  },
  getTwoToneColors: function getTwoToneColors() {
    return extends_default()({}, twoToneColorPalette);
  },
  render: function render(h) {
    var _$props = this.$props,
        type = _$props.type,
        primaryColor = _$props.primaryColor,
        secondaryColor = _$props.secondaryColor;


    var target = void 0;
    var colors = twoToneColorPalette;
    if (primaryColor) {
      colors = {
        primaryColor: primaryColor,
        secondaryColor: secondaryColor || Object(utils["c" /* getSecondaryColor */])(primaryColor)
      };
    }
    if (Object(utils["d" /* isIconDefinition */])(type)) {
      target = type;
    } else if (typeof type === 'string') {
      target = Icon_Icon.get(type, colors);
      if (!target) {
        // log(`Could not find icon: ${type}`);
        return null;
      }
    }
    if (!target) {
      Object(utils["e" /* log */])('type should be string or icon definiton, but got ' + type);
      return null;
    }
    if (target && typeof target.icon === 'function') {
      target = extends_default()({}, target, {
        icon: target.icon(colors.primaryColor, colors.secondaryColor)
      });
    }
    return Object(utils["b" /* generate */])(h, target.icon, 'svg-' + target.name, {
      attrs: {
        'data-icon': target.name,
        width: '1em',
        height: '1em',
        fill: 'currentColor',
        'aria-hidden': 'true'
      },
      on: this.$listeners
    });
  }
};

/* istanbul ignore next */
Icon_Icon.install = function (Vue) {
  Vue.component(Icon_Icon.name, Icon_Icon);
};

/* harmony default export */ var components_Icon = (Icon_Icon);
// CONCATENATED MODULE: ./node_modules/@ant-design/icons-vue/es/index.js


/* harmony default export */ var es = (components_Icon);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__("28a5");

// CONCATENATED MODULE: ./src/packages/moment-zh_CN.ts

/* harmony default export */ var moment_zh_CN = (window.moment && window.moment.defineLocale('zh-cn', {
  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
  longDateFormat: {
    LT: 'HH:mm',
    LTS: 'HH:mm:ss',
    L: 'YYYY/MM/DD',
    LL: 'YYYY年M月D日',
    LLL: 'YYYY年M月D日Ah点mm分',
    LLLL: 'YYYY年M月D日ddddAh点mm分',
    l: 'YYYY/M/D',
    ll: 'YYYY年M月D日',
    lll: 'YYYY年M月D日 HH:mm',
    llll: 'YYYY年M月D日dddd HH:mm'
  },
  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
  meridiemHour: function meridiemHour(hour, meridiem) {
    var copyHour = hour;

    if (copyHour === 12) {
      copyHour = 0;
    }

    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
      return copyHour;
    } else if (meridiem === '下午' || meridiem === '晚上') {
      return copyHour + 12;
    } else {
      // '中午'
      return copyHour >= 11 ? copyHour : copyHour + 12;
    }
  },
  meridiem: function meridiem(hour, minute, isLower) {
    var hm = hour * 100 + minute;

    if (hm < 600) {
      return '凌晨';
    } else if (hm < 900) {
      return '早上';
    } else if (hm < 1130) {
      return '上午';
    } else if (hm < 1230) {
      return '中午';
    } else if (hm < 1800) {
      return '下午';
    } else {
      return '晚上';
    }
  },
  calendar: {
    sameDay: '[今天]LT',
    nextDay: '[明天]LT',
    nextWeek: '[下]ddddLT',
    lastDay: '[昨天]LT',
    lastWeek: '[上]ddddLT',
    sameElse: 'L'
  },
  dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
  ordinal: function ordinal(number, period) {
    switch (period) {
      case 'd':
      case 'D':
      case 'DDD':
        return number + '日';

      case 'M':
        return number + '月';

      case 'w':
      case 'W':
        return number + '周';

      default:
        return number;
    }
  },
  relativeTime: {
    future: '%s内',
    past: '%s前',
    s: '几秒',
    ss: '%d 秒',
    m: '1 分钟',
    mm: '%d 分钟',
    h: '1 小时',
    hh: '%d 小时',
    d: '1 天',
    dd: '%d 天',
    M: '1 个月',
    MM: '%d 个月',
    y: '1 年',
    yy: '%d 年'
  },
  week: {
    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
    dow: 1,
    doy: 4 // The week that contains Jan 4th is the first week of the year.

  }
}));
// EXTERNAL MODULE: ./node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js
var helper = __webpack_require__("2638");
var helper_default = /*#__PURE__*/__webpack_require__.n(helper);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js
var define_property = __webpack_require__("85f2");
var define_property_default = /*#__PURE__*/__webpack_require__.n(define_property);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js


function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;

    define_property_default()(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (typeof_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js
var get_prototype_of = __webpack_require__("061b");
var get_prototype_of_default = /*#__PURE__*/__webpack_require__.n(get_prototype_of);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js
var set_prototype_of = __webpack_require__("4d16");
var set_prototype_of_default = /*#__PURE__*/__webpack_require__.n(set_prototype_of);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js


function getPrototypeOf_getPrototypeOf(o) {
  getPrototypeOf_getPrototypeOf = set_prototype_of_default.a ? get_prototype_of_default.a : function _getPrototypeOf(o) {
    return o.__proto__ || get_prototype_of_default()(o);
  };
  return getPrototypeOf_getPrototypeOf(o);
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/create.js
var create = __webpack_require__("4aa6");
var create_default = /*#__PURE__*/__webpack_require__.n(create);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js

function _setPrototypeOf(o, p) {
  _setPrototypeOf = set_prototype_of_default.a || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js


function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = create_default()(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

// EXTERNAL MODULE: ./node_modules/vue-class-component/dist/vue-class-component.common.js
var vue_class_component_common = __webpack_require__("65d9");
var vue_class_component_common_default = /*#__PURE__*/__webpack_require__.n(vue_class_component_common);

// EXTERNAL MODULE: ./node_modules/vue-property-decorator/node_modules/vue-class-component/dist/vue-class-component.common.js
var dist_vue_class_component_common = __webpack_require__("c89a");

// CONCATENATED MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js
/** vue-property-decorator verson 8.1.0 MIT LICENSE copyright 2018 kaorun343 */
/// <reference types='reflect-metadata'/>




/**
 * decorator of an inject
 * @param from key
 * @return PropertyDecorator
 */
function Inject(options) {
    return Object(dist_vue_class_component_common["createDecorator"])(function (componentOptions, key) {
        if (typeof componentOptions.inject === 'undefined') {
            componentOptions.inject = {};
        }
        if (!Array.isArray(componentOptions.inject)) {
            componentOptions.inject[key] = options || key;
        }
    });
}
/**
 * decorator of a provide
 * @param key key
 * @return PropertyDecorator | void
 */
function Provide(key) {
    return Object(dist_vue_class_component_common["createDecorator"])(function (componentOptions, k) {
        var provide = componentOptions.provide;
        if (typeof provide !== 'function' || !provide.managed) {
            var original_1 = componentOptions.provide;
            provide = componentOptions.provide = function () {
                var rv = Object.create((typeof original_1 === 'function' ? original_1.call(this) : original_1) || null);
                for (var i in provide.managed)
                    rv[provide.managed[i]] = this[i];
                return rv;
            };
            provide.managed = {};
        }
        provide.managed[k] = key || k;
    });
}
/** @see {@link https://github.com/vuejs/vue-class-component/blob/master/src/reflect.ts} */
var reflectMetadataIsSupported = typeof Reflect !== 'undefined' && typeof Reflect.getMetadata !== 'undefined';
function applyMetadata(options, target, key) {
    if (reflectMetadataIsSupported) {
        if (!Array.isArray(options) && typeof options !== 'function' && typeof options.type === 'undefined') {
            options.type = Reflect.getMetadata('design:type', target, key);
        }
    }
}
/**
 * decorator of model
 * @param  event event name
 * @param options options
 * @return PropertyDecorator
 */
function Model(event, options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        Object(dist_vue_class_component_common["createDecorator"])(function (componentOptions, k) {
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
            componentOptions.model = { prop: k, event: event || k };
        })(target, key);
    };
}
/**
 * decorator of a prop
 * @param  options the options for the prop
 * @return PropertyDecorator | void
 */
function Prop(options) {
    if (options === void 0) { options = {}; }
    return function (target, key) {
        applyMetadata(options, target, key);
        Object(dist_vue_class_component_common["createDecorator"])(function (componentOptions, k) {
            (componentOptions.props || (componentOptions.props = {}))[k] = options;
        })(target, key);
    };
}
/**
 * decorator of a watch function
 * @param  path the path or the expression to observe
 * @param  WatchOption
 * @return MethodDecorator
 */
function Watch(path, options) {
    if (options === void 0) { options = {}; }
    var _a = options.deep, deep = _a === void 0 ? false : _a, _b = options.immediate, immediate = _b === void 0 ? false : _b;
    return Object(dist_vue_class_component_common["createDecorator"])(function (componentOptions, handler) {
        if (typeof componentOptions.watch !== 'object') {
            componentOptions.watch = Object.create(null);
        }
        var watch = componentOptions.watch;
        if (typeof watch[path] === 'object' && !Array.isArray(watch[path])) {
            watch[path] = [watch[path]];
        }
        else if (typeof watch[path] === 'undefined') {
            watch[path] = [];
        }
        watch[path].push({ handler: handler, deep: deep, immediate: immediate });
    });
}
// Code copied from Vue/src/shared/util.js
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = function (str) { return str.replace(hyphenateRE, '-$1').toLowerCase(); };
/**
 * decorator of an event-emitter function
 * @param  event The name of the event
 * @return MethodDecorator
 */
function Emit(event) {
    return function (_target, key, descriptor) {
        key = hyphenate(key);
        var original = descriptor.value;
        descriptor.value = function emitter() {
            var _this = this;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var emit = function (returnValue) {
                if (returnValue !== undefined)
                    args.unshift(returnValue);
                _this.$emit.apply(_this, [event || key].concat(args));
            };
            var returnValue = original.apply(this, args);
            if (isPromise(returnValue)) {
                returnValue.then(function (returnValue) {
                    emit(returnValue);
                });
            }
            else {
                emit(returnValue);
            }
        };
    };
}
function isPromise(obj) {
    return obj instanceof Promise || (obj && typeof obj.then === 'function');
}

// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-collapse/index.js
var vc_collapse = __webpack_require__("ca06");
var vc_collapse_default = /*#__PURE__*/__webpack_require__.n(vc_collapse);

// CONCATENATED MODULE: ./src/packages/accordion/src/index.tsx













var src_Accordion =
/*#__PURE__*/
function (_Vue) {
  _inherits(Accordion, _Vue);

  function Accordion() {
    _classCallCheck(this, Accordion);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Accordion).apply(this, arguments));
  }

  _createClass(Accordion, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      return this.$slots.default ? h(vc_collapse_default.a, helper_default()([{}, {
        "attrs": assign_default()({}, this.$props)
      }, {
        "on": {
          "change": function change() {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            _this.$emit.apply(_this, ['change'].concat(args));
          }
        }
      }]), [this.$slots.default]) : null;
    }
  }]);

  return Accordion;
}(external_Vue_default.a);

src_Accordion.Panel = vc_collapse_default.a.Panel;

__decorate([Prop({
  default: 'am-accordion'
})], src_Accordion.prototype, "prefixCls", void 0);

__decorate([Prop({})], src_Accordion.prototype, "openAnimation", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Accordion.prototype, "accordion", void 0);

__decorate([Prop({
  type: [String, Array]
})], src_Accordion.prototype, "activeKey", void 0);

src_Accordion = __decorate([vue_class_component_common_default()({
  name: 'Accordion'
})], src_Accordion);
/* harmony default export */ var accordion_src = (src_Accordion);
// EXTERNAL MODULE: ./src/packages/style/index.tsx
var packages_style = __webpack_require__("658b");

// EXTERNAL MODULE: ./src/packages/accordion/style/index.less
var accordion_style = __webpack_require__("c326");

// CONCATENATED MODULE: ./src/packages/accordion/style/index.tsx


// CONCATENATED MODULE: ./src/packages/accordion/index.ts



accordion_src.install = function (Vue) {
  Vue.component('MAccordion', accordion_src);
  Vue.component('MAccordionPanel', accordion_src.Panel);
};

/* harmony default export */ var accordion = (accordion_src);
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js

function _defineProperty(obj, key, value) {
  if (key in obj) {
    define_property_default()(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js
var stringify = __webpack_require__("f499");
var stringify_default = /*#__PURE__*/__webpack_require__.n(stringify);

// EXTERNAL MODULE: ./node_modules/ant-design-vue/es/style/index.less
var es_style = __webpack_require__("b2a3");

// EXTERNAL MODULE: ./src/packages/popup/style/index.less
var popup_style = __webpack_require__("532b");

// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/button/style/index.js
var button_style = __webpack_require__("104d");

// CONCATENATED MODULE: ./src/packages/popup/style/index.js

 // style dependencies


// EXTERNAL MODULE: ./node_modules/ant-design-vue/es/drawer/style/index.less
var drawer_style = __webpack_require__("5cdc");

// EXTERNAL MODULE: ./node_modules/ant-design-vue/es/button/style/index.less
var es_button_style = __webpack_require__("e679");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/button/style/index.js


// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/drawer/style/index.js



// style dependencies

// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__("6042");
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__("8e8e");
var objectWithoutProperties_default = /*#__PURE__*/__webpack_require__.n(objectWithoutProperties);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__("4d26");
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// EXTERNAL MODULE: ./node_modules/babel-helper-vue-jsx-merge-props/index.js
var babel_helper_vue_jsx_merge_props = __webpack_require__("92fa");
var babel_helper_vue_jsx_merge_props_default = /*#__PURE__*/__webpack_require__.n(babel_helper_vue_jsx_merge_props);

// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__("1098");
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// EXTERNAL MODULE: ./node_modules/vue-ref/index.js
var vue_ref = __webpack_require__("46cf");
var vue_ref_default = /*#__PURE__*/__webpack_require__.n(vue_ref);

// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__("9b57");
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/BaseMixin.js


/* harmony default export */ var BaseMixin = ({
  // directives: {
  //   ref: {
  //     bind: function (el, binding, vnode) {
  //       binding.value(vnode.componentInstance ? vnode.componentInstance : vnode.elm)
  //     },
  //     update: function (el, binding, vnode) {
  //       binding.value(vnode.componentInstance ? vnode.componentInstance : vnode.elm)
  //     },
  //     unbind: function (el, binding, vnode) {
  //       binding.value(null)
  //     },
  //   },
  // },
  methods: {
    setState: function setState(state, callback) {
      var newState = typeof state === 'function' ? state(this.$data, this.$props) : state;
      // if (this.getDerivedStateFromProps) {
      //   Object.assign(newState, this.getDerivedStateFromProps(getOptionProps(this), { ...this.$data, ...newState }, true) || {})
      // }
      extends_default()(this.$data, newState);
      this.$nextTick(function () {
        callback && callback();
      });
    },
    __emit: function __emit() {
      // 直接调用listeners，底层组件不需要vueTool记录events
      var args = [].slice.call(arguments, 0);
      var filterEvent = [];
      var eventName = args[0];
      if (args.length && this.$listeners[eventName]) {
        if (filterEvent.includes(eventName)) {
          this.$emit.apply(this, [eventName].concat(toConsumableArray_default()(args.slice(1))));
        } else {
          var _$listeners;

          (_$listeners = this.$listeners)[eventName].apply(_$listeners, toConsumableArray_default()(args.slice(1)));
        }
      }
    }
  }
});
// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/slicedToArray.js
var slicedToArray = __webpack_require__("b24f");
var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray);

// EXTERNAL MODULE: ./node_modules/lodash/isPlainObject.js
var isPlainObject = __webpack_require__("60ed");
var isPlainObject_default = /*#__PURE__*/__webpack_require__.n(isPlainObject);

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/props-util.js





function getType(fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : '';
}

var camelizeRE = /-(\w)/g;
var camelize = function camelize(str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
};
var parseStyleText = function parseStyleText() {
  var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var camel = arguments[1];

  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      if (tmp.length > 1) {
        var k = camel ? camelize(tmp[0].trim()) : tmp[0].trim();
        res[k] = tmp[1].trim();
      }
    }
  });
  return res;
};

var hasProp = function hasProp(instance, prop) {
  var $options = instance.$options || {};
  var propsData = $options.propsData || {};
  return prop in propsData;
};
var slotHasProp = function slotHasProp(slot, prop) {
  var $options = slot.componentOptions || {};
  var propsData = $options.propsData || {};
  return prop in propsData;
};
var filterProps = function filterProps(props) {
  var propsData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var res = {};
  Object.keys(props).forEach(function (k) {
    if (k in propsData || props[k] !== undefined) {
      res[k] = props[k];
    }
  });
  return res;
};
var getSlots = function getSlots(ele) {
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }
  var children = ele.children || componentOptions.children || [];
  var slots = {};
  children.forEach(function (child) {
    if (!isEmptyElement(child)) {
      var name = child.data && child.data.slot || 'default';
      slots[name] = slots[name] || [];
      slots[name].push(child);
    }
  });
  return slots;
};
var getAllChildren = function getAllChildren(ele) {
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions || {};
  }
  return ele.children || componentOptions.children || [];
};
var getSlotOptions = function getSlotOptions(ele) {
  if (ele.fnOptions) {
    // 函数式组件
    return ele.fnOptions;
  }
  var componentOptions = ele.componentOptions;
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions;
  }
  return componentOptions ? componentOptions.Ctor.options || {} : {};
};
var props_util_getOptionProps = function getOptionProps(instance) {
  if (instance.componentOptions) {
    var componentOptions = instance.componentOptions;
    var _componentOptions$pro = componentOptions.propsData,
        propsData = _componentOptions$pro === undefined ? {} : _componentOptions$pro,
        _componentOptions$Cto = componentOptions.Ctor,
        Ctor = _componentOptions$Cto === undefined ? {} : _componentOptions$Cto;

    var props = (Ctor.options || {}).props || {};
    var res = {};
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = Object.entries(props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var _ref = _step.value;

        var _ref2 = slicedToArray_default()(_ref, 2);

        var k = _ref2[0];
        var v = _ref2[1];

        var def = v['default'];
        if (def !== undefined) {
          res[k] = typeof def === 'function' && getType(v.type) !== 'Function' ? def.call(instance) : def;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return extends_default()({}, res, propsData);
  }
  var _instance$$options = instance.$options,
      $options = _instance$$options === undefined ? {} : _instance$$options,
      _instance$$props = instance.$props,
      $props = _instance$$props === undefined ? {} : _instance$$props;

  return filterProps($props, $options.propsData);
};

var getComponentFromProp = function getComponentFromProp(instance, prop) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (instance.$createElement) {
    var h = instance.$createElement;
    var temp = instance[prop];
    if (temp !== undefined) {
      return typeof temp === 'function' && execute ? temp(h, options) : temp;
    }
    return instance.$slots[prop] || instance.$scopedSlots[prop] && execute && instance.$scopedSlots[prop](options) || instance.$scopedSlots[prop] || undefined;
  } else {
    var _h = instance.context.$createElement;
    var _temp = getPropsData(instance)[prop];
    if (_temp !== undefined) {
      return typeof _temp === 'function' && execute ? _temp(_h, options) : _temp;
    }
    var slotsProp = [];
    var componentOptions = instance.componentOptions || {};
    (componentOptions.children || []).forEach(function (child) {
      if (child.data && child.data.slot === prop) {
        if (child.tag === 'template') {
          slotsProp.push(child.children);
        } else {
          slotsProp.push(child);
        }
      }
    });
    return slotsProp.length ? slotsProp : undefined;
  }
};

var props_util_getAllProps = function getAllProps(ele) {
  var data = ele.data || {};
  var componentOptions = ele.componentOptions || {};
  if (ele.$vnode) {
    data = ele.$vnode.data || {};
    componentOptions = ele.$vnode.componentOptions || {};
  }
  return extends_default()({}, data.props, data.attrs, componentOptions.propsData);
};

var getPropsData = function getPropsData(ele) {
  var componentOptions = ele.componentOptions;
  if (ele.$vnode) {
    componentOptions = ele.$vnode.componentOptions;
  }
  return componentOptions ? componentOptions.propsData || {} : {};
};
var getValueByProp = function getValueByProp(ele, prop) {
  return getPropsData(ele)[prop];
};

var getAttrs = function getAttrs(ele) {
  var data = ele.data;
  if (ele.$vnode) {
    data = ele.$vnode.data;
  }
  return data ? data.attrs || {} : {};
};

var getKey = function getKey(ele) {
  var key = ele.key;
  if (ele.$vnode) {
    key = ele.$vnode.key;
  }
  return key;
};

function getEvents(child) {
  var events = {};
  if (child.componentOptions && child.componentOptions.listeners) {
    events = child.componentOptions.listeners;
  } else if (child.data && child.data.on) {
    events = child.data.on;
  }
  return extends_default()({}, events);
}
function getClass(ele) {
  var data = {};
  if (ele.data) {
    data = ele.data;
  } else if (ele.$vnode && ele.$vnode.data) {
    data = ele.$vnode.data;
  }
  var tempCls = data['class'] || {};
  var staticClass = data.staticClass;
  var cls = {};
  staticClass && staticClass.split(' ').forEach(function (c) {
    cls[c.trim()] = true;
  });
  if (typeof tempCls === 'string') {
    tempCls.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else if (Array.isArray(tempCls)) {
    classnames_default()(tempCls).split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = extends_default()({}, cls, tempCls);
  }
  return cls;
}
function getStyle(ele, camel) {
  var data = {};
  if (ele.data) {
    data = ele.data;
  } else if (ele.$vnode && ele.$vnode.data) {
    data = ele.$vnode.data;
  }
  var style = data.style || data.staticStyle;
  if (typeof style === 'string') {
    style = parseStyleText(style, camel);
  } else if (camel && style) {
    // 驼峰化
    var res = {};
    Object.keys(style).forEach(function (k) {
      return res[camelize(k)] = style[k];
    });
    return res;
  }
  return style;
}

function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}

function isEmptyElement(c) {
  return !(c.tag || c.text && c.text.trim() !== '');
}

function filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  return children.filter(function (c) {
    return !isEmptyElement(c);
  });
}
var initDefaultProps = function initDefaultProps(propTypes, defaultProps) {
  Object.keys(defaultProps).forEach(function (k) {
    if (propTypes[k]) {
      propTypes[k].def && (propTypes[k] = propTypes[k].def(defaultProps[k]));
    } else {
      throw new Error('not have ' + k + ' prop');
    }
  });
  return propTypes;
};

function mergeProps() {
  var args = [].slice.call(arguments, 0);
  var props = {};
  args.forEach(function () {
    var p = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = Object.entries(p)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var _ref3 = _step2.value;

        var _ref4 = slicedToArray_default()(_ref3, 2);

        var k = _ref4[0];
        var v = _ref4[1];

        props[k] = props[k] || {};
        if (isPlainObject_default()(v)) {
          extends_default()(props[k], v);
        } else {
          props[k] = v;
        }
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }
  });
  return props;
}

function isValidElement(element) {
  return element && (typeof element === 'undefined' ? 'undefined' : typeof_default()(element)) === 'object' && 'componentOptions' in element && 'context' in element && element.tag !== undefined; // remove text node
}


/* harmony default export */ var props_util = (hasProp);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/vnode.js



function cloneVNode(vnode, deep) {
  var componentOptions = vnode.componentOptions;
  var data = vnode.data;

  var listeners = {};
  if (componentOptions && componentOptions.listeners) {
    listeners = extends_default()({}, componentOptions.listeners);
  }

  var on = {};
  if (data && data.on) {
    on = extends_default()({}, data.on);
  }

  var cloned = new vnode.constructor(vnode.tag, data ? extends_default()({}, data, { on: on }) : data, vnode.children, vnode.text, vnode.elm, vnode.context, componentOptions ? extends_default()({}, componentOptions, { listeners: listeners }) : componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;
  if (deep) {
    if (vnode.children) {
      cloned.children = cloneVNodes(vnode.children, true);
    }
    if (componentOptions && componentOptions.children) {
      componentOptions.children = cloneVNodes(componentOptions.children, true);
    }
  }
  return cloned;
}

function cloneVNodes(vnodes, deep) {
  var len = vnodes.length;
  var res = new Array(len);
  for (var i = 0; i < len; i++) {
    res[i] = cloneVNode(vnodes[i], deep);
  }
  return res;
}

function cloneElement(n) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var deep = arguments[2];

  var ele = n;
  if (Array.isArray(n)) {
    ele = filterEmpty(n)[0];
  }
  if (!ele) {
    return null;
  }
  var node = cloneVNode(ele, deep);
  var _nodeProps$props = nodeProps.props,
      props = _nodeProps$props === undefined ? {} : _nodeProps$props,
      key = nodeProps.key,
      _nodeProps$on = nodeProps.on,
      on = _nodeProps$on === undefined ? {} : _nodeProps$on,
      children = nodeProps.children,
      _nodeProps$directives = nodeProps.directives,
      directives = _nodeProps$directives === undefined ? [] : _nodeProps$directives;

  var data = node.data || {};
  var cls = {};
  var style = {};
  var _nodeProps$attrs = nodeProps.attrs,
      attrs = _nodeProps$attrs === undefined ? {} : _nodeProps$attrs,
      ref = nodeProps.ref,
      _nodeProps$domProps = nodeProps.domProps,
      domProps = _nodeProps$domProps === undefined ? {} : _nodeProps$domProps,
      _nodeProps$style = nodeProps.style,
      tempStyle = _nodeProps$style === undefined ? {} : _nodeProps$style,
      _nodeProps$class = nodeProps['class'],
      tempCls = _nodeProps$class === undefined ? {} : _nodeProps$class,
      _nodeProps$scopedSlot = nodeProps.scopedSlots,
      scopedSlots = _nodeProps$scopedSlot === undefined ? {} : _nodeProps$scopedSlot;


  if (typeof data.style === 'string') {
    style = parseStyleText(data.style);
  } else {
    style = extends_default()({}, data.style, style);
  }
  if (typeof tempStyle === 'string') {
    style = extends_default()({}, style, parseStyleText(style));
  } else {
    style = extends_default()({}, style, tempStyle);
  }

  if (typeof data['class'] === 'string' && data['class'].trim() !== '') {
    data['class'].split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = extends_default()({}, data['class'], cls);
  }
  if (typeof tempCls === 'string' && tempCls.trim() !== '') {
    tempCls.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = extends_default()({}, cls, tempCls);
  }
  node.data = extends_default()({}, data, {
    style: style,
    attrs: extends_default()({}, data.attrs, attrs),
    'class': cls,
    domProps: extends_default()({}, data.domProps, domProps),
    scopedSlots: extends_default()({}, data.scopedSlots, scopedSlots),
    directives: [].concat(toConsumableArray_default()(data.directives || []), toConsumableArray_default()(directives))
  });

  if (node.componentOptions) {
    node.componentOptions.propsData = node.componentOptions.propsData || {};
    node.componentOptions.listeners = node.componentOptions.listeners || {};
    node.componentOptions.propsData = extends_default()({}, node.componentOptions.propsData, props);
    node.componentOptions.listeners = extends_default()({}, node.componentOptions.listeners, on);
    if (children) {
      node.componentOptions.children = children;
    }
  } else {
    node.data.on = extends_default()({}, node.data.on || {}, on);
  }

  if (key !== undefined) {
    node.key = key;
    node.data.key = key;
  }
  if (typeof ref === 'string') {
    node.data.ref = ref;
  }
  return node;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/vue-types/utils.js


var ObjProto = Object.prototype;
var utils_toString = ObjProto.toString;
var hasOwn = ObjProto.hasOwnProperty;

var FN_MATCH_REGEXP = /^\s*function (\w+)/;

// https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L159
var utils_getType = function getType(fn) {
  var type = fn !== null && fn !== undefined ? fn.type ? fn.type : fn : null;
  var match = type && type.toString().match(FN_MATCH_REGEXP);
  return match && match[1];
};

var getNativeType = function getNativeType(value) {
  if (value === null || value === undefined) return null;
  var match = value.constructor.toString().match(FN_MATCH_REGEXP);
  return match && match[1];
};

/**
 * No-op function
 */
var noop = function noop() {};

/**
 * Checks for a own property in an object
 *
 * @param {object} obj - Object
 * @param {string} prop - Property to check
 */
var has = function has(obj, prop) {
  return hasOwn.call(obj, prop);
};

/**
 * Determines whether the passed value is an integer. Uses `Number.isInteger` if available
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger
 * @param {*} value - The value to be tested for being an integer.
 * @returns {boolean}
 */
var isInteger = Number.isInteger || function (value) {
  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
};

/**
 * Determines whether the passed value is an Array.
 *
 * @param {*} value - The value to be tested for being an array.
 * @returns {boolean}
 */
var utils_isArray = Array.isArray || function (value) {
  return utils_toString.call(value) === '[object Array]';
};

/**
 * Checks if a value is a function
 *
 * @param {any} value - Value to check
 * @returns {boolean}
 */
var isFunction = function isFunction(value) {
  return utils_toString.call(value) === '[object Function]';
};

/**
 * Adds a `def` method to the object returning a new object with passed in argument as `default` property
 *
 * @param {object} type - Object to enhance
 */
var utils_withDefault = function withDefault(type) {
  Object.defineProperty(type, 'def', {
    value: function value(def) {
      if (def === undefined && this['default'] === undefined) {
        this['default'] = undefined;
        return this;
      }
      if (!isFunction(def) && !utils_validateType(this, def)) {
        warn(this._vueTypes_name + ' - invalid default value: "' + def + '"', def);
        return this;
      }
      this['default'] = utils_isArray(def) || isPlainObject_default()(def) ? function () {
        return def;
      } : def;

      return this;
    },

    enumerable: false,
    writable: false
  });
};

/**
 * Adds a `isRequired` getter returning a new object with `required: true` key-value
 *
 * @param {object} type - Object to enhance
 */
var withRequired = function withRequired(type) {
  Object.defineProperty(type, 'isRequired', {
    get: function get() {
      this.required = true;
      return this;
    },

    enumerable: false
  });
};

/**
 * Adds `isRequired` and `def` modifiers to an object
 *
 * @param {string} name - Type internal name
 * @param {object} obj - Object to enhance
 * @returns {object}
 */
var toType = function toType(name, obj) {
  Object.defineProperty(obj, '_vueTypes_name', {
    enumerable: false,
    writable: false,
    value: name
  });
  withRequired(obj);
  utils_withDefault(obj);

  if (isFunction(obj.validator)) {
    obj.validator = obj.validator.bind(obj);
  }
  return obj;
};

/**
 * Validates a given value against a prop type object
 *
 * @param {Object|*} type - Type to use for validation. Either a type object or a constructor
 * @param {*} value - Value to check
 * @param {boolean} silent - Silence warnings
 * @returns {boolean}
 */
var utils_validateType = function validateType(type, value) {
  var silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var typeToCheck = type;
  var valid = true;
  var expectedType = void 0;
  if (!isPlainObject_default()(type)) {
    typeToCheck = { type: type };
  }
  var namePrefix = typeToCheck._vueTypes_name ? typeToCheck._vueTypes_name + ' - ' : '';

  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {
    if (utils_isArray(typeToCheck.type)) {
      valid = typeToCheck.type.some(function (type) {
        return validateType(type, value, true);
      });
      expectedType = typeToCheck.type.map(function (type) {
        return utils_getType(type);
      }).join(' or ');
    } else {
      expectedType = utils_getType(typeToCheck);

      if (expectedType === 'Array') {
        valid = utils_isArray(value);
      } else if (expectedType === 'Object') {
        valid = isPlainObject_default()(value);
      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {
        valid = getNativeType(value) === expectedType;
      } else {
        valid = value instanceof typeToCheck.type;
      }
    }
  }

  if (!valid) {
    silent === false && warn(namePrefix + 'value "' + value + '" should be of type "' + expectedType + '"');
    return false;
  }

  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {
    valid = typeToCheck.validator(value);
    if (!valid && silent === false) warn(namePrefix + 'custom validation failed');
    return valid;
  }
  return valid;
};

var warn = noop;

if (false) { var hasConsole; }


// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/vue-types/index.js




var VuePropTypes = {
  get any() {
    return toType('any', {
      type: null
    });
  },

  get func() {
    return toType('function', {
      type: Function
    }).def(currentDefaults.func);
  },

  get bool() {
    return toType('boolean', {
      type: Boolean
    }).def(currentDefaults.bool);
  },

  get string() {
    return toType('string', {
      type: String
    }).def(currentDefaults.string);
  },

  get number() {
    return toType('number', {
      type: Number
    }).def(currentDefaults.number);
  },

  get array() {
    return toType('array', {
      type: Array
    }).def(currentDefaults.array);
  },

  get object() {
    return toType('object', {
      type: Object
    }).def(currentDefaults.object);
  },

  get integer() {
    return toType('integer', {
      type: Number,
      validator: function validator(value) {
        return isInteger(value);
      }
    }).def(currentDefaults.integer);
  },

  get symbol() {
    return toType('symbol', {
      type: null,
      validator: function validator(value) {
        return (typeof value === 'undefined' ? 'undefined' : typeof_default()(value)) === 'symbol';
      }
    });
  },

  custom: function custom(validatorFn) {
    var warnMsg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'custom validation failed';

    if (typeof validatorFn !== 'function') {
      throw new TypeError('[VueTypes error]: You must provide a function as argument');
    }

    return toType(validatorFn.name || '<<anonymous function>>', {
      validator: function validator() {
        var valid = validatorFn.apply(undefined, arguments);
        if (!valid) warn(this._vueTypes_name + ' - ' + warnMsg);
        return valid;
      }
    });
  },
  oneOf: function oneOf(arr) {
    if (!utils_isArray(arr)) {
      throw new TypeError('[VueTypes error]: You must provide an array as argument');
    }
    var msg = 'oneOf - value should be one of "' + arr.join('", "') + '"';
    var allowedTypes = arr.reduce(function (ret, v) {
      if (v !== null && v !== undefined) {
        ret.indexOf(v.constructor) === -1 && ret.push(v.constructor);
      }
      return ret;
    }, []);

    return toType('oneOf', {
      type: allowedTypes.length > 0 ? allowedTypes : null,
      validator: function validator(value) {
        var valid = arr.indexOf(value) !== -1;
        if (!valid) warn(msg);
        return valid;
      }
    });
  },
  instanceOf: function instanceOf(instanceConstructor) {
    return toType('instanceOf', {
      type: instanceConstructor
    });
  },
  oneOfType: function oneOfType(arr) {
    if (!utils_isArray(arr)) {
      throw new TypeError('[VueTypes error]: You must provide an array as argument');
    }

    var hasCustomValidators = false;

    var nativeChecks = arr.reduce(function (ret, type) {
      if (isPlainObject_default()(type)) {
        if (type._vueTypes_name === 'oneOf') {
          return ret.concat(type.type || []);
        }
        if (type.type && !isFunction(type.validator)) {
          if (utils_isArray(type.type)) return ret.concat(type.type);
          ret.push(type.type);
        } else if (isFunction(type.validator)) {
          hasCustomValidators = true;
        }
        return ret;
      }
      ret.push(type);
      return ret;
    }, []);

    if (!hasCustomValidators) {
      // we got just native objects (ie: Array, Object)
      // delegate to Vue native prop check
      return toType('oneOfType', {
        type: nativeChecks
      }).def(undefined);
    }

    var typesStr = arr.map(function (type) {
      if (type && utils_isArray(type.type)) {
        return type.type.map(utils_getType);
      }
      return utils_getType(type);
    }).reduce(function (ret, type) {
      return ret.concat(utils_isArray(type) ? type : [type]);
    }, []).join('", "');

    return this.custom(function oneOfType(value) {
      var valid = arr.some(function (type) {
        if (type._vueTypes_name === 'oneOf') {
          return type.type ? utils_validateType(type.type, value, true) : true;
        }
        return utils_validateType(type, value, true);
      });
      if (!valid) warn('oneOfType - value type should be one of "' + typesStr + '"');
      return valid;
    }).def(undefined);
  },
  arrayOf: function arrayOf(type) {
    return toType('arrayOf', {
      type: Array,
      validator: function validator(values) {
        var valid = values.every(function (value) {
          return utils_validateType(type, value);
        });
        if (!valid) warn('arrayOf - value must be an array of "' + utils_getType(type) + '"');
        return valid;
      }
    });
  },
  objectOf: function objectOf(type) {
    return toType('objectOf', {
      type: Object,
      validator: function validator(obj) {
        var valid = Object.keys(obj).every(function (key) {
          return utils_validateType(type, obj[key]);
        });
        if (!valid) warn('objectOf - value must be an object of "' + utils_getType(type) + '"');
        return valid;
      }
    });
  },
  shape: function shape(obj) {
    var keys = Object.keys(obj);
    var requiredKeys = keys.filter(function (key) {
      return obj[key] && obj[key].required === true;
    });

    var type = toType('shape', {
      type: Object,
      validator: function validator(value) {
        var _this = this;

        if (!isPlainObject_default()(value)) {
          return false;
        }
        var valueKeys = Object.keys(value);

        // check for required keys (if any)
        if (requiredKeys.length > 0 && requiredKeys.some(function (req) {
          return valueKeys.indexOf(req) === -1;
        })) {
          warn('shape - at least one of required properties "' + requiredKeys.join('", "') + '" is not present');
          return false;
        }

        return valueKeys.every(function (key) {
          if (keys.indexOf(key) === -1) {
            if (_this._vueTypes_isLoose === true) return true;
            warn('shape - object is missing "' + key + '" property');
            return false;
          }
          var type = obj[key];
          return utils_validateType(type, value[key]);
        });
      }
    });

    Object.defineProperty(type, '_vueTypes_isLoose', {
      enumerable: false,
      writable: true,
      value: false
    });

    Object.defineProperty(type, 'loose', {
      get: function get() {
        this._vueTypes_isLoose = true;
        return this;
      },

      enumerable: false
    });

    return type;
  }
};

var typeDefaults = function typeDefaults() {
  return {
    func: undefined,
    bool: undefined,
    string: undefined,
    number: undefined,
    array: undefined,
    object: undefined,
    integer: undefined
  };
};

var currentDefaults = typeDefaults();

Object.defineProperty(VuePropTypes, 'sensibleDefaults', {
  enumerable: false,
  set: function set(value) {
    if (value === false) {
      currentDefaults = {};
    } else if (value === true) {
      currentDefaults = typeDefaults();
    } else if (isPlainObject_default()(value)) {
      currentDefaults = value;
    }
  },
  get: function get() {
    return currentDefaults;
  }
});

/* harmony default export */ var vue_types = (VuePropTypes);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/ContainerRender.js



/* harmony default export */ var ContainerRender = ({
  props: {
    autoMount: vue_types.bool.def(true),
    autoDestroy: vue_types.bool.def(true),
    visible: vue_types.bool,
    forceRender: vue_types.bool.def(false),
    parent: vue_types.any,
    getComponent: vue_types.func.isRequired,
    getContainer: vue_types.func.isRequired,
    children: vue_types.func.isRequired
  },

  mounted: function mounted() {
    if (this.autoMount) {
      this.renderComponent();
    }
  },
  updated: function updated() {
    if (this.autoMount) {
      this.renderComponent();
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.autoDestroy) {
      this.removeContainer();
    }
  },

  methods: {
    removeContainer: function removeContainer() {
      if (this.container) {
        this._component && this._component.$destroy();
        this.container.parentNode.removeChild(this.container);
        this.container = null;
        this._component = null;
      }
    },
    renderComponent: function renderComponent() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var ready = arguments[1];
      var visible = this.visible,
          forceRender = this.forceRender,
          getContainer = this.getContainer,
          parent = this.parent;

      var self = this;
      if (visible || parent.$refs._component || forceRender) {
        var el = this.componentEl;
        if (!this.container) {
          this.container = getContainer();
          el = document.createElement('div');
          this.componentEl = el;
          this.container.appendChild(el);
        }

        if (!this._component) {
          this._component = new external_Vue_default.a({
            el: el,
            parent: self.parent,
            data: {
              comProps: props
            },
            mounted: function mounted() {
              this.$nextTick(function () {
                if (ready) {
                  ready.call(self);
                }
              });
            },
            updated: function updated() {
              this.$nextTick(function () {
                if (ready) {
                  ready.call(self);
                }
              });
            },
            render: function render() {
              return self.getComponent(this.comProps);
            }
          });
        } else {
          this._component.comProps = props;
        }
      }
    }
  },

  render: function render() {
    return this.children({
      renderComponent: this.renderComponent,
      removeContainer: this.removeContainer
    });
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/getScrollBarSize.js
var cached = void 0;

function getScrollBarSize(fresh) {
  if (fresh || cached === undefined) {
    var inner = document.createElement('div');
    inner.style.width = '100%';
    inner.style.height = '200px';

    var outer = document.createElement('div');
    var outerStyle = outer.style;

    outerStyle.position = 'absolute';
    outerStyle.top = 0;
    outerStyle.left = 0;
    outerStyle.pointerEvents = 'none';
    outerStyle.visibility = 'hidden';
    outerStyle.width = '200px';
    outerStyle.height = '150px';
    outerStyle.overflow = 'hidden';

    outer.appendChild(inner);

    document.body.appendChild(outer);

    var widthContained = inner.offsetWidth;
    outer.style.overflow = 'scroll';
    var widthScroll = inner.offsetWidth;

    if (widthContained === widthScroll) {
      widthScroll = outer.clientWidth;
    }

    document.body.removeChild(outer);

    cached = widthContained - widthScroll;
  }
  return cached;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/drawerProps.js


/* harmony default export */ var drawerProps = ({
  wrapperClassName: vue_types.string,
  width: vue_types.any,
  height: vue_types.any,
  defaultOpen: vue_types.bool,
  firstEnter: vue_types.bool,
  open: vue_types.bool,
  prefixCls: vue_types.string,
  placement: vue_types.string,
  level: vue_types.oneOfType([vue_types.string, vue_types.array]),
  levelMove: vue_types.oneOfType([vue_types.number, vue_types.func, vue_types.array]),
  ease: vue_types.string,
  duration: vue_types.string,
  getContainer: vue_types.oneOfType([vue_types.string, vue_types.func, vue_types.object, vue_types.bool]),
  handler: vue_types.any,
  showMask: vue_types.bool,
  maskStyle: vue_types.object,
  className: vue_types.string,
  wrapStyle: vue_types.object
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/utils.js
function dataToArray(vars) {
  if (Array.isArray(vars)) {
    return vars;
  }
  return [vars];
}
var transitionEndObject = {
  transition: 'transitionend',
  WebkitTransition: 'webkitTransitionEnd',
  MozTransition: 'transitionend',
  OTransition: 'oTransitionEnd otransitionend'
};
var transitionStr = Object.keys(transitionEndObject).filter(function (key) {
  if (typeof document === 'undefined') {
    return false;
  }
  var html = document.getElementsByTagName('html')[0];
  return key in (html ? html.style : {});
})[0];
var transitionEnd = transitionEndObject[transitionStr];

function addEventListener(target, eventType, callback, options) {
  if (target.addEventListener) {
    target.addEventListener(eventType, callback, options);
  } else if (target.attachEvent) {
    target.attachEvent('on' + eventType, callback);
  }
}

function removeEventListener(target, eventType, callback, options) {
  if (target.removeEventListener) {
    target.removeEventListener(eventType, callback, options);
  } else if (target.attachEvent) {
    target.detachEvent('on' + eventType, callback);
  }
}

function transformArguments(arg, cb) {
  var result = void 0;
  if (typeof arg === 'function') {
    result = arg(cb);
  } else {
    result = arg;
  }
  if (Array.isArray(result)) {
    if (result.length === 2) {
      return result;
    }
    return [result[0], result[1]];
  }
  return [result];
}

var isNumeric = function isNumeric(value) {
  return !isNaN(parseFloat(value)) && isFinite(value); // eslint-disable-line
};
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/Drawer.js















function Drawer_noop() {}

var currentDrawer = {};
var windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement);

external_Vue_default.a.use(vue_ref_default.a, { name: 'ant-ref' });
var Drawer_Drawer = {
  mixins: [BaseMixin],
  props: initDefaultProps(drawerProps, {
    prefixCls: 'drawer',
    placement: 'left',
    getContainer: 'body',
    level: 'all',
    duration: '.3s',
    ease: 'cubic-bezier(0.78, 0.14, 0.15, 0.86)',
    firstEnter: false, // 记录首次进入.
    showMask: true,
    handler: true,
    maskStyle: {},
    wrapperClassName: '',
    className: ''
  }),
  data: function data() {
    this.levelDom = [];
    this.contentDom = null;
    this.maskDom = null;
    this.handlerdom = null;
    this.mousePos = null;
    this.sFirstEnter = this.firstEnter;
    this.timeout = null;
    this.children = null;
    this.drawerId = Number((Date.now() + Math.random()).toString().replace('.', Math.round(Math.random() * 9))).toString(16);
    var open = this.open !== undefined ? this.open : !!this.defaultOpen;
    currentDrawer[this.drawerId] = open;
    this.orignalOpen = this.open;
    this.preProps = extends_default()({}, this.$props);
    return {
      sOpen: open
    };
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      if (!windowIsUndefined) {
        var passiveSupported = false;
        window.addEventListener('test', null, Object.defineProperty({}, 'passive', {
          get: function get() {
            passiveSupported = true;
            return null;
          }
        }));
        _this.passive = passiveSupported ? { passive: false } : false;
      }
      var open = _this.getOpen();
      if (_this.handler || open || _this.sFirstEnter) {
        _this.getDefault(_this.$props);
        if (open) {
          _this.isOpenChange = true;
        }
        _this.$forceUpdate();
      }
    });
  },

  watch: {
    open: function (_open) {
      function open(_x) {
        return _open.apply(this, arguments);
      }

      open.toString = function () {
        return _open.toString();
      };

      return open;
    }(function (val) {
      if (val !== undefined && val !== this.preProps.open) {
        this.isOpenChange = true;
        // 没渲染 dom 时，获取默认数据;
        if (!this.container) {
          this.getDefault(this.$props);
        }
        this.setState({
          sOpen: open
        });
      }
      this.preProps.open = val;
    }),
    placement: function placement(val) {
      if (val !== this.preProps.placement) {
        // test 的 bug, 有动画过场，删除 dom
        this.contentDom = null;
      }
      this.preProps.placement = val;
    },
    level: function level(val) {
      if (this.preProps.level !== val) {
        this.getParentAndLevelDom(this.$props);
      }
      this.preProps.level = val;
    }
  },
  updated: function updated() {
    var _this2 = this;

    this.$nextTick(function () {
      // dom 没渲染时，重走一遍。
      if (!_this2.sFirstEnter && _this2.container) {
        _this2.$forceUpdate();
        _this2.sFirstEnter = true;
      }
    });
  },
  beforeDestroy: function beforeDestroy() {
    delete currentDrawer[this.drawerId];
    delete this.isOpenChange;
    if (this.container) {
      if (this.sOpen) {
        this.setLevelDomTransform(false, true);
      }
      document.body.style.overflow = '';
      // 拦不住。。直接删除；
      if (this.getSelfContainer) {
        this.container.parentNode.removeChild(this.container);
      }
    }
    this.sFirstEnter = false;
    clearTimeout(this.timeout);
    // 需要 didmount 后也会渲染，直接 unmount 将不会渲染，加上判断.
    if (this.renderComponent) {
      this.renderComponent({
        afterClose: this.removeContainer,
        onClose: function onClose() {},

        visible: false
      });
    }
  },

  methods: {
    onMaskTouchEnd: function onMaskTouchEnd(e) {
      this.$emit('maskClick', e);
      this.onTouchEnd(e, true);
    },
    onIconTouchEnd: function onIconTouchEnd(e) {
      this.$emit('handleClick', e);
      this.onTouchEnd(e);
    },
    onTouchEnd: function onTouchEnd(e, close) {
      if (this.open !== undefined) {
        return;
      }
      var open = close || this.sOpen;
      this.isOpenChange = true;
      this.setState({
        sOpen: !open
      });
    },
    onWrapperTransitionEnd: function onWrapperTransitionEnd(e) {
      if (e.target === this.contentWrapper) {
        this.dom.style.transition = '';
        if (!this.sOpen && this.getCurrentDrawerSome()) {
          document.body.style.overflowX = '';
          if (this.maskDom) {
            this.maskDom.style.left = '';
            this.maskDom.style.width = '';
          }
        }
      }
    },
    getDefault: function getDefault(props) {
      this.getParentAndLevelDom(props);
      if (props.getContainer || props.parent) {
        this.container = this.defaultGetContainer();
      }
    },
    getCurrentDrawerSome: function getCurrentDrawerSome() {
      return !Object.keys(currentDrawer).some(function (key) {
        return currentDrawer[key];
      });
    },
    getSelfContainer: function getSelfContainer() {
      return this.container;
    },
    getParentAndLevelDom: function getParentAndLevelDom(props) {
      var _this3 = this;

      if (windowIsUndefined) {
        return;
      }
      var level = props.level,
          getContainer = props.getContainer;

      this.levelDom = [];
      if (getContainer) {
        if (typeof getContainer === 'string') {
          var dom = document.querySelectorAll(getContainer)[0];
          this.parent = dom;
        }
        if (typeof getContainer === 'function') {
          this.parent = getContainer();
        }
        if ((typeof getContainer === 'undefined' ? 'undefined' : typeof_default()(getContainer)) === 'object' && getContainer instanceof window.HTMLElement) {
          this.parent = getContainer;
        }
      }
      if (!getContainer && this.container) {
        this.parent = this.container.parentNode;
      }
      if (level === 'all') {
        var children = Array.prototype.slice.call(this.parent.children);
        children.forEach(function (child) {
          if (child.nodeName !== 'SCRIPT' && child.nodeName !== 'STYLE' && child.nodeName !== 'LINK' && child !== _this3.container) {
            _this3.levelDom.push(child);
          }
        });
      } else if (level) {
        dataToArray(level).forEach(function (key) {
          document.querySelectorAll(key).forEach(function (item) {
            _this3.levelDom.push(item);
          });
        });
      }
    },
    setLevelDomTransform: function setLevelDomTransform(open, openTransition, placementName, value) {
      var _this4 = this;

      var _$props = this.$props,
          placement = _$props.placement,
          levelMove = _$props.levelMove,
          duration = _$props.duration,
          ease = _$props.ease,
          getContainer = _$props.getContainer;

      if (!windowIsUndefined) {
        this.levelDom.forEach(function (dom) {
          if (_this4.isOpenChange || openTransition) {
            /* eslint no-param-reassign: "error" */
            dom.style.transition = 'transform ' + duration + ' ' + ease;
            addEventListener(dom, transitionEnd, _this4.trnasitionEnd);
            var levelValue = open ? value : 0;
            if (levelMove) {
              var $levelMove = transformArguments(levelMove, { target: dom, open: open });
              levelValue = open ? $levelMove[0] : $levelMove[1] || 0;
            }
            var $value = typeof levelValue === 'number' ? levelValue + 'px' : levelValue;
            var placementPos = placement === 'left' || placement === 'top' ? $value : '-' + $value;
            dom.style.transform = levelValue ? placementName + '(' + placementPos + ')' : '';
            dom.style.msTransform = levelValue ? placementName + '(' + placementPos + ')' : '';
          }
        });
        // 处理 body 滚动
        if (getContainer === 'body') {
          var eventArray = ['touchstart'];
          var domArray = [document.body, this.maskDom, this.handlerdom, this.contentDom];
          var right = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth ? getScrollBarSize(1) : 0;
          var widthTransition = 'width ' + duration + ' ' + ease;
          var trannsformTransition = 'transform ' + duration + ' ' + ease;
          if (open && document.body.style.overflow !== 'hidden') {
            document.body.style.overflow = 'hidden';
            if (right) {
              document.body.style.position = 'relative';
              document.body.style.width = 'calc(100% - ' + right + 'px)';
              this.dom.style.transition = 'none';
              switch (placement) {
                case 'right':
                  this.dom.style.transform = 'translateX(-' + right + 'px)';
                  this.dom.style.msTransform = 'translateX(-' + right + 'px)';
                  break;
                case 'top':
                case 'bottom':
                  this.dom.style.width = 'calc(100% - ' + right + 'px)';
                  this.dom.style.transform = 'translateZ(0)';
                  break;
                default:
                  break;
              }
              clearTimeout(this.timeout);
              this.timeout = setTimeout(function () {
                _this4.dom.style.transition = trannsformTransition + ',' + widthTransition;
                _this4.dom.style.width = '';
                _this4.dom.style.transform = '';
                _this4.dom.style.msTransform = '';
              });
            }
            // 手机禁滚
            domArray.forEach(function (item, i) {
              if (!item) {
                return;
              }
              addEventListener(item, eventArray[i] || 'touchmove', i ? _this4.removeMoveHandler : _this4.removeStartHandler, _this4.passive);
            });
          } else if (this.getCurrentDrawerSome()) {
            document.body.style.overflow = '';
            if ((this.isOpenChange || openTransition) && right) {
              document.body.style.position = '';
              document.body.style.width = '';
              if (transitionStr) {
                document.body.style.overflowX = 'hidden';
              }
              this.dom.style.transition = 'none';
              var heightTransition = void 0;
              switch (placement) {
                case 'right':
                  {
                    this.dom.style.transform = 'translateX(' + right + 'px)';
                    this.dom.style.msTransform = 'translateX(' + right + 'px)';
                    this.dom.style.width = '100%';
                    widthTransition = 'width 0s ' + ease + ' ' + duration;
                    if (this.maskDom) {
                      this.maskDom.style.left = '-' + right + 'px';
                      this.maskDom.style.width = 'calc(100% + ' + right + 'px)';
                    }
                    break;
                  }
                case 'top':
                case 'bottom':
                  {
                    this.dom.style.width = 'calc(100% + ' + right + 'px)';
                    this.dom.style.height = '100%';
                    this.dom.style.transform = 'translateZ(0)';
                    heightTransition = 'height 0s ' + ease + ' ' + duration;
                    break;
                  }
                default:
                  break;
              }
              clearTimeout(this.timeout);
              this.timeout = setTimeout(function () {
                _this4.dom.style.transition = trannsformTransition + ',' + (heightTransition ? heightTransition + ',' : '') + widthTransition;
                _this4.dom.style.transform = '';
                _this4.dom.style.msTransform = '';
                _this4.dom.style.width = '';
                _this4.dom.style.height = '';
              });
            }
            domArray.forEach(function (item, i) {
              if (!item) {
                return;
              }
              removeEventListener(item, eventArray[i] || 'touchmove', i ? _this4.removeMoveHandler : _this4.removeStartHandler, _this4.passive);
            });
          }
        }
      }
      var change = this.$listeners.change;

      if (change && this.isOpenChange && this.sFirstEnter) {
        change(open);
        this.isOpenChange = false;
      }
    },
    getChildToRender: function getChildToRender(open) {
      var _classnames,
          _this5 = this;

      var h = this.$createElement;
      var _$props2 = this.$props,
          className = _$props2.className,
          prefixCls = _$props2.prefixCls,
          placement = _$props2.placement,
          handler = _$props2.handler,
          showMask = _$props2.showMask,
          maskStyle = _$props2.maskStyle,
          width = _$props2.width,
          height = _$props2.height,
          wrapStyle = _$props2.wrapStyle;

      var children = this.$slots['default'];
      var wrapperClassname = classnames_default()(prefixCls, (_classnames = {}, defineProperty_default()(_classnames, prefixCls + '-' + placement, true), defineProperty_default()(_classnames, prefixCls + '-open', open), defineProperty_default()(_classnames, className, !!className), _classnames));
      var isOpenChange = this.isOpenChange;
      var isHorizontal = placement === 'left' || placement === 'right';
      var placementName = 'translate' + (isHorizontal ? 'X' : 'Y');
      // 百分比与像素动画不同步，第一次打用后全用像素动画。
      // const defaultValue = !this.contentDom || !level ? '100%' : `${value}px`;
      var placementPos = placement === 'left' || placement === 'top' ? '-100%' : '100%';
      var transform = open ? '' : placementName + '(' + placementPos + ')';
      if (isOpenChange === undefined || isOpenChange) {
        var contentValue = this.contentDom ? this.contentDom.getBoundingClientRect()[isHorizontal ? 'width' : 'height'] : 0;
        var value = (isHorizontal ? width : height) || contentValue;
        this.setLevelDomTransform(open, false, placementName, value);
      }
      var handlerChildren = void 0;
      if (handler !== false) {
        var handlerDefalut = h(
          'div',
          { 'class': 'drawer-handle' },
          [h('i', { 'class': 'drawer-handle-icon' })]
        );
        var handlerSlot = this.handler;

        var handlerSlotVnode = handlerSlot && handlerSlot[0] || handlerDefalut;

        var _getEvents = getEvents(handlerSlotVnode),
            handleIconClick = _getEvents.click;

        handlerChildren = cloneElement(handlerSlotVnode, {
          on: {
            click: function click(e) {
              handleIconClick && handleIconClick();
              _this5.onIconTouchEnd(e);
            }
          },
          directives: [{
            name: 'ant-ref',
            value: function value(c) {
              _this5.handlerdom = c;
            }
          }]
        });
      }

      var domContProps = {
        'class': wrapperClassname,
        directives: [{
          name: 'ant-ref',
          value: function value(c) {
            _this5.dom = c;
          }
        }],
        on: {
          transitionend: this.onWrapperTransitionEnd
        },
        style: wrapStyle
      };
      var directivesMaskDom = [{
        name: 'ant-ref',
        value: function value(c) {
          _this5.maskDom = c;
        }
      }];
      var directivesContentWrapper = [{
        name: 'ant-ref',
        value: function value(c) {
          _this5.contentWrapper = c;
        }
      }];
      var directivesContentDom = [{
        name: 'ant-ref',
        value: function value(c) {
          _this5.contentDom = c;
        }
      }];
      return h(
        'div',
        domContProps,
        [showMask && h('div', babel_helper_vue_jsx_merge_props_default()([{
          'class': prefixCls + '-mask',
          on: {
            'click': this.onMaskTouchEnd
          },

          style: maskStyle
        }, { directives: directivesMaskDom }])), h(
          'div',
          babel_helper_vue_jsx_merge_props_default()([{
            'class': prefixCls + '-content-wrapper',
            style: {
              transform: transform,
              msTransform: transform,
              width: isNumeric(width) ? width + 'px' : width,
              height: isNumeric(height) ? height + 'px' : height
            }
          }, { directives: directivesContentWrapper }]),
          [h(
            'div',
            babel_helper_vue_jsx_merge_props_default()([{
              'class': prefixCls + '-content'
            }, { directives: directivesContentDom }, {
              on: {
                'touchstart': open ? this.removeStartHandler : Drawer_noop,
                'touchmove': open ? this.removeMoveHandler : Drawer_noop
              }
            }]),
            [children]
          ), handlerChildren]
        )]
      );
    },
    getOpen: function getOpen() {
      return this.open !== undefined ? this.open : this.sOpen;
    },
    getTouchParentScroll: function getTouchParentScroll(root, currentTarget, differX, differY) {
      if (!currentTarget || currentTarget === document) {
        return false;
      }
      // root 为 drawer-content 设定了 overflow, 判断为 root 的 parent 时结束滚动；
      if (currentTarget === root.parentNode) {
        return true;
      }

      var isY = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differY);
      var isX = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differX);

      var scrollY = currentTarget.scrollHeight - currentTarget.clientHeight;
      var scrollX = currentTarget.scrollWidth - currentTarget.clientWidth;
      /**
       * <div style="height: 300px">
       *   <div style="height: 900px"></div>
       * </div>
       * 在没设定 overflow: auto 或 scroll 时，currentTarget 里获取不到 scrollTop 或 scrollLeft,
       * 预先用 scrollTo 来滚动，如果取出的值跟滚动前取出不同，则 currnetTarget 被设定了 overflow; 否则就是上面这种。
       */
      var t = currentTarget.scrollTop;
      var l = currentTarget.scrollLeft;
      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft + 1, currentTarget.scrollTop + 1);
      }
      var currentT = currentTarget.scrollTop;
      var currentL = currentTarget.scrollLeft;
      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft - 1, currentTarget.scrollTop - 1);
      }
      if (isY && (!scrollY || !(currentT - t) || scrollY && (currentTarget.scrollTop >= scrollY && differY < 0 || currentTarget.scrollTop <= 0 && differY > 0)) || isX && (!scrollX || !(currentL - l) || scrollX && (currentTarget.scrollLeft >= scrollX && differX < 0 || currentTarget.scrollLeft <= 0 && differX > 0))) {
        return this.getTouchParentScroll(root, currentTarget.parentNode, differX, differY);
      }
      return false;
    },
    removeStartHandler: function removeStartHandler(e) {
      if (e.touches.length > 1) {
        return;
      }
      this.startPos = {
        x: e.touches[0].clientX,
        y: e.touches[0].clientY
      };
    },
    removeMoveHandler: function removeMoveHandler(e) {
      if (e.changedTouches.length > 1) {
        return;
      }
      var currentTarget = e.currentTarget;
      var differX = e.changedTouches[0].clientX - this.startPos.x;
      var differY = e.changedTouches[0].clientY - this.startPos.y;
      if (currentTarget === this.maskDom || currentTarget === this.handlerdom || currentTarget === this.contentDom && this.getTouchParentScroll(currentTarget, e.target, differX, differY)) {
        e.preventDefault();
      }
    },
    trnasitionEnd: function trnasitionEnd(e) {
      removeEventListener(e.target, transitionEnd, this.trnasitionEnd);
      e.target.style.transition = '';
    },
    defaultGetContainer: function defaultGetContainer() {
      if (windowIsUndefined) {
        return null;
      }
      var container = document.createElement('div');
      this.parent.appendChild(container);
      if (this.wrapperClassName) {
        container.className = this.wrapperClassName;
      }
      return container;
    }
  },

  render: function render() {
    var _this6 = this;

    var h = arguments[0];
    var _$props3 = this.$props,
        getContainer = _$props3.getContainer,
        wrapperClassName = _$props3.wrapperClassName;

    var open = this.getOpen();
    currentDrawer[this.drawerId] = open ? this.container : open;
    var children = this.getChildToRender(this.sFirstEnter ? open : false);
    if (!getContainer) {
      var directives = [{
        name: 'ant-ref',
        value: function value(c) {
          _this6.container = c;
        }
      }];
      return h(
        'div',
        babel_helper_vue_jsx_merge_props_default()([{ 'class': wrapperClassName }, { directives: directives }]),
        [children]
      );
    }
    if (!this.container || !open && !this.sFirstEnter) {
      return null;
    }
    return h(ContainerRender, {
      attrs: {
        parent: this,
        visible: true,
        autoMount: true,
        autoDestroy: false,
        getComponent: function getComponent() {
          return children;
        },
        getContainer: this.getSelfContainer,
        children: function children(_ref) {
          var renderComponent = _ref.renderComponent,
              removeContainer = _ref.removeContainer;

          _this6.renderComponent = renderComponent;
          _this6.removeContainer = removeContainer;
          return null;
        }
      }
    });
  }
};

/* harmony default export */ var src_Drawer = (Drawer_Drawer);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-drawer/src/index.js
// base in 1.7.7
// export this package's api


/* harmony default export */ var vc_drawer_src = (src_Drawer);
// EXTERNAL MODULE: ./src/icons.ts
var src_icons = __webpack_require__("89d7");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/icon/IconFont.js




var customCache = new Set();

function IconFont_create(options) {
  var scriptUrl = options.scriptUrl,
      _options$extraCommonP = options.extraCommonProps,
      extraCommonProps = _options$extraCommonP === undefined ? {} : _options$extraCommonP;

  /**
   * DOM API required.
   * Make sure in browser environment.
   * The Custom Icon will create a <script/>
   * that loads SVG symbols and insert the SVG Element into the document body.
   */

  if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl)) {
    var script = document.createElement('script');
    script.setAttribute('src', scriptUrl);
    script.setAttribute('data-namespace', scriptUrl);
    customCache.add(scriptUrl);
    document.body.appendChild(script);
  }

  var Iconfont = {
    functional: true,
    name: 'AIconfont',
    props: es_icon.props,
    render: function render(h, context) {
      var props = context.props,
          slots = context.slots,
          listeners = context.listeners,
          data = context.data;

      var type = props.type,
          restProps = objectWithoutProperties_default()(props, ['type']);

      var slotsMap = slots();
      var children = slotsMap['default'];
      // component > children > type
      var content = null;
      if (type) {
        content = h('use', { attrs: { 'xlink:href': '#' + type } });
      }
      if (children) {
        content = children;
      }
      var iconProps = mergeProps(extraCommonProps, data, { props: restProps, on: listeners });
      return h(
        es_icon,
        iconProps,
        [content]
      );
    }
  };
  return Iconfont;
}
// EXTERNAL MODULE: ./node_modules/ant-design-vue/node_modules/warning/browser.js
var browser = __webpack_require__("2045");
var browser_default = /*#__PURE__*/__webpack_require__.n(browser);

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/warning.js


var warned = {};
/* harmony default export */ var warning = (function (valid, message) {
  if (!valid && !warned[message]) {
    browser_default()(false, message);
    warned[message] = true;
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/icon/utils.js


// These props make sure that the SVG behaviours like general text.
// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4
var svgBaseProps = {
  width: '1em',
  height: '1em',
  fill: 'currentColor',
  'aria-hidden': 'true',
  focusable: 'false'
};

var fillTester = /-fill$/;
var outlineTester = /-o$/;
var twoToneTester = /-twotone$/;

function getThemeFromTypeName(type) {
  var result = null;
  if (fillTester.test(type)) {
    result = 'filled';
  } else if (outlineTester.test(type)) {
    result = 'outlined';
  } else if (twoToneTester.test(type)) {
    result = 'twoTone';
  }
  return result;
}

function removeTypeTheme(type) {
  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');
}

function withThemeSuffix(type, theme) {
  var result = type;
  if (theme === 'filled') {
    result += '-fill';
  } else if (theme === 'outlined') {
    result += '-o';
  } else if (theme === 'twoTone') {
    result += '-twotone';
  } else {
    warning(false, 'This icon \'' + type + '\' has unknown theme \'' + theme + '\'');
  }
  return result;
}

// For alias or compatibility
function alias(type) {
  switch (type) {
    case 'cross':
      return 'close';
    default:
  }
  return type;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/icon/twoTonePrimaryColor.js


function setTwoToneColor(primaryColor) {
  return es.setTwoToneColors({
    primaryColor: primaryColor
  });
}

function getTwoToneColor() {
  var colors = es.getTwoToneColors();
  return colors.primaryColor;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/icon/index.js














// Initial setting
es.add.apply(es, toConsumableArray_default()(Object.keys(src_icons).map(function (key) {
  return src_icons[key];
})));
setTwoToneColor('#1890ff');
var defaultTheme = 'outlined';
var dangerousTheme = void 0;

var icon_Icon = {
  functional: true,
  name: 'AIcon',
  props: {
    type: vue_types.string,
    component: vue_types.any,
    viewBox: vue_types.any,
    spin: vue_types.bool.def(false),
    theme: vue_types.oneOf(['filled', 'outlined', 'twoTone']),
    twoToneColor: vue_types.string
  },
  render: function render(h, context) {
    var _extends2;

    var props = context.props,
        slots = context.slots,
        listeners = context.listeners,
        data = context.data;
    var type = props.type,
        Component = props.component,
        viewBox = props.viewBox,
        spin = props.spin,
        theme = props.theme,
        twoToneColor = props.twoToneColor;

    var slotsMap = slots();
    var children = filterEmpty(slotsMap['default']);
    children = children.length === 0 ? undefined : children;
    warning(Boolean(type || Component || children), 'Icon should have `type` prop or `component` prop or `children`.');

    var classString = classnames_default()(extends_default()({}, getClass(context), (_extends2 = {}, defineProperty_default()(_extends2, 'anticon', true), defineProperty_default()(_extends2, 'anticon-' + type, !!type), _extends2)));

    var svgClassString = classnames_default()(defineProperty_default()({}, 'anticon-spin', !!spin || type === 'loading'));

    var innerNode = void 0;

    // component > children > type
    if (Component) {
      var innerSvgProps = {
        attrs: extends_default()({}, svgBaseProps, {
          viewBox: viewBox
        }),
        'class': svgClassString
      };
      if (!viewBox) {
        delete innerSvgProps.attrs.viewBox;
      }

      innerNode = h(
        Component,
        innerSvgProps,
        [children]
      );
    }
    if (children) {
      warning(Boolean(viewBox) || children.length === 1 && children[0].tag === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');
      var _innerSvgProps = {
        attrs: extends_default()({}, svgBaseProps),
        'class': svgClassString
      };
      innerNode = h(
        'svg',
        babel_helper_vue_jsx_merge_props_default()([_innerSvgProps, {
          attrs: { viewBox: viewBox }
        }]),
        [children]
      );
    }

    if (typeof type === 'string') {
      var computedType = type;
      if (theme) {
        var themeInName = getThemeFromTypeName(type);
        warning(!themeInName || theme === themeInName, 'The icon name \'' + type + '\' already specify a theme \'' + themeInName + '\',' + (' the \'theme\' prop \'' + theme + '\' will be ignored.'));
      }
      computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), dangerousTheme || theme || defaultTheme);
      innerNode = h(es, { 'class': svgClassString, attrs: { type: computedType, primaryColor: twoToneColor }
      });
    }
    // functional component not support nativeOn，https://github.com/vuejs/vue/issues/7526
    var iProps = extends_default()({}, data, {
      on: extends_default()({}, listeners, data.nativeOn),
      'class': classString,
      staticClass: ''
    });
    return h(
      'i',
      iProps,
      [innerNode]
    );
  }
};

icon_Icon.createFromIconfontCN = IconFont_create;
icon_Icon.getTwoToneColor = getTwoToneColor;
icon_Icon.setTwoToneColor = setTwoToneColor;

/* istanbul ignore next */
icon_Icon.install = function (Vue) {
  Vue.component(icon_Icon.name, icon_Icon);
};

/* harmony default export */ var es_icon = (icon_Icon);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/drawer/index.js










var drawer_Drawer = {
  name: 'ADrawer',
  props: {
    closable: vue_types.bool.def(true),
    destroyOnClose: vue_types.bool,
    getContainer: vue_types.any,
    maskClosable: vue_types.bool.def(true),
    mask: vue_types.bool.def(true),
    maskStyle: vue_types.object,
    wrapStyle: vue_types.object,
    title: vue_types.any,
    visible: vue_types.bool,
    width: vue_types.oneOfType([vue_types.string, vue_types.number]).def(256),
    height: vue_types.oneOfType([vue_types.string, vue_types.number]).def(256),
    zIndex: vue_types.number,
    prefixCls: vue_types.string.def('ant-drawer'),
    placement: vue_types.oneOf(['top', 'right', 'bottom', 'left']).def('right'),
    level: vue_types.any.def(null),
    wrapClassName: vue_types.string, // not use class like react, vue will add class to root dom
    handle: vue_types.any
  },
  mixins: [BaseMixin],
  data: function data() {
    this.destoryClose = false;
    this.preVisible = this.$props.visible;
    return {
      _push: false
    };
  },

  inject: {
    parentDrawer: {
      'default': function _default() {
        return null;
      }
    }
  },
  provide: function provide() {
    return {
      parentDrawer: this
    };
  },
  updated: function updated() {
    var _this = this;

    this.$nextTick(function () {
      if (_this.preVisible !== _this.visible && _this.parentDrawer) {
        if (_this.visible) {
          _this.parentDrawer.push();
        } else {
          _this.parentDrawer.pull();
        }
      }
      _this.preVisible = _this.visible;
    });
  },

  methods: {
    close: function close(e) {
      if (this.visible !== undefined) {
        this.$emit('close', e);
        return;
      }
    },
    onMaskClick: function onMaskClick(e) {
      if (!this.maskClosable) {
        return;
      }
      this.close(e);
    },
    push: function push() {
      this.setState({
        _push: true
      });
    },
    pull: function pull() {
      this.setState({
        _push: false
      });
    },
    onDestoryTransitionEnd: function onDestoryTransitionEnd() {
      var isDestroyOnClose = this.getDestoryOnClose();
      if (!isDestroyOnClose) {
        return;
      }
      if (!this.visible) {
        this.destoryClose = true;
        this.$forceUpdate();
      }
    },
    getDestoryOnClose: function getDestoryOnClose() {
      return this.destroyOnClose && !this.visible;
    },

    // get drawar push width or height
    getPushTransform: function getPushTransform(placement) {
      if (placement === 'left' || placement === 'right') {
        return 'translateX(' + (placement === 'left' ? 180 : -180) + 'px)';
      }
      if (placement === 'top' || placement === 'bottom') {
        return 'translateY(' + (placement === 'top' ? 180 : -180) + 'px)';
      }
    },

    // render drawer body dom
    renderBody: function renderBody() {
      var h = this.$createElement;

      if (this.destoryClose && !this.visible) {
        return null;
      }
      this.destoryClose = false;
      var placement = this.$props.placement;


      var containerStyle = placement === 'left' || placement === 'right' ? {
        overflow: 'auto',
        height: '100%'
      } : {};

      var isDestroyOnClose = this.getDestoryOnClose();
      if (isDestroyOnClose) {
        // Increase the opacity transition, delete children after closing.
        containerStyle.opacity = 0;
        containerStyle.transition = 'opacity .3s';
      }
      var _$props = this.$props,
          prefixCls = _$props.prefixCls,
          closable = _$props.closable;

      var title = getComponentFromProp(this, 'title');
      // is have header dom
      var header = void 0;
      if (title) {
        header = h(
          'div',
          { key: 'header', 'class': prefixCls + '-header' },
          [h(
            'div',
            { 'class': prefixCls + '-title' },
            [title]
          )]
        );
      }
      // is have closer button
      var closer = void 0;
      if (closable) {
        closer = h(
          'button',
          { key: 'closer', on: {
              'click': this.close
            },
            attrs: { 'aria-label': 'Close' },
            'class': prefixCls + '-close' },
          [h(
            'span',
            { 'class': prefixCls + '-close-x' },
            [h(es_icon, {
              attrs: { type: 'close' }
            })]
          )]
        );
      }

      return h(
        'div',
        {
          'class': prefixCls + '-wrapper-body',
          style: containerStyle,
          on: {
            'transitionend': this.onDestoryTransitionEnd
          }
        },
        [header, closer, h(
          'div',
          { key: 'body', 'class': prefixCls + '-body' },
          [this.$slots['default']]
        )]
      );
    },
    getRcDrawerStyle: function getRcDrawerStyle() {
      var _$props2 = this.$props,
          zIndex = _$props2.zIndex,
          placement = _$props2.placement,
          maskStyle = _$props2.maskStyle,
          wrapStyle = _$props2.wrapStyle;
      var push = this.$data._push;

      return extends_default()({}, maskStyle, {
        zIndex: zIndex,
        transform: push ? this.getPushTransform(placement) : undefined
      }, wrapStyle);
    }
  },
  render: function render() {
    var _classnames;

    var h = arguments[0];

    var props = props_util_getOptionProps(this);

    var width = props.width,
        height = props.height,
        visible = props.visible,
        placement = props.placement,
        wrapClassName = props.wrapClassName,
        rest = objectWithoutProperties_default()(props, ['width', 'height', 'visible', 'placement', 'wrapClassName']);

    var haveMask = rest.mask ? '' : 'no-mask';
    var offsetStyle = {};
    if (placement === 'left' || placement === 'right') {
      offsetStyle.width = typeof width === 'number' ? width + 'px' : width;
    } else {
      offsetStyle.height = typeof height === 'number' ? height + 'px' : height;
    }
    var handler = getComponentFromProp(this, 'handle') || false;
    var vcDrawerProps = {
      props: extends_default()({}, rest, {
        handler: handler
      }, offsetStyle, {
        open: visible,
        showMask: props.mask,
        placement: placement,
        className: classnames_default()((_classnames = {}, defineProperty_default()(_classnames, wrapClassName, !!wrapClassName), defineProperty_default()(_classnames, haveMask, !!haveMask), _classnames)),
        wrapStyle: this.getRcDrawerStyle()
      }),
      on: extends_default()({
        maskClick: this.onMaskClick
      }, this.$listeners)
    };
    return h(
      vc_drawer_src,
      vcDrawerProps,
      [this.renderBody()]
    );
  }
};

/* istanbul ignore next */
drawer_Drawer.install = function (Vue) {
  Vue.component(drawer_Drawer.name, drawer_Drawer);
};

/* harmony default export */ var drawer = (drawer_Drawer);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.number.constructor.js
var es6_number_constructor = __webpack_require__("c5f6");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.name.js
var es6_function_name = __webpack_require__("7f7f");

// CONCATENATED MODULE: ./src/packages/mixins/emitter.ts











function _broadcast(componentName, eventName, params) {
  this.$children.forEach(function (child) {
    var name = child.$options.componentName;

    if (name === componentName) {
      child.$emit.apply(child, [eventName].concat(params));
    } else {
      _broadcast.apply(child, [componentName, eventName].concat([params]));
    }
  });
}

var emitter_Emitter =
/*#__PURE__*/
function (_Vue) {
  _inherits(Emitter, _Vue);

  function Emitter() {
    _classCallCheck(this, Emitter);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Emitter).apply(this, arguments));
  }

  _createClass(Emitter, [{
    key: "dispatch",
    value: function dispatch(componentName, eventName, params) {
      var parent = this.$parent || this.$root;
      var name = parent.$options.name;

      while (parent && (!name || name !== componentName)) {
        parent = parent.$parent;

        if (parent) {
          name = parent.$options.name;
        }
      }

      if (parent) {
        parent.$emit.apply(parent, params ? [eventName].concat(params) : [eventName]);
      }
    }
  }, {
    key: "broadcast",
    value: function broadcast(componentName, eventName, params) {
      _broadcast.call(this, componentName, eventName, params);
    }
  }]);

  return Emitter;
}(external_Vue_default.a);

emitter_Emitter = __decorate([vue_class_component_common_default()({
  name: 'Emitter'
})], emitter_Emitter);
/* harmony default export */ var emitter = (emitter_Emitter);
// CONCATENATED MODULE: ./src/packages/mixins/pure-input-component.tsx



















var pure_input_component_hasListener = function hasListener(instance, listener) {
  var listeners = instance.$listeners || {};
  return keys_default()(listeners).includes(listener);
};

var pure_input_component_hasProp = function hasProp(instance, prop) {
  var $options = instance.$options || {};
  var propsData = $options.propsData || {};
  return prop in propsData;
};

var pure_input_component_PureInputComponent =
/*#__PURE__*/
function (_mixins) {
  _inherits(PureInputComponent, _mixins);

  function PureInputComponent() {
    var _this;

    _classCallCheck(this, PureInputComponent);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PureInputComponent).apply(this, arguments));
    _this.stateValue = _this.initValue;
    return _this;
  }

  _createClass(PureInputComponent, [{
    key: "getSlots",
    value: function getSlots() {
      return {};
    }
  }, {
    key: "getInitValue",
    value: function getInitValue() {
      return null;
    }
  }, {
    key: "stateValueChanged",
    value: function stateValueChanged(value) {
      var val = this.convertValueBack(value);

      if (pure_input_component_hasProp(this, 'value')) {
        this.$emit('input', val);
      }

      this.$emit('change', val);
      this.dispatch('DFormItem', 'd.form.change', [val]);
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      if (this.stateValue !== this.convertValue(value)) {
        this.stateValue = this.convertValue(value);
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.dispatch('DFormItem', 'd.form-item.setControl', [this]);
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      this.dispatch('DFormItem', 'd.form-item.setControl', [null]);
    }
  }, {
    key: "convertValue",
    value: function convertValue(value) {
      return value;
    }
  }, {
    key: "convertValueBack",
    value: function convertValueBack(value) {
      return value;
    }
  }, {
    key: "getInputComponent",
    value: function getInputComponent() {
      return {};
    }
  }, {
    key: "getListeners",
    value: function getListeners() {
      return {};
    }
  }, {
    key: "getProps",
    value: function getProps() {
      return {};
    }
  }, {
    key: "getSlotProps",
    value: function getSlotProps() {
      var _this2 = this;

      var props = {};

      keys_default()(this.$slots).forEach(function (slotKey) {
        if (slotKey !== 'default') {
          props[slotKey] = _this2.$slots[slotKey];
        }
      });

      return props;
    }
  }, {
    key: "handleBlur",
    value: function handleBlur() {
      this.dispatch('DFormItem', 'd.form.blur', [this.stateValue]);
    }
  }, {
    key: "handleChange",
    value: function handleChange(value) {
      if (value !== null && value !== undefined && value.toString() === '[object InputEvent]') {
        return;
      }

      var comp = this.getInputComponent();

      if (comp.model && comp.model.prop === 'value' && comp.model.event === 'change') {
        this.stateValue = value;
      }
    }
  }, {
    key: "handleKeydown",
    value: function handleKeydown() {
      this.$emit('keydown');
    }
  }, {
    key: "handleKeyup",
    value: function handleKeyup() {
      this.$emit('keyup');
    }
  }, {
    key: "onInput",
    value: function onInput(value) {
      var val = value;

      if (value && value.toString() === '[object InputEvent]') {
        val = value.target.value;
      }

      this.$emit('input', val);

      if (!(pure_input_component_hasProp(this, 'value') && pure_input_component_hasListener(this, 'input'))) {
        this.stateValue = val;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var CustomComponent = this.getInputComponent(); // @ts-ignore

      return h(CustomComponent, helper_default()([{}, {
        "attrs": this.props
      }, {
        "attrs": {
          "value": this.stateValue,
          "slots": this.slots
        },
        "scopedSlots": this.$scopedSlots
      }, {
        "on": this.listeners
      }, {
        "style": this.cssStyle
      }]), [this.getDefaultSlot()]);
    }
  }, {
    key: "getDefaultSlot",
    value: function getDefaultSlot() {
      return this.$slots.default;
    }
  }, {
    key: "cssStyle",
    get: function get() {
      var style = {};

      if (this.block) {
        style.display = 'block';
      }

      if (this.width) {
        if (typeof this.width === 'number') {
          style.width = this.width + 'px';
        } else {
          style.width = this.width;
        }
      }

      return style;
    }
  }, {
    key: "initValue",
    get: function get() {
      var convertValue = this.convertValue(this.value);

      if (convertValue !== null && convertValue !== undefined) {
        return convertValue;
      } else {
        return this.getInitValue();
      }
    }
  }, {
    key: "listeners",
    get: function get() {
      return assign_default()({}, this.$listeners, {
        input: this.onInput,
        blur: this.handleBlur,
        change: this.handleChange,
        keydown: this.handleKeydown,
        keyup: this.handleKeyup
      }, this.getListeners());
    }
  }, {
    key: "slots",
    get: function get() {
      return assign_default()({}, this.$slots, this.getSlots());
    }
  }, {
    key: "props",
    get: function get() {
      return assign_default()({}, this.getSlotProps(), this.$attrs, this.$props, this.getProps(), {
        visible: this.stateValue
      });
    }
  }]);

  return PureInputComponent;
}(Object(vue_class_component_common["mixins"])(emitter));

__decorate([Prop(Boolean)], pure_input_component_PureInputComponent.prototype, "block", void 0);

__decorate([Prop()], pure_input_component_PureInputComponent.prototype, "value", void 0);

__decorate([Prop([String, Number])], pure_input_component_PureInputComponent.prototype, "width", void 0);

__decorate([Watch('stateValue')], pure_input_component_PureInputComponent.prototype, "stateValueChanged", null);

__decorate([Watch('value')], pure_input_component_PureInputComponent.prototype, "valueChanged", null);

pure_input_component_PureInputComponent = __decorate([vue_class_component_common_default()({
  name: 'PureInputComponent'
})], pure_input_component_PureInputComponent);
/* harmony default export */ var pure_input_component = (pure_input_component_PureInputComponent);
// CONCATENATED MODULE: ./src/packages/mixins/simple-form-component.tsx










var simple_form_component_SimpleFormComponent =
/*#__PURE__*/
function (_Vue) {
  _inherits(SimpleFormComponent, _Vue);

  function SimpleFormComponent() {
    _classCallCheck(this, SimpleFormComponent);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(SimpleFormComponent).apply(this, arguments));
  }

  _createClass(SimpleFormComponent, [{
    key: "isDisabled",
    get: function get() {
      var disabled = this.disabled;

      if (this.form) {
        if (!disabled) {
          disabled = this.form.disabled;
        }
      }

      return disabled;
    }
  }, {
    key: "componentSize",
    get: function get() {
      var size = this.size;

      if (this.form) {
        if (size === undefined || size === null) {
          size = this.form.size;
        }
      }

      return size;
    }
  }, {
    key: "isReadonly",
    get: function get() {
      var isReadonly = this.readOnly;

      if (this.form) {
        if (!isReadonly) {
          isReadonly = !this.form.editable;
        }
      }

      return isReadonly;
    }
  }]);

  return SimpleFormComponent;
}(external_Vue_default.a);

__decorate([Prop({
  type: String
})], simple_form_component_SimpleFormComponent.prototype, "size", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], simple_form_component_SimpleFormComponent.prototype, "required", void 0);

__decorate([Prop({
  type: Boolean
})], simple_form_component_SimpleFormComponent.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean
})], simple_form_component_SimpleFormComponent.prototype, "readOnly", void 0);

__decorate([Inject({
  from: 'list',
  default: undefined
})], simple_form_component_SimpleFormComponent.prototype, "form", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], simple_form_component_SimpleFormComponent.prototype, "error", void 0);

__decorate([Prop({
  type: String
})], simple_form_component_SimpleFormComponent.prototype, "errorMessage", void 0);

__decorate([Prop({
  type: String
})], simple_form_component_SimpleFormComponent.prototype, "errorDisplayType", void 0);

simple_form_component_SimpleFormComponent = __decorate([vue_class_component_common_default()({
  name: 'SimpleFormComponent'
})], simple_form_component_SimpleFormComponent);

// CONCATENATED MODULE: ./src/packages/mixins/base-input-component.tsx












var base_input_component_BaseFormComponent =
/*#__PURE__*/
function (_mixins) {
  _inherits(BaseFormComponent, _mixins);

  function BaseFormComponent() {
    _classCallCheck(this, BaseFormComponent);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(BaseFormComponent).apply(this, arguments));
  }

  _createClass(BaseFormComponent, [{
    key: "props",
    get: function get() {
      return assign_default()({}, this.getSlotProps(), this.$attrs, this.$props, this.getProps(), {
        disabled: this.isDisabled,
        readOnly: this.isReadonly,
        visible: this.stateValue
      });
    }
  }]);

  return BaseFormComponent;
}(Object(vue_class_component_common["mixins"])(pure_input_component, simple_form_component_SimpleFormComponent));

base_input_component_BaseFormComponent = __decorate([vue_class_component_common_default()({
  name: 'BaseFormComponent'
})], base_input_component_BaseFormComponent);
/* harmony default export */ var base_input_component = (base_input_component_BaseFormComponent);
// CONCATENATED MODULE: ./src/packages/vmc-feedback/feedback.tsx











var feedback_TouchFeedback =
/*#__PURE__*/
function (_Vue) {
  _inherits(TouchFeedback, _Vue);

  function TouchFeedback() {
    var _this;

    _classCallCheck(this, TouchFeedback);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(TouchFeedback).apply(this, arguments));
    _this.active = false;
    return _this;
  }

  _createClass(TouchFeedback, [{
    key: "updated",
    value: function updated() {
      if (this.disabled && this.active) {
        this.active = false;
      }
    }
  }, {
    key: "triggerEvent",
    value: function triggerEvent(type, isActive, ev) {
      var eventType = "on".concat(type);
      var children = this.$slots.default && this.$slots.default[0];

      if (children[eventType]) {
        children[eventType](ev);
      }

      if (isActive !== this.active) {
        this.active = isActive;
      }

      this.$emit(type.toLowerCase(), ev);
    }
  }, {
    key: "onTouchStart",
    value: function onTouchStart(e) {
      this.triggerEvent('TouchStart', true, e);
    }
  }, {
    key: "onTouchMove",
    value: function onTouchMove(e) {
      this.triggerEvent('TouchMove', false, e);
    }
  }, {
    key: "onTouchEnd",
    value: function onTouchEnd(e) {
      this.triggerEvent('TouchEnd', false, e);
    }
  }, {
    key: "onTouchCancel",
    value: function onTouchCancel(e) {
      this.triggerEvent('TouchCancel', false, e);
    }
  }, {
    key: "onMouseDown",
    value: function onMouseDown(e) {
      // pc simulate mobile
      this.triggerEvent('MouseDown', true, e);
    }
  }, {
    key: "onMouseUp",
    value: function onMouseUp(e) {
      this.triggerEvent('MouseUp', false, e);
    }
  }, {
    key: "onMouseLeave",
    value: function onMouseLeave(e) {
      this.triggerEvent('MouseLeave', false, e);
    }
  }, {
    key: "render",
    value: function render() {
      var disabled = this.disabled,
          activeClassName = this.activeClassName;
      var events = disabled ? undefined : {
        touchstart: this.onTouchStart,
        touchmove: this.onTouchMove,
        touchend: this.onTouchEnd,
        touchcancel: this.onTouchCancel,
        mousedown: this.onMouseDown,
        mouseup: this.onMouseUp,
        mouseleave: this.onMouseLeave
      };
      var child = this.$slots.default[0];

      if (!disabled && this.active) {
        if (child.elm) {
          var elm = child.elm;

          if (!elm.classList.contains(activeClassName)) {
            elm.classList.add(activeClassName);
          }
        }
      } else {
        if (child.elm) {
          var _elm = child.elm;

          if (_elm.classList.contains(activeClassName)) {
            _elm.classList.remove(activeClassName);
          }
        }
      }

      var on = child.data.on;
      child.data.on = on ? assign_default()(on, events) : events;
      return child;
    }
  }]);

  return TouchFeedback;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean,
  default: false
})], feedback_TouchFeedback.prototype, "disabled", void 0);

__decorate([Prop({
  type: String
})], feedback_TouchFeedback.prototype, "activeClassName", void 0);

feedback_TouchFeedback = __decorate([vue_class_component_common_default()({
  name: 'TouchFeedback'
})], feedback_TouchFeedback);
/* harmony default export */ var feedback = (feedback_TouchFeedback);
// CONCATENATED MODULE: ./src/packages/popup/src/index.tsx













external_Vue_default.a.use(drawer);

var src_MPopup =
/*#__PURE__*/
function (_BaseFormComponent) {
  _inherits(MPopup, _BaseFormComponent);

  function MPopup() {
    _classCallCheck(this, MPopup);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MPopup).apply(this, arguments));
  }

  _createClass(MPopup, [{
    key: "onCancel",
    value: function onCancel() {
      // @ts-ignore
      if (this.value !== undefined) {
        this.$emit('input', false);
      } else {
        // @ts-ignore
        this.stateValue = false;
      }

      this.$emit('cancel');
    }
  }, {
    key: "onOk",
    value: function onOk() {
      // @ts-ignore
      if (this.value !== undefined) {
        this.$emit('input', false);
      } else {
        // @ts-ignore
        this.stateValue = false;
      }

      this.$emit('ok');
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      this.stateValue = value;
    }
  }, {
    key: "getProps",
    value: function getProps() {
      return {
        title: this.renderHeader(),
        height: this.height || 'auto',
        width: this.width || 'auto',
        disabled: this.isDisabled,
        placement: this.placement,
        visible: this.isDisabled ? false : this.stateValue
      };
    }
  }, {
    key: "getListeners",
    value: function getListeners() {
      var _this = this;

      return {
        close: function close(e) {
          _this.$emit('cancel'); // @ts-ignore


          _this.stateValue = false;
        }
      };
    }
  }, {
    key: "getInputComponent",
    value: function getInputComponent() {
      return 'a-drawer';
    }
  }, {
    key: "renderHeader",
    value: function renderHeader() {
      var h = this.$createElement;
      return this.showTitle ? h("div", {
        "class": this.prefixCls + '-title-wrap'
      }, [this.renderCancel(), h("div", {
        "class": "".concat(this.prefixCls, "-item ").concat(this.prefixCls, "-title")
      }, [this.title]), this.renderOk()]) : null;
    }
  }, {
    key: "renderCancel",
    value: function renderCancel() {
      var h = this.$createElement;
      return this.showCancel ? h(feedback, {
        "attrs": {
          "activeClassName": "".concat(this.prefixCls, "-item-active")
        }
      }, [this.cancelButton ? this.cancelButton : h("div", {
        "on": {
          "click": this.onCancel
        },
        "class": "".concat(this.prefixCls, "-item ").concat(this.prefixCls, "-header-left")
      }, [this.cancelText])]) : null;
    }
  }, {
    key: "renderOk",
    value: function renderOk() {
      var h = this.$createElement;
      return this.showOk ? h(feedback, {
        "attrs": {
          "activeClassName": "".concat(this.prefixCls, "-item-active")
        }
      }, [h("div", {
        "on": {
          "click": this.onOk
        },
        "class": "".concat(this.prefixCls, "-item ").concat(this.prefixCls, "-header-right")
      }, ["\u786E\u5B9A"])]) : null;
    }
  }]);

  return MPopup;
}(base_input_component);

__decorate([Prop({
  type: String,
  default: '取消'
})], src_MPopup.prototype, "cancelText", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_MPopup.prototype, "showCancel", void 0);

__decorate([Prop({
  type: Object
})], src_MPopup.prototype, "cancelButton", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_MPopup.prototype, "showOk", void 0);

__decorate([Prop({
  type: [String, Object],
  default: ''
})], src_MPopup.prototype, "title", void 0);

__decorate([Prop({
  type: String,
  default: 'am-popup'
})], src_MPopup.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], src_MPopup.prototype, "height", void 0);

__decorate([Prop({
  type: String
})], src_MPopup.prototype, "width", void 0);

__decorate([Prop({
  type: String,
  default: 'bottom'
})], src_MPopup.prototype, "placement", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_MPopup.prototype, "showTitle", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_MPopup.prototype, "closable", void 0);

__decorate([Watch('value')], src_MPopup.prototype, "valueChanged", null);

src_MPopup = __decorate([vue_class_component_common_default()({
  name: 'MPopup'
})], src_MPopup);
/* harmony default export */ var popup_src = (src_MPopup);
// CONCATENATED MODULE: ./src/packages/popup/index.ts



popup_src.install = function (Vue) {
  Vue.component('MPopup', popup_src);
};

/* harmony default export */ var packages_popup = (popup_src);
// CONCATENATED MODULE: ./src/packages/vmc-feedback/index.ts

// CONCATENATED MODULE: ./src/packages/action-sheet/src/index.tsx















var src_ActionSheet =
/*#__PURE__*/
function (_Vue) {
  _inherits(ActionSheet, _Vue);

  function ActionSheet() {
    var _this;

    _classCallCheck(this, ActionSheet);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(ActionSheet).apply(this, arguments));
    _this.$tabbar = null;
    _this.hasHeaderSlot = false;
    _this.show = _this.value || false;
    return _this;
  }

  _createClass(ActionSheet, [{
    key: "cancelClick",
    value: function cancelClick() {
      this.$emit('input', false);
      this.show = false;
    }
  }, {
    key: "showChanged",
    value: function showChanged(val) {
      var _this2 = this;

      this.$emit('input', val);

      if (val) {
        this.fixIos(-1);
      } else {
        setTimeout(function () {
          _this2.fixIos(100);
        }, 200);
      }
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(val) {
      this.show = val;
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this3 = this;

      this.hasHeaderSlot = !!this.$slots.header;
      this.$nextTick(function () {
        _this3.$tabbar = document.querySelector('.weui-tabbar');
        _this3.$refs.iOSMenu && _this3.$refs.iOSMenu.addEventListener('transitionend', _this3.onTransitionEnd);
      });
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      this.fixIos(100);
      this.$refs.iOSMenu && this.$refs.iOSMenu.removeEventListener('transitionend', this.onTransitionEnd);
    }
  }, {
    key: "emitEvent",
    value: function emitEvent(event, menu, item) {
      if (event === 'on-click-menu' && !/.noop/.test(menu)) {
        var _item = item;

        if (typeof_typeof(_item) === 'object') {
          _item = JSON.parse(stringify_default()(_item));
        }

        this.$emit(event, menu, _item);
        this.$emit("".concat(event, "-").concat(menu));
        this.closeOnClickingMenu && (this.show = false);
      }
    }
  }, {
    key: "fixIos",
    value: function fixIos(zIndex) {
      if (this.$el.parentNode && this.$el.parentNode.className.indexOf('v-transfer-dom') !== -1) {
        return;
      }

      if (this.$tabbar && /iphone/i.test(navigator.userAgent)) {
        this.$tabbar.style.zIndex = zIndex;
      }
    }
  }, {
    key: "onClickingMask",
    value: function onClickingMask() {
      this.$emit('click-mask');
      this.closeOnClickingMask && (this.show = false);
    }
  }, {
    key: "onMenuClick",
    value: function onMenuClick(text, key) {
      if (typeof text === 'string') {
        this.emitEvent('click-menu', key, text);
      } else {
        if (text.type !== 'disabled' && text.type !== 'info') {
          if (text.value || text.value === 0) {
            this.emitEvent('click-menu', text.value, text);
          } else {
            this.emitEvent('click-menu', '', text);
            this.show = false;
          }
        }
      }
    }
  }, {
    key: "onTransitionEnd",
    value: function onTransitionEnd() {
      this.$emit(this.show ? 'on-after-show' : 'on-after-hide');
    }
  }, {
    key: "renderSheet",
    value: function renderSheet() {
      var _this4 = this;

      var h = this.$createElement;

      if (this.theme === 'android') {
        return h("div", {
          "class": "weui-skin_android"
        }, [h("transition", {
          "attrs": {
            "name": "vux-android-actionsheet"
          },
          "on": {
            "afterEnter": function afterEnter() {
              _this4.$emit('after-show');
            },
            "afterLeave": function afterLeave() {
              _this4.$emit('after-hide');
            }
          }
        }, [h("div", {
          "style": this.showStyle,
          "class": "weui-actionsheet"
        }, [h("div", {
          "class": "weui-actionsheet__menu"
        }, [this.renderButtons()])])])]);
      } else {
        return h("div", {
          "ref": "iOSMenu"
        }, [h("div", {
          "class": "am-action-sheet-content"
        }, [h("div", {
          "class": "am-action-sheet-body"
        }, [h("div", [this.renderTitle(), this.renderButtons()])])])]);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var classes = 'am-action-sheet am-action-sheet-' + this.type; // @ts-ignore

      return h(packages_popup, {
        "attrs": {
          "value": this.show,
          "wrapClassName": classes
        },
        "on": {
          "cancel": this.cancelClick
        }
      }, [h("div", [this.renderSheet()])]);
    }
  }, {
    key: "renderButtons",
    value: function renderButtons() {
      var _this5 = this;

      var h = this.$createElement;
      return h("div", {
        "class": this.listClassPrefix,
        "attrs": {
          "role": "group"
        }
      }, [this.menus.map(function (it) {
        return _this5.renderMenu(it);
      }), this.showCancel ? this.renderCancelButton() : null]);
    }
  }, {
    key: "renderTitle",
    value: function renderTitle() {
      var h = this.$createElement;
      return this.title ? h("div", {
        "class": this.prefixCls + '-message'
      }, [this.title]) : null;
    }
  }, {
    key: "renderMenu",
    value: function renderMenu(menu) {
      var _classes;

      var h = this.$createElement;
      var MTouchFeedback = feedback;
      var itemClassPrefix = this.listClassPrefix + '-item';
      var classes = (_classes = {}, _defineProperty(_classes, itemClassPrefix, true), _defineProperty(_classes, this.listClassPrefix + '-badge', menu.badge), _classes);
      return h(MTouchFeedback, {
        "attrs": {
          "activeClassName": itemClassPrefix + '-active'
        }
      }, [h("div", {
        "class": classes,
        "attrs": {
          "role": "button"
        }
      }, [h("span", {
        "class": itemClassPrefix + '-content'
      }, [menu.label]), this.renderBadge(menu.badge)])]);
    }
  }, {
    key: "renderBadge",
    value: function renderBadge(badge) {
      var h = this.$createElement;

      if (badge) {
        var supClass = typeof badge === 'boolean' ? 'am-badge-dot' : 'am-badge-text';
        return badge ? h("span", {
          "class": "am-badge am-badge-not-a-wrapper"
        }, [h("sup", {
          "class": supClass
        }, [typeof badge === 'boolean' ? null : badge])]) : null;
      }
    }
  }, {
    key: "renderCancelButton",
    value: function renderCancelButton() {
      var h = this.$createElement;
      var MTouchFeedback = feedback;
      var itemClassPrefix = this.listClassPrefix + '-item';
      var classes = itemClassPrefix + " ".concat(this.prefixCls, "-cancel-button");
      return h(MTouchFeedback, {
        "attrs": {
          "activeClassName": itemClassPrefix + '-active'
        }
      }, [h("div", {
        "class": classes,
        "attrs": {
          "role": "button"
        },
        "on": {
          "click": this.cancelClick
        }
      }, [h("span", {
        "class": itemClassPrefix + '-content'
      }, ["\u53D6\u6D88"]), h("span", {
        "class": this.prefixCls + '-cancel-button-mask'
      })])]);
    }
  }, {
    key: "showStyle",
    get: function get() {
      var style = {};

      if (!this.show) {
        style.display = 'none';
      }

      return style;
    }
  }, {
    key: "listClassPrefix",
    get: function get() {
      return this.prefixCls + '-button-list';
    }
  }]);

  return ActionSheet;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-action-sheet'
})], src_ActionSheet.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: '取消'
})], src_ActionSheet.prototype, "cancelText", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_ActionSheet.prototype, "closeOnClickingMask", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_ActionSheet.prototype, "closeOnClickingMenu", void 0);

__decorate([Prop({
  type: [Object, Array],
  default: function _default() {
    return [];
  }
})], src_ActionSheet.prototype, "menus", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_ActionSheet.prototype, "showCancel", void 0);

__decorate([Prop({
  type: String,
  default: 'ios'
})], src_ActionSheet.prototype, "theme", void 0);

__decorate([Prop(Boolean)], src_ActionSheet.prototype, "value", void 0);

__decorate([Prop({
  type: String,
  default: 'normal'
})], src_ActionSheet.prototype, "type", void 0);

__decorate([Prop({
  type: String
})], src_ActionSheet.prototype, "title", void 0);

__decorate([Watch('show')], src_ActionSheet.prototype, "showChanged", null);

__decorate([Watch('value', {
  immediate: true
})], src_ActionSheet.prototype, "valueChanged", null);

src_ActionSheet = __decorate([vue_class_component_common_default()({
  name: 'ActionSheet'
})], src_ActionSheet);
/* harmony default export */ var action_sheet_src = (src_ActionSheet);
// EXTERNAL MODULE: ./src/packages/badge/style/index.less
var badge_style = __webpack_require__("eb40");

// CONCATENATED MODULE: ./src/packages/badge/style/index.tsx


// EXTERNAL MODULE: ./src/packages/action-sheet/style/index.less
var action_sheet_style = __webpack_require__("9372");

// CONCATENATED MODULE: ./src/packages/action-sheet/style/index.tsx



// CONCATENATED MODULE: ./src/packages/action-sheet/index.ts



action_sheet_src.install = function (Vue) {
  Vue.component('MActionSheet', action_sheet_src);
};

/* harmony default export */ var action_sheet = (action_sheet_src);
// CONCATENATED MODULE: ./src/packages/activity-indicator/src/index.tsx












var src_ActivityIndicator =
/*#__PURE__*/
function (_Vue) {
  _inherits(ActivityIndicator, _Vue);

  function ActivityIndicator() {
    _classCallCheck(this, ActivityIndicator);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(ActivityIndicator).apply(this, arguments));
  }

  _createClass(ActivityIndicator, [{
    key: "render",
    value: function render() {
      var _classnames;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          className = this.className,
          animating = this.animating,
          toast = this.toast,
          size = this.size,
          text = this.text;
      var wrapClass = classnames_default()(prefixCls, className, (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-lg"), size === 'large'), _defineProperty(_classnames, "".concat(prefixCls, "-sm"), size === 'small'), _defineProperty(_classnames, "".concat(prefixCls, "-toast"), toast), _classnames));
      var spinnerClass = classnames_default()("".concat(prefixCls, "-spinner"), _defineProperty({}, "".concat(prefixCls, "-spinner-lg"), toast || size === 'large'));

      if (animating) {
        if (toast) {
          return h("div", {
            "class": wrapClass
          }, [text ? h("div", {
            "class": "".concat(prefixCls, "-content")
          }, [h("span", {
            "class": spinnerClass,
            "attrs": {
              "aria-hidden": "true"
            }
          }), h("span", {
            "class": "".concat(prefixCls, "-toast")
          }, [text])]) : h("div", {
            "class": "".concat(prefixCls, "-content")
          }, [h("span", {
            "class": spinnerClass,
            "attrs": {
              "aria-label": "Loading"
            }
          })])]);
        } else {
          return text ? h("div", {
            "class": wrapClass
          }, [h("span", {
            "class": spinnerClass,
            "attrs": {
              "aria-hidden": "true"
            }
          }), h("span", {
            "class": "".concat(prefixCls, "-tip")
          }, [text])]) : h("div", {
            "class": wrapClass
          }, [h("span", {
            "class": spinnerClass,
            "attrs": {
              "aria-label": "loading"
            }
          })]);
        }
      } else {
        return null;
      }
    }
  }]);

  return ActivityIndicator;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-activity-indicator'
})], src_ActivityIndicator.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], src_ActivityIndicator.prototype, "className", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_ActivityIndicator.prototype, "animating", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_ActivityIndicator.prototype, "toast", void 0);

__decorate([Prop({
  default: 'small'
})], src_ActivityIndicator.prototype, "size", void 0);

__decorate([Prop({
  type: String
})], src_ActivityIndicator.prototype, "text", void 0);

src_ActivityIndicator = __decorate([vue_class_component_common_default()({
  name: 'ActivityIndicator'
})], src_ActivityIndicator);
/* harmony default export */ var activity_indicator_src = (src_ActivityIndicator);
// EXTERNAL MODULE: ./src/packages/activity-indicator/style/index.less
var activity_indicator_style = __webpack_require__("f66e");

// CONCATENATED MODULE: ./src/packages/activity-indicator/style/index.ts


// CONCATENATED MODULE: ./src/packages/activity-indicator/index.ts



activity_indicator_src.install = function (Vue) {
  Vue.component('MActivityIndicator', activity_indicator_src);
};

/* harmony default export */ var activity_indicator = (activity_indicator_src);
// CONCATENATED MODULE: ./src/packages/badge/src/index.tsx













var src_Badge =
/*#__PURE__*/
function (_Vue) {
  _inherits(Badge, _Vue);

  function Badge() {
    _classCallCheck(this, Badge);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Badge).apply(this, arguments));
  }

  _createClass(Badge, [{
    key: "render",
    value: function render() {
      var _classnames, _classnames2;

      var h = arguments[0];
      var overflowCount = this.overflowCount,
          text = this.text;
      var prefixCls = this.prefixCls,
          size = this.size,
          dot = this.dot,
          corner = this.corner,
          hot = this.hot;
      overflowCount = overflowCount;
      text = typeof text === 'number' && text > overflowCount ? "".concat(overflowCount, "+") : text; // dot mode don't need text

      if (dot) {
        text = '';
      }

      var scrollNumberCls = classnames_default()((_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-dot"), dot), _defineProperty(_classnames, "".concat(prefixCls, "-dot-large"), dot && size === 'large'), _defineProperty(_classnames, "".concat(prefixCls, "-text"), !dot && !corner), _defineProperty(_classnames, "".concat(prefixCls, "-corner"), corner), _defineProperty(_classnames, "".concat(prefixCls, "-corner-large"), corner && size === 'large'), _classnames));
      var badgeCls = classnames_default()(prefixCls, (_classnames2 = {}, _defineProperty(_classnames2, "".concat(prefixCls, "-not-a-wrapper"), !this.$slots.default), _defineProperty(_classnames2, "".concat(prefixCls, "-corner-wrapper"), corner), _defineProperty(_classnames2, "".concat(prefixCls, "-hot"), hot), _defineProperty(_classnames2, "".concat(prefixCls, "-corner-wrapper-large"), corner && size === 'large'), _classnames2));
      return h("span", {
        "class": badgeCls
      }, [this.$slots.default, (text || dot) && // tslint:disable-next-line:jsx-no-multiline-js
      h("sup", {
        "class": scrollNumberCls,
        "style": this.textStyle
      }, [text])]);
    }
  }]);

  return Badge;
}(external_Vue_default.a);

__decorate([Prop({
  default: 'am-badge'
})], src_Badge.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Badge.prototype, "hot", void 0);

__decorate([Prop({
  type: String,
  default: 'small'
})], src_Badge.prototype, "size", void 0);

__decorate([Prop({
  type: Number,
  default: 99
})], src_Badge.prototype, "overflowCount", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Badge.prototype, "corner", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Badge.prototype, "dot", void 0);

__decorate([Prop({
  type: [String, Number]
})], src_Badge.prototype, "text", void 0);

__decorate([Prop({
  type: Object
})], src_Badge.prototype, "textStyle", void 0);

src_Badge = __decorate([vue_class_component_common_default()({
  name: 'Badge'
})], src_Badge);
/* harmony default export */ var badge_src = (src_Badge);
// CONCATENATED MODULE: ./src/packages/badge/index.ts


var Plugin = badge_src;

Plugin.install = function (Vue) {
  Vue.component('MBadge', badge_src);
};

/* harmony default export */ var packages_badge = (Plugin);
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js
var get_own_property_descriptor = __webpack_require__("268f");
var get_own_property_descriptor_default = /*#__PURE__*/__webpack_require__.n(get_own_property_descriptor);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js
var get_own_property_symbols = __webpack_require__("e265");
var get_own_property_symbols_default = /*#__PURE__*/__webpack_require__.n(get_own_property_symbols);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js




function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    var ownKeys = keys_default()(source);

    if (typeof get_own_property_symbols_default.a === 'function') {
      ownKeys = ownKeys.concat(get_own_property_symbols_default()(source).filter(function (sym) {
        return get_own_property_descriptor_default()(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}
// CONCATENATED MODULE: ./src/packages/icon/src/load-sprite.tsx



/* tslint:disable:max-line-length */
// inspried by https://github.com/kisenka/svg-sprite-loader/blob/master/runtime/browser-sprite.js
// Much simplified, do make sure run this after document ready
var svgSprite = function svgSprite(contents) {
  return "\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    id=\"__ANTD_MOBILE_SVG_SPRITE_NODE__\"\n    style=\"position:absolute;width:0;height:0\"\n  >\n    <defs>\n      ".concat(contents, "\n    </defs>\n  </svg>\n");
}; // both minified by https://github.com/svg/svgo


var load_sprite_icons = {
  check: '<svg viewBox="0 0 44 44"><path fill-rule="evenodd" d="M34.538 8L38 11.518 17.808 32 8 22.033l3.462-3.518 6.346 6.45z"/></svg>',
  'check-circle': '<svg viewBox="0 0 48 48"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zM13.1 23.2l-2.2 2.1 10 9.9L38.1 15l-2.2-2-15.2 17.8-7.6-7.6z" fill-rule="evenodd"/></svg>',
  'check-circle-o': '<svg viewBox="0 0 48 48"><g fill-rule="evenodd"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zm0-3c11.598 0 21-9.402 21-21S35.598 3 24 3 3 12.402 3 24s9.402 21 21 21z"/><path d="M12.2 23.2L10 25.3l10 9.9L37.2 15 35 13 19.8 30.8z"/></g></svg>',
  cross: '<svg viewBox="0 0 44 44"><path fill-rule="evenodd" d="M24.008 21.852l8.97-8.968L31.092 11l-8.97 8.968L13.157 11l-1.884 1.884 8.968 8.968-9.24 9.24 1.884 1.885 9.24-9.24 9.24 9.24 1.885-1.884-9.24-9.24z"/></svg>',
  'cross-circle': '<svg viewBox="0 0 48 48"><g fill-rule="evenodd"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zm0-3c11.598 0 21-9.402 21-21S35.598 3 24 3 3 12.402 3 24s9.402 21 21 21z"/><path d="M24.34 22.22l-7.775-7.775a1.5 1.5 0 1 0-2.12 2.12l7.773 7.775-7.774 7.775a1.5 1.5 0 1 0 2.12 2.12l7.775-7.773 7.774 7.774a1.5 1.5 0 1 0 2.12-2.12L26.46 24.34l7.774-7.774a1.5 1.5 0 1 0-2.12-2.12l-7.776 7.773z"/></g></svg>',
  'cross-circle-o': '<svg viewBox="0 0 48 48"><path d="M24 48c13.255 0 24-10.745 24-24S37.255 0 24 0 0 10.745 0 24s10.745 24 24 24zm.353-25.77l-7.593-7.593c-.797-.8-1.538-.822-2.263-.207-.724.614-.56 1.617-.124 2.067l7.852 7.847-7.72 7.723c-.727.728-.56 1.646-.066 2.177.493.532 1.553.683 2.31-.174l7.588-7.584 7.644 7.623c.796.798 1.608.724 2.21.145.605-.58.72-1.442-.074-2.24l-7.657-7.67 7.545-7.52c.81-.697.9-1.76.297-2.34-.92-.885-1.85-.338-2.264.078l-7.685 7.667z" fill-rule="evenodd"/></svg>',
  // Todo: simplify direction to 2, use css transform
  left: '<svg viewBox="0 0 44 44"><defs><path id="a" d="M-129-845h24v24h-24z"/></defs><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><g clip-path="url(#b)"><defs><path id="c" d="M-903-949H947V996H-903z"/></defs></g><path d="M16.247 21.4L28.48 9.165l2.12 2.12-10.117 10.12L30.6 31.524l-2.12 2.12-12.233-12.232.007-.006z"/></svg>',
  right: '<svg viewBox="0 0 44 44"><defs><path id="a" d="M-129-845h24v24h-24z"/></defs><clipPath id="b"><use xlink:href="#a" overflow="visible"/></clipPath><g clip-path="url(#b)"><defs><path id="c" d="M-903-949H947V996H-903z"/></defs></g><path d="M30.6 21.4L18.37 9.165l-2.12 2.12 10.117 10.12-10.118 10.118 2.12 2.12 12.234-12.232-.005-.006z"/></svg>',
  down: '<svg viewBox="0 0 44 44"><path d="M22.355 28.237l-11.483-10.9c-.607-.576-1.714-.396-2.48.41l.674-.71c-.763.802-.73 2.07-.282 2.496l11.37 10.793-.04.04 2.088 2.195L23.3 31.52l12.308-11.682c.447-.425.48-1.694-.282-2.496l.674.71c-.766-.806-1.873-.986-2.48-.41L22.355 28.237z" fill-rule="evenodd"/></svg>',
  up: '<svg viewBox="0 0 44 44"><path fill="none" d="M-1-1h46v46H-1z"/><defs><path id="a" d="M-129-845h24v24h-24z"/></defs><clipPath id="b"><use xlink:href="#a"/></clipPath><g clip-path="url(#b)"><defs><path id="c" d="M-903-949H947V996H-903z"/></defs></g><path d="M23.417 14.23L11.184 26.46l2.12 2.12 10.12-10.117 10.118 10.118 2.12-2.12L23.43 14.228l-.006.005z"/></svg>',
  loading: '<svg viewBox="0 -2 59.75 60.25"><path fill="#ccc" d="M29.69-.527C14.044-.527 1.36 12.158 1.36 27.806S14.043 56.14 29.69 56.14c15.65 0 28.334-12.686 28.334-28.334S45.34-.527 29.69-.527zm.185 53.75c-14.037 0-25.417-11.38-25.417-25.417S15.838 2.39 29.875 2.39s25.417 11.38 25.417 25.417-11.38 25.416-25.417 25.416z"/><path fill="none" stroke="#108ee9" stroke-width="3" stroke-linecap="round" stroke-miterlimit="10" d="M56.587 29.766c.37-7.438-1.658-14.7-6.393-19.552"/></svg>',
  search: '<svg viewBox="0 0 44 44"><path d="M32.98 29.255l8.915 8.293L39.603 40l-8.86-8.242a15.952 15.952 0 0 1-10.753 4.147C11.16 35.905 4 28.763 4 19.952 4 11.142 11.16 4 19.99 4s15.99 7.142 15.99 15.952c0 3.472-1.112 6.685-3 9.303zm.05-9.21c0 7.123-5.7 12.918-12.88 12.918-7.176 0-13.015-5.795-13.015-12.918 0-7.12 5.84-12.917 13.017-12.917 7.178 0 12.88 5.797 12.88 12.917z" fill-rule="evenodd"/></svg>',
  ellipsis: '<svg viewBox="0 0 44 44"><circle cx="21.888" cy="22" r="4.045"/><circle cx="5.913" cy="22" r="4.045"/><circle cx="37.863" cy="22" r="4.045"/></svg>',
  'ellipsis-circle': '<svg viewBox="0 0 44 44"><g fill-rule="evenodd"><path d="M22.13.11C10.05.11.255 9.902.255 21.983S10.05 43.86 22.13 43.86s21.875-9.795 21.875-21.876S34.21.11 22.13.11zm0 40.7c-10.396 0-18.825-8.43-18.825-18.826S11.735 3.16 22.13 3.16c10.396 0 18.825 8.428 18.825 18.824S32.525 40.81 22.13 40.81z"/><circle cx="21.888" cy="22.701" r="2.445"/><circle cx="12.23" cy="22.701" r="2.445"/><circle cx="31.546" cy="22.701" r="2.445"/></g></svg>',
  'exclamation-circle': '<svg viewBox="0 0 64 64"><path d="M59.58 40.89L41.193 9.11C39.135 5.382 35.723 3 31.387 3c-3.11 0-6.52 2.382-8.58 6.11L4.42 40.89c-2.788 4.635-3.126 8.81-1.225 12.22C5.015 56.208 7.572 58 13 58h36.773c5.428 0 9.21-1.792 11.03-4.89 1.9-3.41 1.565-7.583-1.224-12.22zm-2.452 11c-.635 1.694-3.802 2.443-7.354 2.443H13c-3.59 0-5.493-.75-6.13-2.444-1.71-2.41-1.374-5.263 0-8.557l18.387-31.777c2.116-3.168 4.394-4.89 6.13-4.89 2.96 0 5.238 1.722 7.354 4.89l18.387 31.777c1.374 3.294 1.713 6.146 0 8.556zm-25.74-33c-.405 0-1.227.835-1.227 2.443v15.89c0 1.608.823 2.444 1.227 2.444 1.628 0 2.452-.836 2.452-2.445v-15.89c0-1.607-.825-2.443-2.453-2.443zm0 23.22c-.405 0-1.227.79-1.227 1.223v2.445c0 .434.823 1.222 1.227 1.222 1.628 0 2.452-.788 2.452-1.222v-2.445c0-.434-.825-1.222-2.453-1.222z" fill-rule="evenodd"/></svg>',
  'info-circle': '<svg viewBox="0 0 44 44"><circle cx="13.828" cy="19.63" r="1.938"/><circle cx="21.767" cy="19.63" r="1.938"/><circle cx="29.767" cy="19.63" r="1.938"/><path d="M22.102 4.16c-9.918 0-17.958 7.147-17.958 15.962 0 4.935 2.522 9.345 6.48 12.273v5.667l.04.012a2.627 2.627 0 1 0 4.5 1.455h.002l5.026-3.54c.628.06 1.265.094 1.91.094 9.92 0 17.96-7.146 17.96-15.96C40.06 11.306 32.02 4.16 22.1 4.16zm-.04 29.902c-.902 0-1.78-.08-2.642-.207l-5.882 4.234c-.024.024-.055.04-.083.06l-.008.005a.51.51 0 0 1-.284.095.525.525 0 0 1-.525-.525l.005-6.375c-3.91-2.516-6.456-6.544-6.456-11.1 0-7.628 7.107-13.812 15.875-13.812s15.875 6.184 15.875 13.812-7.107 13.812-15.875 13.812z"/></svg>',
  'question-circle': '<svg viewBox="0 0 44 44"><g fill-rule="evenodd"><path d="M21.186 3c-10.853 0-19.36 8.506-19.36 19.358C1.827 32.494 10.334 41 21.187 41c10.133 0 18.64-8.506 18.64-18.642C39.827 11.506 31.32 3 21.187 3m15.64 19c0 8.823-7.178 16-16 16s-16-7.177-16-16 7.178-16 16-16 16 7.177 16 16z"/><path d="M22.827 31.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m4-15.48c0 .957-.203 1.822-.61 2.593-.427.792-1.117 1.612-2.073 2.457-.867.734-1.453 1.435-1.754 2.096-.302.7-.453 1.693-.453 2.98a.828.828 0 0 1-.823.854.828.828 0 0 1-.584-.22.877.877 0 0 1-.24-.635c0-1.305.168-2.38.506-3.227.336-.883.93-1.682 1.78-2.4 1.01-.883 1.71-1.692 2.1-2.428.336-.645.503-1.38.503-2.21-.02-.935-.3-1.7-.85-2.288-.655-.717-1.62-1.075-2.897-1.075-1.506 0-2.596.535-3.27 1.6-.46.754-.688 1.645-.688 2.677a.92.92 0 0 1-.266.66.747.747 0 0 1-.56.25.73.73 0 0 1-.584-.194c-.16-.164-.24-.393-.24-.69 0-1.82.585-3.272 1.755-4.357C18.645 11.486 19.928 11 21.434 11h.293c1.452 0 2.638.414 3.56 1.24 1.028.903 1.54 2.163 1.54 3.78z"/></g></svg>',
  voice: '<svg viewBox="0 0 38 33"><g fill-rule="evenodd"><path d="M17.838 28.8c-.564-.468-1.192-.983-1.836-1.496-4.244-3.385-5.294-3.67-6.006-3.67-.014 0-.027.005-.04.005-.015 0-.028-.006-.042-.006H3.562c-.734 0-.903-.203-.903-.928v-12.62c0-.49.057-.8.66-.8H9.1c.694 0 1.76-.28 6.4-3.63.83-.596 1.638-1.196 2.337-1.722V28.8zM19.682.19c-.463-.22-1.014-.158-1.417.157-.02.016-1.983 1.552-4.152 3.125C10.34 6.21 9.243 6.664 9.02 6.737H3.676c-.027 0-.053.003-.08.004H1.183c-.608 0-1.1.487-1.1 1.086V25.14c0 .598.492 1.084 1.1 1.084h8.71c.22.08 1.257.55 4.605 3.24 1.947 1.562 3.694 3.088 3.712 3.103.25.22.568.333.89.333.186 0 .373-.038.55-.116.48-.213.79-.684.79-1.204V1.38c0-.506-.294-.968-.758-1.19z" mask="url(#mask-2)"/><path d="M31.42 16.475c0-3.363-1.854-6.297-4.606-7.876-.125-.067-.42-.193-.625-.193-.613 0-1.11.488-1.11 1.09 0 .404.22.764.55.952 2.13 1.19 3.566 3.44 3.566 6.024 0 2.627-1.486 4.913-3.677 6.087-.32.19-.53.54-.53.935 0 .602.495 1.09 1.106 1.09.26.002.568-.15.568-.15 2.835-1.556 4.754-4.538 4.754-7.96" mask="url(#mask-4)"/><path d="M30.14 3.057c-.205-.122-.41-.22-.658-.22-.608 0-1.1.485-1.1 1.084 0 .434.26.78.627.978 4.042 2.323 6.76 6.636 6.76 11.578 0 4.938-2.715 9.248-6.754 11.572-.354.19-.66.55-.66.993 0 .6.494 1.085 1.102 1.085.243 0 .438-.092.65-.213 4.692-2.695 7.848-7.7 7.848-13.435 0-5.723-3.142-10.718-7.817-13.418" mask="url(#mask-6)"/></g></svg>',
  plus: '<svg viewBox="0 0 30 30"><path d="M14 14H0v2h14v14h2V16h14v-2H16V0h-2v14z" fill-rule="evenodd"/></svg>',
  minus: '<svg viewBox="0 0 30 2"><path d="M0 0h30v2H0z" fill-rule="evenodd"/></svg>',
  dislike: '<svg viewBox="0 0 72 72"><g fill="none" fill-rule="evenodd"><path d="M36 72c19.882 0 36-16.118 36-36S55.882 0 36 0 0 16.118 0 36s16.118 36 36 36zm0-2c18.778 0 34-15.222 34-34S54.778 2 36 2 2 17.222 2 36s15.222 34 34 34z" fill="#FFF"/><path fill="#FFF" d="M47 22h2v6h-2zm-24 0h2v6h-2z"/><path d="M21 51s4.6-7 15-7 15 7 15 7" stroke="#FFF" stroke-width="2"/></g></svg>',
  fail: '<svg viewBox="0 0 72 72"><g fill="none" fill-rule="evenodd"><path d="M36 72c19.882 0 36-16.118 36-36S55.882 0 36 0 0 16.118 0 36s16.118 36 36 36zm0-2c18.778 0 34-15.222 34-34S54.778 2 36 2 2 17.222 2 36s15.222 34 34 34z" fill="#FFF"/><path d="M22 22l28.304 28.304m-28.304 0L50.304 22" stroke="#FFF" stroke-width="2"/></g></svg>',
  success: '<svg viewBox="0 0 72 72"><g fill="none" fill-rule="evenodd"><path d="M36 72c19.882 0 36-16.118 36-36S55.882 0 36 0 0 16.118 0 36s16.118 36 36 36zm0-2c18.778 0 34-15.222 34-34S54.778 2 36 2 2 17.222 2 36s15.222 34 34 34z" fill="#FFF"/><path stroke="#FFF" stroke-width="2" d="M19 34.54l11.545 11.923L52.815 24"/></g></svg>'
};

var load_sprite_renderSvgSprite = function renderSvgSprite() {
  var symbols = keys_default()(load_sprite_icons).map(function (iconName) {
    var svgContent = load_sprite_icons[iconName].split('svg')[1];
    return "<symbol id=".concat(iconName).concat(svgContent, "symbol>");
  }).join('');

  return svgSprite(symbols);
};

var loadSprite = function loadSprite() {
  if (!document) {
    return;
  }

  var existing = document.getElementById('__ANTD_MOBILE_SVG_SPRITE_NODE__');
  var mountNode = document.body;

  if (!existing) {
    mountNode.insertAdjacentHTML('afterbegin', load_sprite_renderSvgSprite());
  }
};

/* harmony default export */ var load_sprite = (loadSprite);
// CONCATENATED MODULE: ./src/packages/icon/src/index.tsx














var src_Icon =
/*#__PURE__*/
function (_Vue) {
  _inherits(Icon, _Vue);

  function Icon() {
    _classCallCheck(this, Icon);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Icon).apply(this, arguments));
  }

  _createClass(Icon, [{
    key: "mounted",
    value: function mounted() {
      load_sprite();
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _a = this,
          type = _a.type,
          size = _a.size,
          restProps = __rest(_a, ["type", "size"]);

      var cls = classnames_default()('am-icon', "am-icon-".concat(type), "am-icon-".concat(size));
      var style = {};

      if (this.color) {
        style.color = this.color;
      }

      if (typeof this.size === 'number') {
        style.width = this.size + 'px';
        style.height = this.size + 'px';
      }

      return h("svg", {
        "class": cls,
        "style": style,
        "props": _objectSpread({}, restProps)
      }, [h("use", {
        "attrs": {
          "xlink:href": "#".concat(type)
        }
      })]);
    }
  }]);

  return Icon;
}(external_Vue_default.a);

__decorate([Prop({
  type: [String, Number],
  default: 'md'
})], src_Icon.prototype, "size", void 0);

__decorate([Prop({
  type: String,
  required: true
})], src_Icon.prototype, "type", void 0);

__decorate([Prop(String)], src_Icon.prototype, "color", void 0);

src_Icon = __decorate([vue_class_component_common_default()({
  name: 'MIcon'
})], src_Icon);
/* harmony default export */ var icon_src = (src_Icon);
// EXTERNAL MODULE: ./src/packages/icon/style/index.less
var icon_style = __webpack_require__("47fc");

// CONCATENATED MODULE: ./src/packages/icon/style/index.tsx

// CONCATENATED MODULE: ./src/packages/icon/index.ts


var icon_Plugin = icon_src;

icon_Plugin.install = function (Vue) {
  Vue.component('MIcon', icon_src);
};

/* harmony default export */ var packages_icon = (icon_Plugin);
// CONCATENATED MODULE: ./src/packages/mixins/icon-res.tsx













var httpReg = /^http(s)?:\/\//;

var icon_res_IconRes =
/*#__PURE__*/
function (_Vue) {
  _inherits(IconRes, _Vue);

  function IconRes() {
    _classCallCheck(this, IconRes);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(IconRes).apply(this, arguments));
  }

  _createClass(IconRes, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      var icon = this.type;

      if (typeof icon === 'string') {
        if (httpReg.test(icon)) {
          return h("img", {
            "attrs": {
              "src": icon,
              "alt": ''
            }
          });
        } else {
          return h(packages_icon, {
            "attrs": {
              "type": icon,
              "size": 'md'
            }
          });
        }
      } else if (typeof_typeof(icon) === 'object') {
        if (icon.context) {
          return icon;
        } else if (icon.iconType === 'img') {
          return h("img", helper_default()([{
            "attrs": {
              "src": icon
            }
          }, icon, {
            "attrs": {
              "alt": ''
            }
          }]));
        } else if (icon.iconType === 'icon') {
          return h(packages_icon, {
            "props": _objectSpread({}, icon)
          });
        }
      }
    }
  }]);

  return IconRes;
}(external_Vue_default.a);

__decorate([Prop({
  type: [String, Object]
})], icon_res_IconRes.prototype, "type", void 0);

icon_res_IconRes = __decorate([vue_class_component_common_default()({
  name: 'IconRes'
})], icon_res_IconRes);
/* harmony default export */ var icon_res = (icon_res_IconRes);
// CONCATENATED MODULE: ./src/packages/button/src/index.tsx
















var src_httpReg = /^http(s)?:\/\//;
var rxTwoCNChar = /^[\u4e00-\u9fa5]{2}$/;
var isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);

function isString(str) {
  return typeof str === 'string';
}

var src_Button =
/*#__PURE__*/
function (_Vue) {
  _inherits(Button, _Vue);

  function Button() {
    _classCallCheck(this, Button);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Button).apply(this, arguments));
  }

  _createClass(Button, [{
    key: "insertSpace",
    value: function insertSpace(child) {
      var h = this.$createElement;

      if (isString(child.text) && isTwoCNChar(child.text)) {
        return h("span", [child.text.split('').join(' ')]);
      }

      return child;
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames,
          _this = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          type = this.type,
          size = this.size,
          inline = this.inline,
          disabled = this.disabled,
          icon = this.icon,
          loading = this.loading,
          activeStyle = this.activeStyle,
          activeClassName = this.activeClassName;
      var iconType = loading ? 'loading' : icon;
      var wrapCls = classnames_default()(prefixCls, (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-primary"), type === 'primary'), _defineProperty(_classnames, "".concat(prefixCls, "-ghost"), type === 'ghost'), _defineProperty(_classnames, "".concat(prefixCls, "-warning"), type === 'warning'), _defineProperty(_classnames, "".concat(prefixCls, "-small"), size === 'small'), _defineProperty(_classnames, "".concat(prefixCls, "-inline"), inline), _defineProperty(_classnames, "".concat(prefixCls, "-disabled"), disabled), _defineProperty(_classnames, "".concat(prefixCls, "-loading"), loading), _defineProperty(_classnames, "".concat(prefixCls, "-icon"), !!iconType), _classnames));
      var kids = this.$slots.default ? this.$slots.default.map(this.insertSpace) : '';
      var iconEl;

      if (typeof iconType === 'string') {
        iconEl = h(icon_res, helper_default()([{
          "class": "".concat(prefixCls, "-icon")
        }, {
          "props": {
            type: src_httpReg.test(iconType) ? iconType : {
              mobile: true,
              iconType: 'icon',
              type: iconType,
              size: size === 'small' ? 'xxs' : 'md'
            }
          }
        }]));
      } else if (iconType) {
        var cls = classnames_default()('am-icon', "".concat(prefixCls, "-icon"), size === 'small' ? 'am-icon-xxs' : 'am-icon-md');
        iconEl = // @ts-ignore
        h(icon_res, helper_default()([{
          "class": cls
        }, {
          "props": {
            type: iconType
          }
        }]));
      } // use div, button native is buggy @yiminghe


      return (// @ts-ignore
        h(feedback, {
          "attrs": {
            "activeClassName": activeClassName || (activeStyle ? "".concat(prefixCls, "-active") : undefined),
            "disabled": disabled,
            "activeStyle": activeStyle
          }
        }, [h("a", {
          "attrs": {
            "role": "button",
            "aria-disabled": disabled
          },
          "class": wrapCls,
          "on": {
            "click": function click(e) {
              if (!_this.disabled) {
                _this.$emit('click', e);
              }
            }
          }
        }, [iconEl, kids])])
      );
    }
  }]);

  return Button;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-button'
})], src_Button.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], src_Button.prototype, "role", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Button.prototype, "inline", void 0);

__decorate([Prop({
  type: [String, Object]
})], src_Button.prototype, "icon", void 0);

__decorate([Prop({
  type: String
})], src_Button.prototype, "activeClassName", void 0);

__decorate([Prop({
  type: [Boolean, Object],
  default: function _default() {
    return {};
  }
})], src_Button.prototype, "activeStyle", void 0);

__decorate([Prop({
  type: String
})], src_Button.prototype, "type", void 0);

__decorate([Prop({
  type: String,
  default: 'large'
})], src_Button.prototype, "size", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Button.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Button.prototype, "loading", void 0);

src_Button = __decorate([vue_class_component_common_default()({
  name: 'Button'
})], src_Button);
/* harmony default export */ var button_src = (src_Button);
// EXTERNAL MODULE: ./src/packages/button/style/index.tsx
var packages_button_style = __webpack_require__("5ac5");

// CONCATENATED MODULE: ./src/packages/button/index.ts



button_src.install = function (Vue) {
  Vue.component('MButton', button_src);
};

/* harmony default export */ var packages_button = (button_src);
// CONCATENATED MODULE: ./src/packages/utils/getLocale.tsx

function getComponentLocale(props, context, componentName, getDefaultLocale) {
  var locale = {};

  if (context && context.antLocale && context.antLocale[componentName]) {
    locale = context.antLocale[componentName];
  } else {
    var defaultLocale = getDefaultLocale(); // TODO: make default lang of antd be English
    // https://github.com/ant-design/ant-design/issues/6334

    locale = defaultLocale.default || defaultLocale;
  }

  var result = assign_default()({}, locale);

  if (props.locale) {
    result = assign_default()({}, result, props.locale);

    if (props.locale.lang) {
      result.lang = assign_default()({}, locale.lang, props.locale.lang);
    }
  }

  return result;
}
function getLocaleCode(context) {
  var localeCode = context.antLocale && context.antLocale.locale; // Had use LocaleProvide but didn't set locale

  if (context.antLocale && context.antLocale.exist && !localeCode) {
    return 'zh-cn';
  }

  return localeCode;
}
// EXTERNAL MODULE: ./src/packages/vmc-calendar/locale/zh_CN.ts
var zh_CN = __webpack_require__("956e");

// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar-props.ts











var calendar_props_CalendarProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(CalendarProps, _Vue);

  function CalendarProps() {
    _classCallCheck(this, CalendarProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(CalendarProps).apply(this, arguments));
  }

  return CalendarProps;
}(external_Vue_default.a);

__decorate([Prop({})], calendar_props_CalendarProps.prototype, "defaultDate", void 0);

__decorate([Prop({
  type: Date,
  default: function _default() {
    return new Date(2000, 0, 1, 8);
  }
})], calendar_props_CalendarProps.prototype, "defaultTimeValue", void 0);

__decorate([Prop({})], calendar_props_CalendarProps.prototype, "defaultValue", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], calendar_props_CalendarProps.prototype, "displayMode", void 0);

__decorate([Prop({
  type: String,
  default: 'vertical'
})], calendar_props_CalendarProps.prototype, "enterDirection", void 0);

__decorate([Prop({
  type: Function
})], calendar_props_CalendarProps.prototype, "getDateExtra", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], calendar_props_CalendarProps.prototype, "infiniteOpt", void 0);

__decorate([Prop({
  type: Number
})], calendar_props_CalendarProps.prototype, "initialMonths", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return zh_CN["a" /* default */];
  }
})], calendar_props_CalendarProps.prototype, "locale", void 0);

__decorate([Prop({
  type: Date
})], calendar_props_CalendarProps.prototype, "maxDate", void 0);

__decorate([Prop({
  type: Date
})], calendar_props_CalendarProps.prototype, "minDate", void 0);

__decorate([Prop({})], calendar_props_CalendarProps.prototype, "onSelect", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], calendar_props_CalendarProps.prototype, "pickTime", void 0);

__decorate([Prop({
  type: String,
  default: 'rmc-calendar'
})], calendar_props_CalendarProps.prototype, "prefixCls", void 0);

__decorate([Prop({})], calendar_props_CalendarProps.prototype, "renderHeader", void 0);

__decorate([Prop({})], calendar_props_CalendarProps.prototype, "renderShortcut", void 0);

__decorate([Prop({})], calendar_props_CalendarProps.prototype, "rowSize", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], calendar_props_CalendarProps.prototype, "showHeader", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], calendar_props_CalendarProps.prototype, "showShortcut", void 0);

__decorate([Prop({
  type: String
})], calendar_props_CalendarProps.prototype, "timePickerPickerPrefixCls", void 0);

__decorate([Prop({
  type: String
})], calendar_props_CalendarProps.prototype, "timePickerPrefixCls", void 0);

__decorate([Prop({
  type: String
})], calendar_props_CalendarProps.prototype, "title", void 0);

__decorate([Prop({
  type: String,
  default: 'range'
})], calendar_props_CalendarProps.prototype, "type", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], calendar_props_CalendarProps.prototype, "visible", void 0);

calendar_props_CalendarProps = __decorate([vue_class_component_common_default()({
  name: 'CalendarProps'
})], calendar_props_CalendarProps);
/* harmony default export */ var calendar_props = (calendar_props_CalendarProps);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__("3b2b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__("a481");

// CONCATENATED MODULE: ./src/packages/vmc-calendar/data-types.ts
var SelectType;

(function (SelectType) {
  SelectType[SelectType["None"] = 0] = "None";
  /** 单选 */

  SelectType[SelectType["Single"] = 1] = "Single";
  /** 起/止 */

  SelectType[SelectType["All"] = 2] = "All";
  /** 区间仅选择了 起 */

  SelectType[SelectType["Only"] = 3] = "Only";
  /** 区间起 */

  SelectType[SelectType["Start"] = 4] = "Start";
  /** 区间中 */

  SelectType[SelectType["Middle"] = 5] = "Middle";
  /** 区间止 */

  SelectType[SelectType["End"] = 6] = "End";
})(SelectType || (SelectType = {}));
// CONCATENATED MODULE: ./src/packages/vmc-calendar/util/index.ts






var mergeDateTime = function mergeDateTime(date, time) {
  var copyDate = date || new Date();

  if (!time) {
    return copyDate;
  }

  return new Date(copyDate.getFullYear(), copyDate.getMonth(), copyDate.getDate(), time.getHours(), time.getMinutes(), time.getSeconds());
};
var util_formatDate = function formatDate(date, format, locale) {
  var week = locale && locale.week;
  var o = {
    'M+': date.getMonth() + 1,
    'd+': date.getDate(),
    'h+': date.getHours(),
    'm+': date.getMinutes(),
    's+': date.getSeconds(),
    'q+': Math.floor((date.getMonth() + 3) / 3),
    'w+': week && week[date.getDay()],
    'S': date.getMilliseconds()
  };
  var copyFormat = format;

  if (/(y+)/.test(copyFormat)) {
    copyFormat = copyFormat.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));
  }

  for (var k in o) {
    if (new RegExp('(' + k + ')').test(copyFormat)) {
      copyFormat = copyFormat.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));
    }
  }

  return copyFormat;
};
var util_hasOwnProperty = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  var exclude = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  if (is(objA, objB)) {
    return true;
  }

  if (typeof_typeof(objA) !== 'object' || objA === null || typeof_typeof(objB) !== 'object' || objB === null) {
    return false;
  }

  var keysA = keys_default()(objA);

  var keysB = keys_default()(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  for (var i = 0; i < keysA.length; i++) {
    if (exclude.indexOf(keysA[i]) >= 0) {
      continue;
    }

    if (!util_hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}
var getMonthDate = function getMonthDate() {
  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
  var addMonth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var y = date.getFullYear();
  var m = date.getMonth();
  return {
    firstDate: new Date(y, m + addMonth, 1),
    lastDate: new Date(y, m + 1 + addMonth, 0)
  };
};
var getDateWithoutTime = function getDateWithoutTime(date) {
  if (!date) {
    return 0;
  }

  return +new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
var util_genWeekData = function genWeekData(firstDate, minDate, maxDate) {
  var minDateTime = getDateWithoutTime(minDate);
  var maxDateTime = getDateWithoutTime(maxDate) || Number.POSITIVE_INFINITY;
  var weeks = [];
  var nextMonth = getMonthDate(firstDate, 1).firstDate;
  var currentDay = firstDate;
  var currentWeek = [];
  weeks.push(currentWeek);
  var startWeekday = currentDay.getDay();

  if (startWeekday > 0) {
    for (var i = 0; i < startWeekday; i++) {
      currentWeek.push({});
    }
  }

  while (currentDay < nextMonth) {
    if (currentWeek.length === 7) {
      currentWeek = [];
      weeks.push(currentWeek);
    }

    var dayOfMonth = currentDay.getDate();
    var tick = +currentDay;
    currentWeek.push({
      tick: tick,
      dayOfMonth: dayOfMonth,
      selected: SelectType.None,
      isFirstOfMonth: dayOfMonth === 1,
      isLastOfMonth: false,
      outOfDate: tick < minDateTime || tick > maxDateTime
    });
    currentDay = new Date(currentDay.getTime() + 3600 * 24 * 1000);
  }

  currentWeek[currentWeek.length - 1].isLastOfMonth = true;
  return weeks;
};
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar/confirm-panel.tsx











var confirm_panel_ConfirmPanel =
/*#__PURE__*/
function (_Vue) {
  _inherits(ConfirmPanel, _Vue);

  function ConfirmPanel() {
    _classCallCheck(this, ConfirmPanel);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(ConfirmPanel).apply(this, arguments));
  }

  _createClass(ConfirmPanel, [{
    key: "onConfirm",
    value: function onConfirm() {
      if (!this.disableBtn) {
        this.$emit('confirm');
      }
    }
  }, {
    key: "formatDate",
    value: function formatDate(date) {
      var _this$formatStr = this.formatStr,
          formatStr = _this$formatStr === void 0 ? '' : _this$formatStr,
          locale = this.locale;
      return util_formatDate(date, formatStr, locale);
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var type = this.type,
          locale = this.locale,
          disableBtn = this.disableBtn;
      var startDateTime = this.startDateTime,
          endDateTime = this.endDateTime;

      if (startDateTime && endDateTime && +startDateTime > +endDateTime) {
        var tmp = startDateTime;
        startDateTime = endDateTime;
        endDateTime = tmp;
      }

      var startTimeStr = startDateTime ? this.formatDate(startDateTime) : locale.noChoose;
      var endTimeStr = endDateTime ? this.formatDate(endDateTime) : locale.noChoose;
      var btnCls = disableBtn ? 'button button-disable' : 'button';

      if (type === 'one') {
        btnCls += ' button-full';
      }

      return h("div", {
        "class": "confirm-panel"
      }, [type === 'range' && h("div", {
        "class": 'info'
      }, [h("p", [locale.start, ": ", h("span", {
        "class": !startDateTime ? 'grey' : ''
      }, [startTimeStr])]), h("p", [locale.end, ": ", h("span", {
        "class": !endDateTime ? 'grey' : ''
      }, [endTimeStr])])]), h("div", {
        "class": btnCls,
        "on": {
          "click": this.onConfirm
        }
      }, [locale.confirm])]);
    }
  }]);

  return ConfirmPanel;
}(external_Vue_default.a);

__decorate([Prop({})], confirm_panel_ConfirmPanel.prototype, "type", void 0);

__decorate([Prop({})], confirm_panel_ConfirmPanel.prototype, "locale", void 0);

__decorate([Prop({
  type: Boolean
})], confirm_panel_ConfirmPanel.prototype, "onlyConfirm", void 0);

__decorate([Prop({
  type: Boolean
})], confirm_panel_ConfirmPanel.prototype, "disableBtn", void 0);

__decorate([Prop({})], confirm_panel_ConfirmPanel.prototype, "startDateTime", void 0);

__decorate([Prop({})], confirm_panel_ConfirmPanel.prototype, "endDateTime", void 0);

__decorate([Prop({
  type: String
})], confirm_panel_ConfirmPanel.prototype, "formatStr", void 0);

confirm_panel_ConfirmPanel = __decorate([vue_class_component_common_default()({
  name: 'ConfirmPanel'
})], confirm_panel_ConfirmPanel);
/* harmony default export */ var confirm_panel = (confirm_panel_ConfirmPanel);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar/header.tsx










var header_Header =
/*#__PURE__*/
function (_Vue) {
  _inherits(Header, _Vue);

  function Header() {
    _classCallCheck(this, Header);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Header).apply(this, arguments));
  }

  _createClass(Header, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var title = this.title,
          _this$locale = this.locale,
          locale = _this$locale === void 0 ? {} : _this$locale,
          showClear = this.showClear,
          closeIcon = this.closeIcon,
          clearIcon = this.clearIcon;
      return h("div", {
        "class": "header"
      }, [h("span", {
        "class": "left",
        "on": {
          "click": function click() {
            return _this.$emit('cancel');
          }
        }
      }, [closeIcon]), h("span", {
        "class": "title"
      }, [title || locale.title]), showClear && h("span", {
        "class": "right",
        "on": {
          "click": function click() {
            return _this.$emit('clear');
          }
        }
      }, [clearIcon || locale.clear])]);
    }
  }]);

  return Header;
}(external_Vue_default.a);

__decorate([Prop({
  type: String
})], header_Header.prototype, "title", void 0);

__decorate([Prop({})], header_Header.prototype, "locale", void 0);

__decorate([Prop({
  type: Boolean
})], header_Header.prototype, "showClear", void 0);

__decorate([Prop({
  default: 'X'
})], header_Header.prototype, "closeIcon", void 0);

__decorate([Prop({})], header_Header.prototype, "clearIcon", void 0);

header_Header = __decorate([vue_class_component_common_default()({
  name: 'Header'
})], header_Header);
/* harmony default export */ var calendar_header = (header_Header);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar/shortcut-panel.tsx










var shortcut_panel_ShortcutPanel =
/*#__PURE__*/
function (_Vue) {
  _inherits(ShortcutPanel, _Vue);

  function ShortcutPanel() {
    _classCallCheck(this, ShortcutPanel);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(ShortcutPanel).apply(this, arguments));
  }

  _createClass(ShortcutPanel, [{
    key: "onClick",
    value: function onClick(type) {
      var today = new Date();

      switch (type) {
        case 'today':
          this.$emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0), new Date(today.getFullYear(), today.getMonth(), today.getDate(), 12));
          break;

        case 'yesterday':
          this.$emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1, 0), new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1, 12));
          break;

        case 'lastweek':
          this.$emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate() - 6, 0), new Date(today.getFullYear(), today.getMonth(), today.getDate(), 12));
          break;

        case 'lastmonth':
          this.$emit('select', new Date(today.getFullYear(), today.getMonth(), today.getDate() - 29, 0), new Date(today.getFullYear(), today.getMonth(), today.getDate(), 12));
          break;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var locale = this.locale;
      return h("div", {
        "class": "shortcut-panel"
      }, [h("div", {
        "class": "item",
        "on": {
          "click": function click() {
            return _this.onClick('today');
          }
        }
      }, [locale.today]), h("div", {
        "class": "item",
        "on": {
          "click": function click() {
            return _this.onClick('yesterday');
          }
        }
      }, [locale.yesterday]), h("div", {
        "class": "item",
        "on": {
          "click": function click() {
            return _this.onClick('lastweek');
          }
        }
      }, [locale.lastWeek]), h("div", {
        "class": "item",
        "on": {
          "click": function click() {
            return _this.onClick('lastmonth');
          }
        }
      }, [locale.lastMonth])]);
    }
  }]);

  return ShortcutPanel;
}(external_Vue_default.a);

__decorate([Prop({})], shortcut_panel_ShortcutPanel.prototype, "locale", void 0);

__decorate([Prop({})], shortcut_panel_ShortcutPanel.prototype, "onSelect", void 0);

shortcut_panel_ShortcutPanel = __decorate([vue_class_component_common_default()({
  name: 'ShortcutPanel'
})], shortcut_panel_ShortcutPanel);
/* harmony default export */ var shortcut_panel = (shortcut_panel_ShortcutPanel);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__("55dd");

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (is_array_default()(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/array/from.js
var from = __webpack_require__("774e");
var from_default = /*#__PURE__*/__webpack_require__.n(from);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js
var is_iterable = __webpack_require__("c8bb");
var is_iterable_default = /*#__PURE__*/__webpack_require__.n(is_iterable);

// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js


function _iterableToArray(iter) {
  if (is_iterable_default()(Object(iter)) || Object.prototype.toString.call(iter) === "[object Arguments]") return from_default()(iter);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js



function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date-picker-props.ts










var date_picker_props_DatePickerProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(DatePickerProps, _Vue);

  function DatePickerProps() {
    _classCallCheck(this, DatePickerProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePickerProps).apply(this, arguments));
  }

  return DatePickerProps;
}(external_Vue_default.a);

__decorate([Prop({})], date_picker_props_DatePickerProps.prototype, "defaultDate", void 0);

__decorate([Prop({})], date_picker_props_DatePickerProps.prototype, "endDate", void 0);

__decorate([Prop({})], date_picker_props_DatePickerProps.prototype, "getDateExtra", void 0);

__decorate([Prop({
  type: Boolean
})], date_picker_props_DatePickerProps.prototype, "infiniteOpt", void 0);

__decorate([Prop({
  type: Number
})], date_picker_props_DatePickerProps.prototype, "initialMonths", void 0);

__decorate([Prop({})], date_picker_props_DatePickerProps.prototype, "locale", void 0);

__decorate([Prop({
  type: Date
})], date_picker_props_DatePickerProps.prototype, "maxDate", void 0);

__decorate([Prop({
  type: Date
})], date_picker_props_DatePickerProps.prototype, "minDate", void 0);

__decorate([Prop({})], date_picker_props_DatePickerProps.prototype, "onSelectHasDisableDate", void 0);

__decorate([Prop({
  type: String
})], date_picker_props_DatePickerProps.prototype, "prefixCls", void 0);

__decorate([Prop({})], date_picker_props_DatePickerProps.prototype, "rowSize", void 0);

__decorate([Prop({
  type: Date
})], date_picker_props_DatePickerProps.prototype, "startDate", void 0);

__decorate([Prop({})], date_picker_props_DatePickerProps.prototype, "type", void 0);

date_picker_props_DatePickerProps = __decorate([vue_class_component_common_default()({
  name: 'DatePickerProps'
})], date_picker_props_DatePickerProps);
/* harmony default export */ var date_picker_props = (date_picker_props_DatePickerProps);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date-picker-base.tsx















function monthsBetween(minDate, maxDate) {
  return (maxDate.getFullYear() - minDate.getFullYear()) * 12 + maxDate.getMonth() - minDate.getMonth();
}

var date_picker_base_DatePicker =
/*#__PURE__*/
function (_DatePickerProps) {
  _inherits(DatePicker, _DatePickerProps);

  function DatePicker() {
    var _this;

    _classCallCheck(this, DatePicker);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePicker).apply(this, arguments));
    _this.visibleMonth = [];
    _this.state = {
      months: []
    };
    return _this;
  }

  _createClass(DatePicker, [{
    key: "genMonthComponent",
    value: function genMonthComponent(data) {
      var h = this.$createElement;
      return h("div");
    }
  }, {
    key: "created",
    value: function created() {
      var _this2 = this;

      this.$watch(function () {
        return {
          startDate: _this2.startDate,
          endDate: _this2.endDate
        };
      }, function (newValue, oldValue) {
        if (oldValue.startDate) {
          _this2.selectDateRange(oldValue.startDate, oldValue.endDate, true);
        }

        if (newValue.startDate) {
          _this2.selectDateRange(newValue.startDate, newValue.endDate);
        }
      });
    }
  }, {
    key: "getBegin",
    value: function getBegin() {
      if (this.startDate) {
        return this.startDate;
      } else {
        var min = this.minDate || this.defaultDate;
        var max = this.maxDate || this.defaultDate;

        if (monthsBetween(min, max) < 6) {
          return this.minDate;
        } else {
          var date = new Date(max.getTime());
          date.setMonth(date.getMonth() - 6);
          return date;
        }
      }
    }
  }, {
    key: "beforeMount",
    value: function beforeMount() {
      var _this$initialMonths = this.initialMonths,
          initialMonths = _this$initialMonths === void 0 ? 6 : _this$initialMonths,
          defaultDate = this.defaultDate;
      var begin = this.getBegin();

      for (var i = 0; i < initialMonths; i++) {
        this.canLoadNext() && this.genMonthData(begin, i);
      }

      this.visibleMonth = _toConsumableArray(this.state.months);
    }
  }, {
    key: "canLoadPrev",
    value: function canLoadPrev() {
      var minDate = this.minDate;
      return !minDate || this.state.months.length <= 0 || +getMonthDate(minDate).firstDate < +this.state.months[0].firstDate;
    }
  }, {
    key: "canLoadNext",
    value: function canLoadNext() {
      var maxDate = this.maxDate;
      return !maxDate || this.state.months.length <= 0 || +getMonthDate(maxDate).firstDate > +this.state.months[this.state.months.length - 1].firstDate;
    }
  }, {
    key: "genMonthData",
    value: function genMonthData(date) {
      var addMonth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var copyDate = date;

      if (!copyDate) {
        copyDate = addMonth >= 0 ? this.state.months[this.state.months.length - 1].firstDate : this.state.months[0].firstDate;
      }

      if (!copyDate) {
        copyDate = new Date();
      }

      var locale = this.locale;

      var _getMonthDate = getMonthDate(copyDate, addMonth),
          firstDate = _getMonthDate.firstDate,
          lastDate = _getMonthDate.lastDate;

      var weeks = util_genWeekData(firstDate, this.minDate, this.maxDate);
      var title = util_formatDate(firstDate, locale ? locale.monthTitle : 'yyyy/MM', this.locale);
      var data = {
        title: title,
        firstDate: firstDate,
        lastDate: lastDate,
        weeks: weeks
      };
      data.component = this.genMonthComponent(data);

      if (addMonth >= 0) {
        this.state.months.push(data);
      } else {
        this.state.months.unshift(data);
      }

      var startDate = this.startDate,
          endDate = this.endDate;

      if (startDate) {
        this.selectDateRange(startDate, endDate);
      }

      return data;
    }
  }, {
    key: "inDate",
    value: function inDate(date, tick) {
      return date <= tick && tick < date + 24 * 3600000;
    }
  }, {
    key: "selectDateRange",
    value: function selectDateRange(startDate, endDate) {
      var _this3 = this;

      var clear = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var getDateExtra = this.getDateExtra,
          type = this.type,
          onSelectHasDisableDate = this.onSelectHasDisableDate;
      var copyEndDate = endDate;

      if (type === 'one') {
        copyEndDate = undefined;
      }

      var time1 = getDateWithoutTime(startDate);
      var time2 = getDateWithoutTime(copyEndDate);
      var startDateTick = !time2 || time1 < time2 ? time1 : time2;
      var endDateTick = time2 && time1 > time2 ? time1 : time2;
      var startMonthDate = getMonthDate(new Date(startDateTick)).firstDate;
      var endMonthDate = endDateTick ? new Date(endDateTick) : getMonthDate(new Date(startDateTick)).lastDate;
      var unuseable = [];
      var needUpdate = false;
      this.state.months.filter(function (m) {
        return m.firstDate >= startMonthDate && m.firstDate <= endMonthDate;
      }).forEach(function (m) {
        m.weeks.forEach(function (w) {
          return w.filter(function (d) {
            if (!endDateTick) {
              return d.tick && _this3.inDate(startDateTick, d.tick);
            } else {
              return d.tick && d.tick >= startDateTick && d.tick <= endDateTick;
            }
          }).forEach(function (d) {
            var oldValue = d.selected;

            if (clear) {
              d.selected = SelectType.None;
            } else {
              var info = getDateExtra && getDateExtra(new Date(d.tick), _toConsumableArray(_this3.currentValue)) || {};

              if (d.outOfDate || info.disable) {
                unuseable.push(d.tick);
              }

              if (_this3.inDate(startDateTick, d.tick)) {
                if (type === 'one') {
                  d.selected = SelectType.Single;
                } else if (!endDateTick) {
                  d.selected = SelectType.Only;
                } else if (startDateTick !== endDateTick) {
                  d.selected = SelectType.Start;
                } else {
                  d.selected = SelectType.All;
                }
              } else if (_this3.inDate(endDateTick, d.tick)) {
                d.selected = SelectType.End;
              } else {
                d.selected = SelectType.Middle;
              }
            }

            needUpdate = needUpdate || d.selected !== oldValue;
          });
        });

        if (needUpdate && m.componentRef) {
          m.componentRef.updateWeeks();
          m.componentRef.$forceUpdate();
        }
      });

      if (unuseable.length > 0) {
        if (onSelectHasDisableDate) {
          onSelectHasDisableDate(unuseable.map(function (tick) {
            return new Date(tick);
          }));
        } else {
          console.warn('Unusable date. You can handle by onSelectHasDisableDate.', unuseable);
        }
      }
    }
  }, {
    key: "computeVisible",
    value: function computeVisible(clientHeight, scrollTop) {
      var needUpdate = false;
      var MAX_VIEW_PORT = clientHeight * 2;
      var MIN_VIEW_PORT = clientHeight; // 大缓冲区外过滤规则

      var filterFunc = function filterFunc(vm) {
        return vm.y && vm.height && vm.y + vm.height > scrollTop - MAX_VIEW_PORT && vm.y < scrollTop + clientHeight + MAX_VIEW_PORT;
      };

      if (this.infiniteOpt && this.visibleMonth.length > 12) {
        this.visibleMonth = this.visibleMonth.filter(filterFunc).sort(function (a, b) {
          return +a.firstDate - +b.firstDate;
        });
      } // 当小缓冲区不满时填充


      if (this.visibleMonth.length > 0) {
        var last = this.visibleMonth[this.visibleMonth.length - 1];

        if (last.y !== undefined && last.height && last.y + last.height < scrollTop + clientHeight + MIN_VIEW_PORT) {
          var lastIndex = this.state.months.indexOf(last);

          for (var i = 1; i <= 2; i++) {
            var index = lastIndex + i;

            if (index < this.state.months.length && this.visibleMonth.indexOf(this.state.months[index]) < 0) {
              this.visibleMonth.push(this.state.months[index]);
            } else {
              this.canLoadNext() && this.genMonthData(undefined, 1);
            }
          }

          needUpdate = true;
        }

        var first = this.visibleMonth[0];

        if (first.y !== undefined && first.height && first.y > scrollTop - MIN_VIEW_PORT) {
          var firstIndex = this.state.months.indexOf(first);

          for (var _i = 1; _i <= 2; _i++) {
            var _index = firstIndex - _i;

            if (_index >= 0 && this.visibleMonth.indexOf(this.state.months[_index]) < 0) {
              this.visibleMonth.unshift(this.state.months[_index]);
              needUpdate = true;
            }
          }
        }
      } else if (this.state.months.length > 0) {
        this.visibleMonth = this.state.months.filter(filterFunc);
        needUpdate = true;
      }

      return needUpdate;
    }
  }, {
    key: "createOnScroll",
    value: function createOnScroll() {
      var _this4 = this;

      var timer;
      var clientHeight = 0;
      var scrollTop = 0;
      return function (data) {
        var client = data.client,
            top = data.top;
        clientHeight = client;
        scrollTop = top;

        if (timer) {
          return;
        }

        timer = setTimeout(function () {
          timer = undefined;

          if (_this4.computeVisible(clientHeight, scrollTop)) {
            _this4.$forceUpdate();
          }
        }, 64);
      };
    }
  }, {
    key: "onCellClick",
    value: function onCellClick(day) {
      if (!day.tick) {
        return;
      }

      this.$emit('cellClick', new Date(day.tick));
    }
  }]);

  return DatePicker;
}(date_picker_props);

__decorate([Inject('currentValue')], date_picker_base_DatePicker.prototype, "currentValue", void 0);

date_picker_base_DatePicker = __decorate([vue_class_component_common_default()({
  name: 'DatePicker'
})], date_picker_base_DatePicker);
/* harmony default export */ var date_picker_base = (date_picker_base_DatePicker);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date/single-month.tsx













var single_month_SingleMonth =
/*#__PURE__*/
function (_Vue) {
  _inherits(SingleMonth, _Vue);

  function SingleMonth() {
    var _this;

    _classCallCheck(this, SingleMonth);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(SingleMonth).apply(this, arguments));
    _this.state = {
      weekComponents: []
    };
    return _this;
  }

  _createClass(SingleMonth, [{
    key: "beforeMount",
    value: function beforeMount() {
      var _this2 = this;

      this.monthData.weeks.forEach(function (week, index) {
        _this2.genWeek(week, index);
      });
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.callback(this);
    }
  }, {
    key: "genWeek",
    value: function genWeek(weeksData, index) {
      var _this3 = this;

      var h = this.$createElement;
      var getDateExtra = this.getDateExtra,
          displayMode = this.displayMode,
          monthData = this.monthData,
          locale = this.locale,
          rowSize = this.rowSize;
      var rowCls = 'row';

      if (rowSize === 'xl') {
        rowCls += ' row-xl';
      }

      this.state.weekComponents[index] = h("div", {
        "key": index,
        "class": rowCls
      }, [weeksData.map(function (day, dayOfWeek) {
        var extra = getDateExtra && getDateExtra(new Date(day.tick), _toConsumableArray(_this3.currentValue)) || {};
        var info = extra.info;
        var disable = extra.disable || day.outOfDate;
        var cls = 'date';
        var lCls = 'left';
        var rCls = 'right';
        var infoCls = 'info';

        if (dayOfWeek === 0 || dayOfWeek === 6) {
          cls += ' grey';
        }

        if (disable) {
          cls += ' disable';
        } else if (info) {
          cls += ' important';
        }

        if (displayMode && extra.selected) {
          cls += ' date-selected selected-single';
        }

        if (day.selected) {
          cls += ' date-selected';
          var styleType = day.selected;

          switch (styleType) {
            case SelectType.Only:
              info = locale.begin;
              infoCls += ' date-selected';
              break;

            case SelectType.All:
              info = locale.begin_over;
              infoCls += ' date-selected';
              break;

            case SelectType.Start:
              info = locale.begin;
              infoCls += ' date-selected';

              if (dayOfWeek === 6 || day.isLastOfMonth) {
                styleType = SelectType.All;
              }

              break;

            case SelectType.Middle:
              if (dayOfWeek === 0 || day.isFirstOfMonth) {
                if (day.isLastOfMonth || dayOfWeek === 6) {
                  styleType = SelectType.All;
                } else {
                  styleType = SelectType.Start;
                }
              } else if (dayOfWeek === 6 || day.isLastOfMonth) {
                styleType = SelectType.End;
              }

              break;

            case SelectType.End:
              info = locale.over;
              infoCls += ' date-selected';

              if (dayOfWeek === 0 || day.isFirstOfMonth) {
                styleType = SelectType.All;
              }

              break;
          }

          switch (styleType) {
            case SelectType.Single:
            case SelectType.Only:
            case SelectType.All:
              cls += ' selected-single';
              break;

            case SelectType.Start:
              cls += ' selected-start';
              rCls += ' date-selected';
              break;

            case SelectType.Middle:
              cls += ' selected-middle';
              lCls += ' date-selected';
              rCls += ' date-selected';
              break;

            case SelectType.End:
              cls += ' selected-end';
              lCls += ' date-selected';
              break;
          }
        }

        var defaultContent = [h("div", {
          "key": "wrapper'} class={'date-wrapper"
        }, [h("span", {
          "class": lCls
        }), h("div", {
          "class": cls
        }, [day.dayOfMonth]), h("span", {
          "class": rCls
        })]), h("div", {
          "key": "info",
          "class": infoCls
        }, [info])];
        return h("div", {
          "key": dayOfWeek,
          "class": "cell ".concat(extra.cellCls || ''),
          "on": {
            "click": function click() {
              if (!disable) {
                if (!displayMode) {
                  _this3.$emit('cellClick', day, monthData);
                }
              }
            }
          }
        }, [extra.cellRender ? extra.cellRender(new Date(day.tick)) : defaultContent]);
      })]);
    }
  }, {
    key: "updateWeeks",
    value: function updateWeeks(monthData) {
      var _this4 = this;

      (monthData || this.monthData).weeks.forEach(function (week, index) {
        _this4.genWeek(week, index);
      });
    }
  }, {
    key: "monthDataChanged",
    value: function monthDataChanged(data) {
      this.updateWeeks(data);
    }
  }, {
    key: "setWarpper",
    value: function setWarpper(dom) {
      this.wrapperDivDOM = dom;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var title = this.monthData.title;
      var weekComponents = this.state.weekComponents;
      return h("div", {
        "class": "single-month",
        "ref": this.setWarpper.bind(this)
      }, [h("div", {
        "class": "month-title"
      }, [title]), h("div", {
        "class": "date"
      }, [weekComponents])]);
    }
  }]);

  return SingleMonth;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean,
  default: false
})], single_month_SingleMonth.prototype, "displayMode", void 0);

__decorate([Inject('currentValue')], single_month_SingleMonth.prototype, "currentValue", void 0);

__decorate([Prop({})], single_month_SingleMonth.prototype, "locale", void 0);

__decorate([Prop({})], single_month_SingleMonth.prototype, "monthData", void 0);

__decorate([Prop({
  type: String,
  default: 'normal'
})], single_month_SingleMonth.prototype, "rowSize", void 0);

__decorate([Prop({})], single_month_SingleMonth.prototype, "getDateExtra", void 0);

__decorate([Prop({})], single_month_SingleMonth.prototype, "callback", void 0);

__decorate([Watch('monthData')], single_month_SingleMonth.prototype, "monthDataChanged", null);

single_month_SingleMonth = __decorate([vue_class_component_common_default()({
  name: 'SingleMonth'
})], single_month_SingleMonth);
/* harmony default export */ var single_month = (single_month_SingleMonth);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date/week-panel.tsx










var week_panel_WeekPanel =
/*#__PURE__*/
function (_Vue) {
  _inherits(WeekPanel, _Vue);

  function WeekPanel() {
    _classCallCheck(this, WeekPanel);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(WeekPanel).apply(this, arguments));
  }

  _createClass(WeekPanel, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      var locale = this.locale;
      var week = locale.week;
      return h("div", {
        "class": "week-panel"
      }, [h("div", {
        "class": "cell cell-grey"
      }, [week[0]]), h("div", {
        "class": "cell"
      }, [week[1]]), h("div", {
        "class": "cell"
      }, [week[2]]), h("div", {
        "class": "cell"
      }, [week[3]]), h("div", {
        "class": "cell"
      }, [week[4]]), h("div", {
        "class": "cell"
      }, [week[5]]), h("div", {
        "class": "cell cell-grey"
      }, [week[6]])]);
    }
  }]);

  return WeekPanel;
}(external_Vue_default.a);

__decorate([Prop({})], week_panel_WeekPanel.prototype, "locale", void 0);

week_panel_WeekPanel = __decorate([vue_class_component_common_default()({
  name: 'WeekPanel'
})], week_panel_WeekPanel);
/* harmony default export */ var week_panel = (week_panel_WeekPanel);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/date-picker.tsx














var date_picker_DatePicker =
/*#__PURE__*/
function (_mixins) {
  _inherits(DatePicker, _mixins);

  function DatePicker() {
    var _this;

    _classCallCheck(this, DatePicker);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePicker).apply(this, arguments));
    _this.transform = '';
    return _this;
  }

  _createClass(DatePicker, [{
    key: "genMonthComponent",
    value: function genMonthComponent(data) {
      var _this2 = this;

      var h = this.$createElement;

      if (!data) {
        return;
      } // @ts-ignore


      return h(single_month, {
        "key": data.title,
        "attrs": {
          "locale": this.locale || {},
          "monthData": data,
          "displayMode": this.displayMode,
          "rowSize": this.rowSize,
          "getDateExtra": this.getDateExtra,
          "callback": function callback(dom) {
            data.componentRef = dom || data.componentRef || undefined;

            data.updateLayout = function () {
              _this2.computeHeight(data, dom);
            };

            data.updateLayout();
          }
        },
        "on": {
          "cellClick": function cellClick(day) {
            _this2.onCellClick(day);
          }
        }
      });
    }
  }, {
    key: "computeHeight",
    value: function computeHeight(data, singleMonth) {
      var _this3 = this;

      if (singleMonth && singleMonth.wrapperDivDOM) {
        // preact, ref时dom有可能无height, offsetTop数据。
        if (!data.height && !singleMonth.wrapperDivDOM.clientHeight) {
          setTimeout(function () {
            return _this3.computeHeight(data, singleMonth);
          }, 500);
          return;
        }

        data.height = singleMonth.wrapperDivDOM.clientHeight || data.height || 0;
        data.y = singleMonth.wrapperDivDOM.offsetTop || data.y || 0;
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var wrapper = this.$refs['wrapper'];

      if (wrapper) {
        this.$emit('layout', wrapper.clientHeight);
        var scrollHandler = this.createOnScroll();

        wrapper.onscroll = function (evt) {
          scrollHandler({
            client: wrapper.clientHeight,
            full: evt.currentTarget.clientHeight,
            top: evt.currentTarget.scrollTop
          });
        };
      }
    }
  }, {
    key: "setTransform",
    value: function setTransform(nodeStyle, value) {
      this.transform = value;
      nodeStyle.transform = value;
      nodeStyle.webkitTransform = value;
    }
  }, {
    key: "setTransition",
    value: function setTransition(nodeStyle, value) {
      nodeStyle.transition = value;
      nodeStyle.webkitTransition = value;
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var h = arguments[0];
      var _this$prefixCls = this.prefixCls,
          prefixCls = _this$prefixCls === void 0 ? '' : _this$prefixCls,
          _this$locale = this.locale,
          locale = _this$locale === void 0 ? {} : _this$locale;
      var style = {
        transform: this.transform
      };
      var wrapperEvents = {
        touchstart: this.touchHandler.onTouchStart,
        touchmove: this.touchHandler.onTouchMove,
        touchend: this.touchHandler.onTouchEnd,
        touchcancel: this.touchHandler.onTouchCancel
      };
      return h("div", {
        "class": "".concat(prefixCls, " date-picker")
      }, [h(week_panel, {
        "attrs": {
          "locale": locale
        }
      }), h("div", helper_default()([{
        "class": "wrapper",
        "style": {
          overflowX: 'hidden',
          overflowY: 'visible'
        },
        "ref": "wrapper"
      }, {
        "on": wrapperEvents
      }]), [h("div", {
        "style": style,
        "ref": "panel"
      }, [this.canLoadPrev() && h("div", {
        "class": "load-tip"
      }, [locale.loadPrevMonth]), h("div", {
        "class": "months"
      }, [this.state.months.map(function (m) {
        var hidden = m.height && _this4.visibleMonth.indexOf(m) < 0;

        if (hidden) {
          return h("div", {
            "key": m.title + '_shallow',
            "style": {
              height: m.height
            }
          });
        }

        return m.component;
      })])])])]);
    }
  }, {
    key: "panel",
    get: function get() {
      return this.$refs['panel'];
    }
  }, {
    key: "touchHandler",
    get: function get() {
      var _this5 = this;

      var initDelta = 0;
      var lastY = 0;
      var delta = initDelta;
      return {
        onTouchStart: function onTouchStart(evt) {
          lastY = evt.touches[0].screenY;
          delta = initDelta;
        },
        onTouchMove: function onTouchMove(evt) {
          var ele = evt.currentTarget;
          var isReachTop = ele.scrollTop === 0;

          if (isReachTop) {
            delta = evt.touches[0].screenY - lastY;

            if (delta > 0) {
              evt.preventDefault();

              if (delta > 80) {
                delta = 80;
              }
            } else {
              delta = 0;
            }

            _this5.setTransform(_this5.panel.style, "translate3d(0,".concat(delta, "px,0)"));
          }
        },
        onTouchEnd: function onTouchEnd() {
          _this5.touchHandler.onFinish();
        },
        onTouchCancel: function onTouchCancel() {
          _this5.touchHandler.onFinish();
        },
        onFinish: function onFinish() {
          if (delta > 40 && _this5.canLoadPrev()) {
            _this5.genMonthData(_this5.state.months[0].firstDate, -1);

            _this5.visibleMonth = _this5.state.months.slice(0, _this5.initialMonths);

            _this5.state.months.forEach(function (m) {
              m.updateLayout && m.updateLayout();
            });

            _this5.$forceUpdate();
          }

          _this5.setTransform(_this5.panel.style, "translate3d(0,0,0)");

          _this5.setTransition(_this5.panel.style, '.3s');

          setTimeout(function () {
            _this5.panel && _this5.setTransition(_this5.panel.style, '');
          }, 300);
        }
      };
    }
  }]);

  return DatePicker;
}(Object(vue_class_component_common["mixins"])(date_picker_base));

__decorate([Prop({
  type: Boolean,
  default: false
})], date_picker_DatePicker.prototype, "displayMode", void 0);

date_picker_DatePicker = __decorate([vue_class_component_common_default()({
  name: 'DatePicker'
})], date_picker_DatePicker);
/* harmony default export */ var date_picker = (date_picker_DatePicker);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __webpack_require__("cadf");

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/parse-int.js
var parse_int = __webpack_require__("e814");
var parse_int_default = /*#__PURE__*/__webpack_require__.n(parse_int);

// CONCATENATED MODULE: ./src/packages/vmc-picker/multi-picker-props.tsx









var multi_picker_props_MultiPickerProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(MultiPickerProps, _Vue);

  function MultiPickerProps() {
    _classCallCheck(this, MultiPickerProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MultiPickerProps).apply(this, arguments));
  }

  return MultiPickerProps;
}(external_Vue_default.a);

__decorate([Prop({
  type: String
})], multi_picker_props_MultiPickerProps.prototype, "prefixCls", void 0);

__decorate([Prop()], multi_picker_props_MultiPickerProps.prototype, "selectedValue", void 0);

multi_picker_props_MultiPickerProps = __decorate([vue_class_component_common_default()({
  name: 'MultiPickerProps'
})], multi_picker_props_MultiPickerProps);

// CONCATENATED MODULE: ./src/packages/utils/vnode.ts







var vnode_camelizeRE = /-(\w)/g;

var vnode_camelize = function camelize(str) {
  return str.replace(vnode_camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
};

var vnode_parseStyleText = function parseStyleText() {
  var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var camel = arguments.length > 1 ? arguments[1] : undefined;
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);

      if (tmp.length > 1) {
        var k = camel ? vnode_camelize(tmp[0].trim()) : tmp[0].trim();
        res[k] = tmp[1].trim();
      }
    }
  });
  return res;
};

function vnode_isEmptyElement(c) {
  return !(c.tag || c.text && c.text.trim() !== '');
}
function vnode_filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return children.filter(function (c) {
    return !vnode_isEmptyElement(c);
  });
}
function isVNode(obj) {
  return obj.context && obj.context['_isVue'];
}
function vnode_children(children, props) {
  return children.map(function (child) {
    return vnode_cloneElement(child, props, false);
  });
}
function vnode_cloneVNode(vnode, deep) {
  var componentOptions = vnode.componentOptions;
  var data = vnode.data;
  var listeners = {};

  if (componentOptions && componentOptions.listeners) {
    listeners = assign_default()({}, componentOptions.listeners);
  }

  var on = {};

  if (data && data.on) {
    on = assign_default()({}, data.on);
  }

  var cloned = new vnode.constructor(vnode.tag, data ? assign_default()({}, data, {
    on: on
  }) : data, vnode.children, vnode.text, vnode.elm, vnode.context, componentOptions ? assign_default()({}, componentOptions, {
    listeners: listeners
  }) : componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.isCloned = true;

  if (deep) {
    if (vnode.children) {
      cloned.children = vnode_cloneVNodes(vnode.children, true);
    }

    if (componentOptions && componentOptions.children) {
      componentOptions.children = vnode_cloneVNodes(componentOptions.children, true);
    }
  }

  return cloned;
}
function vnode_cloneVNodes(vnodes, deep) {
  var len = vnodes.length;
  var res = new Array(len);

  for (var i = 0; i < len; i++) {
    res[i] = vnode_cloneVNode(vnodes[i], deep);
  }

  return res;
}
function setListeners(vnode) {
  var listeners = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (vnode.componentOptions) {
    if (!vnode.componentOptions.listeners) {
      vnode.componentOptions.listeners = {};
    }

    keys_default()(listeners).forEach(function (key) {
      var orgListener = vnode.componentOptions.listeners[key];
      var newListener = listeners[key];

      vnode.componentOptions.listeners[key] = function () {
        if (newListener) {
          newListener.apply(void 0, arguments);
        }

        if (orgListener) {
          orgListener.apply(void 0, arguments);
        }
      };
    });
  } else if (vnode.data) {
    if (!vnode.data.on) {
      vnode.data.on = {};
    }

    keys_default()(listeners).forEach(function (key) {
      var orgListener = vnode.data.on[key];
      var newListener = listeners[key];

      vnode.data.on[key] = function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        if (newListener) {
          newListener.apply(void 0, args);
        }

        if (orgListener) {
          if (typeof orgListener === 'function') {
            orgListener.apply(void 0, args);
          } else if (is_array_default()(orgListener)) {
            orgListener.forEach(function (it) {
              it.apply(void 0, args);
            });
          }
        }
      };
    });
  }
}
function setProps(vnode) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (vnode.componentOptions) {
    if (!vnode.componentOptions.propsData) {
      vnode.componentOptions.propsData = {};
    }

    keys_default()(nodeProps).forEach(function (key) {
      vnode.componentOptions.propsData[key] = nodeProps[key];
    });
  }
}
function vnode_cloneElement(n) {
  var nodeProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var deep = arguments.length > 2 ? arguments[2] : undefined;
  var ele = n;

  if (is_array_default()(n)) {
    ele = vnode_filterEmpty(n)[0];
  }

  if (!ele) {
    return null;
  }

  var node = vnode_cloneVNode(ele, deep);
  var _nodeProps$props = nodeProps.props,
      props = _nodeProps$props === void 0 ? {} : _nodeProps$props,
      key = nodeProps.key,
      _nodeProps$on = nodeProps.on,
      on = _nodeProps$on === void 0 ? {} : _nodeProps$on,
      children = nodeProps.children,
      _nodeProps$directives = nodeProps.directives,
      directives = _nodeProps$directives === void 0 ? [] : _nodeProps$directives;
  var data = node.data || {};
  var cls = {};
  var style = {};
  var _nodeProps$attrs = nodeProps.attrs,
      attrs = _nodeProps$attrs === void 0 ? {} : _nodeProps$attrs,
      ref = nodeProps.ref,
      _nodeProps$domProps = nodeProps.domProps,
      domProps = _nodeProps$domProps === void 0 ? {} : _nodeProps$domProps,
      _nodeProps$style = nodeProps.style,
      tempStyle = _nodeProps$style === void 0 ? {} : _nodeProps$style,
      _nodeProps$class = nodeProps.class,
      tempCls = _nodeProps$class === void 0 ? {} : _nodeProps$class,
      _nodeProps$scopedSlot = nodeProps.scopedSlots,
      scopedSlots = _nodeProps$scopedSlot === void 0 ? {} : _nodeProps$scopedSlot;

  if (typeof data.style === 'string') {
    style = vnode_parseStyleText(data.style);
  } else {
    style = assign_default()({}, data.style, style);
  }

  if (typeof tempStyle === 'string') {
    style = assign_default()({}, style, vnode_parseStyleText(tempStyle));
  } else {
    style = assign_default()({}, style, tempStyle);
  }

  if (typeof data.class === 'string' && data.class.trim() !== '') {
    data.class.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = assign_default()({}, data.class, cls);
  }

  if (typeof tempCls === 'string' && tempCls.trim() !== '') {
    tempCls.split(' ').forEach(function (c) {
      cls[c.trim()] = true;
    });
  } else {
    cls = assign_default()({}, cls, tempCls);
  }

  node.data = assign_default()({}, data, {
    style: style,
    attrs: assign_default()({}, data.attrs, attrs),
    class: cls,
    domProps: assign_default()({}, data.domProps, domProps),
    scopedSlots: assign_default()({}, data.scopedSlots, scopedSlots),
    directives: [].concat(_toConsumableArray(data.directives || []), _toConsumableArray(directives))
  });

  if (node.componentOptions) {
    node.componentOptions.propsData = node.componentOptions.propsData || {};
    node.componentOptions.listeners = node.componentOptions.listeners || {};
    node.componentOptions.propsData = assign_default()({}, node.componentOptions.propsData, props);
    node.componentOptions.listeners = assign_default()({}, node.componentOptions.listeners, on);

    if (children) {
      node.componentOptions.children = children;
    }
  } else {
    node.data.on = assign_default()({}, node.data.on || {}, on);
  }

  if (key !== undefined) {
    node.key = key;
    node.data.key = key;
  }

  if (typeof ref === 'string') {
    node.data.ref = ref;
  }

  return node;
}
function getNodeText(node) {
  if (node) {
    if (node.text) {
      return node.text;
    } else if (node.componentOptions && node.componentOptions.children) {
      return node.componentOptions.children.map(function (it) {
        return getNodeText(it);
      }).join('');
    }
  }

  return undefined;
}
// CONCATENATED MODULE: ./src/packages/vmc-picker/multi-picker-mixin.tsx











function multi_picker_mixin_MultiPickerMixin(ComposedComponent) {
  var MultiPickerMixin =
  /*#__PURE__*/
  function (_Vue) {
    _inherits(MultiPickerMixin, _Vue);

    function MultiPickerMixin() {
      _classCallCheck(this, MultiPickerMixin);

      return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MultiPickerMixin).apply(this, arguments));
    }

    _createClass(MultiPickerMixin, [{
      key: "getValue",
      value: function getValue() {
        var selectedValue = this.selectedValue;

        if (selectedValue && selectedValue.length) {
          return selectedValue;
        } else {
          if (!this.$slots.default) {
            return [];
          }

          return this.$slots.default.map(function (c) {
            var cc = c.$children;
            return cc && cc[0] && cc[0].props.value;
          });
        }
      }
    }, {
      key: "onChange",
      value: function onChange(i, v, cb) {
        var value = this.getValue().concat();
        value[i] = v;

        if (cb) {
          cb(value, i);
        }
      }
    }, {
      key: "onValueChange",
      value: function onValueChange(i, v) {
        var _this = this;

        this.onChange(i, v, function () {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this.$emit.apply(_this, ['input'].concat(args));
        });
        this.$emit('value-change', i, v);
      }
    }, {
      key: "onScrollChange",
      value: function onScrollChange(i, v) {
        var _this2 = this;

        this.onChange(i, v, function () {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }

          _this2.$emit.apply(_this2, ['scroll-change'].concat(args));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var h = arguments[0];
        return h(ComposedComponent, helper_default()([{}, {
          "attrs": assign_default()({}, this.$props, {
            getValue: this.getValue
          })
        }, {}, {
          "on": {
            input: this.onValueChange,
            scrollChange: this.onScrollChange
          }
        }]), [this.$slots.default]);
      }
    }]);

    return MultiPickerMixin;
  }(external_Vue_default.a);

  __decorate([Prop()], MultiPickerMixin.prototype, "prefixCls", void 0);

  __decorate([Prop()], MultiPickerMixin.prototype, "selectedValue", void 0);

  MultiPickerMixin = __decorate([vue_class_component_common_default()({
    name: 'MultiPickerMixin'
  })], MultiPickerMixin);
  return MultiPickerMixin;
}
// CONCATENATED MODULE: ./src/packages/vmc-picker/multi-picker.tsx













var multi_picker_MultiPicker =
/*#__PURE__*/
function (_MultiPickerProps) {
  _inherits(MultiPicker, _MultiPickerProps);

  function MultiPicker() {
    _classCallCheck(this, MultiPicker);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MultiPicker).apply(this, arguments));
  }

  _createClass(MultiPicker, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var prefixCls = this.$props.prefixCls;
      var selectedValue = this.getValue();
      var colElements = this.$slots.default.map(function (col, i) {
        setProps(col, {
          selectedValue: selectedValue[i]
        });
        setListeners(col, {
          input: function input() {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            _this.$emit.apply(_this, ['input', i].concat(args));
          },
          scrollChange: function scrollChange() {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            _this.$emit.apply(_this, ['scroll-change', i].concat(args));
          }
        });
        return col;
      });
      return h("div", {
        "class": classnames_default()(prefixCls)
      }, [colElements]);
    }
  }]);

  return MultiPicker;
}(multi_picker_props_MultiPickerProps);

__decorate([Prop()], multi_picker_MultiPicker.prototype, "getValue", void 0);

multi_picker_MultiPicker = __decorate([vue_class_component_common_default()({
  name: 'MultiPicker'
})], multi_picker_MultiPicker);
/* harmony default export */ var multi_picker = (multi_picker_mixin_MultiPickerMixin(multi_picker_MultiPicker));
// CONCATENATED MODULE: ./src/packages/vmc-picker/picker-mixin.tsx












var picker_mixin_PickerItem =
/*#__PURE__*/
function (_Vue) {
  _inherits(PickerItem, _Vue);

  function PickerItem() {
    _classCallCheck(this, PickerItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PickerItem).apply(this, arguments));
  }

  return PickerItem;
}(external_Vue_default.a);

__decorate([Prop()], picker_mixin_PickerItem.prototype, "value", void 0);

__decorate([Prop()], picker_mixin_PickerItem.prototype, "label", void 0);

picker_mixin_PickerItem = __decorate([vue_class_component_common_default()({
  name: 'PickerItem'
})], picker_mixin_PickerItem);
function picker_mixin_PickerMixin(ComposedComponent) {
  var PickerMixin =
  /*#__PURE__*/
  function (_Vue2) {
    _inherits(PickerMixin, _Vue2);

    function PickerMixin() {
      _classCallCheck(this, PickerMixin);

      return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PickerMixin).apply(this, arguments));
    }

    _createClass(PickerMixin, [{
      key: "select",
      value: function select(value, itemHeight, scrollTo) {
        var children = this.$slots.default;

        if (children) {
          for (var i = 0, len = children.length; i < len; i++) {
            if (children[i].componentOptions.propsData.value === value) {
              this.selectByIndex(i, itemHeight, scrollTo);
              return;
            }
          }

          this.selectByIndex(0, itemHeight, scrollTo);
        }
      }
    }, {
      key: "selectByIndex",
      value: function selectByIndex(index, itemHeight, zscrollTo) {
        if (index < 0 || index >= this.$slots.default.length || !itemHeight) {
          return;
        }

        zscrollTo(index * itemHeight);
      }
    }, {
      key: "computeChildIndex",
      value: function computeChildIndex(top, itemHeight, childrenLength) {
        var index = Math.round(top / itemHeight);
        return Math.min(index, childrenLength - 1);
      }
    }, {
      key: "doScrollingComplete",
      value: function doScrollingComplete(top, itemHeight, fireValueChange) {
        var children = this.$slots.default;
        var index = this.computeChildIndex(top, itemHeight, children.length);
        var child = children[index];

        if (child) {
          fireValueChange(child.componentOptions.propsData.value);
        } else if (console.warn) {
          console.warn('child not found', children, index);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var h = arguments[0];
        return h(ComposedComponent, helper_default()([{}, {
          "attrs": assign_default()({}, this.$props, {
            doScrollingComplete: this.doScrollingComplete,
            computeChildIndex: this.computeChildIndex,
            select: this.select
          })
        }, {}, {
          "on": this.$listeners
        }]), [this.$slots.default]);
      }
    }]);

    return PickerMixin;
  }(external_Vue_default.a);

  PickerMixin.Item = picker_mixin_PickerItem;

  __decorate([Prop({
    type: Boolean,
    default: false
  })], PickerMixin.prototype, "disabled", void 0);

  __decorate([Prop()], PickerMixin.prototype, "selectedValue", void 0);

  __decorate([Prop()], PickerMixin.prototype, "itemStyle", void 0);

  __decorate([Prop()], PickerMixin.prototype, "prefixCls", void 0);

  __decorate([Prop()], PickerMixin.prototype, "indicatorStyle", void 0);

  __decorate([Prop()], PickerMixin.prototype, "indicatorClassName", void 0);

  __decorate([Prop()], PickerMixin.prototype, "defaultSelectedValue", void 0);

  __decorate([Prop()], PickerMixin.prototype, "noAnimate", void 0);

  PickerMixin = __decorate([vue_class_component_common_default()({
    name: 'PickerMixin'
  })], PickerMixin);
  return PickerMixin;
}
// CONCATENATED MODULE: ./src/packages/vmc-picker/picker-types.tsx









var picker_types_PickerProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(PickerProps, _Vue);

  function PickerProps() {
    _classCallCheck(this, PickerProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PickerProps).apply(this, arguments));
  }

  return PickerProps;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean,
  default: false
})], picker_types_PickerProps.prototype, "disabled", void 0);

__decorate([Prop()], picker_types_PickerProps.prototype, "selectedValue", void 0);

__decorate([Prop()], picker_types_PickerProps.prototype, "itemStyle", void 0);

__decorate([Prop()], picker_types_PickerProps.prototype, "prefixCls", void 0);

__decorate([Prop()], picker_types_PickerProps.prototype, "indicatorStyle", void 0);

__decorate([Prop()], picker_types_PickerProps.prototype, "indicatorClassName", void 0);

__decorate([Prop()], picker_types_PickerProps.prototype, "defaultSelectedValue", void 0);

picker_types_PickerProps = __decorate([vue_class_component_common_default()({
  name: 'PickerProps'
})], picker_types_PickerProps);

// CONCATENATED MODULE: ./src/packages/vmc-picker/picker.tsx

















var picker_Picker =
/*#__PURE__*/
function (_mixins) {
  _inherits(Picker, _mixins);

  function Picker() {
    var _this;

    _classCallCheck(this, Picker);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Picker).apply(this, arguments));
    _this.state = {};
    return _this;
  }

  _createClass(Picker, [{
    key: "created",
    value: function created() {
      var selectedValueState;
      var selectedValue = this.selectedValue,
          defaultSelectedValue = this.defaultSelectedValue;

      if (selectedValue !== undefined) {
        selectedValueState = selectedValue;
      } else if (defaultSelectedValue !== undefined) {
        selectedValueState = defaultSelectedValue;
      } else {
        var children = this.$slots.default;
        selectedValueState = children && children[0] && children[0].value;
      }

      this.state.selectedValue = selectedValueState;
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      var contentRef = this.contentRef,
          indicatorRef = this.indicatorRef,
          maskRef = this.maskRef,
          rootRef = this.rootRef;
      var rootHeight = rootRef.clientHeight; // https://github.com/react-component/m-picker/issues/18

      var itemHeight = this.itemHeight = indicatorRef.clientHeight;
      var num = Math.floor(rootHeight / itemHeight);

      if (num % 2 === 0) {
        num--;
      }

      num--;
      num /= 2;
      contentRef.style.padding = "".concat(itemHeight * num, "px 0");
      indicatorRef.style.top = "".concat(itemHeight * num, "px");
      maskRef.style.backgroundSize = "100% ".concat(itemHeight * num, "px");
      this.scrollHanders.setDisabled(this.disabled);
      this.select(this.state.selectedValue, this.itemHeight, this.scrollTo.bind(this));
      var passiveSupported = this.passiveSupported();
      var willPreventDefault = passiveSupported ? {
        passive: false
      } : false;
      var willNotPreventDefault = passiveSupported ? {
        passive: true
      } : false;

      keys_default()(this.scrollHanders).forEach(function (key) {
        if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {
          var pd = key.indexOf('move') >= 0 ? willPreventDefault : willNotPreventDefault;
          rootRef.addEventListener(key, _this2.scrollHanders[key], pd);
        }
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this3 = this;

      keys_default()(this.scrollHanders).forEach(function (key) {
        if (key.indexOf('touch') === 0 || key.indexOf('mouse') === 0) {
          _this3.rootRef.removeEventListener(key, _this3.scrollHanders[key]);
        }
      });
    }
  }, {
    key: "passiveSupported",
    value: function passiveSupported() {
      var passiveSupported = false;

      try {
        var options = define_property_default()({}, 'passive', {
          get: function get() {
            passiveSupported = true;
          }
        });

        window.addEventListener('test', null, options);
      } catch (err) {}

      return passiveSupported;
    }
  }, {
    key: "selectedValueChanged",
    value: function selectedValueChanged(value) {
      if (this.state.selectedValue !== value) {
        this.state.selectedValue = value;
        this.select(this.state.selectedValue, this.itemHeight, this.noAnimate ? this.scrollToWithoutAnimation.bind(this) : this.scrollTo.bind(this));
      }
    }
  }, {
    key: "updated",
    value: function updated() {
      this.scrollHanders.setDisabled(this.disabled);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.select(this.state.selectedValue, this.itemHeight, this.scrollToWithoutAnimation.bind(this));
    }
  }, {
    key: "scrollTo",
    value: function scrollTo(top) {
      this.scrollHanders.scrollTo(0, top);
    }
  }, {
    key: "scrollToWithoutAnimation",
    value: function scrollToWithoutAnimation(top) {
      this.scrollHanders.scrollTo(0, top, 0);
    }
  }, {
    key: "fireValueChange",
    value: function fireValueChange(selectedValue) {
      if (selectedValue !== this.state.selectedValue) {
        if (!('selectedValue' in this)) {
          this.selectedValue = selectedValue;
        }

        this.$emit('update:value', selectedValue);
        this.$emit('input', selectedValue);
      }
    }
  }, {
    key: "onScrollChange",
    value: function onScrollChange() {
      var top = this.scrollHanders.getValue();

      if (top >= 0) {
        var children = this.$slots.default;
        var index = this.computeChildIndex(top, this.itemHeight, children.length);

        if (this.scrollValue !== index) {
          this.scrollValue = index;
          var child = children[index];
          this.$emit('scroll-change', child['value']);
        }
      }
    }
  }, {
    key: "scrollingComplete",
    value: function scrollingComplete() {
      var top = this.scrollHanders.getValue();

      if (top >= 0) {
        this.doScrollingComplete(top, this.itemHeight, this.fireValueChange.bind(this));
      }
    }
  }, {
    key: "getValue",
    value: function getValue() {
      if ('selectedValue' in this) {
        return this.selectedValue;
      }

      var children = this.$slots.default;
      return children && children[0] && children[0].props.value;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var _this$$props = this.$props,
          prefixCls = _this$$props.prefixCls,
          itemStyle = _this$$props.itemStyle,
          indicatorStyle = _this$$props.indicatorStyle,
          _this$$props$indicato = _this$$props.indicatorClassName,
          indicatorClassName = _this$$props$indicato === void 0 ? '' : _this$$props$indicato;
      var selectedValue = this.state.selectedValue;
      var itemClassName = "".concat(prefixCls, "-item");
      var selectedItemClassName = "".concat(itemClassName, " ").concat(prefixCls, "-item-selected");

      var map = function map(item) {
        var className = item.data && item.data.staticClass || '';
        var style = item.data && item.data.staticStyle;
        var value = item.componentOptions.propsData && item.componentOptions.propsData.value;
        var label = item.componentOptions.propsData && item.componentOptions.propsData.label || item.componentOptions.children;
        return h("div", {
          "style": assign_default()({}, itemStyle, style),
          "class": "".concat(selectedValue === value ? selectedItemClassName : itemClassName, " ").concat(className),
          "key": value
        }, [label]);
      };

      var items = this.$slots.default ? this.$slots.default.map(map) : [];

      var pickerCls = _defineProperty({}, prefixCls, true);

      return h("div", {
        "class": classnames_default()(pickerCls),
        "ref": "root"
      }, [h("div", {
        "class": "".concat(prefixCls, "-mask"),
        "ref": "mask"
      }), h("div", {
        "class": "".concat(prefixCls, "-indicator ").concat(indicatorClassName),
        "ref": "indicator",
        "style": indicatorStyle
      }), h("div", {
        "class": "".concat(prefixCls, "-content"),
        "ref": "content"
      }, [items])]);
    }
  }, {
    key: "rootRef",
    get: function get() {
      return this.$refs['root'];
    }
  }, {
    key: "maskRef",
    get: function get() {
      return this.$refs['mask'];
    }
  }, {
    key: "contentRef",
    get: function get() {
      return this.$refs['content'];
    }
  }, {
    key: "indicatorRef",
    get: function get() {
      return this.$refs['indicator'];
    }
  }, {
    key: "scrollHanders",
    get: function get() {
      var _this4 = this;

      var scrollY = -1;
      var lastY = 0;
      var startY = 0;
      var scrollDisabled = false;
      var isMoving = false;

      var setTransform = function setTransform(nodeStyle, value) {
        nodeStyle.transform = value;
        nodeStyle.webkitTransform = value;
      };

      var setTransition = function setTransition(nodeStyle, value) {
        nodeStyle.transition = value;
        nodeStyle.webkitTransition = value;
      };

      var scrollTo = function scrollTo(_x, y) {
        var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : .3;

        if (scrollY !== y) {
          scrollY = y;

          if (time && !_this4.noAnimate) {
            setTransition(_this4.contentRef.style, "cubic-bezier(0,0,0.2,1.15) ".concat(time, "s"));
          }

          setTransform(_this4.contentRef.style, "translate3d(0,".concat(-y, "px,0)"));
          setTimeout(function () {
            _this4.scrollingComplete();

            if (_this4.contentRef) {
              setTransition(_this4.contentRef.style, '');
            }
          }, +time * 1000);
        }
      };

      var Velocity = function () {
        var minInterval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;
        var maxInterval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
        var _time = 0;
        var _y = 0;
        var _velocity = 0;
        var recorder = {
          record: function record(y) {
            var now = +new Date();
            _velocity = (y - _y) / (now - _time);

            if (now - _time >= minInterval) {
              _velocity = now - _time <= maxInterval ? _velocity : 0;
              _y = y;
              _time = now;
            }
          },
          getVelocity: function getVelocity(y) {
            if (y !== _y) {
              recorder.record(y);
            }

            return _velocity;
          }
        };
        return recorder;
      }();

      var onFinish = function onFinish() {
        isMoving = false;
        var targetY = scrollY;
        var height = (_this4.$slots.default.length - 1) * _this4.itemHeight;
        var time = .3;
        var velocity = Velocity.getVelocity(targetY) * 4;

        if (velocity) {
          targetY = velocity * 40 + targetY;
          time = Math.abs(velocity) * .1;
        }

        if (targetY % _this4.itemHeight !== 0) {
          targetY = Math.round(targetY / _this4.itemHeight) * _this4.itemHeight;
        }

        if (targetY < 0) {
          targetY = 0;
        } else if (targetY > height) {
          targetY = height;
        }

        scrollTo(0, targetY, time < .3 ? .3 : time);

        _this4.onScrollChange();
      };

      var onStart = function onStart(y) {
        if (scrollDisabled) {
          return;
        }

        isMoving = true;
        startY = y;
        lastY = scrollY;
      };

      var onMove = function onMove(y) {
        if (scrollDisabled || !isMoving) {
          return;
        }

        scrollY = lastY - y + startY;
        Velocity.record(scrollY);

        _this4.onScrollChange();

        setTransform(_this4.contentRef.style, "translate3d(0,".concat(-scrollY, "px,0)"));
      };

      return {
        touchstart: function touchstart(evt) {
          return onStart(evt.touches[0].pageY);
        },
        mousedown: function mousedown(evt) {
          return onStart(evt.pageY);
        },
        touchmove: function touchmove(evt) {
          evt.preventDefault();
          onMove(evt.touches[0].pageY);
        },
        mousemove: function mousemove(evt) {
          evt.preventDefault();
          onMove(evt.pageY);
        },
        touchend: function touchend() {
          return onFinish();
        },
        touchcancel: function touchcancel() {
          return onFinish();
        },
        mouseup: function mouseup() {
          return onFinish();
        },
        getValue: function getValue() {
          return scrollY;
        },
        scrollTo: scrollTo,
        setDisabled: function setDisabled() {
          var disabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
          scrollDisabled = disabled;
        }
      };
    }
  }]);

  return Picker;
}(Object(vue_class_component_common["mixins"])(picker_types_PickerProps));

__decorate([Prop()], picker_Picker.prototype, "computeChildIndex", void 0);

__decorate([Prop()], picker_Picker.prototype, "select", void 0);

__decorate([Prop()], picker_Picker.prototype, "doScrollingComplete", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], picker_Picker.prototype, "noAnimate", void 0);

__decorate([Watch('selectedValue')], picker_Picker.prototype, "selectedValueChanged", null);

picker_Picker = __decorate([vue_class_component_common_default()({
  name: 'Picker'
})], picker_Picker);
/* harmony default export */ var vmc_picker_picker = (picker_mixin_PickerMixin(picker_Picker));
// EXTERNAL MODULE: ./src/packages/vmc-date-picker/locale/zh_CN.tsx
var locale_zh_CN = __webpack_require__("ffc9");

// CONCATENATED MODULE: ./src/packages/vmc-date-picker/date-picker-props.tsx










var DATE = 'date';

var vmc_date_picker_date_picker_props_DatePickerProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(DatePickerProps, _Vue);

  function DatePickerProps() {
    _classCallCheck(this, DatePickerProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePickerProps).apply(this, arguments));
  }

  return DatePickerProps;
}(external_Vue_default.a);

__decorate([Prop({})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "date", void 0);

__decorate([Prop({
  default: function _default() {
    return new Date();
  }
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "defaultDate", void 0);

__decorate([Prop({})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "minDate", void 0);

__decorate([Prop({})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "maxDate", void 0);

__decorate([Prop({
  type: Number
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "minHour", void 0);

__decorate([Prop({
  type: Number
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "maxHour", void 0);

__decorate([Prop({
  type: Number
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "minMinute", void 0);

__decorate([Prop({
  type: Number
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "maxMinute", void 0);

__decorate([Prop({
  type: String,
  default: DATE
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "mode", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "disabled", void 0);

__decorate([Prop({
  default: locale_zh_CN["a" /* default */]
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "locale", void 0);

__decorate([Prop({
  type: Number,
  default: 1
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "minuteStep", void 0);

__decorate([Prop({})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "formatMonth", void 0);

__decorate([Prop({})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "formatDay", void 0);

__decorate([Prop({})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "itemStyle", void 0);

__decorate([Prop({
  type: String,
  default: 'rmc-date-picker'
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "prefixCls", void 0);

__decorate([Prop({})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "rootNativeProps", void 0);

__decorate([Prop({
  type: String,
  default: 'rmc-picker'
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "pickerPrefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_date_picker_date_picker_props_DatePickerProps.prototype, "use12Hours", void 0);

vmc_date_picker_date_picker_props_DatePickerProps = __decorate([vue_class_component_common_default()({
  name: 'DatePickerProps'
})], vmc_date_picker_date_picker_props_DatePickerProps);
/* harmony default export */ var vmc_date_picker_date_picker_props = (vmc_date_picker_date_picker_props_DatePickerProps);
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/date-picker.tsx

















function getDaysInMonth(date) {
  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
}

function pad(n) {
  return n < 10 ? "0".concat(n) : n;
}

function cloneDate(date) {
  return new Date(+date);
}

function setMonth(date, month) {
  date.setDate(Math.min(date.getDate(), getDaysInMonth(new Date(date.getFullYear(), month))));
  date.setMonth(month);
}

var DATETIME = 'datetime';
var date_picker_DATE = 'date';
var TIME = 'time';
var MONTH = 'month';
var YEAR = 'year';
var ONE_DAY = 24 * 60 * 60 * 1000;

var vmc_date_picker_date_picker_DatePicker =
/*#__PURE__*/
function (_DatePickerProps) {
  _inherits(DatePicker, _DatePickerProps);

  function DatePicker() {
    var _this;

    _classCallCheck(this, DatePicker);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePicker).apply(this, arguments));
    _this.state = {
      date: _this.date || _this.defaultDate,
      values: []
    };
    return _this;
  }

  _createClass(DatePicker, [{
    key: "dateChagned",
    value: function dateChagned() {
      var _this$getValueCols = this.getValueCols(),
          value = _this$getValueCols.value;

      this.state.values = value;
    }
  }, {
    key: "created",
    value: function created() {
      if (this.store) {
        this.store.onOk = this.onOk;
        this.store.onDismiss = this.onDismiss;
      }
    }
  }, {
    key: "beforeUpdate",
    value: function beforeUpdate() {
      if (this.date !== undefined) {
        this.state.date = this.date || this.defaultDate;
      }
    }
  }, {
    key: "getNewDate",
    value: function getNewDate(values, index) {
      var value = parse_int_default()(values[index], 10);

      var props = this;
      var mode = props.mode;
      var newValue = cloneDate(this.getDate());

      if (mode === DATETIME || mode === date_picker_DATE || mode === YEAR || mode === MONTH) {
        switch (index) {
          case 0:
            newValue.setFullYear(value);
            break;

          case 1:
            // Note: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth
            // e.g. from 2017-03-31 to 2017-02-28
            setMonth(newValue, value);
            break;

          case 2:
            newValue.setDate(value);
            break;

          case 3:
            this.setHours(newValue, value);
            break;

          case 4:
            newValue.setMinutes(value);
            break;

          case 5:
            this.setAmPm(newValue, value);
            break;

          default:
            break;
        }
      } else if (mode === TIME) {
        switch (index) {
          case 0:
            this.setHours(newValue, value);
            break;

          case 1:
            newValue.setMinutes(value);
            break;

          case 2:
            this.setAmPm(newValue, value);
            break;

          default:
            break;
        }
      }

      return this.clipDate(newValue);
    }
  }, {
    key: "onOk",
    value: function onOk() {
      var newValue = cloneDate(this.getDate());
      newValue.setSeconds(0);
      var values = this.state.values;

      switch (this.mode) {
        case 'date':
          newValue.setFullYear(parse_int_default()(values[0]));
          setMonth(newValue, values[1]);
          newValue.setDate(values[2]);
          this.setHours(newValue, 0);
          newValue.setMinutes(0);
          break;

        case 'year':
          newValue.setFullYear(parse_int_default()(values[0]));
          break;

        case 'month':
          newValue.setFullYear(parse_int_default()(values[0]));
          setMonth(newValue, values[1]);
          break;

        case 'time':
          this.setHours(newValue, values[0]);
          newValue.setMinutes(values[1]);

          if (this.use12Hours) {
            this.setAmPm(newValue, values[2]);
          }

          break;

        case 'datetime':
          newValue.setFullYear(parse_int_default()(values[0]));
          setMonth(newValue, values[1]);
          newValue.setDate(values[2]);
          this.setHours(newValue, values[3]);
          newValue.setMinutes(values[4]);

          if (this.use12Hours) {
            this.setAmPm(newValue, values[5]);
          }

          break;
      }

      this.$emit('input', newValue);
    }
  }, {
    key: "onDismiss",
    value: function onDismiss() {
      var _this$getValueCols2 = this.getValueCols(),
          value = _this$getValueCols2.value;

      this.state.values = value;
      this.$emit('dismiss', value);
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(values, index) {
      this.state.values = values;
      this.$emit('change', values, index);
    }
  }, {
    key: "onScrollChange",
    value: function onScrollChange(values, index) {
      var newValue = this.getNewDate(values, index);
      this.$emit('scroll-change', newValue, values, index);
      this.$emit('scrollChange', newValue, values, index);
    }
  }, {
    key: "setHours",
    value: function setHours(date, hour) {
      if (this.use12Hours) {
        var dh = date.getHours();
        var nhour;
        nhour = dh >= 12 ? hour + 12 : hour;
        nhour = nhour >= 24 ? 0 : nhour; // Make sure no more than one day

        date.setHours(nhour);
      } else {
        date.setHours(hour);
      }
    }
  }, {
    key: "setAmPm",
    value: function setAmPm(date, index) {
      if (index === 0) {
        date.setTime(+date - ONE_DAY / 2);
      } else {
        date.setTime(+date + ONE_DAY / 2);
      }
    }
  }, {
    key: "getDefaultMinDate",
    value: function getDefaultMinDate() {
      if (!this.defaultMinDate) {
        this.defaultMinDate = new Date(2000, 1, 1, 0, 0, 0);
      }

      return this.defaultMinDate;
    }
  }, {
    key: "getDefaultMaxDate",
    value: function getDefaultMaxDate() {
      if (!this.defaultMaxDate) {
        this.defaultMaxDate = new Date(2030, 1, 1, 23, 59, 59);
      }

      return this.defaultMaxDate;
    }
  }, {
    key: "getDate",
    value: function getDate() {
      return this.clipDate(this.state.date || this.getDefaultMinDate());
    }
  }, {
    key: "getValue",
    value: function getValue() {
      return this.getDate();
    }
  }, {
    key: "getMinYear",
    value: function getMinYear() {
      return this.getMinDate().getFullYear();
    }
  }, {
    key: "getMaxYear",
    value: function getMaxYear() {
      return this.getMaxDate().getFullYear();
    }
  }, {
    key: "getMinMonth",
    value: function getMinMonth() {
      return this.getMinDate().getMonth();
    }
  }, {
    key: "getMaxMonth",
    value: function getMaxMonth() {
      return this.getMaxDate().getMonth();
    }
  }, {
    key: "getMinDay",
    value: function getMinDay() {
      return this.getMinDate().getDate();
    }
  }, {
    key: "getMaxDay",
    value: function getMaxDay() {
      return this.getMaxDate().getDate();
    }
  }, {
    key: "getMinHour",
    value: function getMinHour() {
      return this.getMinDate().getHours();
    }
  }, {
    key: "getMaxHour",
    value: function getMaxHour() {
      return this.getMaxDate().getHours();
    }
  }, {
    key: "getMinMinute",
    value: function getMinMinute() {
      return this.getMinDate().getMinutes();
    }
  }, {
    key: "getMaxMinute",
    value: function getMaxMinute() {
      return this.getMaxDate().getMinutes();
    }
  }, {
    key: "getMinDate",
    value: function getMinDate() {
      return this.minDate || this.getDefaultMinDate();
    }
  }, {
    key: "getMaxDate",
    value: function getMaxDate() {
      return this.maxDate || this.getDefaultMaxDate();
    }
  }, {
    key: "getDateData",
    value: function getDateData() {
      var locale = this.locale,
          formatMonth = this.formatMonth,
          formatDay = this.formatDay,
          mode = this.mode;
      var date = this.getDate();
      var selYear = date.getFullYear();
      var selMonth = date.getMonth();
      var minDateYear = this.getMinYear();
      var maxDateYear = this.getMaxYear();
      var minDateMonth = this.getMinMonth();
      var maxDateMonth = this.getMaxMonth();
      var minDateDay = this.getMinDay();
      var maxDateDay = this.getMaxDay();
      var years = [];

      for (var i = minDateYear; i <= maxDateYear; i++) {
        years.push({
          value: i,
          label: i + locale.year
        });
      }

      var yearCol = {
        key: 'year',
        props: {
          children: years
        }
      };

      if (mode === YEAR) {
        return [yearCol];
      }

      var months = [];
      var minMonth = 0;
      var maxMonth = 11;

      if (minDateYear === selYear) {
        minMonth = minDateMonth;
      }

      if (maxDateYear === selYear) {
        maxMonth = maxDateMonth;
      }

      for (var _i = minMonth; _i <= maxMonth; _i++) {
        var label = formatMonth ? formatMonth(_i, date) : _i + 1 + locale.month;
        months.push({
          value: _i,
          label: label
        });
      }

      var monthCol = {
        key: 'month',
        props: {
          children: months
        }
      };

      if (mode === MONTH) {
        return [yearCol, monthCol];
      }

      var days = [];
      var minDay = 1;
      var maxDay = getDaysInMonth(date);

      if (minDateYear === selYear && minDateMonth === selMonth) {
        minDay = minDateDay;
      }

      if (maxDateYear === selYear && maxDateMonth === selMonth) {
        maxDay = maxDateDay;
      }

      for (var _i2 = minDay; _i2 <= maxDay; _i2++) {
        var _label = formatDay ? formatDay(_i2, date) : _i2 + locale.day;

        days.push({
          value: _i2,
          label: _label
        });
      }

      return [yearCol, monthCol, {
        key: 'day',
        props: {
          children: days
        }
      }];
    }
  }, {
    key: "getDisplayHour",
    value: function getDisplayHour(rawHour) {
      // 12 hour am (midnight 00:00) -> 12 hour pm (noon 12:00) -> 12 hour am (midnight 00:00)
      if (this.use12Hours) {
        if (rawHour === 0) {
          return 12;
        }

        if (rawHour > 12) {
          return rawHour - 12;
        }
      }

      return rawHour;
    }
  }, {
    key: "getTimeData",
    value: function getTimeData(date) {
      var _this$minHour = this.minHour,
          minHour = _this$minHour === void 0 ? 0 : _this$minHour,
          _this$maxHour = this.maxHour,
          maxHour = _this$maxHour === void 0 ? 23 : _this$maxHour,
          _this$minMinute = this.minMinute,
          minMinute = _this$minMinute === void 0 ? 0 : _this$minMinute,
          _this$maxMinute = this.maxMinute,
          maxMinute = _this$maxMinute === void 0 ? 59 : _this$maxMinute;
      var mode = this.mode,
          locale = this.locale,
          minuteStep = this.minuteStep,
          use12Hours = this.use12Hours;
      var minDateMinute = this.getMinMinute();
      var maxDateMinute = this.getMaxMinute();
      var minDateHour = this.getMinHour();
      var maxDateHour = this.getMaxHour();
      var hour = date.getHours();

      if (mode === DATETIME) {
        var year = date.getFullYear();
        var month = date.getMonth();
        var day = date.getDate();
        var minDateYear = this.getMinYear();
        var maxDateYear = this.getMaxYear();
        var minDateMonth = this.getMinMonth();
        var maxDateMonth = this.getMaxMonth();
        var minDateDay = this.getMinDay();
        var maxDateDay = this.getMaxDay();

        if (minDateYear === year && minDateMonth === month && minDateDay === day) {
          minHour = minDateHour;

          if (minDateHour === hour) {
            minMinute = minDateMinute;
          }
        }

        if (maxDateYear === year && maxDateMonth === month && maxDateDay === day) {
          maxHour = maxDateHour;

          if (maxDateHour === hour) {
            maxMinute = maxDateMinute;
          }
        }
      } else {
        minHour = minDateHour;

        if (minDateHour === hour) {
          minMinute = minDateMinute;
        }

        maxHour = maxDateHour;

        if (maxDateHour === hour) {
          maxMinute = maxDateMinute;
        }
      }

      var hours = [];

      if (minHour === 0 && maxHour === 0 || minHour !== 0 && maxHour !== 0) {
        minHour = this.getDisplayHour(minHour);
      } else if (minHour === 0 && use12Hours) {
        minHour = 1;
        hours.push({
          value: '0',
          label: locale.hour ? '12' + locale.hour : '12'
        });
      }

      maxHour = this.getDisplayHour(maxHour);

      for (var i = minHour; i <= maxHour; i++) {
        hours.push({
          value: i,
          label: locale.hour ? i + locale.hour : pad(i)
        });
      }

      var minutes = [];
      var selMinute = date.getMinutes();

      for (var _i3 = minMinute; _i3 <= maxMinute; _i3 += minuteStep) {
        minutes.push({
          value: _i3,
          label: locale.minute ? _i3 + locale.minute : pad(_i3)
        });

        if (selMinute > _i3 && selMinute < _i3 + minuteStep) {
          minutes.push({
            value: selMinute,
            label: locale.minute ? selMinute + locale.minute : pad(selMinute)
          });
        }
      }

      var cols = [{
        key: 'hours',
        props: {
          children: hours
        }
      }, {
        key: 'minutes',
        props: {
          children: minutes
        }
      }].concat(use12Hours ? [{
        key: 'ampm',
        props: {
          children: [{
            value: 0,
            label: locale.am
          }, {
            value: 1,
            label: locale.pm
          }]
        }
      }] : []);
      return {
        cols: cols,
        selMinute: selMinute
      };
    }
  }, {
    key: "clipDate",
    value: function clipDate(date) {
      var mode = this.mode;
      var minDate = this.getMinDate();
      var maxDate = this.getMaxDate();

      if (mode === DATETIME) {
        if (date < minDate) {
          return cloneDate(minDate);
        }

        if (date > maxDate) {
          return cloneDate(maxDate);
        }
      } else if (mode === date_picker_DATE || mode === YEAR || mode === MONTH) {
        // compare-two-dates: https://stackoverflow.com/a/14629978/2190503
        if (+date + ONE_DAY <= minDate) {
          return cloneDate(minDate);
        }

        if (date >= +maxDate + ONE_DAY) {
          return cloneDate(maxDate);
        }
      } else if (mode === TIME) {
        var maxHour = maxDate.getHours();
        var maxMinutes = maxDate.getMinutes();
        var minHour = minDate.getHours();
        var minMinutes = minDate.getMinutes();
        var hour = date.getHours();
        var minutes = date.getMinutes();

        if (hour < minHour || hour === minHour && minutes < minMinutes) {
          return cloneDate(minDate);
        }

        if (hour > maxHour || hour === maxHour && minutes > maxMinutes) {
          return cloneDate(maxDate);
        }
      }

      return date;
    }
  }, {
    key: "getValueCols",
    value: function getValueCols() {
      var mode = this.mode,
          use12Hours = this.use12Hours;
      var date = this.getDate();
      var cols = [];
      var value = [];

      if (mode === YEAR) {
        return {
          cols: this.getDateData(),
          value: [date.getFullYear()]
        };
      }

      if (mode === MONTH) {
        return {
          cols: this.getDateData(),
          value: [date.getFullYear(), date.getMonth()]
        };
      }

      if (mode === DATETIME || mode === date_picker_DATE) {
        cols = this.getDateData();
        value = [date.getFullYear(), date.getMonth(), date.getDate()];
      }

      if (mode === DATETIME || mode === TIME) {
        var time = this.getTimeData(date);
        cols = cols.concat(time.cols);
        var hour = date.getHours();
        var dtValue = [hour, time.selMinute];
        var nhour = hour;

        if (use12Hours) {
          nhour = hour === 0 ? 12 : hour > 12 ? hour - 12 : hour;
          dtValue = [nhour, time.selMinute, hour >= 12 ? 1 : 0];
        }

        value = value.concat(dtValue);
      }

      return {
        value: value,
        cols: cols
      };
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _this$getValueCols3 = this.getValueCols(),
          cols = _this$getValueCols3.cols;

      var value = this.state.values;
      var disabled = this.disabled,
          pickerPrefixCls = this.pickerPrefixCls,
          prefixCls = this.prefixCls,
          rootNativeProps = this.rootNativeProps,
          itemStyle = this.itemStyle;
      var multiStyle = {
        flexDirection: 'row',
        alignItems: 'center'
      };
      return (// @ts-ignore
        h(multi_picker, helper_default()([{
          "style": multiStyle,
          "attrs": {
            "rootNativeProps": rootNativeProps,
            "prefixCls": prefixCls,
            "selectedValue": value
          }
        }, {
          "on": {
            input: this.onValueChange,
            scrollChange: this.onScrollChange
          }
        }]), [cols.map(function (p) {
          return (// @ts-ignore
            h(vmc_picker_picker, helper_default()([{}, {
              "attrs": {
                disabled: disabled,
                prefixCls: pickerPrefixCls,
                itemStyle: itemStyle
              }
            }, {
              "style": {
                flex: 1
              },
              "key": p.key
            }]), [p.props.children.map(function (item) {
              return (// @ts-ignore
                h(vmc_picker_picker.Item, {
                  "key": item.value,
                  "attrs": {
                    "value": item.value,
                    "label": item.label
                  }
                })
              );
            })])
          );
        })])
      );
    }
  }]);

  return DatePicker;
}(vmc_date_picker_date_picker_props);

__decorate([Inject({
  from: 'store',
  default: undefined
})], vmc_date_picker_date_picker_DatePicker.prototype, "store", void 0);

__decorate([Watch('state.date', {
  immediate: true
})], vmc_date_picker_date_picker_DatePicker.prototype, "dateChagned", null);

vmc_date_picker_date_picker_DatePicker = __decorate([vue_class_component_common_default()({
  name: 'DatePicker'
})], vmc_date_picker_date_picker_DatePicker);
/* harmony default export */ var vmc_date_picker_date_picker = (vmc_date_picker_date_picker_DatePicker);
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/index.tsx

// CONCATENATED MODULE: ./src/packages/vmc-calendar/time-picker.tsx











var MIN_DATE = new Date(0, 0, 0, 0, 0);
var MAX_DATE = new Date(9999, 11, 31, 23, 59, 59);

var time_picker_TimePicker =
/*#__PURE__*/
function (_Vue) {
  _inherits(TimePicker, _Vue);

  function TimePicker() {
    _classCallCheck(this, TimePicker);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(TimePicker).apply(this, arguments));
  }

  _createClass(TimePicker, [{
    key: "onDateChange",
    value: function onDateChange(date) {
      this.$emit('change', date);
    }
  }, {
    key: "getMinTime",
    value: function getMinTime(date) {
      var minDate = this.minDate;

      if (!date || date.getFullYear() > minDate.getFullYear() || date.getMonth() > minDate.getMonth() || date.getDate() > minDate.getDate()) {
        return MIN_DATE;
      }

      return minDate;
    }
  }, {
    key: "getMaxTime",
    value: function getMaxTime(date) {
      var maxDate = this.maxDate;

      if (!date || date.getFullYear() < maxDate.getFullYear() || date.getMonth() < maxDate.getMonth() || date.getDate() < maxDate.getDate()) {
        return MAX_DATE;
      }

      return maxDate;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var _this$$props = this.$props,
          locale = _this$$props.locale,
          title = _this$$props.title,
          value = _this$$props.value,
          defaultValue = _this$$props.defaultValue,
          prefixCls = _this$$props.prefixCls,
          pickerPrefixCls = _this$$props.pickerPrefixCls,
          clientHeight = _this$$props.clientHeight;
      var date = value || defaultValue || undefined;
      var height = clientHeight && clientHeight * 3 / 8 - 52 || Number.POSITIVE_INFINITY;
      return h("div", {
        "class": "time-picker"
      }, [h("div", {
        "class": "title"
      }, [title]), // @ts-ignore
      h(vmc_date_picker_date_picker, {
        "attrs": {
          "prefixCls": prefixCls,
          "pickerPrefixCls": pickerPrefixCls,
          "mode": "time",
          "date": date,
          "locale": locale,
          "minDate": this.getMinTime(date),
          "maxDate": this.getMaxTime(date),
          "use12Hours": true
        },
        "style": {
          height: height > 164 || height < 0 ? 164 : height,
          overflow: 'hidden'
        },
        "on": {
          "change": this.onDateChange
        }
      })]);
    }
  }]);

  return TimePicker;
}(external_Vue_default.a);

__decorate([Prop()], time_picker_TimePicker.prototype, "locale", void 0);

__decorate([Prop(String)], time_picker_TimePicker.prototype, "prefixCls", void 0);

__decorate([Prop(String)], time_picker_TimePicker.prototype, "pickerPrefixCls", void 0);

__decorate([Prop(String)], time_picker_TimePicker.prototype, "title", void 0);

__decorate([Prop(Date)], time_picker_TimePicker.prototype, "defaultValue", void 0);

__decorate([Prop(Date)], time_picker_TimePicker.prototype, "value", void 0);

__decorate([Prop({
  type: Date,
  default: function _default() {
    return MIN_DATE;
  }
})], time_picker_TimePicker.prototype, "minDate", void 0);

__decorate([Prop({
  type: Date,
  default: function _default() {
    return MAX_DATE;
  }
})], time_picker_TimePicker.prototype, "maxDate", void 0);

__decorate([Prop()], time_picker_TimePicker.prototype, "clientHeight", void 0);

time_picker_TimePicker = __decorate([vue_class_component_common_default()({
  name: 'TimePicker'
})], time_picker_TimePicker);
/* harmony default export */ var time_picker = (time_picker_TimePicker);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar-base.tsx

















var calendar_base_StateType = function StateType() {
  _classCallCheck(this, StateType);

  this.showTimePicker = false;
  this.startDate = undefined;
  this.endDate = undefined;
  this.disConfirmBtn = true;
  this.clientHight = 0;
  this.visible = false;
};

var calendar_base_CalendarBase =
/*#__PURE__*/
function (_CalendarProps) {
  _inherits(CalendarBase, _CalendarProps);

  function CalendarBase() {
    var _this;

    _classCallCheck(this, CalendarBase);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(CalendarBase).apply(this, arguments));
    _this.state = {
      showTimePicker: false,
      timePickerTitle: '',
      startDate: undefined,
      endDate: undefined,
      disConfirmBtn: true,
      clientHeight: 0,
      contentStyle: {},
      visible: _this.visible
    };
    _this.currentValue = [];
    return _this;
  }

  _createClass(CalendarBase, [{
    key: "stateChanged",
    value: function stateChanged(value) {
      this.currentValue[0] = value.startDate;
      this.currentValue[1] = value.endDate;
    }
  }, {
    key: "created",
    value: function created() {
      if (this.defaultValue) {
        var defaultValue = this.defaultValue;
        this.state = assign_default()({}, this.state, this.selectDate(defaultValue[1], true, {
          startDate: defaultValue[0]
        }));
      }
    }
  }, {
    key: "defaultValueChanged",
    value: function defaultValueChanged(defaultValue) {
      if (this.visible && this.defaultValue) {
        this.shortcutSelect(this.defaultValue[0], this.defaultValue[1]);
      }
    }
  }, {
    key: "selectDate",
    value: function selectDate(date) {
      var useDateTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var oldState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (!date) {
        return {};
      }

      var newState = {};
      var type = this.type,
          pickTime = this.pickTime,
          defaultTimeValue = this.defaultTimeValue,
          _this$locale = this.locale,
          locale = _this$locale === void 0 ? {} : _this$locale;
      var newDate = pickTime && !useDateTime ? mergeDateTime(date, defaultTimeValue) : date;
      var startDate = oldState.startDate,
          endDate = oldState.endDate;

      switch (type) {
        case 'one':
          newState = assign_default()({}, newState, {
            startDate: newDate,
            disConfirmBtn: false
          });

          if (pickTime) {
            newState = assign_default()({}, newState, {
              timePickerTitle: locale.selectTime,
              showTimePicker: true
            });
          }

          break;

        case 'range':
          if (!startDate || endDate) {
            newState = assign_default()({}, newState, {
              startDate: newDate,
              endDate: undefined,
              disConfirmBtn: true
            });

            if (pickTime) {
              newState = assign_default()({}, newState, {
                timePickerTitle: locale.selectStartTime,
                showTimePicker: true
              });
            }
          } else {
            newState = assign_default()({}, newState, {
              timePickerTitle: +newDate >= +startDate ? locale.selectEndTime : locale.selectStartTime,
              disConfirmBtn: false,
              endDate: pickTime && !useDateTime && +newDate >= +startDate ? new Date(+mergeDateTime(newDate, startDate) + 3600000) : newDate
            });
          }

          break;
      }

      return newState;
    }
  }, {
    key: "onSelectedDate",
    value: function onSelectedDate(date) {
      var _this$state = this.state,
          startDate = _this$state.startDate,
          endDate = _this$state.endDate;
      var onSelect = this.onSelect;

      if (onSelect) {
        var value = onSelect(date, [startDate, endDate]);

        if (value) {
          this.shortcutSelect(value[0], value[1]);
          return;
        }
      }

      this.state = assign_default()(this.state, this.selectDate(date, false, {
        startDate: startDate,
        endDate: endDate
      }));
    }
    /** 选择区间包含不可用日期 */

  }, {
    key: "onSelectHasDisableDate",
    value: function onSelectHasDisableDate(date) {
      this.onClear();
      this.$emit('select-has-disable-date', date);
    }
  }, {
    key: "onClose",
    value: function onClose() {
      this.state = assign_default()(this.state, new calendar_base_StateType());
      this.$emit('close');
      this.$emit('update:visible', false);
    }
    /** 关闭时回调 */

  }, {
    key: "onCancel",
    value: function onCancel() {
      this.$emit('cancel');
      this.onClose();
    }
    /** 确认时回调 */

  }, {
    key: "onConfirm",
    value: function onConfirm() {
      var _this$state2 = this.state,
          startDate = _this$state2.startDate,
          endDate = _this$state2.endDate;

      if (startDate && endDate && +startDate > +endDate) {
        return this.$emit('confirm', endDate, startDate);
      }

      this.$emit('confirm', startDate, endDate);
      this.onClose();
    }
  }, {
    key: "onTimeChange",
    value: function onTimeChange(timeValue) {
      var _this$state3 = this.state,
          startDate = _this$state3.startDate,
          endDate = _this$state3.endDate;
      var date = null;

      if (endDate) {
        date = endDate;
      } else if (startDate) {
        date = startDate;
      }

      if (date) {
        var hours = timeValue[0];

        if (timeValue[2] === 1) {
          hours += 12;
          date.setUTCHours(timeValue[0]);
        }

        date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), timeValue[0], timeValue[1], 0);
      }

      if (endDate) {
        this.state.endDate = date;
      } else if (startDate) {
        this.state.startDate = date;
      }
    }
    /** 清除时回调 */

  }, {
    key: "onClear",
    value: function onClear() {
      this.state.startDate = undefined;
      this.state.endDate = undefined;
      this.state.showTimePicker = false;
      this.$emit('clear');
    }
  }, {
    key: "shortcutSelect",
    value: function shortcutSelect(startDate, endDate) {
      this.state = assign_default()(this.state, assign_default()({
        startDate: startDate
      }, this.selectDate(endDate, true, {
        startDate: startDate
      }), {
        showTimePicker: false
      }));
    }
  }, {
    key: "setClientHeight",
    value: function setClientHeight(height) {
      this.state.clientHeight = height;
    }
  }, {
    key: "renderCalendar",
    value: function renderCalendar() {
      var h = this.$createElement;
      var type = this.type,
          _this$locale2 = this.locale,
          locale = _this$locale2 === void 0 ? {} : _this$locale2,
          prefixCls = this.prefixCls,
          pickTime = this.pickTime,
          showShortcut = this.showShortcut,
          renderHeader = this.renderHeader,
          infiniteOpt = this.infiniteOpt,
          initialMonths = this.initialMonths,
          defaultDate = this.defaultDate,
          minDate = this.minDate,
          maxDate = this.maxDate,
          getDateExtra = this.getDateExtra,
          rowSize = this.rowSize,
          defaultTimeValue = this.defaultTimeValue,
          renderShortcut = this.renderShortcut,
          timePickerPrefixCls = this.timePickerPrefixCls,
          timePickerPickerPrefixCls = this.timePickerPickerPrefixCls;
      var _this$state4 = this.state,
          showTimePicker = _this$state4.showTimePicker,
          timePickerTitle = _this$state4.timePickerTitle,
          startDate = _this$state4.startDate,
          endDate = _this$state4.endDate,
          disConfirmBtn = _this$state4.disConfirmBtn,
          clientHeight = _this$state4.clientHeight;
      var headerProps = {
        locale: locale,
        showClear: !!startDate
      };
      return h("div", {
        "class": "".concat(prefixCls)
      }, [h("div", {
        "style": this.state.contentStyle,
        "class": "content"
      }, [renderHeader ? renderHeader(headerProps) : h(calendar_header, helper_default()([{}, {
        "attrs": assign_default()({}, headerProps)
      }, {
        "on": {
          "clear": this.onCancel,
          "cancel": this.onCancel
        }
      }])), h(date_picker, {
        "attrs": {
          "locale": locale,
          "type": type,
          "displayMode": this.displayMode,
          "prefixCls": prefixCls,
          "infiniteOpt": infiniteOpt,
          "initialMonths": initialMonths,
          "currentStartDate": this.state.startDate,
          "currentEndDate": this.state.endDate,
          "defaultDate": defaultDate,
          "minDate": minDate,
          "maxDate": maxDate,
          "getDateExtra": getDateExtra,
          "startDate": startDate,
          "endDate": endDate,
          "rowSize": rowSize
        },
        "on": {
          "cellClick": this.onSelectedDate,
          "selectHasDisableDate": this.onSelectHasDisableDate,
          "layout": this.setClientHeight
        }
      }), !this.displayMode && showTimePicker && h(time_picker, {
        "attrs": {
          "prefixCls": timePickerPrefixCls,
          "pickerPrefixCls": timePickerPickerPrefixCls,
          "locale": locale,
          "title": timePickerTitle,
          "defaultValue": defaultTimeValue,
          "value": endDate ? endDate : startDate,
          "minDate": minDate,
          "maxDate": maxDate,
          "clientHeight": clientHeight
        },
        "on": {
          "change": this.onTimeChange
        }
      }), !this.displayMode && showShortcut && !showTimePicker && (renderShortcut ? renderShortcut(this.shortcutSelect) : h(shortcut_panel, {
        "attrs": {
          "locale": locale
        },
        "on": {
          "select": this.shortcutSelect
        }
      })), startDate && !this.displayMode && h(confirm_panel, {
        "attrs": {
          "type": type,
          "locale": locale,
          "startDateTime": startDate,
          "endDateTime": endDate,
          "disableBtn": disConfirmBtn,
          "formatStr": pickTime ? locale.dateTimeFormat : locale.dateFormat
        },
        "on": {
          "confirm": this.onConfirm
        }
      })])]);
    }
  }]);

  return CalendarBase;
}(calendar_props);

calendar_base_CalendarBase.DefaultHeader = calendar_header;
calendar_base_CalendarBase.DefaultShortcut = shortcut_panel;

__decorate([Provide('currentValue')], calendar_base_CalendarBase.prototype, "currentValue", void 0);

__decorate([Watch('state', {
  deep: true
})], calendar_base_CalendarBase.prototype, "stateChanged", null);

__decorate([Watch('defaultValue')], calendar_base_CalendarBase.prototype, "defaultValueChanged", null);

calendar_base_CalendarBase = __decorate([vue_class_component_common_default()({
  name: 'CalendarBase'
})], calendar_base_CalendarBase);
/* harmony default export */ var calendar_base = (calendar_base_CalendarBase);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar.tsx












var calendar_Calendar =
/*#__PURE__*/
function (_CalendarBase) {
  _inherits(Calendar, _CalendarBase);

  function Calendar() {
    _classCallCheck(this, Calendar);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Calendar).apply(this, arguments));
  }

  _createClass(Calendar, [{
    key: "visibleChanged",
    value: function visibleChanged(visible) {
      this.state.visible = visible;
      var defaultValue = this.defaultValue;

      if (visible && defaultValue) {
        this.shortcutSelect(defaultValue[0], defaultValue[1]);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var height = document.body.clientHeight;
      var width = document.body.clientWidth;
      return h(packages_popup, helper_default()([{
        "on": {
          "close": this.onClose
        }
      }, {
        "attrs": {
          height: "".concat(height, "px"),
          width: "".concat(height, "px"),
          value: this.state.visible,
          placement: this.enterDirection === 'vertical' ? 'bottom' : 'right'
        }
      }]), [this.renderCalendar()]);
    }
  }]);

  return Calendar;
}(calendar_base);

__decorate([Watch('visible')], calendar_Calendar.prototype, "visibleChanged", null);

calendar_Calendar = __decorate([vue_class_component_common_default()({
  name: 'Calendar'
})], calendar_Calendar);
/* harmony default export */ var calendar = (calendar_Calendar);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/calendar-view.tsx









var calendar_view_CalendarView =
/*#__PURE__*/
function (_CalendarBase) {
  _inherits(CalendarView, _CalendarBase);

  function CalendarView() {
    _classCallCheck(this, CalendarView);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(CalendarView).apply(this, arguments));
  }

  _createClass(CalendarView, [{
    key: "render",
    value: function render() {
      return this.renderCalendar();
    }
  }]);

  return CalendarView;
}(calendar_base);

calendar_view_CalendarView = __decorate([vue_class_component_common_default()({
  name: 'CalendarView'
})], calendar_view_CalendarView);
/* harmony default export */ var calendar_view = (calendar_view_CalendarView);
// CONCATENATED MODULE: ./src/packages/vmc-calendar/index.ts



// CONCATENATED MODULE: ./src/packages/calendar/src/index.tsx















var src_Calendar =
/*#__PURE__*/
function (_CalendarProps) {
  _inherits(Calendar, _CalendarProps);

  function Calendar() {
    var _this;

    _classCallCheck(this, Calendar);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Calendar).apply(this, arguments));
    _this.state = {
      visible: _this.visible
    };
    return _this;
  }

  _createClass(Calendar, [{
    key: "visibleChanged",
    value: function visibleChanged(value) {
      this.state.visible = value;
    }
  }, {
    key: "onConfirm",
    value: function onConfirm() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      this.$emit.apply(this, ['confirm'].concat(args));
      this.onClose();
    }
  }, {
    key: "onClear",
    value: function onClear(e) {
      this.$emit('clear', e);
    }
  }, {
    key: "onClose",
    value: function onClose() {
      this.state.visible = false;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      this.$emit.apply(this, ['close'].concat(args));
      this.$emit('update:visible', false);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];
      var locale = getComponentLocale(this.$props, {}, 'Calendar', function () {
        return __webpack_require__("e811");
      });
      var Header = calendar.DefaultHeader;
      return h(calendar, helper_default()([{
        "attrs": {
          "locale": locale,
          "renderHeader": function renderHeader(headerProps) {
            return h(Header, helper_default()([{}, headerProps, {
              "attrs": {
                "closeIcon": h(packages_icon, {
                  "attrs": {
                    "type": "cross"
                  }
                })
              }
            }]));
          }
        },
        "on": {
          "cancel": function cancel() {
            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              args[_key3] = arguments[_key3];
            }

            _this2.$emit.apply(_this2, ['cancel'].concat(args));
          },
          "close": this.onClose,
          "confirm": this.onConfirm,
          "clear": this.onClear,
          "selectHasDisableDate": function selectHasDisableDate() {
            for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
              args[_key4] = arguments[_key4];
            }

            _this2.$emit.apply(_this2, ['select-has-disable-date'].concat(args));
          }
        }
      }, {
        "attrs": this.$props
      }, {
        "attrs": {
          "visible": this.state.visible
        }
      }]));
    }
  }]);

  return Calendar;
}(calendar_props);

__decorate([Prop({
  type: String,
  default: 'am-calendar'
})], src_Calendar.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker'
})], src_Calendar.prototype, "timePickerPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker-col'
})], src_Calendar.prototype, "timePickerPickerPrefixCls", void 0);

__decorate([Watch('visible')], src_Calendar.prototype, "visibleChanged", null);

src_Calendar = __decorate([vue_class_component_common_default()({
  name: 'Calendar'
})], src_Calendar);
/* harmony default export */ var calendar_src = (src_Calendar);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.find.js
var es6_array_find = __webpack_require__("7514");

// CONCATENATED MODULE: ./src/packages/list/src/item.tsx







/* tslint:disable:jsx-no-multiline-js */







var item_Brief =
/*#__PURE__*/
function (_Vue) {
  _inherits(Brief, _Vue);

  function Brief() {
    _classCallCheck(this, Brief);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Brief).apply(this, arguments));
  }

  _createClass(Brief, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      return h("div", {
        "class": "am-list-brief"
      }, [this.$slots.default]);
    }
  }]);

  return Brief;
}(external_Vue_default.a);

__decorate([Prop()], item_Brief.prototype, "prefixCls", void 0);

__decorate([Prop()], item_Brief.prototype, "role", void 0);

item_Brief = __decorate([vue_class_component_common_default()({
  name: 'Brief'
})], item_Brief);


var item_Item =
/*#__PURE__*/
function (_Vue2) {
  _inherits(Item, _Vue2);

  function Item() {
    var _this;

    _classCallCheck(this, Item);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Item).apply(this, arguments));
    _this.coverRippleStyle = {
      display: 'none'
    };
    _this.rippleClicked = false;
    _this.showErrorPopover = false;
    return _this;
  }

  _createClass(Item, [{
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.debounceTimeout) {
        clearTimeout(this.debounceTimeout);
        this.debounceTimeout = null;
      }
    }
  }, {
    key: "onClick",
    value: function onClick(ev) {
      var _this2 = this;

      var isAndroid = this.platform === 'android';

      if (isAndroid) {
        if (this.debounceTimeout) {
          clearTimeout(this.debounceTimeout);
          this.debounceTimeout = null;
        }

        var _Item = ev.currentTarget;
        var RippleWidth = Math.max(_Item.offsetHeight, _Item.offsetWidth);
        var ClientRect = ev.currentTarget.getBoundingClientRect();
        var pointX = ev.clientX - ClientRect.left - _Item.offsetWidth / 2;
        var pointY = ev.clientY - ClientRect.top - _Item.offsetWidth / 2;
        this.coverRippleStyle = {
          width: "".concat(RippleWidth, "px"),
          height: "".concat(RippleWidth, "px"),
          left: "".concat(pointX, "px"),
          top: "".concat(pointY, "px")
        };
        this.rippleClicked = true;
        this.debounceTimeout = setTimeout(function () {
          _this2.coverRippleStyle = {
            display: 'none'
          };
          _this2.rippleClicked = false;
        }, 1000);
      }

      this.$emit('click');
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames,
          _classNames3,
          _classNames4,
          _this3 = this;

      var h = arguments[0];
      var _this$$props = this.$props,
          prefixCls = _this$$props.prefixCls,
          activeStyle = _this$$props.activeStyle,
          align = _this$$props.align,
          wrap = _this$$props.wrap,
          disabled = _this$$props.disabled,
          multipleLine = _this$$props.multipleLine,
          arrow = _this$$props.arrow;
      var coverRippleStyle = this.coverRippleStyle,
          rippleClicked = this.rippleClicked;
      var section = this.$parent['section'];
      var actualError = this.actualError;
      var wrapCls = classnames_default()("".concat(prefixCls, "-item"), "".concat(prefixCls, "-item-label-") + this.labelPosition, (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-item-disabled"), this.actualDisabled), _defineProperty(_classNames, "".concat(prefixCls, "-item-error"), actualError), _defineProperty(_classNames, "".concat(prefixCls, "-item-error-text"), actualError && this.actualErrorDisplayType === 'text'), _defineProperty(_classNames, "".concat(prefixCls, "-item-top"), align === 'top'), _defineProperty(_classNames, "".concat(prefixCls, "-item-middle"), align === 'middle'), _defineProperty(_classNames, "".concat(prefixCls, "-item-bottom"), align === 'bottom'), _defineProperty(_classNames, "".concat(prefixCls, "-item-section"), section), _defineProperty(_classNames, "".concat(prefixCls, "-item-extra-left"), this.extraPosition === 'left'), _defineProperty(_classNames, "".concat(prefixCls, "-item-extra-center"), this.extraPosition === 'center'), _defineProperty(_classNames, "".concat(prefixCls, "-item-extra-right"), this.extraPosition === 'right'), _classNames));
      var rippleCls = classnames_default()("".concat(prefixCls, "-ripple"), _defineProperty({}, "".concat(prefixCls, "-ripple-animate"), rippleClicked));
      var lineCls = classnames_default()("".concat(prefixCls, "-line"), (_classNames3 = {}, _defineProperty(_classNames3, "".concat(prefixCls, "-line-multiple"), multipleLine), _defineProperty(_classNames3, "".concat(prefixCls, "-line-wrap"), wrap), _classNames3));
      var arrowCls = classnames_default()("".concat(prefixCls, "-arrow"), (_classNames4 = {}, _defineProperty(_classNames4, "".concat(prefixCls, "-arrow-horizontal"), arrow === 'horizontal'), _defineProperty(_classNames4, "".concat(prefixCls, "-arrow-vertical"), arrow === 'down' || arrow === 'up'), _defineProperty(_classNames4, "".concat(prefixCls, "-arrow-vertical-up"), arrow === 'up'), _classNames4));
      var content = h("div", {
        "on": {
          "click": this.onClick
        },
        "class": wrapCls
      }, [this.renderThumb(), h("div", {
        "class": lineCls
      }, [this.renderLabel(), this.renderExtra(), arrow && h("div", {
        "class": arrowCls,
        "attrs": {
          "aria-hidden": "true"
        }
      }), this.actualError && this.errorDisplayType !== 'text' ? h("div", {
        "class": "".concat(prefixCls, "-error-extra"),
        "on": {
          "click": function click(e) {
            if (_this3.actualErrorMessage) {
              if (_this3.$toast && _this3.actualErrorDisplayType === 'toast') {
                _this3.$toast.fail(_this3.actualErrorMessage);
              }

              if (_this3.actualErrorDisplayType === 'popover' && !_this3.showErrorPopover) {
                _this3.showErrorPopover = true;
              }
            }

            _this3.$emit('error-click', e);

            _this3.$emit('errorClick', e);
          }
        }
      }, [h("m-popover", {
        "attrs": {
          "mask": false
        },
        "model": {
          value: _this3.showErrorPopover,
          callback: function callback($$v) {
            _this3.showErrorPopover = $$v;
          }
        }
      }, [h("m-popover-item", {
        "slot": "content"
      }, [this.errorMessage])])]) : null, this.$slots.suffix || this.suffix ? h("div", {
        "class": this.prefixCls + '-suffix'
      }, [this.$slots.suffix || this.suffix]) : null]), h("div", {
        "style": coverRippleStyle,
        "class": rippleCls
      })]);
      return (// @ts-ignore
        h(feedback, {
          "attrs": {
            "disabled": disabled || !this.$listeners.click || !this.touchFeedback || this.list && !this.list.touchFeedback,
            "activeStyle": activeStyle,
            "activeClassName": "".concat(prefixCls, "-item-active")
          }
        }, [content])
      );
    }
  }, {
    key: "renderExtra",
    value: function renderExtra() {
      var h = this.$createElement;
      return this.$slots.extra !== undefined || this.extra ? h("div", {
        "style": this.extraStyle,
        "class": classnames_default()("".concat(this.prefixCls, "-extra"), _defineProperty({}, this.prefixCls + '-extra-text', this.text))
      }, [this.$slots.extra || this.extra, this.errorDisplayType === 'text' && this.actualError && this.actualErrorMessage ? h("div", [this.actualErrorMessage]) : null]) : null;
    }
  }, {
    key: "renderThumb",
    value: function renderThumb() {
      var h = this.$createElement;
      var thumb = this.thumb,
          prefixCls = this.prefixCls;

      if (this.$slots.thumb) {
        return h("div", {
          "class": "".concat(prefixCls, "-thumb")
        }, [this.$slots.thumb]);
      } else if (thumb) {
        return h("div", {
          "class": "".concat(prefixCls, "-thumb")
        }, [typeof thumb === 'string' ? h("img", {
          "attrs": {
            "src": thumb
          }
        }) : thumb]);
      } else if (this.required) {
        return h("div", {
          "class": "".concat(prefixCls, "-required")
        });
      } else {
        return null;
      }
    }
  }, {
    key: "renderLabel",
    value: function renderLabel() {
      var h = this.$createElement;

      if (this.$slots.default !== undefined) {
        return h("div", {
          "class": "".concat(this.prefixCls, "-content"),
          "style": this.contentStyle
        }, [this.$slots.default]);
      } else if (this.title) {
        return h("div", {
          "class": "".concat(this.prefixCls, "-content"),
          "style": this.contentStyle
        }, [this.title]);
      } else {
        return null;
      }
    }
  }, {
    key: "actualError",
    get: function get() {
      return this.error || this.$parent['error'];
    }
  }, {
    key: "actualErrorMessage",
    get: function get() {
      return this.errorMessage || this.$parent['errorMessage'];
    }
  }, {
    key: "actualDisabled",
    get: function get() {
      return this.disabled;
    }
  }, {
    key: "actualErrorDisplayType",
    get: function get() {
      return this.errorDisplayType && this.$parent['errorDisplayType'];
    }
  }]);

  return Item;
}(external_Vue_default.a);

item_Item.Brief = item_Brief;

__decorate([Prop({
  type: Boolean,
  default: false
})], item_Item.prototype, "text", void 0);

__decorate([Prop({
  default: 'am-list'
})], item_Item.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], item_Item.prototype, "role", void 0);

__decorate([Prop({
  type: String,
  default: 'iOS'
})], item_Item.prototype, "platform", void 0);

__decorate([Prop({
  type: [String, Object]
})], item_Item.prototype, "thumb", void 0);

__decorate([Prop([String, Object])], item_Item.prototype, "extra", void 0);

__decorate([Prop({
  type: String,
  default: 'right'
})], item_Item.prototype, "extraPosition", void 0);

__decorate([Prop({
  type: Object
})], item_Item.prototype, "activeStyle", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], item_Item.prototype, "multipleLine", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], item_Item.prototype, "error", void 0);

__decorate([Prop({
  type: String
})], item_Item.prototype, "errorMessage", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], item_Item.prototype, "disabled", void 0);

__decorate([Prop({
  type: String,
  default: 'middle'
})], item_Item.prototype, "align", void 0);

__decorate([Prop({
  type: Boolean
})], item_Item.prototype, "wrap", void 0);

__decorate([Prop({
  type: String
})], item_Item.prototype, "arrow", void 0);

__decorate([Prop({
  type: [String, Object],
  default: ''
})], item_Item.prototype, "title", void 0);

__decorate([Prop({
  type: String,
  default: 'left'
})], item_Item.prototype, "labelPosition", void 0);

__decorate([Inject({
  from: 'list',
  default: undefined
})], item_Item.prototype, "list", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], item_Item.prototype, "contentStyle", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], item_Item.prototype, "extraStyle", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], item_Item.prototype, "touchFeedback", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], item_Item.prototype, "required", void 0);

__decorate([Prop()], item_Item.prototype, "suffix", void 0);

__decorate([Prop({
  type: String,
  default: 'text'
})], item_Item.prototype, "errorDisplayType", void 0);

item_Item = __decorate([vue_class_component_common_default()({
  name: 'ListItem'
})], item_Item);
/* harmony default export */ var src_item = (item_Item);
// CONCATENATED MODULE: ./src/packages/list/src/index.tsx



















var src_List =
/*#__PURE__*/
function (_Vue) {
  _inherits(List, _Vue);

  function List() {
    var _this;

    _classCallCheck(this, List);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(List).apply(this, arguments));
    _this.list = _assertThisInitialized(_this);
    _this.fields = [];
    return _this;
  }

  _createClass(List, [{
    key: "created",
    value: function created() {
      var _this2 = this;

      this.$on('d.form.addField', function (field) {
        if (field) {
          _this2.fields.push(field);
        }
      });
      /* istanbul ignore next */

      this.$on('d.form.removeField', function (field) {
        if (field.prop) {
          _this2.fields.splice(_this2.fields.indexOf(field), 1);
        }
      });
    }
  }, {
    key: "clearValidate",
    value: function clearValidate() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var fields = props.length ? typeof props === 'string' ? this.fields.filter(function (field) {
        return props === field.prop;
      }) : this.fields.filter(function (field) {
        return props.indexOf(field.prop) > -1;
      }) : this.fields;
      fields.forEach(function (field) {
        field.clearValidate();
      });
    }
  }, {
    key: "resetFields",
    value: function resetFields() {
      if (!this.model) {
        console.warn('[Element Warn][Form]model is required for resetFields to work.');
        return;
      }

      this.fields.forEach(function (field) {
        field.resetField();
      });
    }
  }, {
    key: "validate",
    value: function validate(callback) {
      var _this3 = this;

      if (!this.model) {
        return;
      }

      var promise;
      var copyCallback = callback; // if no callback, return promise

      if (typeof copyCallback !== 'function' && promise_default.a) {
        promise = new promise_default.a(function (resolve, reject) {
          copyCallback = function copyCallback(valid) {
            var errorField = _this3.fields.find(function (it) {
              return it.validateStatus === 'error';
            });

            if (errorField) {
              errorField.focus();
            }

            valid ? resolve(valid) : reject(valid);
          };
        });
      }

      var valid = true;
      var count = 0; // 如果需要验证的fields为空，调用验证时立刻返回callback

      if (this.fields.length === 0 && copyCallback) {
        copyCallback(true);
      }

      var invalidFields = {};
      this.fields.forEach(function (field) {
        field.validate('', function (message, field) {
          if (message) {
            valid = false;
          }

          invalidFields = assign_default()({}, invalidFields, field);

          if (typeof copyCallback === 'function' && ++count === _this3.fields.length) {
            copyCallback(valid, invalidFields);
          }
        });
      });

      if (promise) {
        return promise;
      }
    }
  }, {
    key: "validateField",
    value: function validateField(props, cb) {
      var copyProps = [].concat(props);
      var fields = this.fields.filter(function (field) {
        return copyProps.indexOf(field.prop) !== -1;
      });

      if (!fields.length) {
        console.warn('[Element Warn]please pass correct props!');
        return;
      }

      fields.forEach(function (field) {
        field.validate('', cb);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls;
      var wrapCls = classnames_default()(prefixCls, _defineProperty({}, prefixCls + '-section', this.section));
      var children = [];

      if (this.$slots.default) {
        this.$slots.default.forEach(function (it, index) {
          if (index < _this4.$slots.default.length - 1) {
            if (_this4.section && it.data) {
              if (it.data.staticStyle) {
                it.data.staticStyle.marginBottom = _this4.spaceBetweenSection + 'px';
              } else {
                it.data.staticStyle = {
                  marginBottom: _this4.spaceBetweenSection + 'px'
                };
              }
            }
          }

          children.push(it);
        });
      }

      return h("div", {
        "class": wrapCls
      }, [h("div", {
        "class": classnames_default()("".concat(prefixCls, "-header"), _defineProperty({}, "".concat(prefixCls, "-required"), this.required))
      }, [this.$slots.title ? this.$slots.title : this.title]), children.length ? h("div", {
        "class": "".concat(prefixCls, "-body")
      }, [children]) : null, this.$slots.footer ? this.$slots.footer : null]);
    }
  }]);

  return List;
}(external_Vue_default.a);

src_List.Item = src_item;

__decorate([Prop({
  type: Boolean,
  default: false
})], src_List.prototype, "section", void 0);

__decorate([Prop({
  default: 'am-list'
})], src_List.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], src_List.prototype, "role", void 0);

__decorate([Prop({
  type: [String, Object]
})], src_List.prototype, "title", void 0);

__decorate([Prop({
  type: Number,
  default: 8
})], src_List.prototype, "spaceBetweenSection", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_List.prototype, "touchFeedback", void 0);

__decorate([Provide('list')], src_List.prototype, "list", void 0);

__decorate([Prop({
  type: Object
})], src_List.prototype, "model", void 0);

__decorate([Prop({
  type: Object
})], src_List.prototype, "rules", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_List.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_List.prototype, "editable", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_List.prototype, "required", void 0);

src_List = __decorate([vue_class_component_common_default()({
  name: 'MList'
})], src_List);
/* harmony default export */ var list_src = (src_List);
// EXTERNAL MODULE: ./src/packages/list/style/index.less
var list_style = __webpack_require__("7277");

// CONCATENATED MODULE: ./src/packages/list/style/index.tsx


// CONCATENATED MODULE: ./src/packages/list/index.ts



list_src.install = function (Vue) {
  Vue.component('MList', list_src);
  Vue.component('MListItem', list_src.Item);
  Vue.component('MListItemBrief', list_src.Item.Brief);
};

/* harmony default export */ var list = (list_src);
// CONCATENATED MODULE: ./src/packages/calendar/src/item.tsx












var item_MIN_DATE = new Date(2000, 1, 1, 0, 0, 0);
var item_MAX_DATE = new Date(new Date().getFullYear() + 10, 12, 31, 23, 59, 59);

var item_MCalendarItem =
/*#__PURE__*/
function (_BaseInputComponent) {
  _inherits(MCalendarItem, _BaseInputComponent);

  function MCalendarItem() {
    var _this;

    _classCallCheck(this, MCalendarItem);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MCalendarItem).apply(this, arguments));
    _this.currentValue = [];
    _this.visible = false;
    return _this;
  }

  _createClass(MCalendarItem, [{
    key: "getInputComponent",
    value: function getInputComponent() {
      return calendar_src;
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      if (this.type === 'one') {
        this.currentValue = [value];
      } else if (value) {
        this.currentValue = value;
      }
    }
  }, {
    key: "currentValueChanged",
    value: function currentValueChanged() {
      if (this.currentValue.length) {
        this.displayValue = this.getDisplayValue();
      } else {
        this.displayValue = '';
      }
    }
  }, {
    key: "onClick",
    value: function onClick() {
      this.visible = true;
    }
  }, {
    key: "onConfirm",
    value: function onConfirm(value1, value2) {
      if (this.type === 'range') {
        this.currentValue = [value1, value2];
        this.$emit('input', [value1, value2]);
      } else {
        this.currentValue = [value1];
        this.$emit('input', value1);
      }
    }
  }, {
    key: "getDisplayValue",
    value: function getDisplayValue() {
      var _this2 = this;

      var valueStrs = this.currentValue.map(function (it) {
        if (_this2.pickTime) {
          return moment(it).format('YYYY/MM/DD HH:mm');
        } else {
          return moment(it).format('YYYY/MM/DD');
        }
      });

      if (this.type === 'range') {
        return valueStrs[0] + ' ~ ' + (valueStrs[1] || '');
      } else {
        return valueStrs[0];
      }
    }
  }, {
    key: "onClose",
    value: function onClose() {
      this.visible = false;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      return h(list.Item, {
        "attrs": {
          "text": !!this.displayValue,
          "required": this.required,
          "title": this.title
        },
        "on": {
          "click": this.onClick
        }
      }, [h(calendar_src, helper_default()([{}, {
        "attrs": this.props
      }, {
        "attrs": {
          "value": this.stateValue,
          "visible": this.visible,
          "defaultValue": this.currentValue,
          "slots": this.slots
        },
        "scopedSlots": this.$scopedSlots,
        "on": {
          "close": this.onClose,
          "confirm": this.onConfirm
        }
      }, {
        "on": this.listeners
      }, {
        "style": this.cssStyle
      }]), [this.getDefaultSlot()]), h("span", [this.title]), h("span", {
        "slot": "extra"
      }, [this.displayValue || this.placeholder])]);
    }
  }]);

  return MCalendarItem;
}(base_input_component);

__decorate([Prop({
  type: String
})], item_MCalendarItem.prototype, "title", void 0);

__decorate([Prop({
  type: Date,
  default: function _default() {
    return new Date();
  }
})], item_MCalendarItem.prototype, "defaultDate", void 0);

__decorate([Prop({
  type: Date,
  default: function _default() {
    return item_MIN_DATE;
  }
})], item_MCalendarItem.prototype, "minDate", void 0);

__decorate([Prop({
  type: Date,
  default: function _default() {
    return item_MAX_DATE;
  }
})], item_MCalendarItem.prototype, "maxDate", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], item_MCalendarItem.prototype, "pickTime", void 0);

__decorate([Prop({
  type: String,
  default: 'range'
})], item_MCalendarItem.prototype, "type", void 0);

__decorate([Prop({
  type: String
})], item_MCalendarItem.prototype, "placeholder", void 0);

__decorate([Watch('value', {
  immediate: true
})], item_MCalendarItem.prototype, "valueChanged", null);

__decorate([Watch('currentValue', {
  immediate: true
})], item_MCalendarItem.prototype, "currentValueChanged", null);

item_MCalendarItem = __decorate([vue_class_component_common_default()({
  name: 'MCalendarItem'
})], item_MCalendarItem);
/* harmony default export */ var calendar_src_item = (item_MCalendarItem);
// CONCATENATED MODULE: ./src/packages/calendar/src/view.tsx
















var endOfMonth = function endOfMonth() {
  var now = new Date();
  return new Date(new Date(now.getFullYear(), now.getMonth() + 1, 1).getTime() - 24 * 3600 * 1000);
};

var beginOfMonth = function beginOfMonth() {
  var now = new Date();
  return new Date(now.getFullYear(), now.getMonth(), 1);
};

var view_Calendar =
/*#__PURE__*/
function (_CalendarProps) {
  _inherits(Calendar, _CalendarProps);

  function Calendar() {
    var _this;

    _classCallCheck(this, Calendar);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Calendar).apply(this, arguments));
    _this.state = {
      visible: _this.visible
    };
    return _this;
  }

  _createClass(Calendar, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];
      var locale = getComponentLocale(this.$props, {}, 'Calendar', function () {
        return __webpack_require__("e811");
      }); // @ts-ignore

      var Header = calendar_view.DefaultHeader;
      return (// @ts-ignore
        h(calendar_view, helper_default()([{
          "class": this.prefixCls + '-view',
          "attrs": {
            "locale": locale,
            "renderHeader": function renderHeader(headerProps) {
              return h(Header, helper_default()([{}, headerProps, {
                "attrs": {
                  "closeIcon": h(packages_icon, {
                    "attrs": {
                      "type": "cross"
                    }
                  })
                }
              }]));
            }
          },
          "on": {
            "selectHasDisableDate": function selectHasDisableDate() {
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }

              _this2.$emit.apply(_this2, ['select-has-disable-date'].concat(args));
            }
          }
        }, {
          "attrs": assign_default()({}, this.$props, {
            type: 'one',
            displayMode: true,
            minDate: this.minDate || beginOfMonth(),
            maxDate: this.maxDate || endOfMonth()
          })
        }, {
          "attrs": {
            "visible": this.state.visible
          }
        }]))
      );
    }
  }]);

  return Calendar;
}(calendar_props);

__decorate([Prop({
  type: String,
  default: 'am-calendar'
})], view_Calendar.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker'
})], view_Calendar.prototype, "timePickerPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker-col'
})], view_Calendar.prototype, "timePickerPickerPrefixCls", void 0);

view_Calendar = __decorate([vue_class_component_common_default()({
  name: 'Calendar'
})], view_Calendar);
/* harmony default export */ var view = (view_Calendar);
// EXTERNAL MODULE: ./src/packages/picker-view/style/index.less
var picker_view_style = __webpack_require__("b012");

// CONCATENATED MODULE: ./src/packages/picker-view/style/index.tsx


// EXTERNAL MODULE: ./src/packages/picker/style/index.less
var picker_style = __webpack_require__("ec9d");

// CONCATENATED MODULE: ./src/packages/picker/style/index.tsx


// EXTERNAL MODULE: ./src/packages/calendar/style/index.less
var calendar_style = __webpack_require__("deaf");

// CONCATENATED MODULE: ./src/packages/calendar/style/index.tsx



// CONCATENATED MODULE: ./src/packages/calendar/index.ts




calendar_src.Item = calendar_src_item;
calendar_src.View = view;

calendar_src.install = function (Vue) {
  Vue.component('MCalendar', calendar_src);
  Vue.component('MCalendarItem', calendar_src.Item);
  Vue.component('MCalendarView', calendar_src.View);
};

/* harmony default export */ var packages_calendar = (calendar_src);
// CONCATENATED MODULE: ./src/packages/card/src/body.tsx











var body_Body =
/*#__PURE__*/
function (_Vue) {
  _inherits(Body, _Vue);

  function Body() {
    _classCallCheck(this, Body);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Body).apply(this, arguments));
  }

  _createClass(Body, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls;
      var wrapCls = classnames_default()("".concat(prefixCls, "-body"));
      return h("div", {
        "class": wrapCls
      }, [this.$slots.default]);
    }
  }]);

  return Body;
}(external_Vue_default.a);

__decorate([Prop({
  default: 'am-card'
})], body_Body.prototype, "prefixCls", void 0);

body_Body = __decorate([vue_class_component_common_default()({
  name: 'Body'
})], body_Body);
/* harmony default export */ var src_body = (body_Body);
// CONCATENATED MODULE: ./src/packages/card/src/footer.tsx










var footer_Footer =
/*#__PURE__*/
function (_Vue) {
  _inherits(Footer, _Vue);

  function Footer() {
    _classCallCheck(this, Footer);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Footer).apply(this, arguments));
  }

  _createClass(Footer, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls,
          content = this.content,
          extra = this.extra;
      var wrapCls = "".concat(prefixCls, "-footer");
      return h("div", {
        "class": wrapCls
      }, [h("div", {
        "class": "".concat(prefixCls, "-footer-content")
      }, [this.$slots.default ? this.$slots.default : content]), (this.$slots.extra || extra) && h("div", {
        "class": "".concat(prefixCls, "-footer-extra")
      }, [this.$slots.extra ? this.$slots.extra : extra])]);
    }
  }]);

  return Footer;
}(external_Vue_default.a);

__decorate([Prop({
  default: 'am-card'
})], footer_Footer.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], footer_Footer.prototype, "extra", void 0);

__decorate([Prop({
  type: String
})], footer_Footer.prototype, "content", void 0);

footer_Footer = __decorate([vue_class_component_common_default()({
  name: 'Footer'
})], footer_Footer);
/* harmony default export */ var src_footer = (footer_Footer);
// CONCATENATED MODULE: ./src/packages/card/src/header.tsx










var src_header_Header =
/*#__PURE__*/
function (_Vue) {
  _inherits(Header, _Vue);

  function Header() {
    _classCallCheck(this, Header);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Header).apply(this, arguments));
  }

  _createClass(Header, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls,
          thumb = this.thumb,
          thumbStyle = this.thumbStyle,
          extra = this.extra,
          title = this.title;
      var wrapCls = "".concat(prefixCls, "-header");
      return h("div", {
        "class": wrapCls
      }, [h("div", {
        "class": "".concat(prefixCls, "-header-content")
      }, [this.$slots.thumb ? this.$slots.thumb : this.thumb ? h("img", {
        "style": thumbStyle,
        "attrs": {
          "src": thumb
        }
      }) : null, this.$slots.default ? this.$slots.default : title]), this.$slots.extra || extra ? // tslint:disable-next-line:jsx-no-multiline-js
      h("div", {
        "class": "".concat(prefixCls, "-header-extra")
      }, [this.$slots.extra ? this.$slots.extra : extra]) : null]);
    }
  }]);

  return Header;
}(external_Vue_default.a);

__decorate([Prop({
  default: 'am-card'
})], src_header_Header.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], src_header_Header.prototype, "thumbStyle", void 0);

__decorate([Prop({
  type: String
})], src_header_Header.prototype, "thumb", void 0);

__decorate([Prop({
  type: String
})], src_header_Header.prototype, "extra", void 0);

__decorate([Prop({
  type: String
})], src_header_Header.prototype, "title", void 0);

src_header_Header = __decorate([vue_class_component_common_default()({
  name: 'Header'
})], src_header_Header);
/* harmony default export */ var src_header = (src_header_Header);
// CONCATENATED MODULE: ./src/packages/card/src/index.tsx















var src_Card =
/*#__PURE__*/
function (_Vue) {
  _inherits(Card, _Vue);

  function Card() {
    _classCallCheck(this, Card);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Card).apply(this, arguments));
  }

  _createClass(Card, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls,
          full = this.full;
      var wrapCls = classnames_default()(prefixCls, _defineProperty({}, "".concat(prefixCls, "-full"), full));
      return h("div", {
        "class": wrapCls
      }, [this.$slots.default]);
    }
  }]);

  return Card;
}(external_Vue_default.a);

src_Card.Header = src_header;
src_Card.Body = src_body;
src_Card.Footer = src_footer;

__decorate([Prop({
  default: 'am-card'
})], src_Card.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Card.prototype, "full", void 0);

src_Card = __decorate([vue_class_component_common_default()({
  name: 'Card'
})], src_Card);
/* harmony default export */ var card_src = (src_Card);
// EXTERNAL MODULE: ./src/packages/card/style/index.less
var card_style = __webpack_require__("02f8");

// CONCATENATED MODULE: ./src/packages/card/style/index.tsx


// CONCATENATED MODULE: ./src/packages/card/index.ts


var card_Plugin = card_src;

card_Plugin.install = function (Vue) {
  Vue.component('MCard', card_src);
  Vue.component('MCardBody', card_src.Body);
  Vue.component('MCardHeader', card_src.Header);
  Vue.component('MCardFooter', card_src.Footer);
};

/* harmony default export */ var card = (card_Plugin);
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/date/now.js
var date_now = __webpack_require__("0a0d");
var now_default = /*#__PURE__*/__webpack_require__.n(date_now);

// EXTERNAL MODULE: ./node_modules/exenv/index.js
var exenv = __webpack_require__("dab3");
var exenv_default = /*#__PURE__*/__webpack_require__.n(exenv);

// EXTERNAL MODULE: ./node_modules/raf/index.js
var raf = __webpack_require__("c449");
var raf_default = /*#__PURE__*/__webpack_require__.n(raf);

// CONCATENATED MODULE: ./src/packages/carousel/src/decorators.tsx













var decorators_IDecoratorProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(IDecoratorProps, _Vue);

  function IDecoratorProps() {
    _classCallCheck(this, IDecoratorProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(IDecoratorProps).apply(this, arguments));
  }

  return IDecoratorProps;
}(external_Vue_default.a);

__decorate([Prop({
  type: Number
})], decorators_IDecoratorProps.prototype, "currentSlide", void 0);

__decorate([Prop({
  type: Number
})], decorators_IDecoratorProps.prototype, "slideCount", void 0);

__decorate([Prop({
  type: [Number, String]
})], decorators_IDecoratorProps.prototype, "frameWidth", void 0);

__decorate([Prop({
  type: [Number, String]
})], decorators_IDecoratorProps.prototype, "slideWidth", void 0);

__decorate([Prop({
  type: Number
})], decorators_IDecoratorProps.prototype, "slidesToScroll", void 0);

__decorate([Prop({
  type: Number
})], decorators_IDecoratorProps.prototype, "cellSpacing", void 0);

__decorate([Prop({
  type: Number
})], decorators_IDecoratorProps.prototype, "slidesToShow", void 0);

__decorate([Prop({
  type: Boolean
})], decorators_IDecoratorProps.prototype, "wrapAround", void 0);

__decorate([Prop()], decorators_IDecoratorProps.prototype, "nextSlide", void 0);

__decorate([Prop()], decorators_IDecoratorProps.prototype, "previousSlide", void 0);

__decorate([Prop()], decorators_IDecoratorProps.prototype, "goToSlide", void 0);

decorators_IDecoratorProps = __decorate([vue_class_component_common_default()({
  name: 'DefaultDecorator'
})], decorators_IDecoratorProps);


var decorators_Decorator1 =
/*#__PURE__*/
function (_IDecoratorProps) {
  _inherits(Decorator1, _IDecoratorProps);

  function Decorator1() {
    _classCallCheck(this, Decorator1);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Decorator1).apply(this, arguments));
  }

  _createClass(Decorator1, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      return h("button", {
        "style": this.getButtonStyles(this.currentSlide === 0 && !this.wrapAround),
        "on": {
          "click": this.handleClick.bind(this)
        }
      }, ["PREV"]);
    }
  }, {
    key: "handleClick",
    value: function handleClick(e) {
      e.preventDefault();
      this.previousSlide();
    }
  }, {
    key: "getButtonStyles",
    value: function getButtonStyles(disabled) {
      return {
        border: 0,
        background: 'rgba(0,0,0,0.4)',
        color: 'white',
        padding: 10,
        outline: 0,
        opacity: disabled ? 0.3 : 1,
        cursor: 'pointer'
      };
    }
  }]);

  return Decorator1;
}(decorators_IDecoratorProps);

decorators_Decorator1 = __decorate([vue_class_component_common_default()({
  name: 'Decorator1'
})], decorators_Decorator1);

var decorators_Decorator2 =
/*#__PURE__*/
function (_IDecoratorProps2) {
  _inherits(Decorator2, _IDecoratorProps2);

  function Decorator2() {
    _classCallCheck(this, Decorator2);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Decorator2).apply(this, arguments));
  }

  _createClass(Decorator2, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      return h("button", {
        "style": this.getButtonStyles(this.currentSlide + this.slidesToScroll >= this.slideCount && !this.wrapAround),
        "on": {
          "click": this.handleClick.bind(this)
        }
      }, ["NEXT"]);
    }
  }, {
    key: "handleClick",
    value: function handleClick(e) {
      e.preventDefault();

      if (this.nextSlide) {
        this.nextSlide();
      }
    }
  }, {
    key: "getButtonStyles",
    value: function getButtonStyles(disabled) {
      return {
        border: 0,
        background: 'rgba(0,0,0,0.4)',
        color: 'white',
        padding: 10,
        outline: 0,
        opacity: disabled ? 0.3 : 1,
        cursor: 'pointer'
      };
    }
  }]);

  return Decorator2;
}(decorators_IDecoratorProps);

decorators_Decorator2 = __decorate([vue_class_component_common_default()({
  name: 'DefaultDecorator'
})], decorators_Decorator2);

var decorators_Decorator3 =
/*#__PURE__*/
function (_IDecoratorProps3) {
  _inherits(Decorator3, _IDecoratorProps3);

  function Decorator3() {
    _classCallCheck(this, Decorator3);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Decorator3).apply(this, arguments));
  }

  _createClass(Decorator3, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var indexes = this.getIndexes(this.slideCount, this.slidesToScroll);
      return h("ul", {
        "style": this.getListStyles()
      }, [indexes.map(function (index) {
        return h("li", {
          "style": _this.getListItemStyles(),
          "key": index
        }, [h("button", {
          "style": _this.getButtonStyles(_this.currentSlide === index),
          "on": {
            "click": _this.goToSlide && _this.goToSlide.bind(null, index)
          }
        }, ["\u2022"])]);
      })]);
    }
  }, {
    key: "getIndexes",
    value: function getIndexes(count, inc) {
      var arr = [];

      for (var i = 0; i < count; i += inc) {
        arr.push(i);
      }

      return arr;
    }
  }, {
    key: "getListStyles",
    value: function getListStyles() {
      return {
        position: 'relative',
        margin: 0,
        top: -10,
        padding: 0
      };
    }
  }, {
    key: "getListItemStyles",
    value: function getListItemStyles() {
      return {
        listStyleType: 'none',
        display: 'inline-block'
      };
    }
  }, {
    key: "getButtonStyles",
    value: function getButtonStyles(active) {
      return {
        border: 0,
        background: 'transparent',
        color: 'black',
        cursor: 'pointer',
        padding: 10,
        outline: 0,
        fontSize: 24,
        opacity: active ? 1 : 0.5
      };
    }
  }]);

  return Decorator3;
}(decorators_IDecoratorProps);

decorators_Decorator3 = __decorate([vue_class_component_common_default()({
  name: 'DefaultDecorator'
})], decorators_Decorator3);
var DefaultDecorators = [{
  component: decorators_Decorator1,
  position: 'CenterLeft'
}, {
  component: decorators_Decorator2,
  position: 'CenterRight'
}, {
  component: decorators_Decorator3,
  position: 'BottomCenter'
}];
/* harmony default export */ var decorators = (DefaultDecorators);
// CONCATENATED MODULE: ./src/packages/carousel/src/base.tsx




















 // from https://github.com/chenglou/tween-functions

function easeOutCirc(t, b, _c, d) {
  var c = _c - b;
  var t2 = t; // 差之毫厘，谬之千里

  return c * Math.sqrt(1 - (t2 = t2 / d - 1) * t2) + b;
}

function linear(t, b, _c, d) {
  var c = _c - b;
  return c * t / d + b;
}

var DEFAULT_STACK_BEHAVIOR = 'ADDITIVE';
var DEFAULT_DURATION = 300;
var DEFAULT_DELAY = 0;
var stackBehavior = {
  ADDITIVE: 'ADDITIVE',
  DESTRUCTIVE: 'DESTRUCTIVE'
};

var addEvent = function addEvent(elem, type, eventHandle) {
  if (elem === null || typeof elem === 'undefined') {
    return;
  }

  if (elem.addEventListener.bind(elem)) {
    elem.addEventListener(type, eventHandle, false);
  } else if (elem.attachEvent) {
    elem.attachEvent('on' + type, eventHandle);
  } else {
    elem['on' + type] = eventHandle;
  }
};

var removeEvent = function removeEvent(elem, type, eventHandle) {
  if (elem === null || typeof elem === 'undefined') {
    return;
  }

  if (elem.removeEventListener.bind(elem)) {
    elem.removeEventListener(type, eventHandle, false);
  } else if (elem.detachEvent) {
    elem.detachEvent('on' + type, eventHandle);
  } else {
    elem['on' + type] = null;
  }
};

var base_CarouselBase =
/*#__PURE__*/
function (_Vue) {
  _inherits(CarouselBase, _Vue);

  function CarouselBase() {
    var _this;

    _classCallCheck(this, CarouselBase);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(CarouselBase).apply(this, arguments));
    _this.touchObject = {};
    _this.clickSafe = true;
    _this.state = {
      slidesToShow: _this.slidesToShow,
      slideHeight: 0,
      currentSlide: _this.slideIndex,
      dragging: false,
      frameWidth: 0,
      left: 0,
      slideCount: 0,
      lidesToShow: 0,
      slidesToScroll: typeof _this.slidesToScroll === 'number' ? _this.slidesToScroll : 1,
      slideWidth: 0,
      top: 0,
      tweenQueue: []
    };
    return _this;
  }

  _createClass(CarouselBase, [{
    key: "created",
    value: function created() {
      this.setInitialDimensions();
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.setDimensions();
      this.bindEvents();
      this.setExternalData();

      if (this.autoplay) {
        this.startAutoplay();
      }
    }
  }, {
    key: "setState",
    value: function setState(object, callback) {
      var _this2 = this;

      keys_default()(object).forEach(function (key) {
        _this2.state[key] = object[key];
      });

      if (callback) {
        callback();
      }
    }
  }, {
    key: "slideIndexChanged",
    value: function slideIndexChanged(value) {
      if (value !== this.state.currentSlide) {
        this.goToSlide(value);
      }
    }
  }, {
    key: "autoplayChanged",
    value: function autoplayChanged(value) {
      if (value) {
        this.startAutoplay();
      } else {
        this.stopAutoplay();
      }
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      this.unbindEvents();
      this.stopAutoplay();
      raf_default.a.cancel(this._rafID);
      this._rafID = -1;
    } // react-tween-state

  }, {
    key: "tweenState",
    value: function tweenState(path, _ref) {
      var easing = _ref.easing,
          duration = _ref.duration,
          delay = _ref.delay,
          beginValue = _ref.beginValue,
          endValue = _ref.endValue,
          onEnd = _ref.onEnd,
          configSB = _ref.stackBehavior;
      var cursor = this.state;
      var stateName; // see comment below on pash hash

      var pathHash;

      if (typeof path === 'string') {
        stateName = path;
        pathHash = path;
      } else {
        for (var i = 0; i < path.length - 1; i++) {
          cursor = cursor[path[i]];
        }

        stateName = path[path.length - 1];
        pathHash = path.join('|');
      } // see the reasoning for these defaults at the top of file


      var newConfig = {
        easing: easing,
        duration: duration == null ? DEFAULT_DURATION : duration,
        delay: delay == null ? DEFAULT_DELAY : delay,
        beginValue: beginValue == null ? cursor[stateName] : beginValue,
        endValue: endValue,
        onEnd: onEnd,
        stackBehavior: configSB || DEFAULT_STACK_BEHAVIOR
      };
      var newTweenQueue = this.state.tweenQueue;

      if (newConfig.stackBehavior === stackBehavior.DESTRUCTIVE) {
        newTweenQueue = this.state.tweenQueue.filter(function (item) {
          return item.pathHash !== pathHash;
        });
      } // we store path hash, so that during value retrieval we can use hash
      // comparison to find the path. See the kind of shitty thing you have to
      // do when you don't have value comparison for collections?


      newTweenQueue.push({
        pathHash: pathHash,
        config: newConfig,
        initTime: now_default()() + newConfig.delay
      }); // sorry for mutating. For perf reasons we don't want to deep clone.
      // guys, can we please all start using persistent collections so that
      // we can stop worrying about nonesense like this

      cursor[stateName] = newConfig.endValue;

      if (newTweenQueue.length === 1) {
        this._rafID = raf_default()(this._rafCb.bind(this));
      } // this will also include the above mutated update


      this.state.tweenQueue = newTweenQueue;
    }
  }, {
    key: "getTweeningValue",
    value: function getTweeningValue(path) {
      var state = this.state;
      var tweeningValue;
      var pathHash;

      if (typeof path === 'string') {
        tweeningValue = state[path];
        pathHash = path;
      } else {
        tweeningValue = state;

        for (var i = 0; i < path.length; i++) {
          tweeningValue = tweeningValue[path[i]];
        }

        pathHash = path.join('|');
      }

      var now = now_default()();

      for (var _i = 0; _i < state.tweenQueue.length; _i++) {
        var _state$tweenQueue$_i = state.tweenQueue[_i],
            itemPathHash = _state$tweenQueue$_i.pathHash,
            initTime = _state$tweenQueue$_i.initTime,
            config = _state$tweenQueue$_i.config;

        if (itemPathHash !== pathHash) {
          continue;
        }

        var progressTime = now - initTime > config.duration ? config.duration : Math.max(0, now - initTime); // `now - initTime` can be negative if initTime is scheduled in the
        // future by a delay. In this case we take 0
        // if duration is 0, consider that as jumping to endValue directly. This
        // is needed because the easing functino might have undefined behavior for
        // duration = 0

        var easeValue = config.duration === 0 ? config.endValue : config.easing(progressTime, config.beginValue, config.endValue, config.duration // TODO: some funcs accept a 5th param
        );
        var contrib = easeValue - config.endValue;
        tweeningValue += contrib;
      }

      return tweeningValue;
    }
  }, {
    key: "_rafCb",
    value: function _rafCb() {
      var state = this.state;

      if (state.tweenQueue.length === 0) {
        return;
      }

      var now = now_default()();

      var newTweenQueue = [];

      for (var i = 0; i < state.tweenQueue.length; i++) {
        var item = state.tweenQueue[i];
        var initTime = item.initTime,
            config = item.config;

        if (now - initTime < config.duration) {
          newTweenQueue.push(item);
        } else {
          if (config.onEnd) {
            config.onEnd();
          }
        }
      } // onEnd might trigger a parent callback that removes this component
      // -1 means we've canceled it in componentWillUnmount


      if (this._rafID === -1) {
        return;
      }

      this.state.tweenQueue = newTweenQueue;
      this._rafID = raf_default()(this._rafCb);
    }
  }, {
    key: "beforeUpdate",
    value: function beforeUpdate() {
      this.setDimensions();
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var h = arguments[0];
      this.state.slideCount = this.$slots.default.length;
      var children = this.childrenCount() > 1 ? this.formatChildren(this.$slots.default) : this.$slots.default;
      return h("div", {
        "class": "slider",
        "ref": "slider",
        "style": assign_default()({}, this.getSliderStyles())
      }, [h("div", helper_default()([{
        "class": "slider-frame",
        "ref": "frame",
        "style": this.getFrameStyles()
      }, {
        "on": assign_default()({}, this.getTouchEvents(), this.getMouseEvents())
      }, {
        "on": {
          "click": this.handleClick.bind(this)
        }
      }]), [h("ul", {
        "class": "slider-list'} ref={'list",
        "style": this.getListStyles()
      }, [children])]), this.decorators ? this.decorators.map(function (Decorator, index) {
        return h("div", {
          "style": assign_default()({}, _this3.getDecoratorStyles(Decorator.position), Decorator.style || {}),
          "class": 'slider-decorator-' + index,
          "key": index
        }, [h(Decorator.component, helper_default()([{}, {
          "props": {
            currentSlide: _this3.state.currentSlide,
            slideCount: _this3.state.slideCount,
            frameWidth: _this3.state.frameWidth,
            slideWidth: _this3.state.slideWidth,
            slidesToScroll: _this3.state.slidesToScroll,
            cellSpacing: _this3.cellSpacing,
            slidesToShow: _this3.slidesToShow,
            wrapAround: _this3.wrapAround,
            nextSlide: _this3.nextSlide.bind(_this3),
            previousSlide: _this3.previousSlide.bind(_this3),
            goToSlide: _this3.goToSlide.bind(_this3)
          }
        }]))]);
      }) : null, h("style", {
        "attrs": {
          "type": "text/css",
          "dangerouslySetInnerHTML": {
            __html: this.getStyleTagStyles()
          }
        }
      })]);
    } // Touch Events

  }, {
    key: "getTouchEvents",
    value: function getTouchEvents() {
      var self = this;

      if (this.swiping === false) {
        return null;
      }

      return {
        touchstart: function touchstart(e) {
          self.touchObject = {
            startX: e.touches[0].pageX,
            startY: e.touches[0].pageY
          };
          self.handleMouseOver();
        },
        touchmove: function touchmove(e) {
          var direction = self.swipeDirection(self.touchObject.startX, e.touches[0].pageX, self.touchObject.startY, e.touches[0].pageY);

          if (direction !== 0) {
            e.preventDefault();
          }

          var length = self.vertical ? Math.round(Math.sqrt(Math.pow(e.touches[0].pageY - self.touchObject.startY, 2))) : Math.round(Math.sqrt(Math.pow(e.touches[0].pageX - self.touchObject.startX, 2)));
          self.touchObject = {
            startX: self.touchObject.startX,
            startY: self.touchObject.startY,
            endX: e.touches[0].pageX,
            endY: e.touches[0].pageY,
            length: length,
            direction: direction
          };
          self.setState({
            left: self.vertical ? 0 : self.getTargetLeft(self.touchObject.length * self.touchObject.direction),
            top: self.vertical ? self.getTargetLeft(self.touchObject.length * self.touchObject.direction) : 0
          });
        },
        touchend: function touchend(e) {
          self.handleSwipe(e);
          self.handleMouseOut();
        },
        touchcancel: function touchcancel(e) {
          self.handleSwipe(e);
        }
      };
    }
  }, {
    key: "getMouseEvents",
    value: function getMouseEvents() {
      var self = this;

      if (this.dragging === false) {
        return null;
      }

      return {
        mouseover: function mouseover() {
          self.handleMouseOver();
        },
        mouseout: function mouseout() {
          self.handleMouseOut();
        },
        mousedown: function mousedown(e) {
          self.touchObject = {
            startX: e.clientX,
            startY: e.clientY
          };
          self.setState({
            dragging: true
          });
        },
        mousemove: function mousemove(e) {
          if (!self.state.dragging) {
            return;
          }

          var direction = self.swipeDirection(self.touchObject.startX, e.clientX, self.touchObject.startY, e.clientY);

          if (direction !== 0) {
            e.preventDefault();
          }

          var length = self.vertical ? Math.round(Math.sqrt(Math.pow(e.clientY - self.touchObject.startY, 2))) : Math.round(Math.sqrt(Math.pow(e.clientX - self.touchObject.startX, 2)));
          self.touchObject = {
            startX: self.touchObject.startX,
            startY: self.touchObject.startY,
            endX: e.clientX,
            endY: e.clientY,
            length: length,
            direction: direction
          };
          self.setState({
            left: self.vertical ? 0 : self.getTargetLeft(self.touchObject.length * self.touchObject.direction),
            top: self.vertical ? self.getTargetLeft(self.touchObject.length * self.touchObject.direction) : 0
          });
        },
        mouseup: function mouseup(e) {
          if (!self.state.dragging) {
            return;
          }

          self.handleSwipe(e);
        },
        mouseleave: function mouseleave(e) {
          if (!self.state.dragging) {
            return;
          }

          self.handleSwipe(e);
        }
      };
    }
  }, {
    key: "handleMouseOver",
    value: function handleMouseOver() {
      if (this.autoplay) {
        this.autoplayPaused = true;
        this.stopAutoplay();
      }
    }
  }, {
    key: "handleMouseOut",
    value: function handleMouseOut() {
      if (this.autoplay && this.autoplayPaused) {
        this.startAutoplay();
        this.autoplayPaused = null;
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick(e) {
      if (this.clickSafe === true) {
        e.preventDefault();
        e.stopPropagation();

        if (e.nativeEvent) {
          e.nativeEvent.stopPropagation();
        }
      }
    }
  }, {
    key: "handleSwipe",
    value: function handleSwipe(_) {
      this.clickSafe = !!(typeof this.touchObject.length !== 'undefined' && this.touchObject.length > 44);
      var slidesToShow = this.slidesToShow;
      var slidesToScroll = this.slidesToScroll,
          swipeSpeed = this.swipeSpeed; // var slidesToShow = this.slidesToShow;

      if (slidesToScroll === 'auto') {
        this.state.lidesToShow = this.state.slidesToScroll;
      }

      if (this.childrenCount() > 1 && this.touchObject.length > this.state.slideWidth / slidesToShow / swipeSpeed) {
        if (this.touchObject.direction === 1) {
          if (this.state.currentSlide >= this.childrenCount() - slidesToShow && !this.wrapAround) {
            this.animateSlide(this.edgeEasing);
          } else {
            this.nextSlide();
          }
        } else if (this.touchObject.direction === -1) {
          if (this.state.currentSlide <= 0 && !this.wrapAround) {
            this.animateSlide(this.edgeEasing);
          } else {
            this.previousSlide();
          }
        }
      } else {
        this.goToSlide(this.state.currentSlide);
      }

      this.touchObject = {};
      this.state.dragging = false;
    }
  }, {
    key: "swipeDirection",
    value: function swipeDirection(x1, x2, y1, y2) {
      var xDist = x1 - x2;
      var yDist = y1 - y2;
      var r = Math.atan2(yDist, xDist);
      var swipeAngle = Math.round(r * 180 / Math.PI);

      if (swipeAngle < 0) {
        swipeAngle = 360 - Math.abs(swipeAngle);
      }

      if (swipeAngle <= 45 && swipeAngle >= 0) {
        return 1;
      }

      if (swipeAngle <= 360 && swipeAngle >= 315) {
        return 1;
      }

      if (swipeAngle >= 135 && swipeAngle <= 225) {
        return -1;
      }

      if (this.vertical === true) {
        if (swipeAngle >= 35 && swipeAngle <= 135) {
          return 1;
        } else {
          return -1;
        }
      }

      return 0;
    }
  }, {
    key: "autoplayIterator",
    value: function autoplayIterator() {
      if (this.wrapAround) {
        return this.nextSlide();
      }

      if (this.state.currentSlide !== this.state.slideCount - this.state.slidesToShow) {
        this.nextSlide();
      } else {
        this.stopAutoplay();
      }
    }
  }, {
    key: "startAutoplay",
    value: function startAutoplay() {
      if (this.childrenCount() <= 1) {
        return;
      }

      this.autoplayID = setInterval(this.autoplayIterator, this.autoplayInterval);
    }
  }, {
    key: "resetAutoplayFun",
    value: function resetAutoplayFun() {
      if (this.resetAutoplay && this.autoplay && !this.autoplayPaused) {
        // by warmhug
        this.stopAutoplay();
        this.startAutoplay();
      }
    }
  }, {
    key: "stopAutoplay",
    value: function stopAutoplay() {
      if (this.autoplayID) {
        clearInterval(this.autoplayID);
      }
    } // Action Methods

  }, {
    key: "goToSlide",
    value: function goToSlide(index) {
      var _this4 = this;

      var beforeSlide = this.beforeSlide,
          afterSlide = this.afterSlide;

      if (index >= this.childrenCount() || index < 0) {
        if (!this.wrapAround) {
          return;
        }

        if (index >= this.childrenCount()) {
          beforeSlide(this.state.currentSlide, 0);
          return this.setState({
            currentSlide: 0
          }, function () {
            _this4.animateSlide(null, null, _this4.getTargetLeft(null, index), function () {
              _this4.animateSlide(null, 0.01);

              afterSlide(0);

              _this4.resetAutoplayFun();

              _this4.setExternalData();
            });
          });
        } else {
          var endSlide = this.childrenCount() - this.state.slidesToScroll;
          beforeSlide(this.state.currentSlide, endSlide);
          return this.setState({
            currentSlide: endSlide
          }, function () {
            _this4.animateSlide(null, null, _this4.getTargetLeft(null, index), function () {
              _this4.animateSlide(null, 0.01);

              afterSlide(endSlide);

              _this4.resetAutoplayFun();

              _this4.setExternalData();
            });
          });
        }
      }

      beforeSlide(this.state.currentSlide, index);
      this.state.currentSlide = index;
      this.animateSlide();
      this.afterSlide(index);
      this.resetAutoplayFun();
      this.setExternalData();
    }
  }, {
    key: "nextSlide",
    value: function nextSlide() {
      var childrenCount = this.childrenCount();
      var slidesToShow = this.slidesToShow;

      if (this.slidesToScroll === 'auto') {
        slidesToShow = this.state.slidesToScroll;
      }

      if (this.state.currentSlide >= childrenCount - slidesToShow && !this.wrapAround) {
        return;
      }

      if (this.wrapAround) {
        this.goToSlide(this.state.currentSlide + this.state.slidesToScroll);
      } else {
        if (this.slideWidth !== 1) {
          return this.goToSlide(this.state.currentSlide + this.state.slidesToScroll);
        }

        this.goToSlide(Math.min(this.state.currentSlide + this.state.slidesToScroll, childrenCount - slidesToShow));
      }
    }
  }, {
    key: "previousSlide",
    value: function previousSlide() {
      if (this.state.currentSlide <= 0 && !this.wrapAround) {
        return;
      }

      if (this.wrapAround) {
        this.goToSlide(this.state.currentSlide - this.state.slidesToScroll);
      } else {
        this.goToSlide(Math.max(0, this.state.currentSlide - this.state.slidesToScroll));
      }
    } // Animation

  }, {
    key: "animateSlide",
    value: function animateSlide(easing, duration, endValue, callback) {
      this.tweenState(this.vertical ? 'top' : 'left', {
        easing: easing || this.easing,
        duration: duration || this.speed,
        endValue: endValue || this.getTargetLeft(),
        delay: null,
        beginValue: null,
        onEnd: callback || null,
        stackBehavior: stackBehavior
      });
    }
  }, {
    key: "getTargetLeft",
    value: function getTargetLeft(touchOffset, slide) {
      var offset;
      var target = slide || this.state.currentSlide;
      var cellSpacing = this.cellSpacing;

      switch (this.cellAlign) {
        case 'left':
          {
            offset = 0;
            offset -= cellSpacing * target;
            break;
          }

        case 'center':
          {
            offset = (this.state.frameWidth - this.state.slideWidth) / 2;
            offset -= cellSpacing * target;
            break;
          }

        case 'right':
          {
            offset = this.state.frameWidth - this.state.slideWidth;
            offset -= cellSpacing * target;
            break;
          }

        default:
          break;
      }

      var left = this.state.slideWidth * target;
      var lastSlide = this.state.currentSlide > 0 && target + this.state.slidesToScroll >= this.state.slideCount;

      if (lastSlide && this.slideWidth !== 1 && !this.wrapAround && this.slidesToScroll === 'auto') {
        left = this.state.slideWidth * this.state.slideCount - this.state.frameWidth;
        offset = 0;
        offset -= cellSpacing * (this.state.slideCount - 1);
      }

      offset -= touchOffset || 0;
      console.log(left);
      return (left - offset) * -1;
    } // Bootstrapping

  }, {
    key: "bindEvents",
    value: function bindEvents() {
      if (exenv_default.a.canUseDOM) {
        addEvent(window, 'resize', this.onResize.bind(this));
        addEvent(document, 'readystatechange', this.onReadyStateChange.bind(this));
      }
    }
  }, {
    key: "onResize",
    value: function onResize() {
      this.setDimensions();
    }
  }, {
    key: "onReadyStateChange",
    value: function onReadyStateChange() {
      this.setDimensions();
    }
  }, {
    key: "unbindEvents",
    value: function unbindEvents() {
      if (exenv_default.a.canUseDOM) {
        removeEvent(window, 'resize', this.onResize.bind(this));
        removeEvent(document, 'readystatechange', this.onReadyStateChange.bind(this));
      }
    }
  }, {
    key: "formatChildren",
    value: function formatChildren(children) {
      var _this5 = this;

      var h = this.$createElement;
      var positionValue = this.vertical ? this.getTweeningValue('top') : this.getTweeningValue('left');
      return children.map(function (child, index) {
        return h("li", {
          "class": "slider-slide",
          "style": _this5.getSlideStyles(index, positionValue),
          "key": index
        }, [child]);
      });
    }
  }, {
    key: "setInitialDimensions",
    value: function setInitialDimensions() {
      var _this6 = this;

      var vertical = this.vertical,
          initialSlideHeight = this.initialSlideHeight,
          initialSlideWidth = this.initialSlideWidth,
          slidesToShow = this.slidesToShow,
          cellSpacing = this.cellSpacing;
      var slideWidth = vertical ? initialSlideHeight || 0 : initialSlideWidth || 0;
      var slideHeight = initialSlideHeight ? initialSlideHeight * slidesToShow : 0;
      var frameHeight = slideHeight + cellSpacing * (slidesToShow - 1);
      this.setState({
        slideHeight: slideHeight,
        frameWidth: vertical ? frameHeight : '100%',
        slideCount: this.childrenCount(),
        slideWidth: slideWidth
      }, function () {
        _this6.setLeft();

        _this6.setExternalData();
      });
    }
  }, {
    key: "setDimensions",
    value: function setDimensions() {
      var _this7 = this;

      var frameWidth;
      var frameHeight;
      var slideHeight;
      var slideWidth;
      var slidesToScroll = this.slidesToScroll;
      var frame = this.$refs.frame;
      var firstSlide = frame && frame.childNodes[0].childNodes[0];

      if (firstSlide) {
        firstSlide.style.height = 'auto';
        slideHeight = this.vertical ? firstSlide.offsetHeight * this.slidesToShow : firstSlide.offsetHeight;
      } else {
        slideHeight = 100;
      }

      if (typeof this.slideWidth !== 'number') {
        slideWidth = parse_int_default()(this.slideWidth, 10);
      } else {
        if (this.vertical) {
          slideWidth = slideHeight / this.slidesToShow * this.slideWidth;
        } else {
          if (frame) {
            slideWidth = frame.offsetWidth / this.slidesToShow * this.slideWidth;
          }
        }
      }

      if (!this.vertical) {
        slideWidth -= this.cellSpacing * ((100 - 100 / this.slidesToShow) / 100);
      }

      frameHeight = slideHeight + this.cellSpacing * (this.slidesToShow - 1);

      if (frame) {
        frameWidth = this.vertical ? frameHeight : frame.offsetWidth;
      }

      if (this.slidesToScroll === 'auto') {
        this.state.slidesToScroll = Math.floor(frameWidth / (slideWidth + this.cellSpacing));
      }

      this.setState({
        slideHeight: slideHeight,
        frameWidth: frameWidth,
        slideWidth: slideWidth,
        slidesToScroll: slidesToScroll,
        left: this.vertical ? 0 : this.getTargetLeft(),
        top: this.vertical ? this.getTargetLeft() : 0
      }, function () {
        _this7.setLeft();
      });
    }
  }, {
    key: "setLeft",
    value: function setLeft() {
      this.setState({
        left: this.vertical ? 0 : this.getTargetLeft(),
        top: this.vertical ? this.getTargetLeft() : 0
      });
    } // Data

  }, {
    key: "setExternalData",
    value: function setExternalData() {
      if (this.data) {
        this.data();
      }
    }
  }, {
    key: "childrenCount",
    value: function childrenCount() {
      return this.$slots.default && this.$slots.default.length || 0;
    } // Styles

  }, {
    key: "getListStyles",
    value: function getListStyles() {
      var listWidth = this.state.slideWidth * this.childrenCount();
      var cellSpacing = this.cellSpacing;
      var spacingOffset = cellSpacing * this.childrenCount();
      var transform = 'translate3d(' + this.getTweeningValue('left') + 'px, ' + this.getTweeningValue('top') + 'px, 0)';
      return {
        transform: transform,
        WebkitTransform: transform,
        msTransform: 'translate(' + this.getTweeningValue('left') + 'px, ' + this.getTweeningValue('top') + 'px)',
        position: 'relative',
        display: 'block',
        margin: this.vertical ? cellSpacing / 2 * -1 + 'px 0px' : '0px ' + cellSpacing / 2 * -1 + 'px',
        padding: 0,
        height: this.vertical ? listWidth + spacingOffset + 'px' : this.state.slideHeight + 'px',
        width: this.vertical ? 'auto' : listWidth + spacingOffset + 'px',
        cursor: this.state.dragging ? 'pointer' : 'inherit',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box'
      };
    }
  }, {
    key: "getFrameStyles",
    value: function getFrameStyles() {
      return {
        position: 'relative',
        display: 'block',
        overflow: this.frameOverflow,
        height: this.vertical ? this.state.frameWidth + 'px' || false : 'auto',
        margin: this.framePadding,
        padding: 0,
        transform: 'translate3d(0, 0, 0)',
        WebkitTransform: 'translate3d(0, 0, 0)',
        msTransform: 'translate(0, 0)',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box'
      };
    }
  }, {
    key: "getSlideStyles",
    value: function getSlideStyles(index, positionValue) {
      var targetPosition = this.getSlideTargetPosition(index, positionValue);
      var cellSpacing = this.cellSpacing;
      return {
        position: 'absolute',
        left: this.vertical ? 0 : targetPosition + 'px',
        top: this.vertical ? targetPosition + 'px' : 0,
        display: this.vertical ? 'block' : 'inline-block',
        listStyleType: 'none',
        verticalAlign: 'top',
        width: this.vertical ? '100%' : this.state.slideWidth + 'px',
        height: 'auto',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box',
        marginLeft: this.vertical ? 'auto' : cellSpacing / 2 + 'px',
        marginRight: this.vertical ? 'auto' : cellSpacing / 2 + 'px',
        marginTop: this.vertical ? cellSpacing / 2 + 'px' : 'auto',
        marginBottom: this.vertical ? cellSpacing / 2 + 'px' : 'auto'
      };
    }
  }, {
    key: "getSlideTargetPosition",
    value: function getSlideTargetPosition(index, positionValue) {
      var slidesToShow = this.state.frameWidth / this.state.slideWidth;
      var targetPosition = (this.state.slideWidth + this.cellSpacing) * index;
      var end = (this.state.slideWidth + this.cellSpacing) * slidesToShow * -1;

      if (this.wrapAround) {
        var slidesBefore = Math.ceil(positionValue / this.state.slideWidth);

        if (this.state.slideCount - slidesBefore <= index) {
          return (this.state.slideWidth + this.cellSpacing) * (this.state.slideCount - index) * -1;
        }

        var slidesAfter = Math.ceil((Math.abs(positionValue) - Math.abs(end)) / this.state.slideWidth);

        if (this.state.slideWidth !== 1) {
          slidesAfter = Math.ceil((Math.abs(positionValue) - this.state.slideWidth) / this.state.slideWidth);
        }

        if (index <= slidesAfter - 1) {
          return (this.state.slideWidth + this.cellSpacing) * (this.state.slideCount + index);
        }
      }

      return targetPosition;
    }
  }, {
    key: "getSliderStyles",
    value: function getSliderStyles() {
      return {
        position: 'relative',
        display: 'block',
        width: this.width,
        height: 'auto',
        boxSizing: 'border-box',
        MozBoxSizing: 'border-box',
        visibility: this.state.slideWidth ? 'visible' : 'hidden'
      };
    }
  }, {
    key: "getStyleTagStyles",
    value: function getStyleTagStyles() {
      return '.slider-slide > img {width: 100%; display: block;}';
    }
  }, {
    key: "getDecoratorStyles",
    value: function getDecoratorStyles(position) {
      switch (position) {
        case 'TopLeft':
          {
            return {
              position: 'absolute',
              top: 0,
              left: 0
            };
          }

        case 'TopCenter':
          {
            return {
              position: 'absolute',
              top: 0,
              left: '50%',
              transform: 'translateX(-50%)',
              WebkitTransform: 'translateX(-50%)',
              msTransform: 'translateX(-50%)'
            };
          }

        case 'TopRight':
          {
            return {
              position: 'absolute',
              top: 0,
              right: 0
            };
          }

        case 'CenterLeft':
          {
            return {
              position: 'absolute',
              top: '50%',
              left: 0,
              transform: 'translateY(-50%)',
              WebkitTransform: 'translateY(-50%)',
              msTransform: 'translateY(-50%)'
            };
          }

        case 'CenterCenter':
          {
            return {
              position: 'absolute',
              top: '50%',
              left: '50%',
              transform: 'translate(-50%,-50%)',
              WebkitTransform: 'translate(-50%, -50%)',
              msTransform: 'translate(-50%, -50%)'
            };
          }

        case 'CenterRight':
          {
            return {
              position: 'absolute',
              top: '50%',
              right: 0,
              transform: 'translateY(-50%)',
              WebkitTransform: 'translateY(-50%)',
              msTransform: 'translateY(-50%)'
            };
          }

        case 'BottomLeft':
          {
            return {
              position: 'absolute',
              bottom: 0,
              left: 0
            };
          }

        case 'BottomCenter':
          {
            return {
              position: 'absolute',
              bottom: 0,
              width: '100%',
              textAlign: 'center'
            };
          }

        case 'BottomRight':
          {
            return {
              position: 'absolute',
              bottom: 0,
              right: 0
            };
          }

        default:
          {
            return {
              position: 'absolute',
              top: 0,
              left: 0
            };
          }
      }
    }
  }]);

  return CarouselBase;
}(external_Vue_default.a);

__decorate([Prop({
  default: function _default() {
    return function () {};
  }
})], base_CarouselBase.prototype, "afterSlide", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], base_CarouselBase.prototype, "autoplay", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], base_CarouselBase.prototype, "resetAutoplay", void 0);

__decorate([Prop({
  default: 12
})], base_CarouselBase.prototype, "swipeSpeed", void 0);

__decorate([Prop({
  default: 3000
})], base_CarouselBase.prototype, "autoplayInterval", void 0);

__decorate([Prop({
  default: function _default() {
    return function () {};
  }
})], base_CarouselBase.prototype, "beforeSlide", void 0);

__decorate([Prop({
  default: 'left'
})], base_CarouselBase.prototype, "cellAlign", void 0);

__decorate([Prop({
  default: 0
})], base_CarouselBase.prototype, "cellSpacing", void 0);

__decorate([Prop({
  default: function _default() {
    return function () {};
  }
})], base_CarouselBase.prototype, "data", void 0);

__decorate([Prop({
  default: function _default() {
    return decorators;
  }
})], base_CarouselBase.prototype, "decorators", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], base_CarouselBase.prototype, "dragging", void 0);

__decorate([Prop({
  default: function _default() {
    return easeOutCirc;
  }
})], base_CarouselBase.prototype, "easing", void 0);

__decorate([Prop({
  default: function _default() {
    return linear;
  }
})], base_CarouselBase.prototype, "edgeEasing", void 0);

__decorate([Prop({
  default: '0px'
})], base_CarouselBase.prototype, "framePadding", void 0);

__decorate([Prop({
  default: 'hidden'
})], base_CarouselBase.prototype, "frameOverflow", void 0);

__decorate([Prop()], base_CarouselBase.prototype, "initialSlideHeight", void 0);

__decorate([Prop()], base_CarouselBase.prototype, "initialSlideWidth", void 0);

__decorate([Prop({
  default: 0
})], base_CarouselBase.prototype, "slideIndex", void 0);

__decorate([Prop({
  default: 1
})], base_CarouselBase.prototype, "slidesToShow", void 0);

__decorate([Prop({
  default: 1
})], base_CarouselBase.prototype, "slidesToScroll", void 0);

__decorate([Prop({
  default: 1
})], base_CarouselBase.prototype, "slideWidth", void 0);

__decorate([Prop({
  default: 500
})], base_CarouselBase.prototype, "speed", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], base_CarouselBase.prototype, "swiping", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], base_CarouselBase.prototype, "vertical", void 0);

__decorate([Prop({
  default: '100%'
})], base_CarouselBase.prototype, "width", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], base_CarouselBase.prototype, "wrapAround", void 0);

__decorate([Watch('slideIndex')], base_CarouselBase.prototype, "slideIndexChanged", null);

__decorate([Watch('autoplay')], base_CarouselBase.prototype, "autoplayChanged", null);

base_CarouselBase = __decorate([vue_class_component_common_default()({
  name: 'CarouselBase'
})], base_CarouselBase);
/* harmony default export */ var base = (base_CarouselBase);
// CONCATENATED MODULE: ./src/packages/carousel/src/index.tsx
















var src_DotDecorator =
/*#__PURE__*/
function (_Vue) {
  _inherits(DotDecorator, _Vue);

  function DotDecorator() {
    _classCallCheck(this, DotDecorator);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DotDecorator).apply(this, arguments));
  }

  _createClass(DotDecorator, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var arr = [];

      for (var i = 0; i < this.slideCount; i += this.slidesToScroll) {
        arr.push(i);
      }

      var dotDom = arr.map(function (index) {
        var dotCls = classnames_default()("".concat(_this.prefixCls, "-wrap-dot"), _defineProperty({}, "".concat(_this.prefixCls, "-wrap-dot-active"), index === _this.currentSlide));
        var currentDotStyle = index === _this.currentSlide ? _this.dotActiveStyle : _this.dotStyle;
        return h("div", {
          "class": dotCls,
          "key": index
        }, [h("span", {
          "style": currentDotStyle
        })]);
      });
      return h("div", {
        "class": "".concat(this.prefixCls, "-wrap")
      }, [dotDom]);
    }
  }]);

  return DotDecorator;
}(external_Vue_default.a);

__decorate([Prop(Number)], src_DotDecorator.prototype, "slideCount", void 0);

__decorate([Prop(Number)], src_DotDecorator.prototype, "slidesToScroll", void 0);

__decorate([Prop(Number)], src_DotDecorator.prototype, "currentSlide", void 0);

__decorate([Prop({
  type: String,
  default: 'am-carousel'
})], src_DotDecorator.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Object
})], src_DotDecorator.prototype, "dotActiveStyle", void 0);

__decorate([Prop({
  type: Object
})], src_DotDecorator.prototype, "dotStyle", void 0);

src_DotDecorator = __decorate([vue_class_component_common_default()({
  name: 'DotDecorator'
})], src_DotDecorator);

var src_Carousel =
/*#__PURE__*/
function (_Vue2) {
  _inherits(Carousel, _Vue2);

  function Carousel() {
    var _this2;

    _classCallCheck(this, Carousel);

    _this2 = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Carousel).apply(this, arguments));
    _this2.selectedIndex = 0;
    return _this2;
  }

  _createClass(Carousel, [{
    key: "onChange",
    value: function onChange(index) {
      this.selectedIndex = index;

      if (this.afterChange) {
        this.afterChange(index);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var infinite = this.infinite,
          selectedIndex = this.selectedIndex,
          beforeChange = this.beforeChange,
          afterChange = this.afterChange,
          dots = this.dots,
          prefixCls = this.prefixCls,
          dotActiveStyle = this.dotActiveStyle,
          dotStyle = this.dotStyle,
          vertical = this.vertical;

      var newProps = assign_default()({}, this.$props, {
        wrapAround: infinite,
        slideIndex: selectedIndex,
        beforeSlide: beforeChange
      });

      var Decorators = [];

      if (dots) {
        Decorators = [{
          component: src_DotDecorator,
          position: 'BottomCenter'
        }];
      }

      var wrapCls = classnames_default()(prefixCls, _defineProperty({}, "".concat(prefixCls, "-vertical"), vertical));
      return h(base, helper_default()([{}, {
        "props": assign_default()({}, newProps, {
          decorators: Decorators,
          afterSlide: this.onChange
        })
      }, {
        "class": wrapCls
      }]), [this.$slots.default]);
    }
  }]);

  return Carousel;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-carousel'
})], src_Carousel.prototype, "prefixCls", void 0);

__decorate([Prop()], src_Carousel.prototype, "beforeChange", void 0);

__decorate([Prop()], src_Carousel.prototype, "afterChange", void 0);

__decorate([Prop()], src_Carousel.prototype, "swipeSpeed", void 0);

__decorate([Prop()], src_Carousel.prototype, "easing", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], src_Carousel.prototype, "dotStyle", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], src_Carousel.prototype, "dotActiveStyle", void 0);

__decorate([Prop({
  type: String
})], src_Carousel.prototype, "frameOverflow", void 0);

__decorate([Prop({
  type: String,
  default: 'center'
})], src_Carousel.prototype, "cellAlign", void 0);

__decorate([Prop(Number)], src_Carousel.prototype, "cellSpacing", void 0);

__decorate([Prop([String, Number])], src_Carousel.prototype, "slideWidth", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Carousel.prototype, "dots", void 0);

__decorate([Prop({
  type: Boolean
})], src_Carousel.prototype, "vertical", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Carousel.prototype, "autoplay", void 0);

__decorate([Prop(Number)], src_Carousel.prototype, "autoplayInterval", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Carousel.prototype, "infinite", void 0);

__decorate([Prop(Number)], src_Carousel.prototype, "initialSlideWidth", void 0);

src_Carousel = __decorate([vue_class_component_common_default()({
  name: 'Carousel'
})], src_Carousel);
/* harmony default export */ var carousel_src = (src_Carousel);
// EXTERNAL MODULE: ./src/packages/carousel/style/index.less
var carousel_style = __webpack_require__("c0ad");

// CONCATENATED MODULE: ./src/packages/carousel/style/index.tsx


// CONCATENATED MODULE: ./src/packages/carousel/index.ts


var carousel_Plugin = carousel_src;

carousel_Plugin.install = function (Vue) {
  Vue.component('MCarousel', carousel_src);
};

/* harmony default export */ var packages_carousel = (carousel_Plugin);
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/object/values.js
var object_values = __webpack_require__("db0c");
var values_default = /*#__PURE__*/__webpack_require__.n(object_values);

// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js
var runtime = __webpack_require__("96cf");

// EXTERNAL MODULE: ./node_modules/@antv/f2/build/f2.js
var f2 = __webpack_require__("2095");
var f2_default = /*#__PURE__*/__webpack_require__.n(f2);

// CONCATENATED MODULE: ./src/packages/chart/src/index.tsx






















var src_VChart =
/*#__PURE__*/
function (_Vue) {
  _inherits(VChart, _Vue);

  function VChart() {
    var _this;

    _classCallCheck(this, VChart);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VChart).apply(this, arguments));
    _this.xField = '';
    _this.yField = '';
    _this.hasPoint = false;
    _this.pointStyle = {};
    _this.guideTags = [];
    _this.areaOptions = null;
    _this.lineOptions = null;
    _this.tooltipOptions = null;
    _this.legendOptions = null;
    _this.barOptions = null;
    _this.pieOptions = null;
    _this.guideOptions = null;
    _this.pointOptions = null;
    _this.xFieldOptions = {};
    _this.yFieldOptions = {};
    _this.guides = [];
    _this.seriesField = '';
    _this.xAxisOptions = null;
    _this.yAxisOptions = null;
    _this.autoAlignXAxis = undefined;
    return _this;
  }

  _createClass(VChart, [{
    key: "dataChanged",
    value: function dataChanged() {
      this.changeData(this.data);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      return __awaiter(this, void 0, void 0,
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.$nextTick();

              case 2:
                this.renderComponent();
                window.addEventListener('resize', this.renderComponent);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      window.removeEventListener('resize', this.renderComponent);
      this.destroy();
    }
  }, {
    key: "onTouchstart",
    value: function onTouchstart(e) {
      this.preventDefault && e.preventDefault();
    }
  }, {
    key: "set",
    value: function set(name, options) {
      this["".concat(name, "Options")] = options;
    }
  }, {
    key: "changeData",
    value: function changeData(data) {
      this.chart && this.chart.changeData(data);
    }
  }, {
    key: "setField",
    value: function setField(axis, item) {
      this["".concat(axis, "Field")] = item;
    }
  }, {
    key: "repaint",
    value: function repaint() {
      this.chart.repaint();
    }
  }, {
    key: "heightChanged",
    value: function heightChanged() {
      this.rerender();
    }
  }, {
    key: "widthChanged",
    value: function widthChanged() {
      this.rerender();
    }
  }, {
    key: "rerender",
    value: function rerender() {
      this.destroy();
      this.renderComponent();
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.chart && this.chart.destroy();
    }
  }, {
    key: "addGuide",
    value: function addGuide(options) {
      this.guides.push(options);
    }
  }, {
    key: "setScale",
    value: function setScale(options) {
      if (options.x) {
        this.xFieldOptions = options.x;
      }

      if (options.y) {
        this.yFieldOptions = options.y;
      }
    }
  }, {
    key: "setAxis",
    value: function setAxis(options) {
      if (options.x) {
        this.xAxisOptions = options;

        if (typeof options.autoAlign !== 'undefined') {
          this.autoAlignXAxis = options.autoAlign;
        }
      }

      if (options.y) {
        this.yAxisOptions = options;
      }
    }
  }, {
    key: "buildColor",
    value: function buildColor(c) {
      var color = c || '';

      if (is_array_default()(c) && is_array_default()(c[0])) {
        var ctx = this.$refs.chart.getContext('2d');
        color = ctx.createLinearGradient(0, 0, window.innerWidth, 0);
        c.forEach(function (c) {
          color.addColorStop(c[0], c[1]);
        });
      }

      return color;
    }
  }, {
    key: "setPie",
    value: function setPie() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.pieOptions = options;
    }
  }, {
    key: "setBar",
    value: function setBar() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.barOptions = options;
    }
  }, {
    key: "setLegend",
    value: function setLegend(options) {
      this.legendOptions = options;
    }
  }, {
    key: "setTooltip",
    value: function setTooltip(options) {
      this.tooltipOptions = options;
    }
  }, {
    key: "setArea",
    value: function setArea(options) {
      this.areaOptions = options;
    }
  }, {
    key: "setGuide",
    value: function setGuide(options) {
      this.guideOptions = options;
    }
  }, {
    key: "setLine",
    value: function setLine(options) {
      this.lineOptions = options;
    }
  }, {
    key: "setPoint",
    value: function setPoint(options) {
      this.pointOptions = options;
    }
  }, {
    key: "buildPosition",
    value: function buildPosition() {
      return "".concat(this.xField, "*").concat(this.yField);
    }
  }, {
    key: "getFields",
    value: function getFields() {
      if (this.xField && this.yField) {
        return;
      }

      if (this.data && this.data.length) {
        var keys = keys_default()(this.data[0]);

        if (keys.length >= 2) {
          var indexes = [0, 1];

          var type1 = typeof_typeof(this.data[0][keys[0]]);

          var type2 = typeof_typeof(this.data[0][keys[1]]);

          if (type1 === 'number' && type2 !== 'number') {
            indexes = [1, 0];
          } else if (type1 === 'string' && type2 === 'string' && keys[2] === 'value') {
            indexes = [0, 2];
          }

          this.xField = keys[indexes[0]];
          this.yField = keys[indexes[1]];
        }
      }
    }
  }, {
    key: "renderComponent",
    value: function renderComponent() {
      var autoAlignXAxis = this.autoAlignXAxis;

      if (this.barOptions) {
        autoAlignXAxis = false;
      }

      if (typeof autoAlignXAxis === 'undefined') {
        autoAlignXAxis = true;
      }

      var parentWidth = this.$refs.wrapper.clientWidth;
      var parentHeight = this.$refs.wrapper.clientHeight;
      var chart = new f2_default.a.Chart(assign_default()({
        el: this.$refs.chart,
        width: this.width || parentWidth,
        height: this.height ? this.height : parentWidth > parentHeight ? parentHeight - 34 : parentWidth * 0.707,
        pixelRatio: this.$devicePixelRatio || window.devicePixelRatio
      }, this.$attrs));

      if (this.preventRender) {
        this.$emit('on-render', {
          chart: chart
        });
        return;
      }

      if (!this.data || !this.data.length) {
        return;
      }

      chart.source(this.currentData);
      this.getFields();
      chart.scale(this.xField, this.currentXFieldOptions);
      chart.scale(this.yField, this.currentYFieldOptions);
      this.renderLegend(chart);
      this.renderTooltip(chart);
      this.setAutoAlignXAxis(chart, autoAlignXAxis);
      this.renderLine(chart);
      this.renderGuide(chart);
      this.renderArea(chart);
      this.renderBar(chart);
      this.renderAxis(chart);
      this.renderPie(chart);
      this.renderPoint(chart);
      chart.render();
      this.chart = chart;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var style = {
        backgroundColor: this.backgroundColor,
        width: this.width + 'px',
        height: this.height + 'px'
      };
      return h("div", {
        "style": style,
        "ref": "wrapper",
        "on": {
          "touchstart": this.onTouchstart
        }
      }, [h("canvas", {
        "class": "".concat(this.prefixCls, "-no-select"),
        "ref": "chart"
      }), this.$slots.default]);
    }
  }, {
    key: "renderTooltip",
    value: function renderTooltip(chart) {
      var _this2 = this;

      if (this.tooltipOptions) {
        if (this.barOptions) {
          this.tooltipOptions.showCrosshairs = false;
        }

        if (!this.tooltipOptions.disabled) {
          // handle show-value-in-legend
          if (this.tooltipOptions.showValueInLegend) {
            var customTooltip = {
              custom: true,
              onChange: function onChange(obj) {
                var legend = _this2.chart.get('legendController').legends.top[0];

                var tooltipItems = obj.items;
                var legendItems = legend.items;
                var map = {};
                legendItems.map(function (item) {
                  map[item.name] = JSON.parse(stringify_default()(item));
                });
                tooltipItems.map(function (item) {
                  var name = item.name,
                      value = item.value;

                  if (map[name]) {
                    map[name].value = value;
                  }
                });
                legend.setItems(values_default()(map));
              },
              onHide: function onHide() {
                var VChart = _this2.chart;
                var legend = VChart.get('legendController').legends.top[0];
                legend.setItems(VChart.getLegendItems().type);
              }
            };
            this.tooltipOptions = assign_default()({}, this.tooltipOptions, customTooltip);
          }

          chart.tooltip(this.tooltipOptions);
        } else {
          chart.tooltip(false);
        }
      } else {
        chart.tooltip({
          showCrosshairs: !this.barOption
        });
      }
    }
  }, {
    key: "renderLine",
    value: function renderLine(chart) {
      if (this.lineOptions) {
        var _this$lineOptions = this.lineOptions,
            shape = _this$lineOptions.shape,
            adjust = _this$lineOptions.adjust;
        var seriesField = this.lineOptions.seriesField || '';
        var colors = this.buildColor(this.lineOptions.colors);
        var rs = chart.line().position(this.buildPosition()).shape(shape);

        if (!seriesField && colors) {
          rs.color(colors);
        }

        if (seriesField) {
          if (colors && colors.length) {
            rs.color(seriesField, colors);
          } else {
            rs.color(seriesField);
          }
        }

        if (adjust) {
          rs.adjust(adjust);
        }
      }
    }
  }, {
    key: "renderGuide",
    value: function renderGuide(chart) {
      if (this.guides.length) {
        this.guides.forEach(function (guide) {
          chart.guide()[guide.type](guide.options);
        });
      }
    }
  }, {
    key: "renderArea",
    value: function renderArea(chart) {
      if (this.areaOptions) {
        var _this$areaOptions = this.areaOptions,
            adjust = _this$areaOptions.adjust,
            seriesField = _this$areaOptions.seriesField;
        var color = this.buildColor(this.areaOptions.colors);
        var rs = chart.area().position(this.buildPosition()).shape(this.areaOptions.shape || '');

        if (!seriesField && color) {
          rs.color(color);
        } else {
          rs.color(seriesField || '', color);
        }

        if (adjust) {
          rs.adjust(adjust);
        }
      }
    }
  }, {
    key: "renderBar",
    value: function renderBar(chart) {
      if (this.barOptions) {
        var _this$barOptions = this.barOptions,
            adjust = _this$barOptions.adjust,
            seriesField = _this$barOptions.seriesField;
        var color = this.buildColor(this.barOptions.colors);

        if (this.barOptions.direction && this.barOptions.direction === 'horizontal') {
          chart.coord({
            transposed: true
          });
        }

        var rs = chart.interval().position(this.buildPosition());

        if (!seriesField && color) {
          rs.color(color);
        } else {
          rs.color(seriesField || '', color);
        }

        if (adjust) {
          rs.adjust(adjust);
        }
      }
    }
  }, {
    key: "renderAxis",
    value: function renderAxis(chart) {
      var _this3 = this;

      if (['x', 'y'].find(function (axis) {
        return _this3["".concat(axis, "AxisOptions")];
      })) {
        ['x', 'y'].forEach(function (axis) {
          if (_this3["".concat(axis, "AxisOptions")]) {
            chart.axis(_this3["".concat(axis, "Field")], _this3["".concat(axis, "Field")].disabled ? false : _this3["".concat(axis, "AxisOptions")]);
          }
        });
      } else {
        chart.axis(false);
      }
    }
  }, {
    key: "renderPie",
    value: function renderPie(chart) {
      if (this.pieOptions) {
        chart.coord(this.pieOptions.coord, this.pieOptions);
        chart.axis(false);
        chart.interval().position('a*percent').color(this.pieOptions.seriesField, this.pieOptions.colors && this.pieOptions.colors.length ? this.pieOptions.colors : '').adjust('stack').style({
          lineWidth: 1,
          stroke: '#fff',
          lineJoin: 'round',
          lineCap: 'round'
        }).animate({
          appear: {
            duration: 1200,
            easing: 'bounceOut'
          }
        });
      }
    }
  }, {
    key: "renderPoint",
    value: function renderPoint(chart) {
      if (this.pointOptions) {
        var seriesField = this.pointOptions.seriesField;
        var rs = chart.point().position(this.buildPosition()).style(this.pointOptions.styles);
        var color = this.buildColor(this.pointOptions.colors);

        if (!seriesField && color) {
          rs.color(color);
        } else {
          rs.color(seriesField || '', color);
        }
      }
    }
  }, {
    key: "setAutoAlignXAxis",
    value: function setAutoAlignXAxis(chart, autoAlignXAxis) {
      if (autoAlignXAxis) {
        if (this.xAxisOptions) {
          chart.axis(this.xField, {
            label: function label(text, index, total) {
              var textCfg = {};

              if (index === 0) {
                textCfg.textAlign = 'left';
              }

              if (index === total - 1) {
                textCfg.textAlign = 'right';
              }

              return textCfg;
            }
          });
        }
      }
    }
  }, {
    key: "renderLegend",
    value: function renderLegend(chart) {
      if (this.legendOptions) {
        if (this.legendOptions.disabled) {
          chart.legend(false);
        } else {
          chart.legend(this.legendOptions);
        }
      }
    }
  }, {
    key: "currentData",
    get: function get() {
      if (this.pieOptions) {
        return this.data.slice().map(function (item) {
          item.a = '1';
          return item;
        });
      }

      return this.data;
    }
  }, {
    key: "currentXFieldOptions",
    get: function get() {
      var defaultOptions = {
        tickCount: 5
      };

      if (!this.barOptions) {
        defaultOptions.range = [0, 1];
      } else {
        defaultOptions.tickCount = 0;
      } // auto detect if is timeCat


      if (!this.xFieldOptions) {
        if (/\d{4}-\d{2}-\d{2}/.test(this.data[0][this.xField])) {
          return assign_default()({}, defaultOptions, {
            type: 'timeCat',
            tickCount: 3
          });
        } else {
          return defaultOptions;
        }
      }

      return assign_default()({}, defaultOptions, this.xFieldOptions);
    }
  }, {
    key: "currentYFieldOptions",
    get: function get() {
      var defaultOptions = {
        tickCount: 5
      };

      if (!this.yFieldOptions) {
        return defaultOptions;
      }

      return assign_default()({}, defaultOptions, this.yFieldOptions);
    }
  }]);

  return VChart;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'mchart-'
})], src_VChart.prototype, "prefixCls", void 0);

__decorate([Prop(Number)], src_VChart.prototype, "width", void 0);

__decorate([Prop(Number)], src_VChart.prototype, "height", void 0);

__decorate([Prop({
  type: String,
  default: '#fff'
})], src_VChart.prototype, "backgroundColor", void 0);

__decorate([Prop({
  type: Array
})], src_VChart.prototype, "data", void 0);

__decorate([Prop({
  type: Object
})], src_VChart.prototype, "tooltip", void 0);

__decorate([Prop({
  type: String,
  default: 'line'
})], src_VChart.prototype, "shape", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_VChart.prototype, "preventRender", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_VChart.prototype, "preventDefault", void 0);

__decorate([Watch('data')], src_VChart.prototype, "dataChanged", null);

__decorate([Watch('height')], src_VChart.prototype, "heightChanged", null);

__decorate([Watch('width')], src_VChart.prototype, "widthChanged", null);

src_VChart = __decorate([vue_class_component_common_default()({
  name: 'VChart'
})], src_VChart);
/* harmony default export */ var chart_src = (src_VChart);
// CONCATENATED MODULE: ./src/packages/chart/src/util.ts


var camel = function camel(key) {
  return key.replace(/(-[a-z])/g, function ($1) {
    return $1.toUpperCase().replace('-', '');
  });
};

var camelAttrs = function camelAttrs(attrs) {
  for (var i in attrs) {
    if (attrs) {
      var key = camel(i);
      attrs[key] = attrs[i];

      if (key !== i) {
        delete attrs[i];
      }
    }
  }

  return attrs;
};
// CONCATENATED MODULE: ./src/packages/chart/src/mixin.tsx











var defaultShapeMap = {
  line: 'line',
  point: 'circle',
  area: 'area'
};

var mixin_VChartMixin =
/*#__PURE__*/
function (_Vue) {
  _inherits(VChartMixin, _Vue);

  function VChartMixin() {
    _classCallCheck(this, VChartMixin);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VChartMixin).apply(this, arguments));
  }

  _createClass(VChartMixin, [{
    key: "created",
    value: function created() {
      this.$parent.set(this.chartName, assign_default()({
        shape: defaultShapeMap[this.chartName] || ''
      }, this.$props, camelAttrs(this.$attrs)));
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return VChartMixin;
}(external_Vue_default.a);

__decorate([Prop([String, Array])], mixin_VChartMixin.prototype, "colors", void 0);

__decorate([Prop(String)], mixin_VChartMixin.prototype, "seriesField", void 0);

__decorate([Prop([String, Object])], mixin_VChartMixin.prototype, "adjust", void 0);

mixin_VChartMixin = __decorate([vue_class_component_common_default()({
  name: 'VChartMixin'
})], mixin_VChartMixin);
/* harmony default export */ var mixin = (mixin_VChartMixin);
// CONCATENATED MODULE: ./src/packages/chart/src/area.tsx








var area_VArea =
/*#__PURE__*/
function (_mixins) {
  _inherits(VArea, _mixins);

  function VArea() {
    var _this;

    _classCallCheck(this, VArea);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VArea).apply(this, arguments));
    _this.chartName = 'area';
    return _this;
  }

  return VArea;
}(Object(vue_class_component_common["mixins"])(mixin));

area_VArea = __decorate([vue_class_component_common_default()({
  name: 'VArea'
})], area_VArea);
/* harmony default export */ var src_area = (area_VArea);
// CONCATENATED MODULE: ./src/packages/chart/src/axis.tsx












var axis_VAxis =
/*#__PURE__*/
function (_Vue) {
  _inherits(VAxis, _Vue);

  function VAxis() {
    _classCallCheck(this, VAxis);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VAxis).apply(this, arguments));
  }

  _createClass(VAxis, [{
    key: "created",
    value: function created() {
      var _options = assign_default()({}, this.$props, this.options, camelAttrs(this.$attrs));

      this.$parent.setAxis(_options);
    }
  }, {
    key: "render",
    value: function render() {}
  }]);

  return VAxis;
}(external_Vue_default.a);

__decorate([Prop(Boolean)], axis_VAxis.prototype, "x", void 0);

__decorate([Prop(Boolean)], axis_VAxis.prototype, "y", void 0);

__decorate([Prop(String)], axis_VAxis.prototype, "field", void 0);

__decorate([Prop(Boolean)], axis_VAxis.prototype, "disabled", void 0);

__decorate([Prop(Boolean)], axis_VAxis.prototype, "autoAlign", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], axis_VAxis.prototype, "options", void 0);

axis_VAxis = __decorate([vue_class_component_common_default()({
  name: 'VAxis'
})], axis_VAxis);
/* harmony default export */ var axis = (axis_VAxis);
// CONCATENATED MODULE: ./src/packages/chart/src/bar.tsx









var bar_VBar =
/*#__PURE__*/
function (_mixins) {
  _inherits(VBar, _mixins);

  function VBar() {
    var _this;

    _classCallCheck(this, VBar);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VBar).apply(this, arguments));
    _this.chartName = 'bar';
    return _this;
  }

  return VBar;
}(Object(vue_class_component_common["mixins"])(mixin));

__decorate([Prop({
  type: String,
  default: 'vertical'
})], bar_VBar.prototype, "direction", void 0);

bar_VBar = __decorate([vue_class_component_common_default()({
  name: 'VBar'
})], bar_VBar);
/* harmony default export */ var bar = (bar_VBar);
// CONCATENATED MODULE: ./src/packages/chart/src/guide.tsx











var types = ['line', 'text', 'tag', 'rect', 'html', 'arc'];

var guide_VGuide =
/*#__PURE__*/
function (_Vue) {
  _inherits(VGuide, _Vue);

  function VGuide() {
    _classCallCheck(this, VGuide);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VGuide).apply(this, arguments));
  }

  _createClass(VGuide, [{
    key: "created",
    value: function created() {
      this.$parent.addGuide({
        type: this.type,
        options: assign_default()({
          top: this.top,
          withPoint: this.withPoint
        }, camelAttrs(this.options), camelAttrs(this.$attrs))
      });
    }
  }, {
    key: "render",
    value: function render() {}
  }]);

  return VGuide;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  validator: function validator(val) {
    return types.filter(function (type) {
      return type === val;
    }).length === 1;
  }
})], guide_VGuide.prototype, "type", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], guide_VGuide.prototype, "options", void 0);

__decorate([Prop(Boolean)], guide_VGuide.prototype, "top", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], guide_VGuide.prototype, "withPoint", void 0);

guide_VGuide = __decorate([vue_class_component_common_default()({
  name: 'VGuide'
})], guide_VGuide);
/* harmony default export */ var guide = (guide_VGuide);
// CONCATENATED MODULE: ./src/packages/chart/src/legend.tsx












var legend_VLegend =
/*#__PURE__*/
function (_Vue) {
  _inherits(VLegend, _Vue);

  function VLegend() {
    _classCallCheck(this, VLegend);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VLegend).apply(this, arguments));
  }

  _createClass(VLegend, [{
    key: "created",
    value: function created() {
      this.$parent.setLegend(assign_default()({}, this.options, {
        disabled: this.disabled
      }, camelAttrs(this.$attrs)));
    }
  }, {
    key: "render",
    value: function render() {}
  }]);

  return VLegend;
}(external_Vue_default.a);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], legend_VLegend.prototype, "options", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], legend_VLegend.prototype, "disabled", void 0);

legend_VLegend = __decorate([vue_class_component_common_default()({
  name: 'VLegend'
})], legend_VLegend);
/* harmony default export */ var src_legend = (legend_VLegend);
// CONCATENATED MODULE: ./src/packages/chart/src/line.tsx








var line_VLine =
/*#__PURE__*/
function (_mixins) {
  _inherits(VLine, _mixins);

  function VLine() {
    var _this;

    _classCallCheck(this, VLine);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VLine).apply(this, arguments));
    _this.chartName = 'line';
    return _this;
  }

  return VLine;
}(Object(vue_class_component_common["mixins"])(mixin));

line_VLine = __decorate([vue_class_component_common_default()({
  name: 'VLine'
})], line_VLine);
/* harmony default export */ var line = (line_VLine);
// CONCATENATED MODULE: ./src/packages/chart/src/pie.tsx









var pie_camel = function camel(key) {
  return key.replace(/(-[a-z])/g, function ($1) {
    return $1.toUpperCase().replace('-', '');
  });
};

var camelBatch = function camelBatch(attrs) {
  for (var i in attrs) {
    if (attrs) {
      var key = pie_camel(i);
      attrs[key] = attrs[i];

      if (key !== i) {
        delete attrs[i];
      }
    }
  }

  return attrs;
};





var pie_VPie =
/*#__PURE__*/
function (_Vue) {
  _inherits(VPie, _Vue);

  function VPie() {
    _classCallCheck(this, VPie);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VPie).apply(this, arguments));
  }

  _createClass(VPie, [{
    key: "created",
    value: function created() {
      this.$parent.setPie(assign_default()({}, this.$props, camelBatch(this.$attrs)));
    }
  }, {
    key: "render",
    value: function render() {}
  }]);

  return VPie;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'polar'
})], pie_VPie.prototype, "coord", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], pie_VPie.prototype, "transposed", void 0);

__decorate([Prop({
  type: String
})], pie_VPie.prototype, "serialField", void 0);

__decorate([Prop({
  type: Array
})], pie_VPie.prototype, "colors", void 0);

pie_VPie = __decorate([vue_class_component_common_default()({
  name: 'VPie'
})], pie_VPie);
/* harmony default export */ var pie = (pie_VPie);
// CONCATENATED MODULE: ./src/packages/chart/src/point.tsx











var point_VPoint =
/*#__PURE__*/
function (_Vue) {
  _inherits(VPoint, _Vue);

  function VPoint() {
    _classCallCheck(this, VPoint);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VPoint).apply(this, arguments));
  }

  _createClass(VPoint, [{
    key: "created",
    value: function created() {
      this.$parent.setPoint(assign_default()({}, this.$props, this.$attrs));
    }
  }, {
    key: "render",
    value: function render() {}
  }]);

  return VPoint;
}(external_Vue_default.a);

__decorate([Prop({
  type: Object
})], point_VPoint.prototype, "styles", void 0);

__decorate([Prop({
  type: Array
})], point_VPoint.prototype, "colors", void 0);

__decorate([Prop(String)], point_VPoint.prototype, "seriesField", void 0);

point_VPoint = __decorate([vue_class_component_common_default()({
  name: 'VPoint'
})], point_VPoint);
/* harmony default export */ var src_point = (point_VPoint);
// CONCATENATED MODULE: ./src/packages/chart/src/scale.tsx














var scale_VScale =
/*#__PURE__*/
function (_Vue) {
  _inherits(VScale, _Vue);

  function VScale() {
    _classCallCheck(this, VScale);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VScale).apply(this, arguments));
  }

  _createClass(VScale, [{
    key: "created",
    value: function created() {
      this.emitSetting();
    }
  }, {
    key: "emitSetting",
    value: function emitSetting() {
      var _this = this;

      ['x', 'y'].forEach(function (item) {
        if (_this[item]) {
          _this.$parent.setScale(_defineProperty({}, item, assign_default()({}, camelAttrs(_this.$attrs))));

          if (_this.field) {
            _this.$parent.setField(item, _this.field);
          }
        }
      });
    }
  }, {
    key: "render",
    value: function render() {}
  }]);

  return VScale;
}(external_Vue_default.a);

__decorate([Prop(Boolean)], scale_VScale.prototype, "x", void 0);

__decorate([Prop(Boolean)], scale_VScale.prototype, "y", void 0);

__decorate([Prop(String)], scale_VScale.prototype, "field", void 0);

scale_VScale = __decorate([vue_class_component_common_default()({
  name: 'VScale'
})], scale_VScale);
/* harmony default export */ var src_scale = (scale_VScale);
// CONCATENATED MODULE: ./src/packages/chart/src/tooltip.tsx












var tooltip_VTooltip =
/*#__PURE__*/
function (_Vue) {
  _inherits(VTooltip, _Vue);

  function VTooltip() {
    _classCallCheck(this, VTooltip);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(VTooltip).apply(this, arguments));
  }

  _createClass(VTooltip, [{
    key: "created",
    value: function created() {
      var options = assign_default()({
        disabled: this.disabled,
        showCrosshairs: this.showCrosshairs,
        showItemMarker: this.showItemMarker,
        showValueInLegend: this.showValueInLegend
      }, camelAttrs(this.options), camelAttrs(this.$attrs));

      if (this.showXValue) {
        options.onShow = function (ev) {
          var items = ev.items;
          items[0].name = items[0].title;
        };
      }

      this.$parent.setTooltip(options);
    }
  }, {
    key: "render",
    value: function render() {}
  }]);

  return VTooltip;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean,
  default: false
})], tooltip_VTooltip.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], tooltip_VTooltip.prototype, "showCrosshairs", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], tooltip_VTooltip.prototype, "showItemMarker", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], tooltip_VTooltip.prototype, "showXValue", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], tooltip_VTooltip.prototype, "showValueInLegend", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], tooltip_VTooltip.prototype, "options", void 0);

tooltip_VTooltip = __decorate([vue_class_component_common_default()({
  name: 'VTooltip'
})], tooltip_VTooltip);
/* harmony default export */ var tooltip = (tooltip_VTooltip);
// CONCATENATED MODULE: ./src/packages/chart/index.ts











chart_src.Area = src_area;
chart_src.Axis = axis;
chart_src.Bar = bar;
chart_src.Guide = guide;
chart_src.Legend = src_legend;
chart_src.Line = line;
chart_src.Pie = pie;
chart_src.Point = src_point;
chart_src.Scale = src_scale;
chart_src.Tooltip = tooltip;

chart_src.install = function (Vue) {
  Vue.component('MChart', chart_src);
  Vue.component('MChartArea', chart_src.Area);
  Vue.component('MChartAxis', chart_src.Axis);
  Vue.component('MChartBar', chart_src.Bar);
  Vue.component('MChartGuide', chart_src.Guide);
  Vue.component('MChartLegend', chart_src.Legend);
  Vue.component('MChartLine', chart_src.Line);
  Vue.component('MChartPie', chart_src.Pie);
  Vue.component('MChartPoint', chart_src.Point);
  Vue.component('MChartScale', chart_src.Scale);
  Vue.component('MChartTooltip', chart_src.Tooltip);
};

/* harmony default export */ var packages_chart = (chart_src);
// CONCATENATED MODULE: ./src/packages/utils/get-data-attr.tsx

/* harmony default export */ var get_data_attr = (function (props) {
  return keys_default()(props).reduce(function (prev, key) {
    if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
      prev[key] = props[key];
    }

    return prev;
  }, {});
});
// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-checkbox/index.js
var vc_checkbox = __webpack_require__("d1dd");
var vc_checkbox_default = /*#__PURE__*/__webpack_require__.n(vc_checkbox);

// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox-item.tsx

















var ListItem = list.Item;

var checkbox_item_CheckboxItem =
/*#__PURE__*/
function (_Vue) {
  _inherits(CheckboxItem, _Vue);

  function CheckboxItem() {
    var _this;

    _classCallCheck(this, CheckboxItem);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(CheckboxItem).apply(this, arguments));
    _this.state = {
      value: _this.value
    };
    return _this;
  }

  _createClass(CheckboxItem, [{
    key: "valueCahnged",
    value: function valueCahnged(value) {
      this.state.value = value;
    }
  }, {
    key: "stateValueChanged",
    value: function stateValueChanged(value) {
      this.$emit('input', value);
      this.$emit('change', value);
    }
  }, {
    key: "onChange",
    value: function onChange(value) {}
  }, {
    key: "onClick",
    value: function onClick(e) {
      if (!this.disabled) {
        this.state.value = !this.state.value;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];

      var _a = this.$props,
          listPrefixCls = _a.listPrefixCls,
          disabled = _a.disabled,
          checkboxProps = _a.checkboxProps,
          restProps = __rest(_a, ["listPrefixCls", "disabled", "checkboxProps"]);

      var prefixCls = restProps.prefixCls;
      var wrapCls = classnames_default()("".concat(prefixCls, "-item"), _defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled === true));
      var extraProps = {};
      ['name', 'defaultChecked', 'checked', 'onChange', 'disabled'].forEach(function (i) {
        if (i in _this2.$props) {
          extraProps[i] = _this2.$props[i];
        }
      }); // @ts-ignore

      var thumb = h(src_checkbox, helper_default()([{}, {
        "attrs": assign_default()({}, checkboxProps, extraProps, {
          value: this.state.value
        })
      }, {
        "style": this.thumbStyle,
        "on": {
          "change": this.onChange
        }
      }]));
      return (// @ts-ignore
        h(ListItem, helper_default()([{}, {
          "attrs": assign_default()({}, restProps)
        }, {
          "attrs": {
            "touchFeedback": !this.disabled,
            "prefixCls": listPrefixCls,
            "thumb": thumb
          },
          "on": {
            "click": this.onClick
          },
          "class": wrapCls
        }]), [this.$slots.default])
      );
    }
  }]);

  return CheckboxItem;
}(external_Vue_default.a);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], checkbox_item_CheckboxItem.prototype, "thumbStyle", void 0);

__decorate([Prop({
  type: String,
  default: 'am-list'
})], checkbox_item_CheckboxItem.prototype, "listPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-checkbox'
})], checkbox_item_CheckboxItem.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], checkbox_item_CheckboxItem.prototype, "name", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_item_CheckboxItem.prototype, "wrapLabel", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], checkbox_item_CheckboxItem.prototype, "checkboxProps", void 0);

__decorate([Prop({
  type: String
})], checkbox_item_CheckboxItem.prototype, "extra", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_item_CheckboxItem.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_item_CheckboxItem.prototype, "value", void 0);

__decorate([Watch('value')], checkbox_item_CheckboxItem.prototype, "valueCahnged", null);

__decorate([Watch('state.value')], checkbox_item_CheckboxItem.prototype, "stateValueChanged", null);

checkbox_item_CheckboxItem = __decorate([vue_class_component_common_default()({
  name: 'MCheckboxItem'
})], checkbox_item_CheckboxItem);
/* harmony default export */ var checkbox_item = (checkbox_item_CheckboxItem);
// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox.tsx
















var checkbox_Checkbox =
/*#__PURE__*/
function (_Vue) {
  _inherits(Checkbox, _Vue);

  function Checkbox() {
    var _this;

    _classCallCheck(this, Checkbox);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Checkbox).apply(this, arguments));
    _this.checked = _this.value || false;
    return _this;
  }

  _createClass(Checkbox, [{
    key: "onClick",
    value: function onClick(e) {
      // e.stopPropagation();
      // e.preventDefault();
      this.checked = !this.checked;
      this.$emit('change', this.checked);
      this.$emit('input', this.checked);
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      this.checked = value;
    }
  }, {
    key: "checkedChanged",
    value: function checkedChanged(checked) {
      this.$emit('input', checked);
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls;
      var wrapCls = classnames_default()("".concat(prefixCls, "-wrapper"));
      var mark = h("label", {
        "class": wrapCls
      }, [h(vc_checkbox_default.a, helper_default()([{
        "on": {
          "click": this.onClick
        },
        "attrs": {
          "checked": this.value
        }
      }, {
        "props": this.$props
      }])), this.$slots.default]);

      if (this.wrapLabel) {
        return mark;
      }

      return h(vc_checkbox_default.a, helper_default()([{
        "on": {
          "click": this.onClick
        },
        "attrs": {
          "checked": this.value
        }
      }, {
        "props": this.$props
      }]), [this.$slots.default]);
    }
  }]);

  return Checkbox;
}(external_Vue_default.a);

checkbox_Checkbox.CheckboxItem = checkbox_item;
checkbox_Checkbox.AgreeItem = agree_item;

__decorate([Prop({
  default: 'am-checkbox'
})], checkbox_Checkbox.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], checkbox_Checkbox.prototype, "name", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], checkbox_Checkbox.prototype, "wrapLabel", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_Checkbox.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_Checkbox.prototype, "value", void 0);

__decorate([Watch('value')], checkbox_Checkbox.prototype, "valueChanged", null);

__decorate([Watch('checked')], checkbox_Checkbox.prototype, "checkedChanged", null);

checkbox_Checkbox = __decorate([vue_class_component_common_default()({
  name: 'MCheckbox'
})], checkbox_Checkbox);
/* harmony default export */ var src_checkbox = (checkbox_Checkbox);
// CONCATENATED MODULE: ./src/packages/checkbox/src/agree-item.tsx















var agree_item_AgreeItem =
/*#__PURE__*/
function (_Vue) {
  _inherits(AgreeItem, _Vue);

  function AgreeItem() {
    _classCallCheck(this, AgreeItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(AgreeItem).apply(this, arguments));
  }

  _createClass(AgreeItem, [{
    key: "render",
    value: function render() {
      var h = arguments[0];

      var restProps = __rest(this.$props, []);

      var prefixCls = restProps.prefixCls;
      var wrapCls = classnames_default()("".concat(prefixCls, "-agree"));
      return h("div", helper_default()([{}, get_data_attr(restProps), {
        "class": wrapCls
      }]), [h(src_checkbox, helper_default()([{}, restProps, {
        "class": "".concat(prefixCls, "-agree-label")
      }]), [this.$slots.default])]);
    }
  }]);

  return AgreeItem;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-checkbox'
})], agree_item_AgreeItem.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], agree_item_AgreeItem.prototype, "name", void 0);

__decorate([Prop({
  type: Boolean
})], agree_item_AgreeItem.prototype, "wrapLabel", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], agree_item_AgreeItem.prototype, "defaultChecked", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], agree_item_AgreeItem.prototype, "checked", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], agree_item_AgreeItem.prototype, "disabled", void 0);

agree_item_AgreeItem = __decorate([vue_class_component_common_default()({
  name: 'MAgreeItem'
})], agree_item_AgreeItem);
/* harmony default export */ var agree_item = (agree_item_AgreeItem);
// CONCATENATED MODULE: ./src/packages/checkbox/src/index.tsx



src_checkbox.CheckboxItem = checkbox_item;
src_checkbox.AgreeItem = agree_item;
/* harmony default export */ var checkbox_src = (src_checkbox);
// CONCATENATED MODULE: ./src/packages/utils/option.ts
var getOptionProperty = function getOptionProperty(option, property) {
  if (typeof option === 'string') {
    return option;
  } else if (typeof property === 'string') {
    return option[property];
  } else if (typeof property === 'function') {
    return property(option);
  }
};
// CONCATENATED MODULE: ./src/packages/mixins/options-based-component.ts

















var options_based_component_OptionsBasedComponent =
/*#__PURE__*/
function (_mixins) {
  _inherits(OptionsBasedComponent, _mixins);

  function OptionsBasedComponent() {
    var _this;

    _classCallCheck(this, OptionsBasedComponent);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(OptionsBasedComponent).apply(this, arguments));
    _this.searchKeyword = '';
    return _this;
  }

  _createClass(OptionsBasedComponent, [{
    key: "beforeUpdate",
    value: function beforeUpdate() {
      this.setProps();
    }
  }, {
    key: "created",
    value: function created() {
      this.setProps();
    }
  }, {
    key: "getOptions",
    value: function getOptions() {
      return this.getResolvedOptions(this.options);
    }
  }, {
    key: "getResolvedOptions",
    value: function getResolvedOptions(options) {
      var _this2 = this;

      if (options) {
        return options.map(function (option) {
          return assign_default()({}, option, {
            label: getOptionProperty(option, _this2.labelProperty),
            value: getOptionProperty(option, _this2.valueProperty)
          });
        }).filter(function (item) {
          var label = item.label;

          if (typeof_typeof(label) === 'object') {
            label = getNodeText(label) || '';
          }

          return !_this2.searchKeyword || label.includes(_this2.searchKeyword);
        });
      } else {
        return null;
      }
    }
  }, {
    key: "setProps",
    value: function setProps() {
      var _this3 = this;

      if (this.$slots.default) {
        this.$slots.default.forEach(function (node) {
          if (node.componentOptions && node.componentOptions.propsData['disabled'] === undefined) {
            node.componentOptions.propsData['disabled'] = _this3['isDisabled'];
          }

          if (node.componentOptions && node.componentOptions.propsData['readonly'] === undefined) {
            node.componentOptions.propsData['readonly'] = _this3['isReadonly'];
          }
        });
      }
    }
  }]);

  return OptionsBasedComponent;
}(Object(vue_class_component_common["mixins"])(base_input_component));

__decorate([Prop({
  type: [String, Function],
  default: 'label'
})], options_based_component_OptionsBasedComponent.prototype, "labelProperty", void 0);

__decorate([Prop({
  type: Array
})], options_based_component_OptionsBasedComponent.prototype, "options", void 0);

__decorate([Prop({
  type: [String, Function],
  default: 'value'
})], options_based_component_OptionsBasedComponent.prototype, "valueProperty", void 0);

options_based_component_OptionsBasedComponent = __decorate([vue_class_component_common_default()({
  name: 'OptionsBasedComponent'
})], options_based_component_OptionsBasedComponent);
/* harmony default export */ var options_based_component = (options_based_component_OptionsBasedComponent);
// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox-list.tsx
















var checkbox_list_MCheckboxList =
/*#__PURE__*/
function (_OptionsBasedComponen) {
  _inherits(MCheckboxList, _OptionsBasedComponen);

  function MCheckboxList() {
    var _this;

    _classCallCheck(this, MCheckboxList);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MCheckboxList).apply(this, arguments));
    _this.stateValue = _this.value || [];
    return _this;
  }

  _createClass(MCheckboxList, [{
    key: "mounted",
    value: function mounted() {
      if (this.maxHeightPercentage) {
        var windowHeight = document.body.clientHeight;
        var maxHeight = this.maxHeightPercentage;

        if (this.$el.clientHeight > windowHeight * maxHeight) {
          this.$el.style.height = windowHeight * maxHeight + 'px';
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      // @ts-ignore
      return h(list, {
        "attrs": {
          "required": this.required,
          "title": this.title
        }
      }, [this.renderOptions()]);
    }
  }, {
    key: "renderOptions",
    value: function renderOptions() {
      var _this2 = this;

      var h = this.$createElement;
      var options = this.getOptions();
      return options.map(function (option) {
        return h(checkbox_item, helper_default()([{
          "attrs": {
            "value": _this2.stateValue.includes(option.value),
            "disabled": option.disabled || _this2.isDisabled
          }
        }, {
          "on": {
            change: function change(checkState) {
              _this2.onChange(checkState, option.value);
            }
          }
        }]), [option.label]);
      });
    }
  }, {
    key: "onChange",
    value: function onChange(checkState, value) {
      if (checkState) {
        if (this.$props.value) {
          if (!this.$props.value.includes(value)) {
            var array = [].concat(this.$props.value);
            array.push(value);
            this.$emit('input', array);
            this.$emit('change', array);
          }
        } else {
          if (!this.stateValue.includes(value)) {
            this.stateValue.push(value);
          }
        }
      } else {
        if (this.$props.value) {
          if (this.$props.value.includes(value)) {
            var _array = [].concat(this.$props.value);

            _array.splice(_array.indexOf(value), 1);

            this.$emit('input', _array);
            this.$emit('change', _array);
          }
        } else {
          if (this.stateValue.includes(value)) {
            this.stateValue.splice(this.stateValue.indexOf(value), 1);
          }
        }
      }
    }
  }]);

  return MCheckboxList;
}(options_based_component);

__decorate([Prop({
  type: Array
})], checkbox_list_MCheckboxList.prototype, "value", void 0);

__decorate([Prop({
  type: String
})], checkbox_list_MCheckboxList.prototype, "title", void 0);

__decorate([Prop({
  type: Number
})], checkbox_list_MCheckboxList.prototype, "maxHeightPercentage", void 0);

checkbox_list_MCheckboxList = __decorate([vue_class_component_common_default()({
  name: 'MCheckboxList'
})], checkbox_list_MCheckboxList);
/* harmony default export */ var checkbox_list = (checkbox_list_MCheckboxList);
// CONCATENATED MODULE: ./src/packages/checkbox/src/checkbox-popup-list.tsx

















var checkbox_popup_list_MCheckboxPopupList =
/*#__PURE__*/
function (_OptionsBasedComponen) {
  _inherits(MCheckboxPopupList, _OptionsBasedComponen);

  function MCheckboxPopupList() {
    var _this;

    _classCallCheck(this, MCheckboxPopupList);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MCheckboxPopupList).apply(this, arguments));
    _this.popupVisible = _this.visible;
    return _this;
  }

  _createClass(MCheckboxPopupList, [{
    key: "visibleChanged",
    value: function visibleChanged(visible) {
      this.popupVisible = visible;
    }
  }, {
    key: "popupVisibleChanged",
    value: function popupVisibleChanged(popupVisible) {
      this.$emit('update:visible', popupVisible);
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      this.stateValue = value;
      this.$emit('input', this.stateValue);
      this.$emit('change', this.stateValue);
    }
  }, {
    key: "onClick",
    value: function onClick() {
      if (!this.disabled && !this.readOnly) {
        this.popupVisible = true;
      }
    }
  }, {
    key: "onClear",
    value: function onClear() {
      this.$emit('clear');
      this.$emit('input', []);
      this.closePopup();
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var listProps = assign_default()({}, this.$attrs, this.$props, {
        options: this.getOptions()
      });

      var stateValue = this.stateValue,
          optionText = this.optionText,
          placeholder = this.placeholder;
      listProps.title = undefined;
      var cancelButton = h("div", {
        "on": {
          "click": this.onClear
        },
        "class": "am-popup-item am-popup-header-left"
      }, ["\u6E05\u9664"]);
      return h(list.Item, {
        "on": {
          "click": this.onClick
        },
        "attrs": {
          "touchFeedback": !this.readOnly && !this.disabled,
          "required": this.required,
          "text": !!optionText,
          "disabled": this.isDisabled,
          "extraStyle": {
            flexBasis: '60%'
          }
        }
      }, [h(packages_popup, {
        "attrs": {
          "value": this.isDisabled ? false : this.popupVisible,
          "showCancel": this.clearable,
          "disabled": this.disabled || this.isReadonly,
          "cancelButton": cancelButton,
          "title": this.title
        },
        "on": {
          "ok": this.closePopup,
          "cancel": this.closePopup
        }
      }, [this.renderSearch(), h(checkbox_list, helper_default()([{}, {
        "attrs": listProps
      }, {
        "attrs": {
          "maxHeightPercentage": 0.7
        },
        "on": {
          "change": this.onChange
        }
      }]))]), h("span", {
        "slot": "extra"
      }, [stateValue && stateValue.length ? optionText : placeholder]), h("span", [this.title])]);
    }
  }, {
    key: "closePopup",
    value: function closePopup() {
      this.popupVisible = false;
    }
  }, {
    key: "searchKeywordChanged",
    value: function searchKeywordChanged(keyword) {
      console.log(keyword);
    }
  }, {
    key: "renderSearch",
    value: function renderSearch() {
      var _this2 = this;

      var h = this.$createElement;
      return this.searchable ? h("m-search-bar", {
        "attrs": {
          "value": this.searchKeyword
        },
        "on": {
          "input": function input(v) {
            _this2.searchKeyword = v;
          }
        }
      }) : null;
    }
  }, {
    key: "optionText",
    get: function get() {
      var _this3 = this;

      var options = this.getOptions(); // @ts-ignore

      var value = this.stateValue;
      var array = [];

      if (value) {
        value.forEach(function (v, index) {
          var option = options.find(function (it) {
            return it.value === v;
          });

          if (option) {
            array.push(option.label);
          } else {
            array.push(v);
          }

          if (index < value.length - 1) {
            array.push(_this3.separator);
          }
        });
      }

      return array;
    }
  }]);

  return MCheckboxPopupList;
}(options_based_component);

__decorate([Prop({
  type: String
})], checkbox_popup_list_MCheckboxPopupList.prototype, "title", void 0);

__decorate([Prop({
  type: String
})], checkbox_popup_list_MCheckboxPopupList.prototype, "placeholder", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_popup_list_MCheckboxPopupList.prototype, "clearable", void 0);

__decorate([Prop({
  type: String,
  default: '、'
})], checkbox_popup_list_MCheckboxPopupList.prototype, "separator", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_popup_list_MCheckboxPopupList.prototype, "visible", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], checkbox_popup_list_MCheckboxPopupList.prototype, "searchable", void 0);

__decorate([Watch('visible')], checkbox_popup_list_MCheckboxPopupList.prototype, "visibleChanged", null);

__decorate([Watch('popupVisible')], checkbox_popup_list_MCheckboxPopupList.prototype, "popupVisibleChanged", null);

__decorate([Watch('searchKeyword')], checkbox_popup_list_MCheckboxPopupList.prototype, "searchKeywordChanged", null);

checkbox_popup_list_MCheckboxPopupList = __decorate([vue_class_component_common_default()({
  name: 'MCheckboxPopupList'
})], checkbox_popup_list_MCheckboxPopupList);
/* harmony default export */ var checkbox_popup_list = (checkbox_popup_list_MCheckboxPopupList);
// EXTERNAL MODULE: ./src/packages/checkbox/style/index.less
var checkbox_style = __webpack_require__("a27d");

// CONCATENATED MODULE: ./src/packages/checkbox/style/index.tsx



// CONCATENATED MODULE: ./src/packages/checkbox/index.ts





var checkbox_Plugin = checkbox_src;

checkbox_Plugin.install = function (Vue) {
  Vue.component('MCheckbox', checkbox_src);
  Vue.component('MCheckboxList', checkbox_list);
  Vue.component('MCheckboxItem', checkbox_src.CheckboxItem);
  Vue.component('MAgreeItem', checkbox_src.AgreeItem);
  Vue.component('MCheckboxPopupList', checkbox_popup_list);
};

/* harmony default export */ var packages_checkbox = (checkbox_Plugin);
// CONCATENATED MODULE: ./src/packages/vmc-picker/popup-picker-types.tsx









var popup_picker_types_PopupPickerProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(PopupPickerProps, _Vue);

  function PopupPickerProps() {
    _classCallCheck(this, PopupPickerProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PopupPickerProps).apply(this, arguments));
  }

  return PopupPickerProps;
}(external_Vue_default.a);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "picker", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "value", void 0);

__decorate([Prop({
  type: String,
  default: 'click'
})], popup_picker_types_PopupPickerProps.prototype, "triggerType", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "WrapComponent", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "dismissText", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "okText", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "title", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], popup_picker_types_PopupPickerProps.prototype, "visible", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], popup_picker_types_PopupPickerProps.prototype, "disabled", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "content", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "actionTextUnderlayColor", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "actionTextActiveOpacity", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "wrapStyle", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "prefixCls", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "pickerValueProp", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "pickerValueChangeProp", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "transitionName", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "popupTransitionName", void 0);

__decorate([Prop()], popup_picker_types_PopupPickerProps.prototype, "maskTransitionName", void 0);

popup_picker_types_PopupPickerProps = __decorate([vue_class_component_common_default()({
  name: 'PopupPickerProps'
})], popup_picker_types_PopupPickerProps);

// CONCATENATED MODULE: ./src/packages/vmc-picker/popup-mixin.tsx













function popup_mixin_PopupMixin(getModal, newProps) {
  var PopupMixin =
  /*#__PURE__*/
  function (_PopupPickerProps) {
    _inherits(PopupMixin, _PopupPickerProps);

    function PopupMixin() {
      var _this;

      _classCallCheck(this, PopupMixin);

      _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PopupMixin).apply(this, arguments));
      _this.state = {
        pickerValue: 'value' in _assertThisInitialized(_this) ? _this.value : null,
        visible: _this.visible || false
      };
      return _this;
    }

    _createClass(PopupMixin, [{
      key: "stateVisibleChanged",
      value: function stateVisibleChanged() {
        this.$emit('visible-change', this.state.visible);
      }
    }, {
      key: "valueChanged",
      value: function valueChanged(value) {
        this.state.pickerValue = value;
      }
    }, {
      key: "visibleChanged",
      value: function visibleChanged(value) {
        this.setVisibleState(value);
      }
    }, {
      key: "onPickerChange",
      value: function onPickerChange(pickerValue) {
        if (this.state.pickerValue !== pickerValue) {
          this.state.pickerValue = pickerValue;
          var picker = this.picker,
              pickerValueChangeProp = this.pickerValueChangeProp;

          if (picker && picker.props[pickerValueChangeProp]) {
            picker.props[pickerValueChangeProp](pickerValue);
          }
        }
      }
    }, {
      key: "saveRef",
      value: function saveRef(picker) {
        this.picker = picker;
      }
    }, {
      key: "setVisibleState",
      value: function setVisibleState(visible) {
        this.state.visible = visible;

        if (!visible) {
          this.state.pickerValue = null;
        }
      }
    }, {
      key: "fireVisibleChange",
      value: function fireVisibleChange(visible) {
        if (this.state.visible !== visible) {
          this.setVisibleState(visible);
          this.$emit('visible-change', visible);
          this.$emit('update:visible', visible);
        }
      }
    }, {
      key: "onTriggerClick",
      value: function onTriggerClick(e) {
        var child = this.$slots.default;
        var childProps = child.props || {};

        if (childProps[this.triggerType]) {
          childProps[this.triggerType](e);
        }

        this.fireVisibleChange(!this.state.visible);
      }
    }, {
      key: "onOk",
      value: function onOk() {
        this.$emit('ok');
        this.fireVisibleChange(false);
      }
    }, {
      key: "getContent",
      value: function getContent() {
        if (this.$slots.picker) {
          var _setProps;

          var picker = this.$slots.picker[0];
          var pickerValue = this.state.pickerValue;

          if (pickerValue === null) {
            pickerValue = this.value;
          }

          setProps(this.picker, (_setProps = {}, _defineProperty(_setProps, this.pickerValueProp, pickerValue), _defineProperty(_setProps, this.pickerValueChangeProp, this.onPickerChange), _setProps));
          picker.data.ref = 'picker';
          return picker;
        }

        if (this.picker) {
          var _cloneElement;

          var _pickerValue = this.state.pickerValue;

          if (_pickerValue === null) {
            _pickerValue = this.value;
          }

          return vnode_cloneElement(this.picker, (_cloneElement = {}, _defineProperty(_cloneElement, this.pickerValueProp, _pickerValue), _defineProperty(_cloneElement, this.pickerValueChangeProp, this.onPickerChange), _defineProperty(_cloneElement, "ref", this.saveRef), _cloneElement));
        } else {
          return this.content;
        }
      }
    }, {
      key: "onDismiss",
      value: function onDismiss() {
        this.fireVisibleChange(false);
        this.$emit('dismiss');
      }
    }, {
      key: "hide",
      value: function hide() {
        this.fireVisibleChange(false);
        this.$emit('hide');
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var h = arguments[0];
        var props = this.$props;
        var children = this.$slots.default;

        if (!children) {
          return getModal(this.$createElement, props, this.state.visible, {
            getContent: this.getContent,
            onOk: this.onOk,
            hide: this.hide,
            onDismiss: this.onDismiss
          });
        }

        var disabled = this.$props.disabled;

        if (!disabled) {
          children.forEach(function (child) {
            setListeners(child, _defineProperty({}, _this2.triggerType, _this2.onTriggerClick));
          });
        }

        var modal = getModal(this.$createElement, props, this.state.visible, {
          getContent: this.getContent,
          onOk: this.onOk,
          hide: this.hide,
          onDismiss: this.onDismiss
        });
        return h("div", {
          "style": props.wrapStyle
        }, [children, modal]);
      }
    }]);

    return PopupMixin;
  }(popup_picker_types_PopupPickerProps);

  __decorate([Watch('state.visible')], PopupMixin.prototype, "stateVisibleChanged", null);

  __decorate([Watch('value')], PopupMixin.prototype, "valueChanged", null);

  __decorate([Watch('visible')], PopupMixin.prototype, "visibleChanged", null);

  PopupMixin = __decorate([vue_class_component_common_default()({
    name: 'PopupMixin'
  })], PopupMixin);
  return PopupMixin;
}
// CONCATENATED MODULE: ./src/packages/vmc-picker/popup.tsx




var popup_getModal = function getModal(h, props, visible, _ref) {
  var getContent = _ref.getContent,
      hide = _ref.hide,
      onDismiss = _ref.onDismiss,
      onOk = _ref.onOk;
  var content = getContent(); // @ts-ignore

  return h(packages_popup, helper_default()([{}, {
    "attrs": {
      title: props.title,
      value: visible,
      showCancel: true,
      showOk: true,
      closable: false,
      transitionName: props.transitionName || props.popupTransitionName,
      maskTransitionName: props.maskTransitionName
    }
  }, {
    "on": {
      "cancel": onDismiss,
      "ok": onOk
    },
    "style": props.style
  }]), [h("div", [content])]);
};

/* harmony default export */ var vmc_picker_popup = (popup_mixin_PopupMixin(popup_getModal, {
  prefixCls: 'rmc-picker-popup',
  WrapComponent: 'span',
  triggerType: 'onClick',
  pickerValueProp: 'selectedValue',
  pickerValueChangeProp: 'onValueChange'
}));
// CONCATENATED MODULE: ./src/packages/vmc-date-picker/popup.tsx













var popup_PopupDatePicker =
/*#__PURE__*/
function (_Vue) {
  _inherits(PopupDatePicker, _Vue);

  function PopupDatePicker() {
    _classCallCheck(this, PopupDatePicker);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PopupDatePicker).apply(this, arguments));
  }

  _createClass(PopupDatePicker, [{
    key: "onDismiss",
    value: function onDismiss() {
      if (this.store.onDismiss) {
        this.store.onDismiss();
      }

      this.$emit('dismiss');
    }
  }, {
    key: "onOk",
    value: function onOk(v) {
      if (this.store.onOk) {
        this.store.onOk();
      }

      this.$emit('change', v);
      this.$emit('ok', v);
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      // @ts-ignore
      return h(vmc_picker_popup, helper_default()([{}, {
        "attrs": assign_default()({
          picker: this.datePicker,
          value: this.date
        }, this.$props, this.$attrs)
      }, {
        "attrs": {
          "disabled": this.disabled || !this.editable
        },
        "on": {
          "dismiss": this.onDismiss,
          "ok": this.onOk
        }
      }]), [this.$slots.default]);
    }
  }]);

  return PopupDatePicker;
}(external_Vue_default.a);

__decorate([Prop()], popup_PopupDatePicker.prototype, "datePicker", void 0);

__decorate([Prop()], popup_PopupDatePicker.prototype, "date", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], popup_PopupDatePicker.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], popup_PopupDatePicker.prototype, "editable", void 0);

__decorate([Inject({
  from: 'store',
  default: undefined
})], popup_PopupDatePicker.prototype, "store", void 0);

popup_PopupDatePicker = __decorate([vue_class_component_common_default()({
  name: 'PopupDatePicker'
})], popup_PopupDatePicker);
/* harmony default export */ var vmc_date_picker_popup = (popup_PopupDatePicker);
// EXTERNAL MODULE: ./src/packages/date-picker/src/locale/zh_CN.tsx
var src_locale_zh_CN = __webpack_require__("2d59");

// CONCATENATED MODULE: ./src/packages/date-picker/src/props-type.tsx











var props_type_DatePickerProps =
/*#__PURE__*/
function (_Vue) {
  _inherits(DatePickerProps, _Vue);

  function DatePickerProps() {
    _classCallCheck(this, DatePickerProps);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePickerProps).apply(this, arguments));
  }

  return DatePickerProps;
}(external_Vue_default.a);

__decorate([Prop({})], props_type_DatePickerProps.prototype, "value", void 0);

__decorate([Prop({
  default: 'datetime'
})], props_type_DatePickerProps.prototype, "mode", void 0);

__decorate([Prop({})], props_type_DatePickerProps.prototype, "minDate", void 0);

__decorate([Prop({})], props_type_DatePickerProps.prototype, "maxDate", void 0);

__decorate([Prop({
  type: Boolean
})], props_type_DatePickerProps.prototype, "visible", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return src_locale_zh_CN["default"];
  }
})], props_type_DatePickerProps.prototype, "locale", void 0);

__decorate([Prop({
  type: Number,
  default: 1
})], props_type_DatePickerProps.prototype, "minuteStep", void 0);

__decorate([Prop({
  type: Boolean
})], props_type_DatePickerProps.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], props_type_DatePickerProps.prototype, "editable", void 0);

__decorate([Prop({})], props_type_DatePickerProps.prototype, "format", void 0);

__decorate([Prop({
  type: String
})], props_type_DatePickerProps.prototype, "extra", void 0);

__decorate([Prop({})], props_type_DatePickerProps.prototype, "dismissText", void 0);

__decorate([Prop({})], props_type_DatePickerProps.prototype, "okText", void 0);

__decorate([Prop({})], props_type_DatePickerProps.prototype, "title", void 0);

props_type_DatePickerProps = __decorate([vue_class_component_common_default()({
  name: 'DatePickerProps'
})], props_type_DatePickerProps);
/* harmony default export */ var props_type = (props_type_DatePickerProps);
// CONCATENATED MODULE: ./src/packages/date-picker/src/utils.tsx


function formatIt(date, form) {
  var pad = function pad(n) {
    return n < 10 ? "0".concat(n) : n;
  };

  var dateStr = "".concat(date.getFullYear(), "-").concat(pad(date.getMonth() + 1), "-").concat(pad(date.getDate()));
  var timeStr = "".concat(pad(date.getHours()), ":").concat(pad(date.getMinutes()));

  if (form === 'YYYY') {
    return date.getFullYear() + '';
  }

  if (form === 'YYYY-MM-DD') {
    return dateStr;
  }

  if (form === 'YYYY-MM') {
    return dateStr.substring(0, 7);
  }

  if (form === 'HH:mm') {
    return timeStr;
  }

  return "".concat(dateStr, " ").concat(timeStr);
}

function formatFn(instance, value) {
  var formatsEnum = {
    date: 'YYYY-MM-DD',
    time: 'HH:mm',
    datetime: 'YYYY-MM-DD HH:mm',
    year: 'YYYY',
    month: 'YYYY-MM'
  };
  var format = instance.$props.format;

  var type = typeof_typeof(format);

  if (type === 'string') {
    if (typeof value === 'number') {
      return formatIt(new Date(value), format);
    } else {
      return formatIt(value, format);
    }
  }

  if (type === 'function') {
    return format(value);
  }

  if (typeof value === 'number') {
    return formatIt(new Date(value), formatsEnum[instance.$props.mode]);
  } else {
    return formatIt(value, formatsEnum[instance.$props.mode]);
  }
}
// CONCATENATED MODULE: ./src/packages/date-picker/src/index.tsx
















var src_DatePicker =
/*#__PURE__*/
function (_DatePickerProps) {
  _inherits(DatePicker, _DatePickerProps);

  function DatePicker() {
    var _this;

    _classCallCheck(this, DatePicker);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePicker).apply(this, arguments));
    _this.store = {
      onOk: null
    };
    return _this;
  }

  _createClass(DatePicker, [{
    key: "setScrollValue",
    value: function setScrollValue(v) {
      this.scrollValue = v;
    }
  }, {
    key: "onOk",
    value: function onOk(v) {
      var value = v;

      if (this.scrollValue !== undefined) {
        value = this.scrollValue;
      }

      this.$emit('change', value);
      this.$emit('ok', value);
    }
  }, {
    key: "onVisibleChange",
    value: function onVisibleChange(visible) {
      this.scrollValue = undefined;
      this.$emit('visible-change', visible);
    }
  }, {
    key: "fixOnOk",
    value: function fixOnOk(picker) {
      if (picker) {
        picker.onOk = this.onOk;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];
      var value = this.value,
          popupPrefixCls = this.popupPrefixCls;
      var locale = getComponentLocale(this.$props, null, 'DatePicker', function () {
        return __webpack_require__("2d59");
      });
      var okText = locale.okText,
          dismissText = locale.dismissText,
          extra = locale.extra,
          DatePickerLocale = locale.DatePickerLocale;
      /**
       * 注意:
       * 受控 表示 通过设置 value 属性、组件的最终状态跟 value 设置值一致。
       * 默认不设置 value 或 只设置 defaultValue 表示非受控。
       *
       * DatePickerView 对外通过 value “只支持 受控” 模式（可以使用 defaultDate 支持 非受控 模式，但不对外）
       * PickerView 对外通过 value “只支持 受控” 模式
       *
       * DatePicker / Picker 对外只有 value 属性 (没有 defaultValue)，
       * 其中 List 展示部分 “只支持 受控” 模式，
       * 弹出的 选择器部分 会随外部 value 改变而变、同时能自由滚动
       * （即不会因为传入的 value 不变而不能滚动 (不像原生 input 的受控行为)）
       *
       */

      var datePicker = // @ts-ignore
      h(vmc_date_picker_date_picker, {
        "attrs": {
          "minuteStep": this.minuteStep,
          "locale": DatePickerLocale,
          "minDate": this.minDate,
          "maxDate": this.maxDate,
          "mode": this.mode,
          "pickerPrefixCls": this.pickerPrefixCls,
          "prefixCls": this.prefixCls,
          "date": this.getDate(),
          "use12Hours": this.use12Hours
        },
        "on": {
          "input": function input(v) {
            _this2.onInput(v);
          },
          "valueChange": function valueChange() {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            _this2.$emit.apply(_this2, ['value-change'].concat(args));
          },
          "scrollChange": this.setScrollValue
        }
      });
      var textValue = value ? formatFn(this, value) : null;
      var childExtra = textValue ? textValue : this.extra || extra || this.placeholder;
      var visible = this.disabled || !this.editable ? false : this.visible;
      return h(vmc_date_picker_popup, helper_default()([{
        "attrs": {
          "datePicker": datePicker,
          "wrapComponent": "div",
          "transitionName": "am-slide-up",
          "maskTransitionName": "am-fade"
        }
      }, this.$props, {
        "attrs": {
          "title": this.title,
          "disabled": this.disabled,
          "editable": this.editable,
          "visible": visible,
          "prefixCls": popupPrefixCls,
          "date": this.getDate(),
          "dismissText": this.dismissText || dismissText,
          "okText": this.okText || okText
        },
        "ref": this.fixOnOk,
        "on": {
          "visibleChange": this.onVisibleChange
        }
      }]), [this.$slots.default && this.$slots.default.map(function (it) {
        setProps(it, {
          text: !!textValue,
          extra: childExtra,
          arrow: 'horizontal'
        });
        return it;
      })]);
    }
  }, {
    key: "onInput",
    value: function onInput(v) {
      this.$emit('change', v);
      this.$emit('input', v);
    }
  }, {
    key: "getDate",
    value: function getDate() {
      if (typeof this.value === 'number') {
        return new Date(this.value);
      } else {
        return this.value || new Date();
      }
    }
  }]);

  return DatePicker;
}(props_type);

__decorate([Prop({
  type: String,
  default: ''
})], src_DatePicker.prototype, "placeholder", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker'
})], src_DatePicker.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_DatePicker.prototype, "use12Hours", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker-col'
})], src_DatePicker.prototype, "pickerPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker-popup'
})], src_DatePicker.prototype, "popupPrefixCls", void 0);

__decorate([Provide('store')], src_DatePicker.prototype, "store", void 0);

src_DatePicker = __decorate([vue_class_component_common_default()({
  name: 'MDatePicker'
})], src_DatePicker);
/* harmony default export */ var date_picker_src = (src_DatePicker);
// CONCATENATED MODULE: ./src/packages/date-picker/src/item.tsx













var item_DatePickerItem =
/*#__PURE__*/
function (_BaseInputComponent) {
  _inherits(DatePickerItem, _BaseInputComponent);

  function DatePickerItem() {
    _classCallCheck(this, DatePickerItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePickerItem).apply(this, arguments));
  }

  _createClass(DatePickerItem, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      return h(date_picker_src, helper_default()([{}, {
        "attrs": this.$attrs
      }, {
        "attrs": {
          "disabled": this.isDisabled,
          "editable": !this.isReadonly,
          "value": this.stateValue,
          "slots": this.slots
        },
        "scopedSlots": this.$scopedSlots
      }, {
        "on": this.listeners
      }, {
        "style": this.cssStyle
      }]), [h(list.Item, {
        "attrs": {
          "title": this.title,
          "required": this.required,
          "disabled": this.isDisabled,
          "error": this.error,
          "errorDisplayType": this.errorDisplayType,
          "errorMessage": this.errorMessage,
          "arrow": "horizontal"
        }
      })]);
    }
  }]);

  return DatePickerItem;
}(base_input_component);

__decorate([Prop({
  type: String
})], item_DatePickerItem.prototype, "title", void 0);

item_DatePickerItem = __decorate([vue_class_component_common_default()({
  name: 'DatePickerItem'
})], item_DatePickerItem);
/* harmony default export */ var date_picker_src_item = (item_DatePickerItem);
// CONCATENATED MODULE: ./src/packages/date-picker/style/index.tsx

// CONCATENATED MODULE: ./src/packages/date-picker/index.ts



date_picker_src.Item = date_picker_src_item;

date_picker_src.install = function (Vue) {
  Vue.component('MDatePicker', date_picker_src);
  Vue.component('MDatePickerItem', date_picker_src.Item);
};

/* harmony default export */ var packages_date_picker = (date_picker_src);
// CONCATENATED MODULE: ./src/packages/date-picker-view/style/index.ts

// CONCATENATED MODULE: ./src/packages/date-picker-view/src/date-picker-view.tsx














var date_picker_view_DatePickerView =
/*#__PURE__*/
function (_DatePickerProps) {
  _inherits(DatePickerView, _DatePickerProps);

  function DatePickerView() {
    _classCallCheck(this, DatePickerView);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DatePickerView).apply(this, arguments));
  }

  _createClass(DatePickerView, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var locale = getComponentLocale(this.$props, this, 'DatePickerView', function () {
        return __webpack_require__("1683");
      }); // DatePicker use `defaultDate`, maybe because there are PopupDatePicker inside? @yiminghe
      // Here Use `date` instead of `defaultDate`, make it controlled fully.

      return h(vmc_date_picker_date_picker, helper_default()([{}, {
        "props": assign_default()({}, this.$props, {
          locale: locale,
          date: this.value
        })
      }, {
        "on": {
          "change": function change(value) {
            var date = new Date(value[0], value[1], value[2], value[3], value[4]);

            _this.$emit('input', date);

            _this.$emit('change', date);
          },
          "scrollChange": function scrollChange(e) {
            _this.$emit('scrollChange', e);

            _this.$emit('scroll-change', e);
          }
        }
      }]));
    }
  }]);

  return DatePickerView;
}(props_type);

__decorate([Prop({
  type: String,
  default: 'am-picker'
})], date_picker_view_DatePickerView.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker-col'
})], date_picker_view_DatePickerView.prototype, "pickerPrefixCls", void 0);

date_picker_view_DatePickerView = __decorate([vue_class_component_common_default()({
  name: 'DatePickerView'
})], date_picker_view_DatePickerView);
/* harmony default export */ var date_picker_view = (date_picker_view_DatePickerView);
// CONCATENATED MODULE: ./src/packages/date-picker-view/src/index.tsx

/* harmony default export */ var date_picker_view_src = (date_picker_view);
// CONCATENATED MODULE: ./src/packages/date-picker-view/index.ts



date_picker_view_src.install = function (Vue) {
  Vue.component('MDatePickerView', date_picker_view_src);
};

/* harmony default export */ var packages_date_picker_view = (date_picker_view_src);
// CONCATENATED MODULE: ./src/packages/vmc-gesture/config.tsx
/* tslint:disable:no-bitwise */
// http://hammerjs.github.io/api/#directions
var DIRECTION_NONE = 1; // 00001

var DIRECTION_LEFT = 2; // 00010

var DIRECTION_RIGHT = 4; // 00100

var DIRECTION_UP = 8; // 01000

var DIRECTION_DOWN = 16; // 10000

var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT; // 00110 6

var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN; // 11000 24

var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL; // 11110  30
// http://hammerjs.github.io/recognizer-press/

var PRESS = {
  time: 251 // Minimal press time in ms.

}; // http://hammerjs.github.io/recognizer-swipe/

var SWIPE = {
  threshold: 10,
  velocity: 0.3
};
// CONCATENATED MODULE: ./src/packages/vmc-gesture/util.tsx


/* tslint:disable:no-bitwise */


function _calcTriangleDistance(x, y) {
  return Math.sqrt(x * x + y * y);
}

function _calcAngle(x, y) {
  var radian = Math.atan2(y, x);
  return 180 / (Math.PI / radian);
}

function util_now() {
  return now_default()();
}
function calcMutliFingerStatus(touches) {
  if (touches.length < 2) {
    return;
  }

  var _touches$ = touches[0],
      x1 = _touches$.x,
      y1 = _touches$.y;
  var _touches$2 = touches[1],
      x2 = _touches$2.x,
      y2 = _touches$2.y;
  var deltaX = x2 - x1;
  var deltaY = y2 - y1;
  return {
    x: deltaX,
    y: deltaY,
    z: _calcTriangleDistance(deltaX, deltaY),
    angle: _calcAngle(deltaX, deltaY)
  };
}
function calcMoveStatus(startTouches, touches, time) {
  var _startTouches$ = startTouches[0],
      x1 = _startTouches$.x,
      y1 = _startTouches$.y;
  var _touches$3 = touches[0],
      x2 = _touches$3.x,
      y2 = _touches$3.y;
  var deltaX = x2 - x1;
  var deltaY = y2 - y1;

  var deltaZ = _calcTriangleDistance(deltaX, deltaY);

  return {
    x: deltaX,
    y: deltaY,
    z: deltaZ,
    time: time,
    velocity: deltaZ / time,
    angle: _calcAngle(deltaX, deltaY)
  };
}
function calcRotation(startMutliFingerStatus, mutliFingerStatus) {
  var startAngle = startMutliFingerStatus.angle;
  var angle = mutliFingerStatus.angle;
  return angle - startAngle;
}
function getEventName(prefix, status) {
  return prefix + status[0].toUpperCase() + status.slice(1);
}
function shouldTriggerSwipe(delta, velocity) {
  return Math.abs(delta) >= SWIPE.threshold && Math.abs(velocity) > SWIPE.velocity;
}
function shouldTriggerDirection(direction, directionSetting) {
  if (directionSetting & direction) {
    return true;
  }

  return false;
}
/**
 * @private
 * get the direction between two points
 * Note: will change next version
 * @param {Number} x
 * @param {Number} y
 * @return {Number} direction
 */

function getDirection(x, y) {
  if (x === y) {
    return DIRECTION_NONE;
  }

  if (Math.abs(x) >= Math.abs(y)) {
    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
  }

  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}
/**
 * @private
 * get the direction between tow points when touch moving
 * Note: will change next version
 * @param {Object} point1 coordinate point, include x & y attributes
 * @param {Object} point2 coordinate point, include x & y attributes
 * @return {Number} direction
 */

function getMovingDirection(point1, point2) {
  var x1 = point1.x,
      y1 = point1.y;
  var x2 = point2.x,
      y2 = point2.y;
  var deltaX = x2 - x1;
  var deltaY = y2 - y1;

  if (deltaX === 0 && deltaY === 0) {
    return DIRECTION_NONE;
  }

  if (Math.abs(deltaX) >= Math.abs(deltaY)) {
    return deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
  }

  return deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;
}
function getDirectionEventName(direction) {
  var name;

  switch (direction) {
    case DIRECTION_NONE:
      break;

    case DIRECTION_LEFT:
      name = 'left';
      break;

    case DIRECTION_RIGHT:
      name = 'right';
      break;

    case DIRECTION_UP:
      name = 'up';
      break;

    case DIRECTION_DOWN:
      name = 'down';
      break;

    default:
  }

  return name;
}
// CONCATENATED MODULE: ./src/packages/vmc-gesture/index.tsx








/* tslint:disable:no-console */







var directionMap = {
  all: DIRECTION_ALL,
  vertical: DIRECTION_VERTICAL,
  horizontal: DIRECTION_HORIZONTAL
};

var vmc_gesture_Gesture =
/*#__PURE__*/
function (_Vue) {
  _inherits(Gesture, _Vue);

  function Gesture() {
    _classCallCheck(this, Gesture);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Gesture).apply(this, arguments));
  }

  _createClass(Gesture, [{
    key: "created",
    value: function created() {
      this.directionSetting = directionMap[this.$props.direction];
    }
  }, {
    key: "triggerEvent",
    value: function triggerEvent(name) {
      var cb = this.$props[name];

      if (typeof cb === 'function') {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        // always give user gesture object as first params first
        cb.apply(void 0, [this.getGestureState()].concat(args));
      }
    }
  }, {
    key: "triggerCombineEvent",
    value: function triggerCombineEvent(mainEventName, eventStatus) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      this.triggerEvent.apply(this, [mainEventName].concat(args));
      this.triggerSubEvent.apply(this, [mainEventName, eventStatus].concat(args));
    }
  }, {
    key: "triggerSubEvent",
    value: function triggerSubEvent(mainEventName, eventStatus) {
      if (eventStatus) {
        var subEventName = getEventName(mainEventName, eventStatus);

        for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
          args[_key3 - 2] = arguments[_key3];
        }

        this.triggerEvent.apply(this, [subEventName].concat(args));
      }
    }
  }, {
    key: "triggerPinchEvent",
    value: function triggerPinchEvent(mainEventName, eventStatus) {
      var scale = this.gesture.scale;

      if (eventStatus === 'move' && typeof scale === 'number') {
        if (scale > 1) {
          this.triggerEvent('onPinchOut');
        }

        if (scale < 1) {
          this.triggerEvent('onPinchIn');
        }
      }

      for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
        args[_key4 - 2] = arguments[_key4];
      }

      this.triggerCombineEvent.apply(this, [mainEventName, eventStatus].concat(args));
    }
  }, {
    key: "initPressTimer",
    value: function initPressTimer() {
      var _this = this;

      this.cleanPressTimer();
      this.pressTimer = setTimeout(function () {
        _this.setGestureState({
          press: true
        });

        _this.triggerEvent('onPress');
      }, PRESS.time);
    }
  }, {
    key: "cleanPressTimer",
    value: function cleanPressTimer() {
      /* tslint:disable:no-unused-expression */
      this.pressTimer && clearTimeout(this.pressTimer);
    }
  }, {
    key: "setGestureState",
    value: function setGestureState(params) {
      if (!this.gesture) {
        this.gesture = {};
      } // cache the previous touches


      if (this.gesture.touches) {
        this.gesture.preTouches = this.gesture.touches;
      }

      this.gesture = assign_default()({}, this.gesture, params);
    }
  }, {
    key: "getGestureState",
    value: function getGestureState() {
      if (!this.gesture) {
        return this.gesture;
      } else {
        // shallow copy
        return assign_default()({}, this.gesture);
      }
    }
  }, {
    key: "cleanGestureState",
    value: function cleanGestureState() {
      delete this.gesture;
    }
  }, {
    key: "getTouches",
    value: function getTouches(e) {
      return Array.prototype.slice.call(e.touches).map(function (item) {
        return {
          x: item.screenX,
          y: item.screenY
        };
      });
    }
  }, {
    key: "triggerUserCb",
    value: function triggerUserCb(status, e) {
      var cbName = getEventName('onTouch', status);

      if (cbName in this.$props && this.$props[cbName]) {
        this.$props[cbName](e);
      }
    }
  }, {
    key: "_handleTouchStart",
    value: function _handleTouchStart(e) {
      this.triggerUserCb('start', e);
      this.event = e;

      if (e.touches.length > 1) {
        e.preventDefault();
      }

      this.initGestureStatus(e);
      this.initPressTimer();
      this.checkIfMultiTouchStart();
    }
  }, {
    key: "initGestureStatus",
    value: function initGestureStatus(e) {
      this.cleanGestureState(); // store the gesture start state

      var startTouches = this.getTouches(e);
      var startTime = util_now();
      var startMutliFingerStatus = calcMutliFingerStatus(startTouches);
      this.setGestureState({
        startTime: startTime,
        startTouches: startTouches,
        startMutliFingerStatus: startMutliFingerStatus,

        /* copy for next time touch move cala convenient*/
        time: startTime,
        touches: startTouches,
        mutliFingerStatus: startMutliFingerStatus,
        srcEvent: this.event
      });
    }
  }, {
    key: "checkIfMultiTouchStart",
    value: function checkIfMultiTouchStart() {
      var enablePinch = this.enablePinch,
          enableRotate = this.enableRotate;
      var touches = this.gesture.touches;

      if (touches.length > 1 && (enablePinch || enableRotate)) {
        if (enablePinch) {
          var startMutliFingerStatus = calcMutliFingerStatus(touches);
          this.setGestureState({
            startMutliFingerStatus: startMutliFingerStatus,

            /* init pinch status */
            pinch: true,
            scale: 1
          });
          this.triggerCombineEvent('onPinch', 'start');
        }

        if (enableRotate) {
          this.setGestureState({
            /* init rotate status */
            rotate: true,
            rotation: 0
          });
          this.triggerCombineEvent('onRotate', 'start');
        }
      }
    }
  }, {
    key: "_handleTouchMove",
    value: function _handleTouchMove(e) {
      this.triggerUserCb('move', e);
      this.event = e;

      if (!this.gesture) {
        // sometimes weird happen: touchstart -> touchmove..touchmove.. --> touchend --> touchmove --> touchend
        // so we need to skip the unnormal event cycle after touchend
        return;
      } // not a long press


      this.cleanPressTimer();
      this.updateGestureStatus(e);
      this.checkIfSingleTouchMove();
      this.checkIfMultiTouchMove();
    }
  }, {
    key: "checkIfMultiTouchMove",
    value: function checkIfMultiTouchMove() {
      var _this$gesture = this.gesture,
          pinch = _this$gesture.pinch,
          rotate = _this$gesture.rotate,
          touches = _this$gesture.touches,
          startMutliFingerStatus = _this$gesture.startMutliFingerStatus,
          mutliFingerStatus = _this$gesture.mutliFingerStatus;

      if (!pinch && !rotate) {
        return;
      }

      if (touches.length < 2) {
        this.setGestureState({
          pinch: false,
          rotate: false
        }); // Todo: 2 finger -> 1 finger, wait to test this situation

        pinch && this.triggerCombineEvent('onPinch', 'cancel');
        rotate && this.triggerCombineEvent('onRotate', 'cancel');
        return;
      }

      if (pinch) {
        var scale = mutliFingerStatus.z / startMutliFingerStatus.z;
        this.setGestureState({
          scale: scale
        });
        this.triggerPinchEvent('onPinch', 'move');
      }

      if (rotate) {
        var rotation = calcRotation(startMutliFingerStatus, mutliFingerStatus);
        this.setGestureState({
          rotation: rotation
        });
        this.triggerCombineEvent('onRotate', 'move');
      }
    }
  }, {
    key: "allowGesture",
    value: function allowGesture() {
      return shouldTriggerDirection(this.gesture.direction, this.directionSetting);
    }
  }, {
    key: "checkIfSingleTouchMove",
    value: function checkIfSingleTouchMove() {
      var _this$gesture2 = this.gesture,
          pan = _this$gesture2.pan,
          touches = _this$gesture2.touches,
          moveStatus = _this$gesture2.moveStatus,
          preTouches = _this$gesture2.preTouches,
          _this$gesture2$availa = _this$gesture2.availablePan,
          availablePan = _this$gesture2$availa === void 0 ? true : _this$gesture2$availa;

      if (touches.length > 1) {
        this.setGestureState({
          pan: false
        }); // Todo: 1 finger -> 2 finger, wait to test this situation

        pan && this.triggerCombineEvent('onPan', 'cancel');
        return;
      } // add avilablePan condition to fix the case in scrolling, which will cause unavailable pan move.


      if (moveStatus && availablePan) {
        var direction = getMovingDirection(preTouches[0], touches[0]);
        this.setGestureState({
          direction: direction
        });
        var eventName = getDirectionEventName(direction);

        if (!this.allowGesture()) {
          // if the first move is unavailable, then judge all of remaining touch movings are also invalid.
          if (!pan) {
            this.setGestureState({
              availablePan: false
            });
          }

          return;
        }

        if (!pan) {
          this.triggerCombineEvent('onPan', 'start');
          this.setGestureState({
            pan: true,
            availablePan: true
          });
        } else {
          this.triggerCombineEvent('onPan', eventName);
          this.triggerSubEvent('onPan', 'move');
        }
      }
    }
  }, {
    key: "checkIfMultiTouchEnd",
    value: function checkIfMultiTouchEnd(status) {
      var _this$gesture3 = this.gesture,
          pinch = _this$gesture3.pinch,
          rotate = _this$gesture3.rotate;

      if (pinch) {
        this.triggerCombineEvent('onPinch', status);
      }

      if (rotate) {
        this.triggerCombineEvent('onRotate', status);
      }
    }
  }, {
    key: "updateGestureStatus",
    value: function updateGestureStatus(e) {
      var time = util_now();
      this.setGestureState({
        time: time
      });

      if (!e.touches || !e.touches.length) {
        return;
      }

      var _this$gesture4 = this.gesture,
          startTime = _this$gesture4.startTime,
          startTouches = _this$gesture4.startTouches,
          pinch = _this$gesture4.pinch,
          rotate = _this$gesture4.rotate;
      var touches = this.getTouches(e);
      var moveStatus = calcMoveStatus(startTouches, touches, time - startTime);
      var mutliFingerStatus;

      if (pinch || rotate) {
        mutliFingerStatus = calcMutliFingerStatus(touches);
      }

      this.setGestureState({
        /* update status snapshot */
        touches: touches,
        mutliFingerStatus: mutliFingerStatus,

        /* update duration status */
        moveStatus: moveStatus
      });
    }
  }, {
    key: "_handleTouchEnd",
    value: function _handleTouchEnd(e) {
      this.triggerUserCb('end', e);
      this.event = e;

      if (!this.gesture) {
        return;
      }

      this.cleanPressTimer();
      this.updateGestureStatus(e);
      this.doSingleTouchEnd('end');
      this.checkIfMultiTouchEnd('end');
    }
  }, {
    key: "_handleTouchCancel",
    value: function _handleTouchCancel(e) {
      this.triggerUserCb('cancel', e);
      this.event = e; // Todo: wait to test cancel case

      if (!this.gesture) {
        return;
      }

      this.cleanPressTimer();
      this.updateGestureStatus(e);
      this.doSingleTouchEnd('cancel');
      this.checkIfMultiTouchEnd('cancel');
    }
  }, {
    key: "triggerAllowEvent",
    value: function triggerAllowEvent(type, status) {
      if (this.allowGesture()) {
        this.triggerCombineEvent(type, status);
      } else {
        this.triggerSubEvent(type, status);
      }
    }
  }, {
    key: "doSingleTouchEnd",
    value: function doSingleTouchEnd(status) {
      var _this$gesture5 = this.gesture,
          moveStatus = _this$gesture5.moveStatus,
          pinch = _this$gesture5.pinch,
          rotate = _this$gesture5.rotate,
          press = _this$gesture5.press,
          pan = _this$gesture5.pan,
          direction = _this$gesture5.direction;

      if (pinch || rotate) {
        return;
      }

      if (moveStatus) {
        var z = moveStatus.z,
            velocity = moveStatus.velocity;
        var swipe = shouldTriggerSwipe(z, velocity);
        this.setGestureState({
          swipe: swipe
        });

        if (pan) {
          // pan need end, it's a process
          // sometimes, start with pan left, but end with pan right....
          this.triggerAllowEvent('onPan', status);
        }

        if (swipe) {
          var directionEvName = getDirectionEventName(direction); // swipe just need a direction, it's a endpoint

          this.triggerAllowEvent('onSwipe', directionEvName);
          return;
        }
      }

      if (press) {
        this.triggerEvent('onPressUp');
        return;
      }

      this.triggerEvent('onTap');
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cleanPressTimer();
    }
  }, {
    key: "getTouchAction",
    value: function getTouchAction() {
      var enablePinch = this.enablePinch,
          enableRotate = this.enableRotate;
      var directionSetting = this.directionSetting;

      if (enablePinch || enableRotate || directionSetting === DIRECTION_ALL) {
        return 'pan-x pan-y';
      }

      if (directionSetting === DIRECTION_VERTICAL) {
        return 'pan-x';
      }

      if (directionSetting === DIRECTION_HORIZONTAL) {
        return 'pan-y';
      }

      return 'auto';
    }
  }, {
    key: "render",
    value: function render() {
      var child = this.$slots.default.length >= 1 ? this.$slots.default[0] : null;
      var touchAction = this.getTouchAction();
      child.data.on = assign_default()({
        touchstart: this._handleTouchStart,
        touchmove: this._handleTouchMove,
        touchcancel: this._handleTouchCancel,
        touchend: this._handleTouchEnd
      }, child.data.on || {});
      return vnode_cloneElement(child, {
        style: {
          touchAction: touchAction
        }
      });
    }
  }]);

  return Gesture;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_gesture_Gesture.prototype, "enableRotate", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_gesture_Gesture.prototype, "enablePinch", void 0);

__decorate([Prop({
  type: String,
  default: 'all'
})], vmc_gesture_Gesture.prototype, "direction", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPinch", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPinchStart", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPinchMove", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPinchEnd", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPinchCancel", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPinchIn", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPinchOut", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onRotate", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onRotateStart", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onRotateMove", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onRotateEnd", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onRotateCancel", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPan", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanStart", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanMove", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanEnd", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanCancel", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanLeft", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanRight", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanUp", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPanDown", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onTap", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPress", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onPressUp", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onSwipe", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onSwipeLeft", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onSwipeRight", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onSwipeUp", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onSwipeDown", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onTouchStart", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onTouchMove", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onTouchEnd", void 0);

__decorate([Prop()], vmc_gesture_Gesture.prototype, "onTouchCancel", void 0);

vmc_gesture_Gesture = __decorate([vue_class_component_common_default()({
  name: 'Gesture'
})], vmc_gesture_Gesture);
/* harmony default export */ var vmc_gesture = (vmc_gesture_Gesture);
// CONCATENATED MODULE: ./src/packages/tabs/src/utils.tsx
function getTransformPropValue(v) {
  return {
    transform: v,
    WebkitTransform: v,
    MozTransform: v
  };
}
function getPxStyle(value) {
  var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'px';
  var vertical = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var v = vertical ? "0px, ".concat(value).concat(unit, ", 0px") : "".concat(value).concat(unit, ", 0px, 0px");
  return "translate3d(".concat(v, ")");
}
function setPxStyle(el, value) {
  var unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'px';
  var vertical = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var useLeft = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  if (useLeft) {
    if (vertical) {
      el.style.top = "".concat(value).concat(unit);
    } else {
      el.style.left = "".concat(value).concat(unit);
    }
  } else {
    setTransform(el.style, getPxStyle(value, unit, vertical));
  }
}
function setTransform(style, v) {
  style.transform = v;
  style.webkitTransform = v;
  style.mozTransform = v;
}
// CONCATENATED MODULE: ./src/packages/tabs/src/default-tab-bar.tsx















var default_tab_bar_instanceId = 0;

var default_tab_bar_DefaultTabBar =
/*#__PURE__*/
function (_Vue) {
  _inherits(DefaultTabBar, _Vue);

  function DefaultTabBar() {
    var _this;

    _classCallCheck(this, DefaultTabBar);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(DefaultTabBar).apply(this, arguments));
    _this.isMoving = false;
    _this.showPrev = false;
    _this.showNext = false;
    _this.transform = '';
    return _this;
  }

  _createClass(DefaultTabBar, [{
    key: "created",
    value: function created() {
      this.getTransformByIndex();
      this.instanceId = default_tab_bar_instanceId++;
    }
  }, {
    key: "getTransformByIndex",
    value: function getTransformByIndex() {
      var activeTab = this.activeTab,
          tabs = this.tabs,
          _this$page = this.page,
          page = _this$page === void 0 ? 0 : _this$page;
      var isVertical = this.isTabBarVertical();
      var size = this.getTabSize(page, tabs.length);
      var center = page / 2;
      var pos = Math.min(activeTab, tabs.length - center - .5);
      var skipSize = Math.min(-(pos - center + .5) * size, 0);
      this.onPan.setCurrentOffset("".concat(skipSize, "%"));
      this.transform = getPxStyle(skipSize, '%', isVertical);
      this.showPrev = activeTab > center - .5 && tabs.length > page;
      this.showNext = activeTab < tabs.length - center - .5 && tabs.length > page;
    }
  }, {
    key: "onPress",
    value: function onPress(index) {
      var goToTab = this.goToTab,
          tabs = this.tabs;
      this.$emit('tabClick', tabs[index], index);
      goToTab && goToTab(index);
    }
  }, {
    key: "isTabBarVertical",
    value: function isTabBarVertical() {
      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tabBarPosition;
      return position === 'left' || position === 'right';
    }
  }, {
    key: "nativeRenderTab",
    value: function nativeRenderTab(t, i, size, isTabBarVertical) {
      var _this2 = this;

      var h = this.$createElement;
      var prefixCls = this.prefixCls,
          renderTab = this.renderTab,
          activeTab = this.activeTab,
          tabBarTextStyle = this.tabBarTextStyle,
          tabBarActiveTextColor = this.tabBarActiveTextColor,
          tabBarInactiveTextColor = this.tabBarInactiveTextColor,
          instanceId = this.instanceId;

      var textStyle = assign_default()({}, tabBarTextStyle);

      var cls = "".concat(prefixCls, "-tab");
      var ariaSelected = false;

      var style = assign_default()({}, textStyle, isTabBarVertical ? {
        height: "".concat(size, "%")
      } : {
        width: "".concat(size, "%")
      });

      if (this.card && this.activeCardColor) {
        style.borderColor = this.activeCardColor;
      }

      if (this.card) {
        cls += " ".concat(cls, "-card");
      }

      if (activeTab === i) {
        cls += " ".concat(cls, "-active");
        ariaSelected = true;

        if (tabBarActiveTextColor) {
          textStyle.color = tabBarActiveTextColor;
        }

        style.backgroundColor = this.activeCardColor;
      } else if (tabBarInactiveTextColor) {
        textStyle.color = tabBarInactiveTextColor;
      }

      return h("div", {
        "key": "t_".concat(i),
        "style": style,
        "attrs": {
          "id": "m-tabs-".concat(instanceId, "-").concat(i),
          "role": "tab",
          "aria-selected": ariaSelected
        },
        "class": cls,
        "on": {
          "click": function click() {
            return _this2.onPress(i);
          }
        }
      }, [renderTab ? renderTab(t) : t.title]);
    }
  }, {
    key: "getTabSize",
    value: function getTabSize(page, tabLength) {
      return 100 / Math.min(page, tabLength);
    }
  }, {
    key: "activeTabChanged",
    value: function activeTabChanged() {
      this.getTransformByIndex();
    }
  }, {
    key: "tabsChanged",
    value: function tabsChanged() {
      this.getTransformByIndex();
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          animated = this.animated,
          _this$tabs = this.tabs,
          tabs = _this$tabs === void 0 ? [] : _this$tabs,
          _this$page2 = this.page,
          page = _this$page2 === void 0 ? 0 : _this$page2,
          _this$activeTab = this.activeTab,
          activeTab = _this$activeTab === void 0 ? 0 : _this$activeTab,
          tabBarBackgroundColor = this.tabBarBackgroundColor,
          tabBarUnderlineStyle = this.tabBarUnderlineStyle,
          tabBarPosition = this.tabBarPosition;
      var renderUnderline = !this.card && this.renderUnderline;
      var isMoving = this.isMoving,
          transform = this.transform,
          showNext = this.showNext,
          showPrev = this.showPrev;
      var isTabBarVertical = this.isTabBarVertical();
      var needScroll = tabs.length > page;
      var size = this.getTabSize(page, tabs.length);
      var Tabs = tabs.map(function (t, i) {
        return _this3.nativeRenderTab(t, i, size, isTabBarVertical);
      });
      var cls = prefixCls;

      if (animated && !isMoving) {
        cls += " ".concat(prefixCls, "-animated");
      }

      var style = {
        backgroundColor: tabBarBackgroundColor || ''
      };
      var transformStyle = needScroll ? assign_default()({}, getTransformPropValue(transform)) : {};

      var _a = this.onPan,
          setCurrentOffset = _a.setCurrentOffset,
          onPan = __rest(_a, ["setCurrentOffset"]);

      var underlineProps = {
        style: assign_default()({}, isTabBarVertical ? {
          height: "".concat(size, "%")
        } : {
          width: "".concat(size, "%")
        }, isTabBarVertical ? {
          top: "".concat(size * activeTab, "%")
        } : {
          left: "".concat(size * activeTab, "%")
        }, tabBarUnderlineStyle),
        class: "".concat(prefixCls, "-underline")
      };
      return h("div", {
        "class": "".concat(cls, " ").concat(prefixCls, "-").concat(tabBarPosition),
        "style": style
      }, [showPrev && h("div", {
        "class": "".concat(prefixCls, "-prevpage")
      }), h(vmc_gesture, helper_default()([{}, onPan, {
        "attrs": {
          "direction": isTabBarVertical ? 'vertical' : 'horizontal'
        }
      }]), [h("div", {
        "attrs": {
          "role": "tablist"
        },
        "class": "".concat(prefixCls, "-content"),
        "style": transformStyle,
        "ref": "layout"
      }, [Tabs, renderUnderline ? h("div", helper_default()([{}, underlineProps])) : ''])]), showNext && h("div", {
        "class": "".concat(prefixCls, "-nextpage")
      })]);
    }
  }, {
    key: "layout",
    get: function get() {
      return this.$refs['layout'];
    }
  }, {
    key: "onPan",
    get: function get() {
      var _this4 = this;

      var lastOffset = 0;
      var finalOffset = 0;

      var getLastOffset = function getLastOffset() {
        var isVertical = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this4.isTabBarVertical();
        var offset = +"".concat(lastOffset).replace('%', '');

        if ("".concat(lastOffset).indexOf('%') >= 0) {
          offset /= 100;
          offset *= isVertical ? _this4.layout.clientHeight : _this4.layout.clientWidth;
        }

        return offset;
      };

      return {
        onPanStart: function onPanStart() {
          _this4.isMoving = true;
        },
        onPanMove: function onPanMove(status) {
          if (!status.moveStatus || !_this4.layout) {
            return;
          }

          var isVertical = _this4.isTabBarVertical();

          var offset = getLastOffset() + (isVertical ? status.moveStatus.y : status.moveStatus.x);
          var canScrollOffset = isVertical ? -_this4.layout.scrollHeight + _this4.layout.clientHeight : -_this4.layout.scrollWidth + _this4.layout.clientWidth;
          offset = Math.min(offset, 0);
          offset = Math.max(offset, canScrollOffset);
          setPxStyle(_this4.layout, offset, 'px', isVertical);
          finalOffset = offset;
          _this4.showPrev = -offset > 0;
          _this4.showNext = offset > canScrollOffset;
        },
        onPanEnd: function onPanEnd() {
          var isVertical = _this4.isTabBarVertical();

          lastOffset = finalOffset;
          _this4.isMoving = false;
          _this4.transform = getPxStyle(finalOffset, 'px', isVertical);
        },
        setCurrentOffset: function setCurrentOffset(offset) {
          return lastOffset = offset;
        }
      };
    }
  }]);

  return DefaultTabBar;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean
})], default_tab_bar_DefaultTabBar.prototype, "card", void 0);

__decorate([Prop(String)], default_tab_bar_DefaultTabBar.prototype, "activeCardColor", void 0);

__decorate([Prop({
  default: 'am-tabs-default-bar'
})], default_tab_bar_DefaultTabBar.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: function _default() {}
})], default_tab_bar_DefaultTabBar.prototype, "goToTab", void 0);

__decorate([Prop({
  default: function _default() {
    return [];
  }
})], default_tab_bar_DefaultTabBar.prototype, "tabs", void 0);

__decorate([Prop({
  default: 0
})], default_tab_bar_DefaultTabBar.prototype, "activeTab", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], default_tab_bar_DefaultTabBar.prototype, "animated", void 0);

__decorate([Prop()], default_tab_bar_DefaultTabBar.prototype, "renderTab", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], default_tab_bar_DefaultTabBar.prototype, "renderUnderline", void 0);

__decorate([Prop({
  default: 5
})], default_tab_bar_DefaultTabBar.prototype, "page", void 0);

__decorate([Prop({
  type: String,
  default: 'top'
})], default_tab_bar_DefaultTabBar.prototype, "tabBarPosition", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], default_tab_bar_DefaultTabBar.prototype, "tabBarUnderlineStyle", void 0);

__decorate([Prop({
  default: '#fff'
})], default_tab_bar_DefaultTabBar.prototype, "tabBarBackgroundColor", void 0);

__decorate([Prop({
  default: ''
})], default_tab_bar_DefaultTabBar.prototype, "tabBarActiveTextColor", void 0);

__decorate([Prop({
  default: ''
})], default_tab_bar_DefaultTabBar.prototype, "tabBarInactiveTextColor", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], default_tab_bar_DefaultTabBar.prototype, "tabBarTextStyle", void 0);

__decorate([Watch('activeTab')], default_tab_bar_DefaultTabBar.prototype, "activeTabChanged", null);

__decorate([Watch('tabs')], default_tab_bar_DefaultTabBar.prototype, "tabsChanged", null);

default_tab_bar_DefaultTabBar = __decorate([vue_class_component_common_default()({
  name: 'DefaultTabBar'
})], default_tab_bar_DefaultTabBar);
/* harmony default export */ var default_tab_bar = (default_tab_bar_DefaultTabBar);
// CONCATENATED MODULE: ./src/packages/tabs/src/tab-pane.tsx













var tab_pane_TabPane =
/*#__PURE__*/
function (_Vue) {
  _inherits(TabPane, _Vue);

  function TabPane() {
    var _this;

    _classCallCheck(this, TabPane);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(TabPane).apply(this, arguments));
    _this.offsetX = 0;
    _this.offsetY = 0;
    return _this;
  }

  _createClass(TabPane, [{
    key: "beforeUpdate",
    value: function beforeUpdate() {
      if (this.active !== this.active) {
        if (this.active) {
          this.offsetX = 0;
          this.offsetY = 0;
        } else {
          this.offsetX = this.layout.scrollLeft;
          this.offsetY = this.layout.scrollTop;
        }
      }
    }
  }, {
    key: "setLayout",
    value: function setLayout(div) {
      this.layout = div;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _a = this,
          active = _a.active,
          fixX = _a.fixX,
          fixY = _a.fixY,
          props = __rest(_a, ["active", "fixX", "fixY"]);

      var style = assign_default()({}, fixX && this.offsetX ? getTransformPropValue(getPxStyle(-this.offsetX, 'px', false)) : {}, fixY && this.offsetY ? getTransformPropValue(getPxStyle(-this.offsetY, 'px', true)) : {});

      return h("div", helper_default()([{}, props, {
        "style": style,
        "ref": this.setLayout
      }]), [this.$slots.default]);
    }
  }]);

  return TabPane;
}(external_Vue_default.a);

__decorate([Prop()], tab_pane_TabPane.prototype, "role", void 0);

__decorate([Prop()], tab_pane_TabPane.prototype, "active", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], tab_pane_TabPane.prototype, "fixX", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], tab_pane_TabPane.prototype, "fixY", void 0);

tab_pane_TabPane = __decorate([vue_class_component_common_default()({
  name: 'TabPane'
})], tab_pane_TabPane);
/* harmony default export */ var tab_pane = (tab_pane_TabPane);
// CONCATENATED MODULE: ./src/packages/tabs/src/index.tsx






















var src_instanceId = 0;
var src_getPanDirection = function getPanDirection(direction) {
  switch (direction) {
    case DIRECTION_LEFT:
    case DIRECTION_RIGHT:
      return 'horizontal';

    case DIRECTION_UP:
    case DIRECTION_DOWN:
      return 'vertical';

    default:
      return 'none';
  }
};

var src_Tabs =
/*#__PURE__*/
function (_Vue) {
  _inherits(Tabs, _Vue);

  function Tabs() {
    var _this;

    _classCallCheck(this, Tabs);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Tabs).apply(this, arguments));
    _this.contentPos = '';
    _this.isMoving = false;
    _this.tabCache = {};
    _this.currentTab = _this.getTabIndex();
    return _this;
  }

  _createClass(Tabs, [{
    key: "created",
    value: function created() {
      this.nextCurrentTab = this.currentTab;
      this.instanceId = src_instanceId++;
      this.contentPos = this.getContentPosByIndex(this.getTabIndex(), this.isTabVertical(this.tabDirection), this.useLeftInsteadTransform);
    }
  }, {
    key: "pageChanged",
    value: function pageChanged(page) {
      if (page !== undefined && page !== null) {
        this.currentTab = page;
      }
    }
  }, {
    key: "currentTabChanged",
    value: function currentTabChanged(index) {
      this.$emit('input', index);
    }
    /** on tab click */

  }, {
    key: "onTabClick",
    value: function onTabClick(tab, index) {
      this.$emit('tab-click', index);
    }
  }, {
    key: "getTabIndex",
    value: function getTabIndex() {
      var page = this.page,
          value = this.value,
          tabs = this.tabs;
      var param = (page !== undefined ? page : value) || 0;
      var index = 0;

      if (typeof param === 'string') {
        tabs.forEach(function (t, i) {
          if (t.key === param) {
            index = i;
          }
        });
      } else {
        index = param || 0;
      }

      return index < 0 ? 0 : index;
    }
  }, {
    key: "isTabVertical",
    value: function isTabVertical() {
      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tabDirection;
      return direction === 'vertical';
    }
  }, {
    key: "shouldRenderTab",
    value: function shouldRenderTab(idx) {
      var _this$prerenderingSib = this.prerenderingSiblingsNumber,
          prerenderingSiblingsNumber = _this$prerenderingSib === void 0 ? 0 : _this$prerenderingSib;
      var _this$currentTab = this.currentTab,
          currentTab = _this$currentTab === void 0 ? 0 : _this$currentTab;
      return currentTab - prerenderingSiblingsNumber <= idx && idx <= currentTab + prerenderingSiblingsNumber;
    }
  }, {
    key: "beforeUpdate",
    value: function beforeUpdate() {
      if (this.page !== this.page && this.page !== undefined) {
        this.baseGoToTab(this.getTabIndex(), true, {});
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.prevCurrentTab = this.currentTab;
    }
  }, {
    key: "updated",
    value: function updated() {
      this.prevCurrentTab = this.currentTab;
    }
  }, {
    key: "getOffsetIndex",
    value: function getOffsetIndex(current, width) {
      var threshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.distanceToChangeTab || 0;
      var ratio = Math.abs(current / width);
      var direction = ratio > this.currentTab ? '<' : '>';
      var index = Math.floor(ratio);

      switch (direction) {
        case '<':
          return ratio - index > threshold ? index + 1 : index;

        case '>':
          return 1 - ratio + index > threshold ? index : index + 1;

        default:
          return Math.round(ratio);
      }
    }
  }, {
    key: "baseGoToTab",
    value: function baseGoToTab(index) {
      var _this2 = this;

      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var newState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (!force && this.nextCurrentTab === index) {
        return false;
      }

      this.nextCurrentTab = index;
      var tabs = this.tabs;

      if (index >= 0 && index < tabs.length) {
        if (!force) {
          this.$emit('change', tabs[index], index);

          if (this.page !== undefined) {
            return false;
          }
        }

        this.currentTab = index;

        keys_default()(newState).forEach(function (key) {
          _this2[key] = newState[key];
        });
      }

      return true;
    }
  }, {
    key: "getTabBarBaseProps",
    value: function getTabBarBaseProps() {
      var animated = this.animated,
          tabBarActiveTextColor = this.tabBarActiveTextColor,
          tabBarBackgroundColor = this.tabBarBackgroundColor,
          tabBarInactiveTextColor = this.tabBarInactiveTextColor,
          tabBarPosition = this.tabBarPosition,
          tabBarTextStyle = this.tabBarTextStyle,
          tabBarUnderlineStyle = this.tabBarUnderlineStyle,
          tabs = this.tabs;
      return {
        activeTab: this.currentTab,
        animated: animated,
        card: this.card,
        activeCardColor: this.activeCardColor,
        goToTab: this.tabClickGoToTab,
        tabBarActiveTextColor: tabBarActiveTextColor,
        tabBarBackgroundColor: tabBarBackgroundColor,
        tabBarInactiveTextColor: tabBarInactiveTextColor,
        tabBarPosition: tabBarPosition,
        tabBarTextStyle: tabBarTextStyle,
        tabBarUnderlineStyle: tabBarUnderlineStyle,
        tabs: tabs,
        instanceId: this.instanceId
      };
    }
  }, {
    key: "getSubElements",
    value: function getSubElements() {
      var children = this.$slots.default;
      var subElements = {};
      return function () {
        var defaultPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '$i$-';
        var allPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$ALL$';

        if (is_array_default()(children)) {
          children.forEach(function (child, index) {
            if (child.key) {
              subElements[child.key] = child;
            }

            subElements["".concat(defaultPrefix).concat(index)] = child;
          });
        } else if (children) {
          subElements[allPrefix] = children;
        }

        return subElements;
      };
    }
  }, {
    key: "getSubElement",
    value: function getSubElement(tab, index) {
      var defaultPrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '$i$-';
      var allPrefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '$ALL$';
      var key = tab.key !== null && tab.key !== undefined && tab.key !== '' ? tab.key : "".concat(defaultPrefix).concat(index);
      var getSubElements = this.getSubElements();
      var elements = getSubElements(defaultPrefix, allPrefix);
      var component = elements[key] || elements[allPrefix];

      if (component instanceof Function) {
        component = component(tab, index);
      }

      return component || null;
    }
  }, {
    key: "goToTab",
    value: function goToTab(index) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var usePaged = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.usePaged;
      var tabDirection = this.tabDirection,
          useLeftInsteadTransform = this.useLeftInsteadTransform;
      var newState = {};

      if (usePaged) {
        newState = {
          contentPos: this.getContentPosByIndex(index, this.isTabVertical(tabDirection), useLeftInsteadTransform)
        };
      }

      return this.baseGoToTab(index, force, newState);
    }
  }, {
    key: "tabClickGoToTab",
    value: function tabClickGoToTab(index) {
      this.goToTab(index, false, true);
    }
  }, {
    key: "getContentPosByIndex",
    value: function getContentPosByIndex(index, isVertical) {
      var useLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var value = "".concat(-index * 100, "%");
      this.onPan.setCurrentOffset(value);

      if (useLeft) {
        return "".concat(value);
      } else {
        var translate = isVertical ? "0px, ".concat(value) : "".concat(value, ", 0px"); // fix: content overlay TabBar on iOS 10. ( 0px -> 1px )

        return "translate3d(".concat(translate, ", 1px)");
      }
    }
  }, {
    key: "onSwipe",
    value: function onSwipe(status) {
      var tabBarPosition = this.tabBarPosition,
          swipeable = this.swipeable,
          usePaged = this.usePaged;

      if (!swipeable || !usePaged || this.isTabVertical()) {
        return;
      }

      switch (tabBarPosition) {
        case 'top':
        case 'bottom':
          switch (status.direction) {
            case DIRECTION_LEFT:
              if (!this.isTabVertical()) {
                this.goToTab(this.prevCurrentTab + 1);
              }

              break;

            case DIRECTION_UP:
              if (this.isTabVertical()) {
                this.goToTab(this.prevCurrentTab + 1);
              }

              break;

            case DIRECTION_RIGHT:
              if (!this.isTabVertical()) {
                this.goToTab(this.prevCurrentTab - 1);
              }

              break;

            case DIRECTION_DOWN:
              if (this.isTabVertical()) {
                this.goToTab(this.prevCurrentTab - 1);
              }

              break;
          }

          break;
      }
    }
  }, {
    key: "renderContent",
    value: function renderContent() {
      var _this3 = this;

      var h = this.$createElement;
      var prefixCls = this.prefixCls,
          tabs = this.tabs,
          animated = this.animated,
          destroyInactiveTab = this.destroyInactiveTab,
          useLeftInsteadTransform = this.useLeftInsteadTransform;
      var currentTab = this.currentTab,
          isMoving = this.isMoving,
          contentPos = this.contentPos;
      var isTabVertical = this.isTabVertical();
      var contentCls = "".concat(prefixCls, "-content-wrap");

      if (animated && !isMoving) {
        contentCls += " ".concat(contentCls, "-animated");
      }

      var contentStyle = animated ? useLeftInsteadTransform ? assign_default()({
        position: 'relative'
      }, this.isTabVertical() ? {
        top: contentPos
      } : {
        left: contentPos
      }) : getTransformPropValue(contentPos) : assign_default()({
        position: 'relative'
      }, this.isTabVertical() ? {
        top: "".concat(-currentTab * 100, "%")
      } : {
        left: "".concat(-currentTab * 100, "%")
      });

      var _this$getTabBarBasePr = this.getTabBarBaseProps(),
          instanceId = _this$getTabBarBasePr.instanceId;

      return h("div", {
        "class": contentCls,
        "style": contentStyle,
        "ref": "layout"
      }, [tabs && tabs.map(function (tab, index) {
        var cls = "".concat(prefixCls, "-pane-wrap");

        if (_this3.currentTab === index) {
          cls += " ".concat(cls, "-active");
        } else {
          cls += " ".concat(cls, "-inactive");
        }

        var key = tab.key || "tab_".concat(index); // update tab cache

        if (_this3.shouldRenderTab(index)) {
          _this3.tabCache[index] = _this3.getSubElement(tab, index);
        } else if (destroyInactiveTab) {
          _this3.tabCache[index] = undefined;
        }

        return h(tab_pane, {
          "key": key,
          "class": cls,
          "attrs": {
            "active": currentTab === index,
            "role": "tabpanel",
            "aria-hidden": currentTab !== index,
            "aria-labelledby": "m-tabs-".concat(instanceId, "-").concat(index),
            "fixX": isTabVertical,
            "fixY": !isTabVertical
          }
        }, [_this3.tabCache[index]]);
      })]);
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          tabBarPosition = this.tabBarPosition,
          tabDirection = this.tabDirection,
          useOnPan = this.useOnPan;
      var isTabVertical = this.isTabVertical(tabDirection);

      var tabBarProps = assign_default()({}, this.getTabBarBaseProps());

      var onPan = !isTabVertical && useOnPan ? this.onPan : {};
      var content = [h("div", {
        "key": "tabBar",
        "class": "".concat(prefixCls, "-tab-bar-wrap")
      }, [this.renderTabBar ? this.renderTabBar(tabBarProps) : h(default_tab_bar, helper_default()([{}, {
        "attrs": tabBarProps
      }, {}, {
        "on": {
          tabClick: function tabClick(tab, index) {
            _this4.onTabClick(tab, index);
          }
        }
      }]))]), h(vmc_gesture, {
        "key": "$content",
        "on": {
          "swipe": this.onSwipe
        },
        "props": _objectSpread({}, onPan)
      }, [this.renderContent()])];
      return h("div", {
        "class": "".concat(prefixCls, " ").concat(prefixCls, "-").concat(tabDirection, " ").concat(prefixCls, "-").concat(tabBarPosition)
      }, [tabBarPosition === 'top' || tabBarPosition === 'left' ? content : content.reverse()]);
    }
  }, {
    key: "layout",
    get: function get() {
      return this.$refs['layout'];
    }
  }, {
    key: "onPan",
    get: function get() {
      var _this5 = this;

      var lastOffset = 0;
      var finalOffset = 0;
      var panDirection;

      var getLastOffset = function getLastOffset() {
        var isVertical = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this5.isTabVertical();
        var offset = +"".concat(lastOffset).replace('%', '');

        if ("".concat(lastOffset).indexOf('%') >= 0) {
          offset /= 100;
          offset *= isVertical ? _this5.layout.clientHeight : _this5.layout.clientWidth;
        }

        return offset;
      };

      return {
        onPanStart: function onPanStart(status) {
          if (!_this5.swipeable || !_this5.animated) {
            return;
          }

          panDirection = src_getPanDirection(status.direction);
          _this5.isMoving = true;
        },
        onPanMove: function onPanMove(status) {
          var swipeable = _this5.swipeable,
              animated = _this5.animated,
              useLeftInsteadTransform = _this5.useLeftInsteadTransform;

          if (!status.moveStatus || !_this5.layout || !swipeable || !animated) {
            return;
          }

          var isVertical = _this5.isTabVertical();

          var offset = getLastOffset();

          if (isVertical) {
            offset += panDirection === 'horizontal' ? 0 : status.moveStatus.y;
          } else {
            offset += panDirection === 'vertical' ? 0 : status.moveStatus.x;
          }

          var canScrollOffset = isVertical ? -_this5.layout.scrollHeight + _this5.layout.clientHeight : -_this5.layout.scrollWidth + _this5.layout.clientWidth;
          offset = Math.min(offset, 0);
          offset = Math.max(offset, canScrollOffset);
          setPxStyle(_this5.layout, offset, 'px', isVertical, useLeftInsteadTransform);
          finalOffset = offset;
        },
        onPanEnd: function onPanEnd() {
          if (!_this5.swipeable || !_this5.animated) {
            return;
          }

          lastOffset = finalOffset;

          var isVertical = _this5.isTabVertical();

          var offsetIndex = _this5.getOffsetIndex(finalOffset, isVertical ? _this5.layout.clientHeight : _this5.layout.clientWidth);

          _this5.isMoving = false;

          if (offsetIndex === _this5.currentTab) {
            if (_this5.usePaged) {
              setTransform(_this5.layout.style, _this5.getContentPosByIndex(offsetIndex, _this5.isTabVertical(), _this5.useLeftInsteadTransform));
            }
          } else {
            _this5.goToTab(offsetIndex);
          }
        },
        setCurrentOffset: function setCurrentOffset(offset) {
          return lastOffset = offset;
        }
      };
    }
  }]);

  return Tabs;
}(external_Vue_default.a);

src_Tabs.DefaultTabBar = default_tab_bar;

__decorate([Prop({
  type: Boolean
})], src_Tabs.prototype, "card", void 0);

__decorate([Prop({
  type: String
})], src_Tabs.prototype, "activeCardColor", void 0);

__decorate([Prop({
  type: String,
  default: 'am-tabs'
})], src_Tabs.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Tabs.prototype, "useOnPan", void 0);

__decorate([Prop()], src_Tabs.prototype, "renderTabBar", void 0);

__decorate([Prop({
  default: function _default() {
    return [];
  }
})], src_Tabs.prototype, "tabs", void 0);

__decorate([Prop({
  default: 'top'
})], src_Tabs.prototype, "tabBarPosition", void 0);

__decorate([Prop({
  type: [String, Number],
  default: 0
})], src_Tabs.prototype, "value", void 0);

__decorate([Prop({
  type: Number
})], src_Tabs.prototype, "page", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Tabs.prototype, "swipeable", void 0);

__decorate([Prop({
  type: Number,
  default: 1
})], src_Tabs.prototype, "prerenderingSiblingsNumber", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Tabs.prototype, "animated", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Tabs.prototype, "destroyInactiveTab", void 0);

__decorate([Prop({
  type: Number,
  default: 0.3
})], src_Tabs.prototype, "distanceToChangeTab", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Tabs.prototype, "usePaged", void 0);

__decorate([Prop({
  type: String,
  default: 'horizontal'
})], src_Tabs.prototype, "tabDirection", void 0);

__decorate([Prop({
  type: Object
})], src_Tabs.prototype, "tabBarUnderlineStyle", void 0);

__decorate([Prop({
  type: String
})], src_Tabs.prototype, "tabBarBackgroundColor", void 0);

__decorate([Prop({
  type: String
})], src_Tabs.prototype, "tabBarActiveTextColor", void 0);

__decorate([Prop({
  type: String
})], src_Tabs.prototype, "tabBarInactiveTextColor", void 0);

__decorate([Prop({
  type: Object
})], src_Tabs.prototype, "tabBarTextStyle", void 0);

__decorate([Prop({
  type: Boolean
})], src_Tabs.prototype, "useLeftInsteadTransform", void 0);

__decorate([Watch('page')], src_Tabs.prototype, "pageChanged", null);

__decorate([Watch('currentTab')], src_Tabs.prototype, "currentTabChanged", null);

src_Tabs = __decorate([vue_class_component_common_default()({
  name: 'Tabs'
})], src_Tabs);
/* harmony default export */ var tabs_src = (src_Tabs);
// CONCATENATED MODULE: ./src/packages/vmc-drawer/index.tsx



















function getOffset(ele) {
  var el = ele;
  var _x = 0;
  var _y = 0;

  while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {
    _x += el.offsetLeft - el.scrollLeft;
    _y += el.offsetTop - el.scrollTop;
    el = el.offsetParent;
  }

  return {
    top: _y,
    left: _x
  };
}

var CANCEL_DISTANCE_ON_SCROLL = 20;

var vmc_drawer_Index =
/*#__PURE__*/
function (_Vue) {
  _inherits(Index, _Vue);

  function Index() {
    var _this;

    _classCallCheck(this, Index);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Index).apply(this, arguments));
    _this.state = {
      // the detected width of the sidebar in pixels
      sidebarWidth: 0,
      sidebarHeight: 0,
      sidebarTop: 0,
      dragHandleTop: 0,
      // keep track of touching params
      touchIdentifier: null,
      touchStartX: null,
      touchStartY: null,
      touchCurrentX: null,
      touchCurrentY: null,
      // if touch is supported by the browser
      touchSupported: (typeof window === "undefined" ? "undefined" : typeof_typeof(window)) === 'object' && 'ontouchstart' in window,
      notTouch: true
    };
    _this.isMoving = false;
    _this.startX = 0;
    _this.startY = 0;
    _this.touchOffsetX = 0;
    _this.touchOffsetY = 0;
    _this.transformOffset = 0;
    return _this;
  }

  _createClass(Index, [{
    key: "mounted",
    value: function mounted() {
      this.saveSidebarSize();
    }
  }, {
    key: "updated",
    value: function updated() {
      // filter out the updates when we're touching
      if (!this.isTouching()) {
        this.saveSidebarSize();
      }
    }
  }, {
    key: "onOverlayClicked",
    value: function onOverlayClicked() {
      var _this2 = this;

      if (this.open) {
        // see https://github.com/react-component/drawer/issues/9
        setTimeout(function () {
          _this2.$emit('open', false, {
            overlayClicked: true
          });
        }, 0);
      }
    }
  }, {
    key: "onTouchStart",
    value: function onTouchStart(ev) {
      // filter out if a user starts swiping with a second finger
      if (!this.isTouching()) {
        var touch = ev.targetTouches[0];
        this.state.touchIdentifier = this.state.notTouch ? touch.identifier : null;
        this.state.touchStartX = touch.clientX;
        this.state.touchStartY = touch.clientY;
        this.state.touchCurrentX = touch.clientX;
        this.state.touchCurrentY = touch.clientY;
      }
    }
  }, {
    key: "onTouchMove",
    value: function onTouchMove(ev) {
      // ev.preventDefault(); // cannot touchmove with FastClick
      if (this.isTouching()) {
        for (var ind = 0; ind < ev.targetTouches.length; ind++) {
          // we only care about the finger that we are tracking
          if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {
            this.state.touchCurrentX = ev.targetTouches[ind].clientX;
            this.state.touchCurrentY = ev.targetTouches[ind].clientY;
            break;
          }
        }
      }
    }
  }, {
    key: "onTouchEnd",
    value: function onTouchEnd() {
      this.state.notTouch = false;

      if (this.isTouching()) {
        // trigger a change to open if sidebar has been dragged beyond dragToggleDistance
        var touchWidth = this.touchSidebarWidth();

        if (this.open && touchWidth < this.state.sidebarWidth - this.dragToggleDistance || !this.open && touchWidth > this.dragToggleDistance) {
          this.$emit('open', !this.open);
        }

        var touchHeight = this.touchSidebarHeight();

        if (this.open && touchHeight < this.state.sidebarHeight - this.dragToggleDistance || !this.open && touchHeight > this.dragToggleDistance) {
          this.$emit('open', !this.open);
        }

        this.state.touchIdentifier = null;
        this.state.touchStartX = null;
        this.state.touchStartY = null;
        this.state.touchCurrentX = null;
        this.state.touchCurrentY = null;
      }
    }
  }, {
    key: "onScroll",
    value: function onScroll() {
      if (this.isTouching() && this.inCancelDistanceOnScroll()) {
        this.state.touchIdentifier = null;
        this.state.touchStartX = null;
        this.state.touchStartY = null;
        this.state.touchCurrentX = null;
        this.state.touchCurrentY = null;
      }
    }
  }, {
    key: "inCancelDistanceOnScroll",
    value: function inCancelDistanceOnScroll() {
      var cancelDistanceOnScroll;

      switch (this.position) {
        case 'right':
          cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;
          break;

        case 'bottom':
          cancelDistanceOnScroll = Math.abs(this.state.touchCurrentY - this.state.touchStartY) < CANCEL_DISTANCE_ON_SCROLL;
          break;

        case 'top':
          cancelDistanceOnScroll = Math.abs(this.state.touchStartY - this.state.touchCurrentY) < CANCEL_DISTANCE_ON_SCROLL;
          break;

        case 'left':
        default:
          cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;
      }

      return cancelDistanceOnScroll;
    }
  }, {
    key: "isTouching",
    value: function isTouching() {
      return this.state.touchIdentifier !== null;
    }
  }, {
    key: "saveSidebarSize",
    value: function saveSidebarSize() {
      var sidebar = this.$refs.sidebar;
      var width = sidebar.offsetWidth;
      var height = sidebar.offsetHeight;
      var sidebarTop = getOffset(this.$refs.sidebar).top;
      var dragHandleTop = getOffset(this.$refs.dragHandle).top;

      if (width !== this.state.sidebarWidth) {
        this.state.sidebarWidth = width;
      }

      if (height !== this.state.sidebarHeight) {
        this.state.sidebarHeight = height;
      }

      if (sidebarTop !== this.state.sidebarTop) {
        this.state.sidebarTop = sidebarTop;
      }

      if (dragHandleTop !== this.state.dragHandleTop) {
        this.state.dragHandleTop = dragHandleTop;
      }
    }
  }, {
    key: "touchSidebarWidth",
    value: function touchSidebarWidth() {
      // if the sidebar is open and start point of drag is inside the sidebar
      // we will only drag the distance they moved their finger
      // otherwise we will move the sidebar to be below the finger.
      if (this.position === 'right') {
        if (this.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {
          if (this.state.touchCurrentX > this.state.touchStartX) {
            return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;
          }

          return this.state.sidebarWidth;
        }

        return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);
      }

      if (this.position === 'left') {
        if (this.open && this.state.touchStartX < this.state.sidebarWidth) {
          if (this.state.touchCurrentX > this.state.touchStartX) {
            return this.state.sidebarWidth;
          }

          return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;
        }

        return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);
      }
    }
  }, {
    key: "touchSidebarHeight",
    value: function touchSidebarHeight() {
      // if the sidebar is open and start point of drag is inside the sidebar
      // we will only drag the distance they moved their finger
      // otherwise we will move the sidebar to be below the finger.
      if (this.position === 'bottom') {
        if (this.open && window.innerHeight - this.state.touchStartY < this.state.sidebarHeight) {
          if (this.state.touchCurrentY > this.state.touchStartY) {
            return this.state.sidebarHeight + this.state.touchStartY - this.state.touchCurrentY;
          }

          return this.state.sidebarHeight;
        }

        return Math.min(window.innerHeight - this.state.touchCurrentY, this.state.sidebarHeight);
      }

      if (this.position === 'top') {
        var touchStartOffsetY = this.state.touchStartY - this.state.sidebarTop;

        if (this.open && touchStartOffsetY < this.state.sidebarHeight) {
          if (this.state.touchCurrentY > this.state.touchStartY) {
            return this.state.sidebarHeight;
          }

          return this.state.sidebarHeight - this.state.touchStartY + this.state.touchCurrentY;
        }

        return Math.min(this.state.touchCurrentY - this.state.dragHandleTop, this.state.sidebarHeight);
      }
    }
  }, {
    key: "renderStyle",
    value: function renderStyle(_ref) {
      var _ref$sidebarStyle = _ref.sidebarStyle,
          sidebarStyle = _ref$sidebarStyle === void 0 ? null : _ref$sidebarStyle,
          _ref$isTouching = _ref.isTouching,
          isTouching = _ref$isTouching === void 0 ? null : _ref$isTouching,
          _ref$overlayStyle = _ref.overlayStyle,
          overlayStyle = _ref$overlayStyle === void 0 ? null : _ref$overlayStyle,
          _ref$contentStyle = _ref.contentStyle,
          contentStyle = _ref$contentStyle === void 0 ? null : _ref$contentStyle;

      if (this.position === 'right' || this.position === 'left') {
        sidebarStyle.transform = "translateX(0%)";
        sidebarStyle.WebkitTransform = "translateX(0%)";

        if (isTouching) {
          var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged

          if (this.position === 'right') {
            sidebarStyle.transform = "translateX(".concat((1 - percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateX(".concat((1 - percentage) * 100, "%)");
          }

          if (this.position === 'left') {
            sidebarStyle.transform = "translateX(-".concat((1 - percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateX(-".concat((1 - percentage) * 100, "%)");
          } // fade overlay to match distance of drag


          overlayStyle.opacity = percentage;
          overlayStyle.visibility = 'visible';
        }

        if (contentStyle) {
          contentStyle[this.position] = "".concat(this.state.sidebarWidth, "px");
        }
      }

      if (this.position === 'top' || this.position === 'bottom') {
        sidebarStyle.transform = "translateY(0%)";
        sidebarStyle.WebkitTransform = "translateY(0%)";

        if (isTouching) {
          var _percentage = this.touchSidebarHeight() / this.state.sidebarHeight; // slide open to what we dragged


          if (this.position === 'bottom') {
            sidebarStyle.transform = "translateY(".concat((1 - _percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateY(".concat((1 - _percentage) * 100, "%)");
          }

          if (this.position === 'top') {
            sidebarStyle.transform = "translateY(-".concat((1 - _percentage) * 100, "%)");
            sidebarStyle.WebkitTransform = "translateY(-".concat((1 - _percentage) * 100, "%)");
          } // fade overlay to match distance of drag


          overlayStyle.opacity = _percentage;
          overlayStyle.visibility = 'visible';
        }

        if (contentStyle) {
          contentStyle[this.position] = "".concat(this.state.sidebarHeight, "px");
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _rootCls,
          _this3 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          position = this.position,
          transitions = this.transitions,
          touch = this.touch,
          enableDragHandle = this.enableDragHandle,
          sidebar = this.sidebar,
          docked = this.docked,
          open = this.open;

      var sidebarStyle = assign_default()({}, this.sidebarStyle);

      var contentStyle = assign_default()({}, this.contentStyle);

      var overlayStyle = assign_default()({}, this.overlayStyle);

      var rootCls = (_rootCls = {}, _defineProperty(_rootCls, prefixCls, true), _defineProperty(_rootCls, "".concat(prefixCls, "-").concat(position), true), _rootCls);
      var rootProps = {};
      var isTouching = this.isTouching();

      if (isTouching) {
        this.renderStyle({
          sidebarStyle: sidebarStyle,
          isTouching: true,
          overlayStyle: overlayStyle
        });
      } else if (this.docked) {
        if (this.open) {
          rootCls["".concat(prefixCls, "-docked")] = true;
          this.renderStyle({
            sidebarStyle: sidebarStyle,
            contentStyle: contentStyle
          });
        }
      } else if (open && !docked) {
        rootCls["".concat(prefixCls, "-open")] = true;
        this.renderStyle({
          sidebarStyle: sidebarStyle
        });
        overlayStyle.opacity = 1;
        overlayStyle.visibility = 'visible';
      }

      if (isTouching || !transitions) {
        sidebarStyle.transition = undefined;
        sidebarStyle.webkitTransition = undefined;
        contentStyle.transition = undefined;
        overlayStyle.transition = undefined;
      }

      var dragHandle = null;

      if (this.state.touchSupported && touch) {
        if (open) {
          rootProps.touchstart = function (ev) {
            _this3.state.notTouch = true;

            _this3.onTouchStart(ev);
          };

          rootProps.touchmove = this.onTouchMove;
          rootProps.touchend = this.onTouchEnd;
          rootProps.touchcancel = this.onTouchEnd;
          rootProps.scroll = this.onScroll;
        } else if (enableDragHandle) {
          dragHandle = h("div", {
            "class": "".concat(prefixCls, "-draghandle"),
            "style": this.dragHandleStyle,
            "on": {
              "touchStart": this.onTouchStart.bind(this),
              "touchMove": this.onTouchMove.bind(this),
              "touchEnd": this.onTouchEnd.bind(this),
              "touchCancel": this.onTouchEnd.bind(this)
            },
            "ref": "dragHandle"
          });
        }
      }

      return h("div", helper_default()([{
        "class": classnames_default()(rootCls)
      }, {
        "on": rootProps
      }]), [h("div", {
        "class": "".concat(prefixCls, "-sidebar"),
        "style": sidebarStyle,
        "ref": "sidebar"
      }, [sidebar]), h("div", {
        "class": "".concat(prefixCls, "-overlay"),
        "style": overlayStyle,
        "attrs": {
          "role": "presentation"
        },
        "ref": "overlay",
        "on": {
          "click": this.onOverlayClicked.bind(this)
        }
      }), h("div", {
        "class": "".concat(prefixCls, "-content"),
        "style": contentStyle,
        "ref": "content"
      }, [dragHandle, this.$slots.default])]);
    }
  }, {
    key: "contentRef",
    get: function get() {
      return this.$refs.content;
    }
  }, {
    key: "overlayRef",
    get: function get() {
      return this.$refs.overlay;
    }
  }, {
    key: "onPan",
    get: function get() {
      var _this4 = this;

      var lastOffset = 0;
      var finalOffset = 0;
      var panDirection;

      var getLastOffset = function getLastOffset() {
        var offset = +"".concat(lastOffset).replace('%', '');

        if ("".concat(lastOffset).indexOf('%') >= 0) {
          offset /= 100;
          offset *= _this4.overlayRef.clientWidth;
        }

        return offset;
      };

      return {
        onPanStart: function onPanStart(status) {
          panDirection = src_getPanDirection(status.direction);
          _this4.isMoving = true;
        },
        onPanMove: function onPanMove(status) {
          if (!status.moveStatus) {
            return;
          }

          var offset = getLastOffset();
          offset += panDirection === 'vertical' ? 0 : status.moveStatus.x;
          var canScrollOffset = -_this4.overlayRef.scrollWidth + _this4.overlayRef.clientWidth;
          offset = Math.min(offset, 0);
          offset = Math.max(offset, canScrollOffset);
          setPxStyle(_this4.overlayRef, offset, 'px', false, false);
          finalOffset = offset;
        },
        onPanEnd: function onPanEnd() {
          lastOffset = finalOffset; // const offsetIndex = this.getOffsetIndex(finalOffset, this.overlayRef.clientWidth);

          _this4.isMoving = false;
        },
        setCurrentOffset: function setCurrentOffset(offset) {
          return lastOffset = offset;
        }
      };
    }
  }]);

  return Index;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'rmc-drawer'
})], vmc_drawer_Index.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], vmc_drawer_Index.prototype, "sidebarStyle", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], vmc_drawer_Index.prototype, "contentStyle", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], vmc_drawer_Index.prototype, "overlayStyle", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], vmc_drawer_Index.prototype, "dragHandleStyle", void 0);

__decorate([Prop({})], vmc_drawer_Index.prototype, "sidebar", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_drawer_Index.prototype, "docked", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_drawer_Index.prototype, "open", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], vmc_drawer_Index.prototype, "transitions", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], vmc_drawer_Index.prototype, "touch", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], vmc_drawer_Index.prototype, "enableDragHandle", void 0);

__decorate([Prop({
  default: 'left'
})], vmc_drawer_Index.prototype, "position", void 0);

__decorate([Prop({
  type: Number,
  default: 30
})], vmc_drawer_Index.prototype, "dragToggleDistance", void 0);

__decorate([Prop({
  default: function _default() {
    return function () {};
  }
})], vmc_drawer_Index.prototype, "onOpenChange", void 0);

vmc_drawer_Index = __decorate([vue_class_component_common_default()({
  name: 'Drawer'
})], vmc_drawer_Index);
/* harmony default export */ var vmc_drawer = (vmc_drawer_Index);
// CONCATENATED MODULE: ./src/packages/drawer/src/index.tsx














var drawer_src_Drawer =
/*#__PURE__*/
function (_Vue) {
  _inherits(Drawer, _Vue);

  function Drawer() {
    _classCallCheck(this, Drawer);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Drawer).apply(this, arguments));
  }

  _createClass(Drawer, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      // @ts-ignore
      return h(vmc_drawer, helper_default()([{}, {
        "attrs": assign_default()({}, this.$props, this.$attrs, {
          sidebar: this.$slots.sidebar || this.sidebar
        })
      }, {
        "attrs": {
          "open": this.value
        }
      }, {
        "on": assign_default()({}, this.$listeners, {
          open: function open(value) {
            _this.$emit('input', value);

            _this.$emit('open', value);
          }
        })
      }]), [this.$slots.default]);
    }
  }]);

  return Drawer;
}(external_Vue_default.a);

__decorate([Prop({
  type: Object
})], drawer_src_Drawer.prototype, "sidebarStyle", void 0);

__decorate([Prop({
  type: Object
})], drawer_src_Drawer.prototype, "contentStyle", void 0);

__decorate([Prop({
  type: Object
})], drawer_src_Drawer.prototype, "overlayStyle", void 0);

__decorate([Prop({
  type: Object
})], drawer_src_Drawer.prototype, "dragHandleStyle", void 0);

__decorate([Prop({
  type: Boolean
})], drawer_src_Drawer.prototype, "docked", void 0);

__decorate([Prop({
  type: Boolean
})], drawer_src_Drawer.prototype, "transitions", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], drawer_src_Drawer.prototype, "touch", void 0);

__decorate([Prop({
  type: Number
})], drawer_src_Drawer.prototype, "dragToggleDistance", void 0);

__decorate([Prop({
  type: String,
  default: 'am-drawer'
})], drawer_src_Drawer.prototype, "prefixCls", void 0);

__decorate([Prop({})], drawer_src_Drawer.prototype, "sidebar", void 0);

__decorate([Prop({
  type: Boolean
})], drawer_src_Drawer.prototype, "value", void 0);

__decorate([Prop({
  type: String,
  default: 'left'
})], drawer_src_Drawer.prototype, "position", void 0);

drawer_src_Drawer = __decorate([vue_class_component_common_default()({
  name: 'Drawer'
})], drawer_src_Drawer);
/* harmony default export */ var drawer_src = (drawer_src_Drawer);
// EXTERNAL MODULE: ./src/packages/drawer/style/index.less
var packages_drawer_style = __webpack_require__("c426");

// CONCATENATED MODULE: ./src/packages/drawer/style/index.tsx


// CONCATENATED MODULE: ./src/packages/drawer/index.ts



drawer_src.install = function (Vue) {
  Vue.component('MDrawer', drawer_src);
};

/* harmony default export */ var packages_drawer = (drawer_src);
// CONCATENATED MODULE: ./src/packages/flex/src/flex.tsx













var flex_Flex =
/*#__PURE__*/
function (_Vue) {
  _inherits(Flex, _Vue);

  function Flex() {
    _classCallCheck(this, Flex);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Flex).apply(this, arguments));
  }

  _createClass(Flex, [{
    key: "render",
    value: function render() {
      var _classnames;

      var h = arguments[0];

      var _a = this,
          direction = _a.direction,
          wrap = _a.wrap,
          justify = _a.justify,
          align = _a.align,
          alignContent = _a.alignContent,
          prefixCls = _a.prefixCls,
          restProps = __rest(_a, ["direction", "wrap", "justify", "align", "alignContent", "prefixCls"]);

      var wrapCls = classnames_default()(prefixCls, (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-dir-row"), direction === 'row'), _defineProperty(_classnames, "".concat(prefixCls, "-dir-row-reverse"), direction === 'row-reverse'), _defineProperty(_classnames, "".concat(prefixCls, "-dir-column"), direction === 'column'), _defineProperty(_classnames, "".concat(prefixCls, "-dir-column-reverse"), direction === 'column-reverse'), _defineProperty(_classnames, "".concat(prefixCls, "-nowrap"), wrap === 'nowrap'), _defineProperty(_classnames, "".concat(prefixCls, "-wrap"), wrap === 'wrap'), _defineProperty(_classnames, "".concat(prefixCls, "-wrap-reverse"), wrap === 'wrap-reverse'), _defineProperty(_classnames, "".concat(prefixCls, "-justify-start"), justify === 'start'), _defineProperty(_classnames, "".concat(prefixCls, "-justify-end"), justify === 'end'), _defineProperty(_classnames, "".concat(prefixCls, "-justify-center"), justify === 'center'), _defineProperty(_classnames, "".concat(prefixCls, "-justify-between"), justify === 'between'), _defineProperty(_classnames, "".concat(prefixCls, "-justify-around"), justify === 'around'), _defineProperty(_classnames, "".concat(prefixCls, "-align-start"), align === 'start'), _defineProperty(_classnames, "".concat(prefixCls, "-align-center"), align === 'center'), _defineProperty(_classnames, "".concat(prefixCls, "-align-end"), align === 'end'), _defineProperty(_classnames, "".concat(prefixCls, "-align-baseline"), align === 'baseline'), _defineProperty(_classnames, "".concat(prefixCls, "-align-stretch"), align === 'stretch'), _defineProperty(_classnames, "".concat(prefixCls, "-align-content-start"), alignContent === 'start'), _defineProperty(_classnames, "".concat(prefixCls, "-align-content-end"), alignContent === 'end'), _defineProperty(_classnames, "".concat(prefixCls, "-align-content-center"), alignContent === 'center'), _defineProperty(_classnames, "".concat(prefixCls, "-align-content-between"), alignContent === 'between'), _defineProperty(_classnames, "".concat(prefixCls, "-align-content-around"), alignContent === 'around'), _defineProperty(_classnames, "".concat(prefixCls, "-align-content-stretch"), alignContent === 'stretch'), _classnames));
      return h("div", {
        "class": wrapCls,
        "props": _objectSpread({}, restProps)
      }, [this.$slots.default]);
    }
  }]);

  return Flex;
}(external_Vue_default.a);

__decorate([Prop(String)], flex_Flex.prototype, "alignContent", void 0);

__decorate([Prop({
  type: String,
  default: 'am-flexbox'
})], flex_Flex.prototype, "prefixCls", void 0);

__decorate([Prop(String)], flex_Flex.prototype, "role", void 0);

__decorate([Prop(String)], flex_Flex.prototype, "direction", void 0);

__decorate([Prop(String)], flex_Flex.prototype, "wrap", void 0);

__decorate([Prop(String)], flex_Flex.prototype, "justify", void 0);

__decorate([Prop({
  type: String,
  default: 'center'
})], flex_Flex.prototype, "align", void 0);

__decorate([Prop(Boolean)], flex_Flex.prototype, "disabled", void 0);

flex_Flex = __decorate([vue_class_component_common_default()({
  name: 'Flex'
})], flex_Flex);
/* harmony default export */ var flex = (flex_Flex);
// CONCATENATED MODULE: ./src/packages/flex/src/flex-item.tsx












var flex_item_FlexItem =
/*#__PURE__*/
function (_Vue) {
  _inherits(FlexItem, _Vue);

  function FlexItem() {
    _classCallCheck(this, FlexItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(FlexItem).apply(this, arguments));
  }

  _createClass(FlexItem, [{
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          restProps = __rest(_a, ["prefixCls"]);

      var wrapCls = classnames_default()("".concat(prefixCls, "-item"));
      return h("div", {
        "class": wrapCls,
        "props": _objectSpread({}, restProps)
      }, [this.$slots.default]);
    }
  }]);

  return FlexItem;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean,
  default: false
})], flex_item_FlexItem.prototype, "disabled", void 0);

__decorate([Prop({
  type: String,
  default: 'am-flexbox'
})], flex_item_FlexItem.prototype, "prefixCls", void 0);

flex_item_FlexItem = __decorate([vue_class_component_common_default()({
  name: 'FlexItem'
})], flex_item_FlexItem);
/* harmony default export */ var flex_item = (flex_item_FlexItem);
// CONCATENATED MODULE: ./src/packages/flex/src/index.ts


flex.Item = flex_item;
/* harmony default export */ var flex_src = (flex);
// CONCATENATED MODULE: ./src/packages/flex/index.ts

var flex_Plugin = flex_src;

flex_Plugin.install = function (Vue) {
  Vue.component('MFlex', flex_src);
  Vue.component('MFlexItem', flex_src.Item);
};

/* harmony default export */ var packages_flex = (flex_Plugin);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __webpack_require__("f559");

// CONCATENATED MODULE: ./src/packages/grid/src/index.tsx
























var src_Grid =
/*#__PURE__*/
function (_Vue) {
  _inherits(Grid, _Vue);

  function Grid() {
    var _this;

    _classCallCheck(this, Grid);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Grid).apply(this, arguments));
    _this.initialSlideWidth = 0; // only used in carousel model

    return _this;
  }

  _createClass(Grid, [{
    key: "mounted",
    value: function mounted() {
      this.initialSlideWidth = document.documentElement.clientWidth;
    }
  }, {
    key: "renderCarousel",
    value: function renderCarousel(rowsArr, pageCount, rowCount) {
      var h = this.$createElement;
      var prefixCls = this.prefixCls;
      var carouselMaxRow = this.carouselMaxRow;
      var pagesArr = [];

      for (var pageIndex = 0; pageIndex < pageCount; pageIndex++) {
        var pageRows = [];

        for (var ii = 0; ii < carouselMaxRow; ii++) {
          var rowIndex = pageIndex * carouselMaxRow + ii;

          if (rowIndex < rowCount) {
            pageRows.push(rowsArr[rowIndex]);
          } else {
            // 空节点为了确保末尾页的最后未到底的行有底线(样式中last-child会没线)
            pageRows.push(h("div", {
              "key": "gridline-".concat(rowIndex)
            }));
          }
        }

        pagesArr.push(h("div", {
          "key": "pageitem-".concat(pageIndex),
          "attrs": {
            "clas": "".concat(prefixCls, "-carousel-page")
          }
        }, [pageRows]));
      }

      return pagesArr;
    }
  }, {
    key: "renderItem",
    value: function renderItem(dataItem, index, columnNum) {
      var h = this.$createElement;
      var prefixCls = this.prefixCls;
      var itemEl = null;

      if (dataItem) {
        var icon = dataItem.icon,
            text = dataItem.text;
        itemEl = h("div", {
          "class": "".concat(prefixCls, "-item-inner-content column-num-").concat(columnNum)
        }, [this.renderIcon(icon, prefixCls), h("div", {
          "class": "".concat(prefixCls, "-text")
        }, [text])]);
      }

      return h("div", {
        "class": "".concat(prefixCls, "-item-content")
      }, [itemEl]);
    }
  }, {
    key: "getRows",
    value: function getRows(rowCount, dataLength) {
      var _this2 = this;

      var h = this.$createElement;
      var cols = this.cols,
          prefixCls = this.prefixCls,
          activeStyle = this.activeStyle,
          activeClassName = this.activeClassName,
          itemStyle = this.itemStyle;
      var rowsArr = [];
      var rowWidth = "".concat(100 / cols, "%");

      var colStyle = assign_default()({
        width: rowWidth
      }, itemStyle);

      for (var i = 0; i < rowCount; i++) {
        var rowArr = [];

        var _loop = function _loop(j) {
          var dataIndex = i * cols + j;
          var itemEl = void 0;

          if (dataIndex < dataLength) {
            var el = _this2.data && _this2.data[dataIndex];
            var TouchFeedback2 = feedback;
            itemEl = h(TouchFeedback2, {
              "key": "griditem-".concat(dataIndex),
              "attrs": {
                "activeClassName": activeClassName ? activeClassName : "".concat(prefixCls, "-item-active"),
                "activeStyle": activeStyle
              }
            }, [h(packages_flex.Item, helper_default()([{
              "class": "".concat(prefixCls, "-item")
            }, {
              "nativeOn": {
                click: function click() {
                  _this2.$emit('click', el, dataIndex);
                }
              }
            }, {
              "style": colStyle
            }]), [_this2.renderItem(el, dataIndex, cols)])]);
          } else {
            itemEl = h(packages_flex.Item, {
              "key": "griditem-".concat(dataIndex),
              "class": "".concat(prefixCls, "-item ").concat(prefixCls, "-null-item"),
              "style": colStyle
            });
          }

          rowArr.push(itemEl);
        };

        for (var j = 0; j < cols; j++) {
          _loop(j);
        }

        rowsArr.push(h(packages_flex, {
          "attrs": {
            "justify": "center'} align={'stretch"
          },
          "key": "gridline-".concat(i)
        }, [rowArr]));
      }

      return rowsArr;
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          data = _a.data,
          bordered = _a.bordered,
          carousel = _a.carousel,
          square = _a.square,
          activeStyle = _a.activeStyle,
          cols = _a.cols,
          carouselMaxRow = _a.carouselMaxRow,
          renderItem = _a.renderItem,
          activeClassName = _a.activeClassName,
          restPropsForCarousel = __rest(_a, ["prefixCls", "data", "bordered", "carousel", "square", "activeStyle", "cols", "carouselMaxRow", "renderItem", "activeClassName"]);

      var initialSlideWidth = this.initialSlideWidth;
      var dataLength = data && data.length || 0;
      var rowCount = Math.ceil(dataLength / cols);
      var rowsArr;
      var renderEl;

      if (carousel) {
        if (initialSlideWidth < 0) {
          // carousel  server render. because carousel dependes on document
          return null;
        }

        if (rowCount % carouselMaxRow !== 0) {
          rowCount = rowCount + carouselMaxRow - rowCount % carouselMaxRow;
        }

        var pageCount = Math.ceil(rowCount / carouselMaxRow);
        rowsArr = this.getRows(rowCount, dataLength);
        var carouselProps = {};

        if (pageCount <= 1) {
          carouselProps = {
            dots: false,
            dragging: false,
            swiping: false
          };
        }

        renderEl = h(packages_carousel, helper_default()([{
          "attrs": {
            "initialSlideWidth": initialSlideWidth
          }
        }, restPropsForCarousel, {}, carouselProps]), [this.renderCarousel(rowsArr, pageCount, rowCount)]);
      } else {
        renderEl = this.getRows(rowCount, dataLength);
      }

      var cls = classnames_default()(prefixCls, (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-square"), square), _defineProperty(_classnames, "".concat(prefixCls, "-line"), bordered), _defineProperty(_classnames, "".concat(prefixCls, "-carousel"), carousel), _classnames));
      return h("div", {
        "class": cls
      }, [renderEl]);
    }
  }, {
    key: "renderIcon",
    value: function renderIcon(icon, prefixCls) {
      var h = this.$createElement;

      if (typeof icon === 'string') {
        if (icon.startsWith('http://') || icon.startsWith('https://')) {
          return h("img", {
            "class": "".concat(prefixCls, "-icon"),
            "attrs": {
              "src": icon,
              "alt": ""
            }
          });
        } else {
          return h(packages_icon, {
            "attrs": {
              "type": icon,
              "size": "lg"
            }
          });
        }
      } else if (typeof_typeof(icon) === 'object') {
        if (isVNode(icon)) {
          return icon;
        }

        return h(packages_icon, {
          "props": _objectSpread({}, icon)
        });
      }
    }
  }]);

  return Grid;
}(external_Vue_default.a);

__decorate([Prop({
  type: Array,
  default: function _default() {
    return [];
  }
})], src_Grid.prototype, "data", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Grid.prototype, "bordered", void 0);

__decorate([Prop({
  type: Number,
  default: 4
})], src_Grid.prototype, "cols", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Grid.prototype, "carousel", void 0);

__decorate([Prop({
  type: Number,
  default: 2
})], src_Grid.prototype, "carouselMaxRow", void 0);

__decorate([Prop({
  type: String,
  default: 'am-grid'
})], src_Grid.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Grid.prototype, "square", void 0);

__decorate([Prop({
  type: String
})], src_Grid.prototype, "activeClassName", void 0);

__decorate([Prop()], src_Grid.prototype, "activeStyle", void 0);

__decorate([Prop({
  type: Object,
  default: function _default() {
    return {};
  }
})], src_Grid.prototype, "itemStyle", void 0);

src_Grid = __decorate([vue_class_component_common_default()({
  name: 'Grid'
})], src_Grid);
/* harmony default export */ var grid_src = (src_Grid);
// EXTERNAL MODULE: ./src/packages/flex/style/index.less
var flex_style = __webpack_require__("5f3d");

// CONCATENATED MODULE: ./src/packages/flex/style/index.tsx


// EXTERNAL MODULE: ./src/packages/grid/style/index.less
var grid_style = __webpack_require__("353c");

// CONCATENATED MODULE: ./src/packages/grid/style/index.tsx




// CONCATENATED MODULE: ./src/packages/grid/index.ts


var grid_Plugin = grid_src;

grid_Plugin.install = function (Vue) {
  Vue.component('MGrid', grid_src);
};

/* harmony default export */ var grid = (grid_Plugin);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.iterator.js
var es6_string_iterator = __webpack_require__("5df3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.ends-with.js
var es6_string_ends_with = __webpack_require__("aef6");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"b52a962e-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/packages/image-picker/src/html.vue?vue&type=template&id=b898409c&
var htmlvue_type_template_id_b898409c_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"svg-container",staticStyle:{"font-size":"10px"},domProps:{"innerHTML":_vm._s(_vm.html)}})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/packages/image-picker/src/html.vue?vue&type=template&id=b898409c&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/ts-loader??ref--13-3!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/packages/image-picker/src/html.vue?vue&type=script&lang=ts&

/* harmony default export */ var htmlvue_type_script_lang_ts_ = (external_Vue_default.a.extend({
  name: 'SrcHtml',
  props: {
    html: String
  }
}));
// CONCATENATED MODULE: ./src/packages/image-picker/src/html.vue?vue&type=script&lang=ts&
 /* harmony default export */ var src_htmlvue_type_script_lang_ts_ = (htmlvue_type_script_lang_ts_); 
// EXTERNAL MODULE: ./src/packages/image-picker/src/html.vue?vue&type=style&index=0&lang=less&
var htmlvue_type_style_index_0_lang_less_ = __webpack_require__("be2f");

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/packages/image-picker/src/html.vue






/* normalize component */

var component = normalizeComponent(
  src_htmlvue_type_script_lang_ts_,
  htmlvue_type_template_id_b898409c_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var html = (component.exports);
// CONCATENATED MODULE: ./src/packages/image-picker/src/index.tsx





















var word = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M64 439.3h520v520H64v-520z m50 470h420v-420H114v420z m843-538.1V940H624.1v-50H907V391.9l-20.7-20.7H649.8V134.7L629.1 114H297v287.6h-50V64h402.8L957 371.2z m-120.7-50L699.8 184.7v136.5h136.5zM377.8 842.9h-53.6l-5.8-188.4-93.9 188.4h-54.7l-9.7-257.7H212l2.3 180.4 88.4-180.4h57.5l6 178.4 84.9-178.4h51.3L377.8 842.9z\" fill=\"#8a8a8a\" ></path></svg>";
var pdf = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M977 371.2V940h-82.9v-50H927V391.9l-20.7-20.7H669.8V134.7L649.1 114H317v271.6h-50V64h402.8L977 371.2z m-120.7-50L719.8 184.7v136.5h136.5z m-76.8 161.6v422.3H117.2V482.8h662.3m48.9-48.8h-760v520h760V434z m-670 380V574h80c30.3 0 50.1 1.2 59.3 3.6 14.2 3.6 26 11.4 35.6 23.5 9.5 12.1 14.3 27.6 14.3 46.7 0 14.7-2.8 27.1-8.3 37.2-5.5 10-12.5 17.9-21 23.7-8.5 5.7-17.1 9.5-25.9 11.4-11.9 2.3-29.1 3.4-51.7 3.4h-32.5V814h-49.8z m49.9-199.4v68.1h27.3c19.7 0 32.8-1.3 39.4-3.8 6.6-2.5 11.8-6.4 15.6-11.8 3.8-5.3 5.6-11.6 5.6-18.7 0-8.7-2.6-15.9-7.9-21.6-5.3-5.7-12-9.2-20-10.6-6-1.1-17.9-1.6-35.9-1.6h-24.1zM353.9 574H445c20.6 0 36.2 1.5 47 4.6 14.5 4.1 26.9 11.5 37.2 22.1 10.3 10.6 18.2 23.5 23.6 38.9 5.4 15.3 8.1 34.2 8.1 56.7 0 19.8-2.5 36.8-7.6 51.1-6.2 17.5-15 31.6-26.5 42.4-8.6 8.2-20.3 14.6-35 19.2-11 3.4-25.7 5.1-44.1 5.1h-93.8V574z m49.8 40.6v159H441c13.9 0 24-0.8 30.2-2.3 8.1-2 14.8-5.3 20.1-10 5.3-4.7 9.7-12.4 13.1-23.2 3.4-10.7 5.1-25.4 5.1-44s-1.7-32.8-5.1-42.7c-3.4-9.9-8.1-17.7-14.2-23.2-6.1-5.6-13.8-9.3-23.1-11.3-7-1.5-20.6-2.3-40.9-2.3h-22.5zM569.1 814V574h169.3v40.6H618.9v56.8H722V712H618.9v102h-49.8z\" fill=\"#8a8a8a\"></path></svg>";
var txt = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M724.5 298.8H841L724.5 182.3v116.5z m159.4-13.6c17.3 17.3 26.9 40.7 26.9 65.1v507.5c0 29.3-24 53.2-53.2 53.2H325.2c-29.3 0-53.2-24-53.2-53.2v-39.9h39.9v39.9c0 7.2 6.1 13.3 13.3 13.3h532.3c7.2 0 13.3-6.1 13.3-13.3V350.3c0-3.9-0.5-7.8-1.4-11.5H684.6v-185c-3.8-0.9-7.6-1.3-11.5-1.4H325.2c-7.2 0-13.3 6.1-13.3 13.3v119.8H272V165.7c0-29.3 24-53.2 53.2-53.2H673c24.4 0 47.8 9.7 65.1 27l145.8 145.7zM631.3 478.5v-39.9h186.3v39.9H631.3z m0 119.8v-39.9h186.3v39.9H631.3z m0 119.8v-39.9h186.3v39.9H631.3z m-519 59.8V325.4h452.5v452.5H112.3z m343-328.8v-39.9H221.8v39.9h93.4v245.1h46.7V449.1h93.4z m0 0\" fill=\"#8a8a8a\" ></path></svg>";
var excel = "<svg class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M476.7 550.4v368h-368v-368h368m40-40h-448v448h448v-448zM161.4 877.6l110.7-149.2-97.7-137.1h45.1l52 73.4c10.8 15.2 18.5 27 23 35.2 6.4-10.4 13.9-21.3 22.7-32.6l57.6-76H416l-100.6 135 108.4 151.4H377l-72-102.3c-4-5.9-8.2-12.2-12.5-19.1-6.4 10.4-10.9 17.6-13.7 21.5l-71.9 99.8h-45.5z m633.9-349.4H580.6v40h214.8v-40z m0 144.4H580.6v40h214.8v-40zM683.1 64H215.3v397h40V104h411.2l16.6 16.6v215.6h215.6l16.6 16.6V920H580.6v40h374.8V336.2L683.1 64z m40 232.2V160.6l135.6 135.6H723.1z m72.2 87.6h-420v40h420v-40z\" fill=\"#8a8a8a\" ></path></svg>";
var src_file = "<svg class=\"icon\"viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style type=\"text/css\"></style></defs><path d=\"M859.428571 146.285714v512a18.285714 18.285714 0 0 1-5.339428 12.946286l-219.428572 219.428571A18.285714 18.285714 0 0 1 621.714286 896H182.857143a18.285714 18.285714 0 0 1-18.285714-18.285714V146.285714a18.285714 18.285714 0 0 1 18.285714-18.285714h658.285714a18.285714 18.285714 0 0 1 18.285714 18.285714z m-36.571428 18.285715h-621.714286v694.857142h413.001143l208.713143-208.713142V164.571429zM365.714286 347.428571a18.285714 18.285714 0 0 1 0-36.571428h292.571428a18.285714 18.285714 0 1 1 0 36.571428h-292.571428z m0 146.285715a18.285714 18.285714 0 1 1 0-36.571429h292.571428a18.285714 18.285714 0 1 1 0 36.571429h-292.571428z m274.285714 182.857143V768a18.285714 18.285714 0 1 1-36.571429 0v-109.714286a18.285714 18.285714 0 0 1 18.285715-18.285714h109.714285a18.285714 18.285714 0 1 1 0 36.571429h-91.428571z\" fill=\"#8a8a8a\"></path></svg>";

function getIcon(image) {
  if (image.file) {
    var type = image.file.type;
    console.log(type);

    if (type) {
      if (type.endsWith('.document') || type.endsWith('msword')) {
        return word;
      } else if (type.endsWith('.sheet') || type.endsWith('excel')) {
        return excel;
      } else if (type === 'text/plain') {
        return txt;
      } else if (type.endsWith('pdf')) {
        return pdf;
      } else {
        return src_file;
      }
    }

    return src_file;
  } else {
    var u = new URL(image.url);

    if (u.pathname.endsWith('.pdf')) {
      return pdf;
    } else if (u.pathname.endsWith('.doc') || u.pathname.endsWith('.docs')) {
      return word;
    } else if (u.pathname.endsWith('.xls') || u.pathname.endsWith('.xlsx')) {
      return excel;
    } else if (u.pathname.endsWith('.txt')) {
      return txt;
    } else {
      return src_file;
    }
  }
}

function isImage(image) {
  if (image.file) {
    return image.file.type.startsWith('image/');
  } else {
    return ['.png', '.jpg', '.jpeg', '.bmp'].some(function (it) {
      return image.url.indexOf(it) > 0;
    });
  }
}

var src_ImagePicker =
/*#__PURE__*/
function (_Vue) {
  _inherits(ImagePicker, _Vue);

  function ImagePicker() {
    _classCallCheck(this, ImagePicker);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(ImagePicker).apply(this, arguments));
  }

  _createClass(ImagePicker, [{
    key: "getOrientation",
    value: function getOrientation(file, callback) {
      var reader = new FileReader();

      reader.onload = function (e) {
        var view = new DataView(e.target.result);

        if (view.getUint16(0, false) !== 0xffd8) {
          return callback(-2);
        }

        var length = view.byteLength;
        var offset = 2;

        while (offset < length) {
          var marker = view.getUint16(offset, false);
          offset += 2;

          if (marker === 0xffe1) {
            var tmp = view.getUint32(offset += 2, false);

            if (tmp !== 0x45786966) {
              return callback(-1);
            }

            var little = view.getUint16(offset += 6, false) === 0x4949;
            offset += view.getUint32(offset + 4, little);
            var tags = view.getUint16(offset, little);
            offset += 2;

            for (var i = 0; i < tags; i++) {
              if (view.getUint16(offset + i * 12, little) === 0x0112) {
                return callback(view.getUint16(offset + i * 12 + 8, little));
              }
            }
          } else if ((marker & 0xff00) !== 0xff00) {
            break;
          } else {
            offset += view.getUint16(offset, false);
          }
        }

        return callback(-1);
      };

      reader.readAsArrayBuffer(file.slice(0, 64 * 1024));
    }
  }, {
    key: "getRotation",
    value: function getRotation() {
      var orientation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var imgRotation = 0;

      switch (orientation) {
        case 3:
          imgRotation = 180;
          break;

        case 6:
          imgRotation = 90;
          break;

        case 8:
          imgRotation = 270;
          break;

        default:
      }

      return imgRotation;
    }
  }, {
    key: "removeImage",
    value: function removeImage(index) {
      var newImages = [];
      var _this$value = this.value,
          value = _this$value === void 0 ? [] : _this$value;
      value.forEach(function (image, idx) {
        if (index !== idx) {
          newImages.push(image);
        }
      });
      this.$emit('input', newImages, 'remove', index);
      this.$emit('change', newImages, 'remove', index);
    }
  }, {
    key: "addImage",
    value: function addImage(imgItem) {
      var _this$value2 = this.value,
          value = _this$value2 === void 0 ? [] : _this$value2;
      var newImages = value.concat(imgItem);
      this.$emit('input', newImages, 'add');
      this.$emit('change', newImages, 'add');
    }
  }, {
    key: "onImageClick",
    value: function onImageClick(image, index) {
      this.$emit('click', image, index);
    }
  }, {
    key: "onFileChange",
    value: function onFileChange(e) {
      var _this = this;

      if (e && e.target && e.target.files && e.target.files.length) {
        var files = e.target.files;
        var imageParsePromiseList = [];

        for (var i = 0; i < files.length; i++) {
          imageParsePromiseList.push(this.parseFile(files[i], i));
        }

        promise_default.a.all(imageParsePromiseList).then(function (imageItems) {
          return _this.addImage(imageItems);
        }).catch(function (error) {
          _this.$emit('fail', error);
        });
      }

      if (e && e.target) {
        e.target.value = '';
      }
    }
  }, {
    key: "parseFile",
    value: function parseFile(file, index) {
      var _this2 = this;

      return new promise_default.a(function (resolve, reject) {
        if (_this2.maxSize && file.size > _this2.maxSize) {
          reject('文件大小超出限制');
        } else {
          var reader = new FileReader();

          reader.onload = function (e) {
            var dataURL = e.target.result;

            if (!dataURL) {
              reject("Fail to get the ".concat(index, " image"));
              return;
            }

            var orientation = 1;

            _this2.getOrientation(file, function (res) {
              // -2: not jpeg , -1: not defined
              if (res > 0) {
                orientation = res;
              }

              resolve({
                url: dataURL,
                orientation: orientation,
                file: file
              });
            });
          };

          reader.readAsDataURL(file);
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          _this$value3 = this.value,
          value = _this$value3 === void 0 ? [] : _this$value3,
          selectable = this.selectable,
          multiple = this.multiple,
          accept = this.accept;
      var imgItemList = [];

      var count = parse_int_default()('' + this.length, 10);

      if (count <= 0) {
        count = 4;
      }

      var wrapCls = classnames_default()("".concat(prefixCls));
      value.forEach(function (image, index) {
        var imgStyle = {
          backgroundImage: isImage(image) ? "url(".concat(image.url, ")") : 'none',
          transform: "rotate(".concat(_this3.getRotation(image.orientation), "deg)")
        };
        var itemStyle = {};
        imgItemList.push(h(packages_flex.Item, {
          "key": "item-".concat(index),
          "style": itemStyle
        }, [h("div", {
          "key": index,
          "class": "".concat(prefixCls, "-item")
        }, [h("div", {
          "class": "".concat(prefixCls, "-item-remove"),
          "attrs": {
            "role": "button",
            "aria-label": "Click and Remove this image"
          },
          "on": {
            "click": function click() {
              _this3.removeImage(index);
            }
          }
        }), // @ts-ignore
        h(html, {
          "class": "".concat(prefixCls, "-item-content"),
          "attrs": {
            "role": "button",
            "aria-label": "Image can be clicked",
            "html": imgStyle.backgroundImage === 'none' ? getIcon(image) : null
          },
          "on": {
            "click": function click() {
              _this3.onImageClick(image, index);
            }
          },
          "style": imgStyle
        })])]));
      });
      var selectEl = h(packages_flex.Item, {
        "key": "select"
      }, [h(feedback, {
        "attrs": {
          "activeClassName": "".concat(prefixCls, "-upload-btn-active")
        }
      }, [h("div", {
        "class": "".concat(prefixCls, "-item ").concat(prefixCls, "-upload-btn"),
        "on": {
          "click": this.onImageClick
        },
        "attrs": {
          "role": "button",
          "aria-label": "选择并添加图片"
        }
      }, [h("input", {
        "ref": "fileSelectorInput",
        "attrs": {
          "type": "file",
          "accept": accept,
          "multiple": multiple
        },
        "on": {
          "change": function change(v) {
            _this3.onFileChange(v);
          }
        }
      })])])]);
      var allEl = selectable ? imgItemList.concat([selectEl]) : imgItemList;
      var length = allEl.length;

      if (length !== 0 && length % count !== 0) {
        var blankCount = count - length % count;
        var fillBlankEl = [];

        for (var i = 0; i < blankCount; i++) {
          fillBlankEl.push(h(packages_flex.Item, {
            "key": "blank-".concat(i)
          }));
        }

        allEl = allEl.concat(fillBlankEl);
      }

      var flexEl = [];

      for (var _i = 0; _i < allEl.length / count; _i++) {
        var rowEl = allEl.slice(_i * count, _i * count + count);
        flexEl.push(rowEl);
      }

      var renderEl = flexEl.map(function (item, index) {
        return h(packages_flex, {
          "key": "flex-".concat(index)
        }, [item]);
      });
      return h("div", {
        "class": wrapCls
      }, [h("div", {
        "class": "".concat(prefixCls, "-list"),
        "attrs": {
          "role": "group"
        }
      }, [renderEl])]);
    }
  }, {
    key: "fileSelectorInput",
    get: function get() {
      return this.$refs.fileSelectorInput;
    }
  }, {
    key: "showSelector",
    get: function get() {
      return this.selectable && (!this.value || this.value.length < this.length);
    }
  }]);

  return ImagePicker;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-image-picker'
})], src_ImagePicker.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: function _default() {
    return [];
  }
})], src_ImagePicker.prototype, "value", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_ImagePicker.prototype, "selectable", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_ImagePicker.prototype, "multiple", void 0);

__decorate([Prop({
  type: String,
  default: '*'
})], src_ImagePicker.prototype, "accept", void 0);

__decorate([Prop({
  default: 4
})], src_ImagePicker.prototype, "length", void 0);

__decorate([Prop({
  type: Number,
  default: 0
})], src_ImagePicker.prototype, "maxSize", void 0);

src_ImagePicker = __decorate([vue_class_component_common_default()({
  name: 'ImagePicker'
})], src_ImagePicker);
/* harmony default export */ var image_picker_src = (src_ImagePicker);
// EXTERNAL MODULE: ./src/packages/image-picker/style/index.less
var image_picker_style = __webpack_require__("d409");

// CONCATENATED MODULE: ./src/packages/image-picker/style/index.ts



// CONCATENATED MODULE: ./src/packages/image-picker/index.ts



image_picker_src.install = function (Vue) {
  Vue.component('MImagePicker', image_picker_src);
};

/* harmony default export */ var image_picker = (image_picker_src);
// EXTERNAL MODULE: ./node_modules/async-validator/es/index.js
var async_validator_es = __webpack_require__("a15e");
var es_default = /*#__PURE__*/__webpack_require__.n(async_validator_es);

// CONCATENATED MODULE: ./src/packages/mixins/utils.ts


var getPropByPath = function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  var copyPath = path;
  copyPath = copyPath.replace(/\[(\w+)]/g, '.$1');
  copyPath = copyPath.replace(/^\./, '');
  var keyArr = copyPath.split('.');
  var i = 0;

  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) {
      break;
    }

    var key = keyArr[i];

    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error('please transfer a valid prop path to form item!');
      }

      break;
    }
  }

  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
};
var utils_noop = function noop(a, b) {};
// CONCATENATED MODULE: ./src/packages/mixins/form-component.tsx
















var form_component_noop = function noop(a, b) {};

var form_component_FormComponent =
/*#__PURE__*/
function (_Emitter) {
  _inherits(FormComponent, _Emitter);

  function FormComponent() {
    var _this;

    _classCallCheck(this, FormComponent);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(FormComponent).apply(this, arguments));
    _this.currentErrorMessage = _this.errorMessage;
    _this.validateStatus = '';
    _this.currentValue = _this.value;
    _this.validateDisabled = true;
    _this.isCurrentError = false;
    return _this;
  }

  _createClass(FormComponent, [{
    key: "created",
    value: function created() {
      if (this.list) {
        this.dispatch('DForm', 'd.form.addField', [this]);
      }
    }
  }, {
    key: "errorMessageChanged",
    value: function errorMessageChanged(errorMessage) {
      this.currentErrorMessage = errorMessage;
    }
  }, {
    key: "getFilteredRule",
    value: function getFilteredRule(trigger) {
      var rules = this.getRules();
      return rules.filter(function (rule) {
        if (!rule.trigger || trigger === '') {
          return true;
        }

        if (is_array_default()(rule.trigger)) {
          return rule.trigger.indexOf(trigger) > -1;
        } else {
          return rule.trigger === trigger;
        }
      }).map(function (rule) {
        return assign_default()({}, rule);
      });
    }
  }, {
    key: "getRules",
    value: function getRules() {
      var formRules = this.list && this.list.rules;
      var prop = getPropByPath(formRules, this.prop || '');
      formRules = formRules ? prop.o[this.prop || ''] || prop.v : [];
      var selfRules = this.rules;
      var requiredRule = this.required !== undefined ? {
        required: this.required
      } : [];

      if (formRules && formRules.some(function (rule) {
        return rule.required !== undefined;
      }) || selfRules && selfRules.some(function (rule) {
        return rule.required !== undefined;
      })) {
        requiredRule = [];
      }

      return [].concat(selfRules || formRules || []).concat(requiredRule);
    }
  }, {
    key: "onFieldBlur",
    value: function onFieldBlur() {}
  }, {
    key: "onFieldChange",
    value: function onFieldChange() {
      if (this.validateDisabled) {
        this.validateDisabled = false;
        return;
      }
    }
  }, {
    key: "validate",
    value: function validate(trigger) {
      var _this2 = this;

      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : form_component_noop;
      this.$nextTick(function () {
        _this2.validateDisabled = false;

        var rules = _this2.getFilteredRule(trigger);

        if ((!rules || rules.length === 0) && _this2.required === undefined) {
          callback();
          return true;
        }

        _this2.validateStatus = 'validating';
        var descriptor = {};

        if (rules && rules.length > 0) {
          rules.forEach(function (rule) {
            delete rule.trigger;
          });
        }

        descriptor[_this2.prop] = rules;
        var validator = new es_default.a(descriptor);

        var model = _defineProperty({}, _this2.prop, _this2.fieldValue);

        validator.validate(model, {
          firstFields: true
        }, function (errors, invalidFields) {
          _this2.validateStatus = !errors ? 'success' : 'error';
          _this2.isCurrentError = _this2.validateStatus === 'error';
          _this2.currentErrorMessage = errors ? errors[0].message : '';
          callback(_this2.currentErrorMessage, invalidFields);

          _this2.$emit('validate', !errors, errors);

          _this2.list && _this2.list.$emit('validate', _this2.prop, !errors, _this2.currentErrorMessage || null);
        });
      });
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      if (this.currentValue !== value) {
        this.currentValue = value;
      }
    }
  }, {
    key: "currentValueChanged",
    value: function currentValueChanged(currentValue) {
      this.$emit('input', currentValue);
      this.$emit('change', currentValue);
    }
  }, {
    key: "fieldValue",
    get: function get() {
      return this.currentValue;
    }
  }, {
    key: "isDisabled",
    get: function get() {
      var disabled = this.disabled;

      if (this.list) {
        if (!disabled) {
          disabled = this.list.disabled;
        }
      }

      return disabled;
    }
  }, {
    key: "isReadonly",
    get: function get() {
      var isReadonly = !this.editable;

      if (this.list && !isReadonly) {
        isReadonly = !this.list.editable;
      }

      return isReadonly;
    }
  }]);

  return FormComponent;
}(emitter);

__decorate([Prop({
  type: String
})], form_component_FormComponent.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean
})], form_component_FormComponent.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], form_component_FormComponent.prototype, "error", void 0);

__decorate([Prop({
  type: String
})], form_component_FormComponent.prototype, "errorMessage", void 0);

__decorate([Inject({
  from: 'list',
  default: undefined
})], form_component_FormComponent.prototype, "list", void 0);

__decorate([Prop({
  type: String
})], form_component_FormComponent.prototype, "prop", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], form_component_FormComponent.prototype, "editable", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], form_component_FormComponent.prototype, "required", void 0);

__decorate([Prop({
  type: Array
})], form_component_FormComponent.prototype, "rules", void 0);

__decorate([Prop()], form_component_FormComponent.prototype, "value", void 0);

__decorate([Prop(String)], form_component_FormComponent.prototype, "errorDisplayType", void 0);

__decorate([Watch('errorMessage')], form_component_FormComponent.prototype, "errorMessageChanged", null);

__decorate([Watch('value')], form_component_FormComponent.prototype, "valueChanged", null);

__decorate([Watch('currentValue')], form_component_FormComponent.prototype, "currentValueChanged", null);

form_component_FormComponent = __decorate([vue_class_component_common_default()({
  name: 'FormComponent'
})], form_component_FormComponent);

// CONCATENATED MODULE: ./src/packages/utils/class.tsx

function hasClass(node, className) {
  if (node.classList) {
    return node.classList.contains(className);
  }

  var originClass = node.className;
  return " ".concat(originClass, " ").indexOf(" ".concat(className, " ")) > -1;
}
function addClass(node, className) {
  if (node.classList) {
    node.classList.add(className);
  } else {
    if (!hasClass(node, className)) {
      node.className = "".concat(node.className, " ").concat(className);
    }
  }
}
function removeClass(node, className) {
  if (node.classList) {
    node.classList.remove(className);
  } else {
    if (hasClass(node, className)) {
      var originClass = node.className;
      node.className = " ".concat(originClass, " ").replace(" ".concat(className, " "), '');
    }
  }
}
// CONCATENATED MODULE: ./src/packages/utils/exenv.tsx
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
var IS_IOS = canUseDOM && /iphone|ipad|ipod/i.test(window.navigator.userAgent);
// CONCATENATED MODULE: ./src/packages/input/src/custom-keyboard.tsx






















var custom_keyboard_KeyboardItem =
/*#__PURE__*/
function (_Vue) {
  _inherits(KeyboardItem, _Vue);

  function KeyboardItem() {
    _classCallCheck(this, KeyboardItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(KeyboardItem).apply(this, arguments));
  }

  _createClass(KeyboardItem, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          disabled = _a.disabled,
          label = _a.label,
          iconOnly = _a.iconOnly,
          restProps = __rest(_a, ["prefixCls", "disabled", "label", "iconOnly"]);

      var value = this.$slots.default;
      var type = this.type;

      if (type === 'keyboard-delete') {
        value = 'delete';
      } else if (type === 'keyboard-hide') {
        value = 'hide';
      } else if (type === 'keyboard-confirm') {
        value = 'confirm';
      }

      var wrapCls = classnames_default()("".concat(prefixCls, "-item"));
      var TouchFeedback2 = feedback;
      return h(TouchFeedback2, helper_default()([{
        "class": type
      }, {
        "props": {
          activeClassName: "".concat(prefixCls, "-item-active")
        }
      }]), [h("td", helper_default()([{
        "ref": "td",
        "on": {
          "click": function click(e) {
            _this.$emit('click', e, _this.value);
          }
        },
        "class": wrapCls
      }, restProps]), [this.$slots.default, iconOnly && h("i", {
        "class": "sr-only"
      }, [label])])]);
    }
  }, {
    key: "tdRef",
    get: function get() {
      return this.$refs['td'];
    }
  }]);

  return KeyboardItem;
}(external_Vue_default.a);

__decorate([Prop({
  type: [String, Number]
})], custom_keyboard_KeyboardItem.prototype, "value", void 0);

__decorate([Prop(String)], custom_keyboard_KeyboardItem.prototype, "label", void 0);

__decorate([Prop({
  type: String
})], custom_keyboard_KeyboardItem.prototype, "type", void 0);

__decorate([Prop({
  default: 'am-number-keyboard'
})], custom_keyboard_KeyboardItem.prototype, "prefixCls", void 0);

__decorate([Prop()], custom_keyboard_KeyboardItem.prototype, "iconOnly", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], custom_keyboard_KeyboardItem.prototype, "disabled", void 0);

custom_keyboard_KeyboardItem = __decorate([vue_class_component_common_default()({
  name: 'KeyboardItem'
})], custom_keyboard_KeyboardItem);


var custom_keyboard_CustomKeyboard =
/*#__PURE__*/
function (_Vue2) {
  _inherits(CustomKeyboard, _Vue2);

  function CustomKeyboard() {
    _classCallCheck(this, CustomKeyboard);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(CustomKeyboard).apply(this, arguments));
  }

  _createClass(CustomKeyboard, [{
    key: "onKeyboardClick",
    value: function onKeyboardClick(e) {
      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      e.stopImmediatePropagation();

      if (value === 'confirm' && this.confirmDisabled) {
        return null;
      } else {
        if (this.linkedInput) {
          this.linkedInput.onKeyboardClick(value);
        }
      }
    }
  }, {
    key: "renderKeyboardItem",
    value: function renderKeyboardItem(item, index) {
      var h = this.$createElement;
      var KeyboardItem2 = custom_keyboard_KeyboardItem;
      return h(KeyboardItem2, helper_default()([{}, {
        "props": {
          value: item
        }
      }, {
        "on": {
          "click": this.onKeyboardClick
        },
        "key": "item-".concat(item, "-").concat(index)
      }]), [item]);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          confirmLabel = this.confirmLabel,
          backspaceLabel = this.backspaceLabel,
          cancelKeyboardLabel = this.cancelKeyboardLabel,
          wrapProps = this.wrapProps,
          header = this.header;
      var wrapperCls = classnames_default()("".concat(prefixCls, "-wrapper"), "".concat(prefixCls, "-wrapper-hide"));
      var KeyboardItem2 = custom_keyboard_KeyboardItem;
      return h("div", helper_default()([{
        "class": wrapperCls,
        "ref": "antmKeyboard"
      }, wrapProps]), [header, h("table", [h("tbody", [h("tr", [['1', '2', '3'].map(function (item, index) {
        return (// tslint:disable-next-line:jsx-no-multiline-js
          _this2.renderKeyboardItem(item, index)
        );
      }), h(KeyboardItem2, helper_default()([{}, {
        "props": assign_default()({}, this.getAriaAttr(backspaceLabel), {
          type: 'keyboard-delete',
          rowSpan: 2
        })
      }, {}, {
        "on": {
          click: function click(e) {
            return _this2.onKeyboardClick(e, 'delete');
          }
        }
      }]))]), h("tr", [['4', '5', '6'].map(function (item, index) {
        return (// tslint:disable-next-line:jsx-no-multiline-js
          _this2.renderKeyboardItem(item, index)
        );
      })]), h("tr", [['7', '8', '9'].map(function (item, index) {
        return (// tslint:disable-next-line:jsx-no-multiline-js
          _this2.renderKeyboardItem(item, index)
        );
      }), h(KeyboardItem2, helper_default()([{}, {
        "props": {
          type: 'keyboard-confirm',
          rowSpan: 2
        }
      }, {}, {
        "on": {
          click: function click(e) {
            return _this2.onKeyboardClick(e, 'confirm');
          }
        }
      }, {
        "attrs": {
          "tdRef": "td"
        }
      }]), [confirmLabel])]), h("tr", [['.', '0'].map(function (item, index) {
        return (// tslint:disable-next-line:jsx-no-multiline-js
          _this2.renderKeyboardItem(item, index)
        );
      }), h(KeyboardItem2, helper_default()([{}, {
        "props": assign_default()({}, this.getAriaAttr(cancelKeyboardLabel), {
          type: 'keyboard-hide'
        })
      }, {}, {
        "on": {
          click: function click(e) {
            return _this2.onKeyboardClick(e, 'hide');
          }
        }
      }]))])])])]);
    }
  }, {
    key: "getAriaAttr",
    value: function getAriaAttr(label) {
      if (IS_IOS) {
        return {
          label: label,
          iconOnly: true
        };
      } else {
        return {
          role: 'button',
          'aria-label': label
        };
      }
    }
  }, {
    key: "antmKeyboard",
    get: function get() {
      return this.$refs.antmKeyboard;
    }
  }]);

  return CustomKeyboard;
}(external_Vue_default.a);

__decorate([Prop()], custom_keyboard_CustomKeyboard.prototype, "prefixCls", void 0);

__decorate([Prop()], custom_keyboard_CustomKeyboard.prototype, "confirmLabel", void 0);

__decorate([Prop()], custom_keyboard_CustomKeyboard.prototype, "backspaceLabel", void 0);

__decorate([Prop()], custom_keyboard_CustomKeyboard.prototype, "cancelKeyboardLabel", void 0);

__decorate([Prop()], custom_keyboard_CustomKeyboard.prototype, "wrapProps", void 0);

__decorate([Prop()], custom_keyboard_CustomKeyboard.prototype, "header", void 0);

custom_keyboard_CustomKeyboard = __decorate([vue_class_component_common_default()({
  name: 'CustomKeyboard'
})], custom_keyboard_CustomKeyboard);
/* harmony default export */ var custom_keyboard = (custom_keyboard_CustomKeyboard);
// CONCATENATED MODULE: ./src/packages/input/src/portal.tsx










var portal_Portal =
/*#__PURE__*/
function (_Vue) {
  _inherits(Portal, _Vue);

  function Portal() {
    _classCallCheck(this, Portal);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Portal).apply(this, arguments));
  }

  _createClass(Portal, [{
    key: "created",
    value: function created() {
      this.container = this.getContainer();
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.container.appendChild(this.$el);
    }
  }, {
    key: "render",
    value: function render() {
      return this.$slots.default;
    }
  }]);

  return Portal;
}(external_Vue_default.a);

__decorate([Prop({
  required: true
})], portal_Portal.prototype, "getContainer", void 0);

portal_Portal = __decorate([vue_class_component_common_default()({
  name: 'Portal'
})], portal_Portal);
/* harmony default export */ var portal = (portal_Portal);
// CONCATENATED MODULE: ./src/packages/input/src/custom-input.tsx















var instanceArr = [];
var customNumberKeyboard = null;

var custom_input_NumberInput =
/*#__PURE__*/
function (_Vue) {
  _inherits(NumberInput, _Vue);

  function NumberInput() {
    var _this;

    _classCallCheck(this, NumberInput);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(NumberInput).apply(this, arguments));
    _this.focus = false;
    return _this;
  }

  _createClass(NumberInput, [{
    key: "created",
    value: function created() {
      this.currentValue = this.value || '';
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      if (!('value' in this)) {
        this.currentValue = value.target.value;
      }

      this.$emit('change', value);
    }
  }, {
    key: "onConfirm",
    value: function onConfirm(value) {
      this.$emit('confirm', value);
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      this.currentValue = value;
    }
  }, {
    key: "focusChanged",
    value: function focusChanged(focus) {
      if (focus) {
        this.onInputFocus();
      }
    }
  }, {
    key: "addBlurListener",
    value: function addBlurListener() {
      document.addEventListener('click', this.doBlur, false);
    }
  }, {
    key: "removeBlurListener",
    value: function removeBlurListener() {
      document.removeEventListener('click', this.doBlur, false);
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      // focus:true unmount 不能触发 blur
      if (!this.focus) {
        this.$emit('blur', this.value);
      }

      this.unLinkInput();
    }
  }, {
    key: "saveRef",
    value: function saveRef(el) {
      customNumberKeyboard = el;
      instanceArr.push({
        el: el,
        container: this.container
      });
    }
  }, {
    key: "getComponent",
    value: function getComponent() {
      var h = this.$createElement;
      var confirmLabel = this.confirmLabel,
          backspaceLabel = this.backspaceLabel,
          cancelKeyboardLabel = this.cancelKeyboardLabel,
          keyboardPrefixCls = this.keyboardPrefixCls,
          moneyKeyboardWrapProps = this.moneyKeyboardWrapProps,
          moneyKeyboardHeader = this.moneyKeyboardHeader;
      return h(custom_keyboard, {
        "ref": "keyboard",
        "on": {
          "click": this.onKeyboardClick.bind(this)
        },
        "attrs": {
          "prefixCls": keyboardPrefixCls,
          "confirmLabel": confirmLabel,
          "backspaceLabel": backspaceLabel,
          "cancelKeyboardLabel": cancelKeyboardLabel,
          "wrapProps": moneyKeyboardWrapProps,
          "header": moneyKeyboardHeader
        }
      });
    }
  }, {
    key: "getContainer",
    value: function getContainer() {
      var keyboardPrefixCls = this.keyboardPrefixCls;

      if (!this.container) {
        var container = document.createElement('div');
        container.setAttribute('id', "".concat(keyboardPrefixCls, "-container-").concat(new Date().getTime()));
        document.body.appendChild(container);
        this.container = container;
      }

      return this.container;
    }
  }, {
    key: "doBlur",
    value: function doBlur(ev) {
      if (ev.target !== this.inputRef) {
        this.onInputBlur(this.value);
      }
    }
  }, {
    key: "removeCurrentExtraKeyboard",
    value: function removeCurrentExtraKeyboard() {
      instanceArr = instanceArr.filter(function (item) {
        var el = item.el,
            container = item.container;

        if (el && container && el !== customNumberKeyboard) {
          container.parentNode.removeChild(container);
        }

        return el === customNumberKeyboard;
      });
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.saveRef(this.$refs.keyboard);
    }
  }, {
    key: "unLinkInput",
    value: function unLinkInput() {
      if (customNumberKeyboard && customNumberKeyboard.antmKeyboard && customNumberKeyboard.linkedInput && customNumberKeyboard.linkedInput === this) {
        customNumberKeyboard.linkedInput = null;
        addClass(customNumberKeyboard.antmKeyboard, "".concat(this.keyboardPrefixCls, "-wrapper-hide"));
      } // for unmount


      this.removeBlurListener();
      this.removeCurrentExtraKeyboard();
    }
  }, {
    key: "onInputBlur",
    value: function onInputBlur(value) {
      var _this2 = this;

      if (this.focus) {
        this.focus = false;
        this.$emit('blur', value);
        setTimeout(function () {
          _this2.unLinkInput();
        }, 50);
      }
    }
  }, {
    key: "onInputFocus",
    value: function onInputFocus(e) {
      this.$emit('focus', this.value);
      this.focus = true;

      if (customNumberKeyboard) {
        customNumberKeyboard.linkedInput = this;

        if (customNumberKeyboard.antmKeyboard) {
          removeClass(customNumberKeyboard.antmKeyboard, "".concat(this.keyboardPrefixCls, "-wrapper-hide"));
        }

        customNumberKeyboard.confirmDisabled = this.value === '';

        if (customNumberKeyboard.confirmKeyboardItem) {
          if (this.value === '') {
            addClass(customNumberKeyboard.confirmKeyboardItem, "".concat(this.keyboardPrefixCls, "-item-disabled"));
          } else {
            removeClass(customNumberKeyboard.confirmKeyboardItem, "".concat(this.keyboardPrefixCls, "-item-disabled"));
          }
        }
      }
    }
  }, {
    key: "onKeyboardClick",
    value: function onKeyboardClick(KeyboardItemValue) {
      var maxLength = this.maxLength;
      var value = this.value; // tslint:disable-next-line:no-this-assignment

      var onChange = this.onChange;
      var valueAfterChange; // 删除键

      if (KeyboardItemValue === 'delete') {
        valueAfterChange = value.substring(0, value.length - 1);
        onChange({
          target: {
            value: valueAfterChange
          }
        }); // 确认键
      } else if (KeyboardItemValue === 'confirm') {
        valueAfterChange = value;
        onChange({
          target: {
            value: valueAfterChange
          }
        });
        this.onInputBlur(value);
        this.onConfirm(value); // 收起键
      } else if (KeyboardItemValue === 'hide') {
        valueAfterChange = value;
        this.onInputBlur(valueAfterChange);
      } else {
        if (maxLength !== undefined && +maxLength >= 0 && (value + KeyboardItemValue).length > maxLength) {
          valueAfterChange = (value + KeyboardItemValue).substr(0, maxLength);
          onChange({
            target: {
              value: valueAfterChange
            }
          });
        } else {
          valueAfterChange = value + KeyboardItemValue;
          onChange({
            target: {
              value: valueAfterChange
            }
          });
        }
      }

      if (customNumberKeyboard) {
        customNumberKeyboard.confirmDisabled = valueAfterChange === '';

        if (customNumberKeyboard.confirmKeyboardItem) {
          if (valueAfterChange === '') {
            addClass(customNumberKeyboard.confirmKeyboardItem, "".concat(this.keyboardPrefixCls, "-item-disabled"));
          } else {
            removeClass(customNumberKeyboard.confirmKeyboardItem, "".concat(this.keyboardPrefixCls, "-item-disabled"));
          }
        }
      }
    }
  }, {
    key: "onFakeInputClick",
    value: function onFakeInputClick(e) {
      this.focusFunc(e);
    }
  }, {
    key: "focusFunc",
    value: function focusFunc(e) {
      var _this3 = this;

      // this focus may invocked by users page button click, so this click may trigger blurEventListener at the same time
      this.removeBlurListener();
      var focus = this.focus;

      if (!focus) {
        this.onInputFocus(e);
      }

      setTimeout(function () {
        _this3.addBlurListener();
      }, 50);
    }
  }, {
    key: "renderPortal",
    value: function renderPortal() {
      var _this4 = this;

      var h = this.$createElement;
      return h(portal, helper_default()([{}, {
        "props": {
          getContainer: function getContainer() {
            return _this4.getContainer();
          }
        }
      }]), [this.getComponent()]);
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var placeholder = this.placeholder,
          disabled = this.disabled,
          editable = this.editable,
          moneyKeyboardAlign = this.moneyKeyboardAlign;
      var focus = this.focus,
          value = this.value;
      var preventKeyboard = disabled || !editable;
      var fakeInputCls = classnames_default()("fake-input", {
        focus: focus,
        'fake-input-disabled': disabled
      });
      var fakeInputContainerCls = classnames_default()('fake-input-container', {
        'fake-input-container-left': moneyKeyboardAlign === 'left'
      });
      return h("div", {
        "class": fakeInputContainerCls
      }, [value === '' && h("div", {
        "class": "fake-input-placeholder"
      }, [placeholder]), h("div", {
        "attrs": {
          "role": "textbox",
          "aria-label": value || placeholder
        },
        "class": fakeInputCls,
        "ref": "input",
        "on": {
          "click": preventKeyboard ? function () {} : this.onFakeInputClick
        }
      }, [value]), this.renderPortal()]);
    }
  }]);

  return NumberInput;
}(external_Vue_default.a);

__decorate([Prop({
  default: ''
})], custom_input_NumberInput.prototype, "placeholder", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], custom_input_NumberInput.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], custom_input_NumberInput.prototype, "editable", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "moneyKeyboardAlign", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "moneyKeyboardWrapProps", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "moneyKeyboardHeader", void 0);

__decorate([Prop({
  type: [String, Number]
})], custom_input_NumberInput.prototype, "value", void 0);

__decorate([Prop({
  default: 'am-input'
})], custom_input_NumberInput.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: 'am-number-keyboard'
})], custom_input_NumberInput.prototype, "keyboardPrefixCls", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "confirmLabel", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "backspaceLabel", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "cancelKeyboardLabel", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "maxLength", void 0);

__decorate([Prop()], custom_input_NumberInput.prototype, "type", void 0);

__decorate([Watch('value')], custom_input_NumberInput.prototype, "valueChanged", null);

__decorate([Watch('focus')], custom_input_NumberInput.prototype, "focusChanged", null);

custom_input_NumberInput = __decorate([vue_class_component_common_default()({
  name: ''
})], custom_input_NumberInput);
/* harmony default export */ var custom_input = (custom_input_NumberInput);
// CONCATENATED MODULE: ./src/packages/input/src/input.tsx












var input_Input =
/*#__PURE__*/
function (_Vue) {
  _inherits(Input, _Vue);

  function Input() {
    var _this;

    _classCallCheck(this, Input);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Input).apply(this, arguments));
    _this.currentValue = _this.value || '';
    return _this;
  }

  _createClass(Input, [{
    key: "valueChanged",
    value: function valueChanged(value) {
      this.currentValue = value;
    }
  }, {
    key: "onInputBlur",
    value: function onInputBlur(e) {
      var value = e.target.value;
      this.$emit('blur', value);
    }
  }, {
    key: "onInputFocus",
    value: function onInputFocus(e) {
      this.$emit('focus');
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.inputRef) {
        this.inputRef.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];
      var value = this.currentValue + '';
      var type = this.type === 'number' ? 'text' : this.type;
      return h("input", helper_default()([{
        "domProps": {
          "value": value
        },
        "ref": "input",
        "attrs": {
          "type": type,
          "disabled": this.disabled,
          "readonly": this.readonly,
          "placeholder": this.placeholder
        },
        "on": {
          "blur": function blur(e) {
            _this2.onInputBlur(e);
          }
        },
        "style": {
          textAlign: this.textAlign
        }
      }, this.$props, {}, this.$attrs, {
        "on": {
          "input": function input(e) {
            _this2.$emit('change', e);
          }
        }
      }]));
    }
  }, {
    key: "inputRef",
    get: function get() {
      return this.$refs['input'];
    }
  }]);

  return Input;
}(external_Vue_default.a);

__decorate([Prop({
  type: [String, Number]
})], input_Input.prototype, "value", void 0);

__decorate([Prop(Boolean)], input_Input.prototype, "disabled", void 0);

__decorate([Prop(String)], input_Input.prototype, "placeholder", void 0);

__decorate([Prop(Boolean)], input_Input.prototype, "readonly", void 0);

__decorate([Prop({
  type: String
})], input_Input.prototype, "type", void 0);

__decorate([Prop({
  type: String,
  default: 'left'
})], input_Input.prototype, "textAlign", void 0);

__decorate([Watch('value')], input_Input.prototype, "valueChanged", null);

input_Input = __decorate([vue_class_component_common_default()({
  name: 'Input'
})], input_Input);
/* harmony default export */ var src_input = (input_Input);
// CONCATENATED MODULE: ./src/packages/input/src/index.tsx













/* tslint:disable:jsx-no-multiline-js */










function src_noop() {}

function normalizeValue(value) {
  if (typeof value === 'undefined' || value === null) {
    return '';
  }

  return value + '';
}

var src_InputItem =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(InputItem, _FormComponent);

  function InputItem() {
    var _this;

    _classCallCheck(this, InputItem);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(InputItem).apply(this, arguments));
    _this.state = {
      placeholder: _this.placeholder || ''
    };
    return _this;
  }

  _createClass(InputItem, [{
    key: "renderLabel",
    value: function renderLabel() {
      var _classnames;

      var h = this.$createElement;
      var prefixCls = this.prefixCls;
      var labelNumber = this.labelNumber;
      var labelCls = classnames_default()("".concat(prefixCls, "-label"), (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-label-2"), labelNumber === 2), _defineProperty(_classnames, "".concat(prefixCls, "-label-3"), labelNumber === 3), _defineProperty(_classnames, "".concat(prefixCls, "-label-4"), labelNumber === 4), _defineProperty(_classnames, "".concat(prefixCls, "-label-5"), labelNumber === 5), _defineProperty(_classnames, "".concat(prefixCls, "-label-6"), labelNumber === 6), _defineProperty(_classnames, "".concat(prefixCls, "-label-7"), labelNumber === 7), _classnames));

      if (this.$slots.default) {
        return h("div", {
          "class": labelCls
        }, [this.$slots.default]);
      } else if (this.title) {
        return h("div", {
          "class": labelCls
        }, [this.title]);
      }

      return null;
    }
  }, {
    key: "placeholderChanged",
    value: function placeholderChanged(placeholder) {
      this.state.placeholder = placeholder;
    }
  }, {
    key: "created",
    value: function created() {
      var _this2 = this;

      this.currentValue = normalizeValue((this.value || '') + '');

      if (this.value === undefined) {
        this.$watch(function () {
          return _this2.value;
        }, function (value, old) {
          if (old === undefined) {
            _this2.$forceUpdate();
          }
        });
      }
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.debounceTimeout) {
        window.clearTimeout(this.debounceTimeout);
        this.debounceTimeout = null;
      }
    }
  }, {
    key: "onInputChange",
    value: function onInputChange(e) {
      var _this3 = this;

      var el = e.target;
      var rawVal = el.value,
          prePos = el.selectionEnd;
      var _this$currentValue = this.currentValue,
          preCtrlVal = _this$currentValue === void 0 ? '' : _this$currentValue;
      var type = this.type;
      var ctrlValue = rawVal;

      switch (type) {
        case 'bankCard':
          ctrlValue = rawVal.replace(/\D/g, '').replace(/(....)(?=.)/g, '$1 ');
          break;

        case 'phone':
          ctrlValue = rawVal.replace(/\D/g, '').substring(0, 11);
          var valueLen = ctrlValue.length;

          if (valueLen > 3 && valueLen < 8) {
            ctrlValue = "".concat(ctrlValue.substr(0, 3), " ").concat(ctrlValue.substr(3));
          } else if (valueLen >= 8) {
            ctrlValue = "".concat(ctrlValue.substr(0, 3), " ").concat(ctrlValue.substr(3, 4), " ").concat(ctrlValue.substr(7));
          }

          break;

        case 'number':
          ctrlValue = rawVal.replace(/\D/g, '');
          break;

        case 'digit':
          ctrlValue = rawVal.replace(/[^0-9.]/g, '');
          break;

        case 'text':
        case 'password':
        default:
          break;
      }

      if (this.maxLength && ctrlValue.length > this.maxLength) {
        ctrlValue = ctrlValue.substring(0, this.maxLength);
      }

      this.handleOnChange(ctrlValue, ctrlValue !== rawVal, function () {
        switch (type) {
          case 'bankCard':
          case 'phone':
          case 'number':
            // controlled input type needs to adjust the position of the caret
            try {
              // set selection may throw error (https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange)
              el.selectionStart = el.selectionEnd = _this3.calcPos(prePos || 0, preCtrlVal, rawVal, ctrlValue, [' '], /\D/g);
            } catch (error) {
              console.warn('Set selection error:', error);
            }

            break;

          default:
            break;
        }
      });
      this.onFieldChange();
    }
  }, {
    key: "handleOnChange",
    value: function handleOnChange(value) {
      var isMutated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var adjustPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : src_noop;
      this.currentValue = value;
      this.$emit('input', value);
      this.$emit('change', value);
      adjustPos();

      if (this.inputRef.$forceUpdate) {
        this.inputRef.$forceUpdate();
      }

      this.$forceUpdate();
    }
  }, {
    key: "onInputFocus",
    value: function onInputFocus(value) {
      if (this.debounceTimeout) {
        clearTimeout(this.debounceTimeout);
        this.debounceTimeout = null;
      }

      this.$el.focus();
      this.$emit('focus', value);
    }
  }, {
    key: "onInputBlur",
    value: function onInputBlur(value) {
      var _this4 = this;

      if (this.inputRef) {
        // this.inputRef may be null if customKeyboard unmount
        this.debounceTimeout = window.setTimeout(function () {
          if (document.activeElement !== (_this4.inputRef && _this4.inputRef.inputRef)) {
            _this4.$el.blur();
          }
        }, 200);
      } // fix autoFocus item blur with flash


      setTimeout(function () {
        // fix ios12 wechat browser click failure after input
        if (document.body) {
          document.body.scrollTop = document.body.scrollTop;
        }
      }, 100);
      this.onFieldBlur();
      this.$emit('blur', value);
    }
  }, {
    key: "clearInput",
    value: function clearInput() {
      this.handleOnChange('');
      this.focus();
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.inputRef) {
        if (typeof this.inputRef.focus === 'function') {
          this.inputRef.focus();
        } else {
          this.inputRef.focus = true;
        }
      }
    }
  }, {
    key: "calcPos",
    value: function calcPos(prePos, preCtrlVal, rawVal, ctrlVal, placeholderChars, maskReg) {
      var editLength = rawVal.length - preCtrlVal.length;
      var isAddition = editLength > 0;
      var pos = prePos;

      if (isAddition) {
        var additionStr = rawVal.substr(pos - editLength, editLength);
        var ctrlCharCount = additionStr.replace(maskReg, '').length;
        pos -= editLength - ctrlCharCount;
        var placeholderCharCount = 0;

        while (ctrlCharCount > 0) {
          if (placeholderChars.indexOf(ctrlVal.charAt(pos - ctrlCharCount + placeholderCharCount)) === -1) {
            ctrlCharCount--;
          } else {
            placeholderCharCount++;
          }
        }

        pos += placeholderCharCount;
      }

      return pos;
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames2,
          _this5 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          prefixListCls = this.prefixListCls,
          isReadonly = this.isReadonly,
          isDisabled = this.isDisabled,
          clearable = this.clearable,
          type = this.type,
          currentValue = this.currentValue,
          moneyKeyboardAlign = this.moneyKeyboardAlign,
          moneyKeyboardWrapProps = this.moneyKeyboardWrapProps,
          moneyKeyboardHeader = this.moneyKeyboardHeader,
          name = this.name,
          maxLength = this.maxLength;
      var extra = this.$slots.extra || this.extra;
      var _confirmLabel$backspa = {
        confirmLabel: '确定',
        backspaceLabel: '退格',
        cancelKeyboardLabel: '收起键盘'
      },
          confirmLabel = _confirmLabel$backspa.confirmLabel,
          backspaceLabel = _confirmLabel$backspa.backspaceLabel,
          cancelKeyboardLabel = _confirmLabel$backspa.cancelKeyboardLabel;
      var focus = this.focus,
          placeholder = this.state.placeholder;
      var wrapCls = classnames_default()("".concat(prefixListCls, "-item"), "".concat(prefixCls, "-item"), "".concat(prefixListCls, "-item-middle"), (_classnames2 = {}, _defineProperty(_classnames2, "".concat(prefixCls, "-disabled"), isDisabled), _defineProperty(_classnames2, "".concat(prefixCls, "-focus"), focus), _defineProperty(_classnames2, "".concat(prefixCls, "-android"), this.android), _classnames2));
      var controlCls = "".concat(prefixCls, "-control");
      var inputType = 'text';

      if (type === 'bankCard' || type === 'phone') {
        inputType = 'tel';
      } else if (type === 'password') {
        inputType = 'password';
      } else if (type === 'digit') {
        inputType = 'number';
      } else if (type !== 'text' && type !== 'number') {
        inputType = type;
      }

      var patternProps;

      if (type === 'number') {
        patternProps = {
          pattern: '[0-9]*'
        };
      }

      var classNameProp = '';

      if (type === 'digit') {
        classNameProp = 'h5numInput';
      }

      return h(list.Item, {
        "attrs": {
          "title": this.renderLabel(),
          "required": this.required,
          "error": this.error,
          "errorMessage": this.errorMessage,
          "errorDisplayType": this.errorDisplayType
        },
        "class": wrapCls
      }, [h("div", {
        "class": controlCls,
        "slot": "extra"
      }, [type === 'money' ? // @ts-ignore
      h(custom_input, helper_default()([{}, {
        "attrs": {
          value: normalizeValue(currentValue),
          type: type,
          maxLength: maxLength,
          placeholder: placeholder,
          disabled: isDisabled,
          editable: !isReadonly,
          prefixCls: prefixCls,
          confirmLabel: confirmLabel,
          backspaceLabel: backspaceLabel,
          cancelKeyboardLabel: cancelKeyboardLabel,
          moneyKeyboardAlign: moneyKeyboardAlign,
          moneyKeyboardWrapProps: moneyKeyboardWrapProps,
          moneyKeyboardHeader: moneyKeyboardHeader
        }
      }, {
        "on": {
          "change": this.onInputChange,
          "focus": this.onInputFocus,
          "blur": this.onInputBlur,
          "confirm": function confirm(v) {
            _this5.$emit('confirm', v);
          }
        },
        "ref": "input"
      }])) : h(src_input, helper_default()([{}, {
        "props": assign_default()({}, patternProps, {
          value: normalizeValue(currentValue),
          defaultValue: undefined,
          textAlign: this.textAlign,
          type: inputType,
          maxLength: maxLength,
          name: name,
          placeholder: placeholder,
          readonly: isReadonly,
          disabled: isDisabled
        })
      }, {
        "class": classNameProp,
        "ref": "input"
      }, {
        "on": {
          change: this.onInputChange,
          focus: this.onInputFocus,
          blur: this.onInputBlur
        }
      }]))]), clearable && !isReadonly && !isDisabled && currentValue && "".concat(currentValue).length > 0 ? // @ts-ignore
      h(feedback, {
        "slot": "suffix",
        "attrs": {
          "activeClassName": "".concat(prefixCls, "-clear-active")
        }
      }, [h("div", {
        "class": "".concat(prefixCls, "-clear"),
        "on": {
          "click": this.clearInput
        }
      })]) : null, extra !== '' ? h("div", {
        "class": "".concat(prefixCls, "-extra"),
        "on": {
          "click": function click(e) {
            _this5.$emit('extra-click', e);
          }
        }
      }, [extra]) : null]);
    }
  }, {
    key: "inputRef",
    get: function get() {
      return this.$refs.input;
    }
  }]);

  return InputItem;
}(form_component_FormComponent);

__decorate([Prop({
  type: String
})], src_InputItem.prototype, "title", void 0);

__decorate([Prop({
  type: String,
  default: 'am-input'
})], src_InputItem.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-list'
})], src_InputItem.prototype, "prefixListCls", void 0);

__decorate([Prop({
  type: String,
  default: 'right'
})], src_InputItem.prototype, "moneyKeyboardAlign", void 0);

__decorate([Prop({
  type: Function,
  default: function _default() {
    return {};
  }
})], src_InputItem.prototype, "moneyKeyboardWrapProps", void 0);

__decorate([Prop({
  default: null
})], src_InputItem.prototype, "moneyKeyboardHeader", void 0);

__decorate([Prop({
  type: String,
  default: 'text'
})], src_InputItem.prototype, "type", void 0);

__decorate([Prop({
  type: String
})], src_InputItem.prototype, "name", void 0);

__decorate([Prop({
  type: String,
  default: ''
})], src_InputItem.prototype, "placeholder", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_InputItem.prototype, "clearable", void 0);

__decorate([Prop({
  type: Number
})], src_InputItem.prototype, "maxLength", void 0);

__decorate([Prop({
  default: ''
})], src_InputItem.prototype, "extra", void 0);

__decorate([Prop({
  default: 5
})], src_InputItem.prototype, "labelNumber", void 0);

__decorate([Prop({
  type: String
})], src_InputItem.prototype, "textAlign", void 0);

__decorate([Prop()], src_InputItem.prototype, "locale", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_InputItem.prototype, "android", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_InputItem.prototype, "required", void 0);

__decorate([Watch('placeholder')], src_InputItem.prototype, "placeholderChanged", null);

src_InputItem = __decorate([vue_class_component_common_default()({
  name: 'InputItem'
})], src_InputItem);
/* harmony default export */ var input_src = (src_InputItem);
// EXTERNAL MODULE: ./src/packages/input/style/index.less
var input_style = __webpack_require__("8cd7");

// CONCATENATED MODULE: ./src/packages/input/style/index.tsx
 // import '../../m-list/style/';


// CONCATENATED MODULE: ./src/packages/input/index.ts



input_src.install = function (Vue) {
  Vue.component('MInput', input_src);
};

/* harmony default export */ var packages_input = (input_src);
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/map.js
var core_js_map = __webpack_require__("2d7d");
var map_default = /*#__PURE__*/__webpack_require__.n(core_js_map);

// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-notification/index.js
var vc_notification = __webpack_require__("8b54");
var vc_notification_default = /*#__PURE__*/__webpack_require__.n(vc_notification);

// CONCATENATED MODULE: ./src/packages/toast/src/index.tsx




var src_prefixCls = 'am-toast';

function getMessageInstance(mask, callback) {
  var _classnames;

  vc_notification_default.a.newInstance({
    prefixCls: src_prefixCls,
    style: {},
    transitionName: 'am-fade',
    class: classnames_default()((_classnames = {}, _defineProperty(_classnames, "".concat(src_prefixCls, "-mask"), mask), _defineProperty(_classnames, "".concat(src_prefixCls, "-nomask"), !mask), _classnames))
  }, function (notification) {
    return callback && callback(notification);
  });
}

function notice(_content, type) {
  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;

  var _onClose = arguments.length > 3 ? arguments[3] : undefined;

  var mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;
  var iconTypes = {
    info: '',
    success: 'success',
    fail: 'fail',
    offline: 'dislike',
    loading: 'loading'
  };
  var iconType = iconTypes[type];
  var messageInstance = {
    $destroy: function $destroy() {
      console.error('Toast渲染未完成');
    },
    destroyed: false
  };

  messageInstance.destroy = function () {
    if (!messageInstance.destroyed) {
      messageInstance.destroyed = true;
      messageInstance.$destroy();
    }
  };

  messageInstance.hide = function () {
    if (typeof messageInstance.destroy === 'function') {
      messageInstance.destroy();
    }
  };

  getMessageInstance(mask, function (notification) {
    messageInstance.$destroy = notification.destroy;
    messageInstance.component = notification.component;
    notification.notice({
      duration: duration,
      style: {},
      onClick: function onClick() {},
      content: function content(h) {
        return !!iconType ? h("div", {
          "class": "".concat(src_prefixCls, "-text ").concat(src_prefixCls, "-text-icon"),
          "attrs": {
            "role": 'alert',
            "aria-live": 'assertive'
          }
        }, [h(packages_icon, {
          "attrs": {
            "type": iconType,
            "size": 'lg'
          }
        }), h("div", {
          "class": "".concat(src_prefixCls, "-text-info")
        }, [_content])]) : h("div", {
          "class": "".concat(src_prefixCls, "-text"),
          "attrs": {
            "role": 'alert',
            "aria-live": 'assertive'
          }
        }, [h("div", [_content])]);
      },
      closable: true,
      onClose: function onClose() {
        if (_onClose) {
          _onClose();
        }

        if (typeof notification.destroy === 'function') {
          notification.destroy();
        }

        messageInstance.destroy = null;
      }
    });
  });
  return messageInstance;
}

/* harmony default export */ var toast_src = ({
  install: function install(any) {},
  show: function show(content, duration, mask) {
    return notice(content, 'info', duration, function () {}, mask);
  },
  info: function info(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'info', duration, onClose, mask);
  },
  success: function success(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'success', duration, onClose, mask);
  },
  fail: function fail(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'fail', duration, onClose, mask);
  },
  offline: function offline(content, duration, onClose) {
    var mask = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    return notice(content, 'offline', duration, onClose, mask);
  },
  loading: function loading(content, duration, onClose, mask) {
    return notice(content, 'loading', duration, onClose, mask);
  }
});
// EXTERNAL MODULE: ./src/packages/toast/style/index.less
var toast_style = __webpack_require__("425a");

// CONCATENATED MODULE: ./src/packages/toast/style/index.tsx


// CONCATENATED MODULE: ./src/packages/toast/index.ts




toast_src.install = function (Vue) {
  if (!Vue.prototype.$toast) {
    define_properties_default()(Vue.prototype, {
      $toast: {
        get: function get() {
          return toast_src;
        }
      }
    });
  }
};

/* harmony default export */ var packages_toast = (toast_src);
// CONCATENATED MODULE: ./src/packages/loading-directive/src/index.ts


var src_map = new map_default.a();
/* harmony default export */ var loading_directive_src = ({
  inserted: function inserted(el, binding, vnode) {
    var value = binding.value;

    if (value) {
      var toast = packages_toast.loading('加载中');
      src_map.set(el, toast);
    }
  },
  update: function update(el, binding, vnode) {
    var value = binding.value;

    if (binding.value !== binding.oldValue) {
      if (value) {
        var toast = packages_toast.loading('加载中', 30);
        src_map.set(el, toast);
      } else {
        var _toast = src_map.get(el);

        if (_toast) {
          _toast.destroy();
        }
      }
    }
  }
});
// CONCATENATED MODULE: ./src/packages/loading-directive/index.ts

/* harmony default export */ var loading_directive = ({
  install: function install(Vue) {
    Vue.directive('loading', loading_directive_src);
  }
});
// EXTERNAL MODULE: ./src/packages/radio/style/index.less
var radio_style = __webpack_require__("8e34");

// CONCATENATED MODULE: ./src/packages/radio/style/index.tsx



// EXTERNAL MODULE: ./src/packages/menu/style/index.less
var menu_style = __webpack_require__("d8e5");

// CONCATENATED MODULE: ./src/packages/menu/style/index.ts







// CONCATENATED MODULE: ./src/packages/radio/src/radio.tsx














var radio_Radio =
/*#__PURE__*/
function (_Vue) {
  _inherits(Radio, _Vue);

  function Radio() {
    var _this;

    _classCallCheck(this, Radio);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Radio).apply(this, arguments));
    _this.checked = _this.value || false;
    return _this;
  }

  _createClass(Radio, [{
    key: "onClick",
    value: function onClick() {
      this.checked = !this.checked;
      this.$emit('change', this.checked);
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var restProps = __rest(this.$props, []);

      var prefixCls = restProps.prefixCls;
      var wrapCls = classnames_default()("".concat(prefixCls, "-wrapper"));

      if ('class' in restProps) {
        // Todo https://github.com/developit/preact-compat/issues/422

        /* tslint:disable:no-string-literal */
        delete restProps['class'];
      }

      var mark = h("label", {
        "class": wrapCls,
        "on": {
          "click": this.onClick
        }
      }, [h(vc_checkbox_default.a, helper_default()([{}, {
        "attrs": this.$props
      }, {
        "attrs": {
          "checked": this.value,
          "type": "radio"
        }
      }])), this.$slots.default]);

      if (this.wrapLabel) {
        return mark;
      }

      return h(vc_checkbox_default.a, helper_default()([{
        "attrs": {
          "type": "radio",
          "checked": this.value
        }
      }, {
        "attrs": this.$props
      }]), [this.$slots.default]);
    }
  }]);

  return Radio;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-radio'
})], radio_Radio.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], radio_Radio.prototype, "listPrefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], radio_Radio.prototype, "disabled", void 0);

__decorate([Prop({
  type: String
})], radio_Radio.prototype, "name", void 0);

__decorate([Prop({
  default: true
})], radio_Radio.prototype, "wrapLabel", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], radio_Radio.prototype, "value", void 0);

radio_Radio = __decorate([vue_class_component_common_default()({
  name: 'MRadio'
})], radio_Radio);
/* harmony default export */ var src_radio = (radio_Radio);
// CONCATENATED MODULE: ./src/packages/radio/src/radio-item.tsx

















var radio_item_ListItem = list.Item;

var radio_item_RadioItem =
/*#__PURE__*/
function (_Vue) {
  _inherits(RadioItem, _Vue);

  function RadioItem() {
    _classCallCheck(this, RadioItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(RadioItem).apply(this, arguments));
  }

  _createClass(RadioItem, [{
    key: "onChange",
    value: function onChange(value) {
      this.$emit('change', value);
    }
  }, {
    key: "onClick",
    value: function onClick(e) {
      if (!this.disabled) {
        this.$emit('click', e);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];

      var _a = this.$props,
          listPrefixCls = _a.listPrefixCls,
          disabled = _a.disabled,
          radioProps = _a.radioProps,
          otherProps = __rest(_a, ["listPrefixCls", "disabled", "radioProps"]);

      var prefixCls = otherProps.prefixCls;
      var wrapCls = classnames_default()("".concat(prefixCls, "-item"), _defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled === true));
      var extraProps = {};
      ['name', 'disabled'].forEach(function (i) {
        if (i in _this.$props) {
          extraProps[i] = _this.$props[i];
        }
      }); // @ts-ignore

      var extra = h(src_radio, helper_default()([{}, {
        "attrs": assign_default()({}, radioProps, extraProps)
      }, {
        "attrs": {
          "value": this.value
        },
        "on": {
          "click": this.onClick,
          "change": this.onChange
        }
      }]));
      return h(radio_item_ListItem, helper_default()([{}, {
        "attrs": assign_default()({}, otherProps)
      }, {
        "attrs": {
          "prefixCls": listPrefixCls,
          "extra": extra
        },
        "class": wrapCls
      }]), [this.$slots.default]);
    }
  }]);

  return RadioItem;
}(external_Vue_default.a);

__decorate([Prop({
  default: 'am-radio'
})], radio_item_RadioItem.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: 'am-list'
})], radio_item_RadioItem.prototype, "listPrefixCls", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], radio_item_RadioItem.prototype, "radioProps", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], radio_item_RadioItem.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], radio_item_RadioItem.prototype, "value", void 0);

radio_item_RadioItem = __decorate([vue_class_component_common_default()({
  name: 'MRadioItem'
})], radio_item_RadioItem);
/* harmony default export */ var radio_item = (radio_item_RadioItem);
// CONCATENATED MODULE: ./src/packages/radio/src/index.tsx


src_radio.RadioItem = radio_item;
/* harmony default export */ var radio_src = (src_radio);
// CONCATENATED MODULE: ./src/packages/radio/src/radio-list.tsx














var radio_list_MRadioList =
/*#__PURE__*/
function (_OptionsBasedComponen) {
  _inherits(MRadioList, _OptionsBasedComponen);

  function MRadioList() {
    var _this;

    _classCallCheck(this, MRadioList);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MRadioList).apply(this, arguments));
    _this.stateValue = _this.value !== undefined ? _this.value : null;
    return _this;
  }

  _createClass(MRadioList, [{
    key: "valueChanged",
    value: function valueChanged(value) {
      this.stateValue = value;
    }
  }, {
    key: "mounted",
    value: function mounted() {
      if (this.maxHeightPercentage) {
        var windowHeight = document.body.clientHeight;
        var maxHeight = this.maxHeightPercentage;

        if (this.$el.clientHeight > windowHeight * maxHeight) {
          this.$el.style.height = windowHeight * maxHeight + 'px';
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      return h(list, {
        "attrs": {
          "required": this.required,
          "title": this.title
        }
      }, [this.renderOptions()]);
    }
  }, {
    key: "renderOptions",
    value: function renderOptions() {
      var _this2 = this;

      var h = this.$createElement;
      var options = this.getOptions();

      if (options) {
        return options.map(function (option) {
          return h(radio_item, helper_default()([{}, {
            "attrs": {
              disabled: option.disabled || _this2.isDisabled
            }
          }, {
            "attrs": {
              "value": _this2.stateValue === option.value
            },
            "on": {
              "change": function change(checkState) {
                _this2.onChange(checkState, option.value);
              }
            }
          }]), [option.label]);
        });
      } else {
        return [];
      }
    }
  }, {
    key: "onChange",
    value: function onChange(checkState, value) {
      if (checkState) {
        this.stateValue = value;
      }

      this.$emit('input', value);
      this.$emit('change', value);
    }
  }]);

  return MRadioList;
}(options_based_component);

__decorate([Prop({})], radio_list_MRadioList.prototype, "value", void 0);

__decorate([Prop({
  type: String
})], radio_list_MRadioList.prototype, "title", void 0);

__decorate([Prop({
  type: Number
})], radio_list_MRadioList.prototype, "maxHeightPercentage", void 0);

__decorate([Watch('value')], radio_list_MRadioList.prototype, "valueChanged", null);

radio_list_MRadioList = __decorate([vue_class_component_common_default()({
  name: 'MRadioList'
})], radio_list_MRadioList);
/* harmony default export */ var radio_list = (radio_list_MRadioList);
// CONCATENATED MODULE: ./src/packages/radio/src/radio-popup-list.tsx
















var radio_popup_list_MRadioPopupList =
/*#__PURE__*/
function (_OptionsBasedComponen) {
  _inherits(MRadioPopupList, _OptionsBasedComponen);

  function MRadioPopupList() {
    var _this;

    _classCallCheck(this, MRadioPopupList);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MRadioPopupList).apply(this, arguments));
    _this.popupVisible = false;
    return _this;
  }

  _createClass(MRadioPopupList, [{
    key: "onCancel",
    value: function onCancel() {
      this.closePopup();
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      this.stateValue = value;
      this.popupVisible = false;
    }
  }, {
    key: "onClick",
    value: function onClick() {
      if (!this.disabled && !this.readOnly) {
        this.popupVisible = true;
      }
    }
  }, {
    key: "onClear",
    value: function onClear() {
      this.$emit('clear');
      this.$emit('input', null);
      this.closePopup();
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var listProps = assign_default()({}, this.$attrs, this.$props, {
        options: this.getOptions()
      });

      listProps.title = undefined;
      var cancelButton = h("div", {
        "on": {
          "click": this.onClear
        },
        "class": "am-popup-item am-popup-header-left"
      }, ["\u6E05\u9664"]);
      var optionText = this.optionText,
          placeholder = this.placeholder,
          stateValue = this.stateValue,
          closePopup = this.closePopup,
          title = this.title,
          clearable = this.clearable,
          onClick = this.onClick,
          readOnly = this.readOnly,
          isDisabled = this.isDisabled,
          disabled = this.disabled;
      return h(list.Item, {
        "on": {
          "click": onClick
        },
        "attrs": {
          "text": !!optionText,
          "required": this.required,
          "touchFeedback": !readOnly && !disabled,
          "disabled": isDisabled,
          "extraStyle": {
            flexBasis: '60%'
          }
        }
      }, [h(packages_popup, {
        "attrs": {
          "value": isDisabled ? false : this.popupVisible,
          "showCancel": clearable,
          "cancelButton": cancelButton,
          "title": title
        },
        "on": {
          "ok": closePopup,
          "cancel": closePopup
        }
      }, [// @ts-ignore
      h(radio_list, helper_default()([{}, {
        "attrs": listProps
      }, {
        "attrs": {
          "maxHeightPercentage": 0.7
        },
        "on": {
          "change": this.onChange
        }
      }]))]), h("span", {
        "slot": "extra"
      }, [stateValue !== undefined && stateValue !== null ? optionText : placeholder]), h("span", [title])]);
    }
  }, {
    key: "closePopup",
    value: function closePopup() {
      this.popupVisible = false;
    }
  }, {
    key: "optionText",
    get: function get() {
      var options = this.getOptions();
      var value = this.stateValue;
      var selectedOption = options.find(function (it) {
        return value === it.value;
      });
      return selectedOption && selectedOption.label;
    }
  }]);

  return MRadioPopupList;
}(options_based_component);

__decorate([Prop({
  type: String
})], radio_popup_list_MRadioPopupList.prototype, "title", void 0);

__decorate([Prop({
  type: String
})], radio_popup_list_MRadioPopupList.prototype, "placeholder", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], radio_popup_list_MRadioPopupList.prototype, "clearable", void 0);

radio_popup_list_MRadioPopupList = __decorate([vue_class_component_common_default()({
  name: 'MRadioPopupList'
})], radio_popup_list_MRadioPopupList);
/* harmony default export */ var radio_popup_list = (radio_popup_list_MRadioPopupList);
// CONCATENATED MODULE: ./src/packages/radio/index.ts





radio_src.install = function (Vue) {
  Vue.component('MRadio', radio_src);
  Vue.component('MRadioItem', radio_src.RadioItem);
  Vue.component('MRadioPopupList', radio_popup_list);
  Vue.component('MRadioList', radio_list);
};

/* harmony default export */ var packages_radio = (radio_src);
// CONCATENATED MODULE: ./src/packages/menu/src/sub-menu.tsx







/* tslint:disable:jsx-no-multiline-js */









var sub_menu_SubMenu =
/*#__PURE__*/
function (_Vue) {
  _inherits(SubMenu, _Vue);

  function SubMenu() {
    _classCallCheck(this, SubMenu);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(SubMenu).apply(this, arguments));
  }

  _createClass(SubMenu, [{
    key: "onClick",
    value: function onClick(dataItem) {
      this.$emit('click', dataItem);
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var subMenuPrefixCls = this.subMenuPrefixCls,
          radioPrefixCls = this.radioPrefixCls,
          subMenuData = this.subMenuData,
          showSelect = this.showSelect,
          selItem = this.selItem,
          multiSelect = this.multiSelect;

      var selected = function selected(dataItem) {
        return showSelect && selItem.length > 0 && selItem.indexOf(dataItem.value) !== -1;
      };

      var ItemComponent = !multiSelect ? packages_radio : packages_checkbox;
      return h(list, {
        "style": {
          paddingTop: 0
        },
        "class": subMenuPrefixCls
      }, [subMenuData.map(function (dataItem, idx) {
        var _classnames;

        return h(list.Item, {
          "class": classnames_default()("".concat(radioPrefixCls, "-item"), (_classnames = {}, _defineProperty(_classnames, "".concat(subMenuPrefixCls, "-item-selected"), selected(dataItem)), _defineProperty(_classnames, "".concat(subMenuPrefixCls, "-item-disabled"), dataItem.disabled), _classnames)),
          "key": idx,
          "attrs": {
            "extra": h(ItemComponent, {
              "attrs": {
                "value": selected(dataItem),
                "disabled": dataItem.disabled
              },
              "on": {
                "change": function change() {
                  return _this.onClick(dataItem);
                }
              }
            })
          }
        }, [dataItem.label]);
      })]);
    }
  }]);

  return SubMenu;
}(external_Vue_default.a);

__decorate([Prop({
  type: String
})], sub_menu_SubMenu.prototype, "subMenuPrefixCls", void 0);

__decorate([Prop({
  type: String
})], sub_menu_SubMenu.prototype, "radioPrefixCls", void 0);

__decorate([Prop({})], sub_menu_SubMenu.prototype, "subMenuData", void 0);

__decorate([Prop({
  type: Boolean
})], sub_menu_SubMenu.prototype, "showSelect", void 0);

__decorate([Prop({})], sub_menu_SubMenu.prototype, "onSel", void 0);

__decorate([Prop({})], sub_menu_SubMenu.prototype, "selItem", void 0);

__decorate([Prop({
  type: Boolean
})], sub_menu_SubMenu.prototype, "multiSelect", void 0);

sub_menu_SubMenu = __decorate([vue_class_component_common_default()({
  name: 'SubMenu'
})], sub_menu_SubMenu);
/* harmony default export */ var sub_menu = (sub_menu_SubMenu);
// CONCATENATED MODULE: ./src/packages/menu/src/index.tsx




















var src_Menu =
/*#__PURE__*/
function (_Vue) {
  _inherits(Menu, _Vue);

  function Menu() {
    var _this;

    _classCallCheck(this, Menu);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Menu).apply(this, arguments));
    _this.state = {
      firstLevelSelectValue: _this.getNewFsv(),
      value: _this.value,
      height: _this.height
    };
    return _this;
  }

  _createClass(Menu, [{
    key: "valueChanged",
    value: function valueChanged(value) {
      this.state.firstLevelSelectValue = this.getNewFsv();
      this.state.value = value;
    }
  }, {
    key: "heightChanged",
    value: function heightChanged(height) {
      this.state.height = height;
    }
  }, {
    key: "mounted",
    value: function mounted() {
      if (!('height' in this)) {
        this.height = Math.round(document.documentElement.clientHeight / 2);
      }
    }
  }, {
    key: "onMenuOk",
    value: function onMenuOk() {
      this.$emit('ok', this.state.value);
    }
  }, {
    key: "onMenuCancel",
    value: function onMenuCancel() {
      this.$emit('cancel');
    }
  }, {
    key: "getNewFsv",
    value: function getNewFsv() {
      var value = this.value,
          data = this.data;
      var firstValue = '';

      if (value && value.length) {
        // if has init path, chose init first value
        firstValue = value[0]; // this is a contract
      } else if (data && data.length && !data[0].isLeaf) {
        // chose the first menu item if it's not leaf.
        firstValue = data[0].value;
      }

      return firstValue;
    }
  }, {
    key: "onClickFirstLevelItem",
    value: function onClickFirstLevelItem(dataItem) {
      this.state.firstLevelSelectValue = dataItem.value;

      if (dataItem.isLeaf) {
        this.$emit('change', [dataItem.value]);
      }
    }
  }, {
    key: "getSelectValue",
    value: function getSelectValue(dataItem) {
      var level = this.level,
          multiSelect = this.multiSelect;

      if (multiSelect) {
        var _this$state = this.state,
            value = _this$state.value,
            firstLevelSelectValue = _this$state.firstLevelSelectValue;

        if (value && value.length > 0) {
          if (level === 2 && value[0] !== firstLevelSelectValue) {
            /* if level is 2, when first level is reselect, reset submenu array */
            return [firstLevelSelectValue, [dataItem.value]];
          } else {
            /* if level is 1, or first level isn't changed when level is 2, just do add or delete for submenu array  */
            var chosenValues = level === 2 ? value[1] : value; // FIXME: hack type

            var existIndex = chosenValues.indexOf(dataItem.value);

            if (existIndex === -1) {
              chosenValues.push(dataItem.value);
            } else {
              chosenValues.splice(existIndex, 1);
            }

            return value;
          }
        } else {
          /* if value is not exist before, init value */
          return level === 2 ? [firstLevelSelectValue, [dataItem.value]] : [dataItem.value];
        }
      }

      return level === 2 ? [this.state.firstLevelSelectValue, dataItem.value] : [dataItem.value];
    }
  }, {
    key: "onClickSubMenuItem",
    value: function onClickSubMenuItem(dataItem) {
      var _this2 = this;

      var value = this.getSelectValue(dataItem);
      this.state.value = value;
      setTimeout(function () {
        // if onChange will close the menu, set a little time to show its selection state.
        _this2.$emit('change', value);
      }, 300);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var h = arguments[0];
      var _this$data = this.data,
          data = _this$data === void 0 ? [] : _this$data,
          prefixCls = this.prefixCls,
          level = this.level,
          multiSelect = this.multiSelect,
          multiSelectMenuBtnsCls = this.multiSelectMenuBtnsCls,
          MenuSelectContanerPrefixCls = this.MenuSelectContanerPrefixCls;
      var _this$state2 = this.state,
          firstLevelSelectValue = _this$state2.firstLevelSelectValue,
          value = _this$state2.value,
          height = _this$state2.height;
      var subMenuData = data; // menu only has one level as init

      if (level === 2) {
        var parent = data;

        if (firstLevelSelectValue && firstLevelSelectValue !== '') {
          parent = data.filter(function (dataItem) {
            return dataItem.value === firstLevelSelectValue;
          });
        } // tslint:disable-next-line:prefer-conditional-expression


        if (parent[0] && parent[0].children && parent[0].isLeaf !== true) {
          subMenuData = parent[0].children;
        } else {
          subMenuData = [];
        }
      }

      var subValue = value && value.length > 0 && _toConsumableArray(value) || [];

      if (level === 2 && subValue.length > 1) {
        subValue.shift();

        if (multiSelect) {
          /* example: [[1,2,3]] -> [1,2,3] */
          subValue = subValue[0]; // FIXME: hack type
        }
      }

      var parentValue = value && value.length > 1 && level === 2 ? value[0] : null;
      var subSelInitItem = subMenuData.filter(function (dataItem) {
        return subValue.indexOf(dataItem.value) !== -1;
      }).map(function (item) {
        return item.value;
      });
      var showSelect = true;

      if (level === 2 && parentValue !== firstLevelSelectValue) {
        showSelect = false;
      } // tslint:disable-next-line:variable-name


      var _locale = getComponentLocale(this.$props, this, 'Menu', function () {
        return __webpack_require__("3ffb");
      });

      var heightStyle = height !== undefined ? {
        height: "".concat(height, "px")
      } : {};
      return h(packages_flex, {
        "class": prefixCls,
        "style": assign_default()({}, heightStyle),
        "attrs": {
          "direction": "column",
          "align": "stretch"
        }
      }, [h(packages_flex, {
        "attrs": {
          "align": "start"
        },
        "class": classnames_default()(_defineProperty({}, MenuSelectContanerPrefixCls, true))
      }, [level === 2 && h(packages_flex.Item, [h(list, {
        "attrs": {
          "role": "tablist"
        }
      }, [data.map(function (dataItem, index) {
        return h(list.Item, {
          "class": dataItem.value === firstLevelSelectValue ? "".concat(prefixCls, "-selected") : '',
          "on": {
            "click": function click() {
              return _this3.onClickFirstLevelItem(dataItem);
            }
          },
          "key": "listitem-1-".concat(index),
          "attrs": {
            "role": "tab",
            "aria-selected": dataItem.value === firstLevelSelectValue
          }
        }, [dataItem.label]);
      })])]), h(packages_flex.Item, {
        "attrs": {
          "role": "tabpanel",
          "aria-hidden": "false"
        },
        "class": "".concat(MenuSelectContanerPrefixCls, "-submenu")
      }, [h(sub_menu, {
        "attrs": {
          "subMenuPrefixCls": this.subMenuPrefixCls,
          "radioPrefixCls": this.radioPrefixCls,
          "subMenuData": subMenuData,
          "selItem": subSelInitItem,
          "showSelect": showSelect,
          "multiSelect": multiSelect
        },
        "on": {
          "click": this.onClickSubMenuItem
        }
      })])]), multiSelect && h("div", {
        "class": multiSelectMenuBtnsCls
      }, [h(packages_button, {
        "attrs": {
          "inline": true
        },
        "class": "".concat(multiSelectMenuBtnsCls, "-btn"),
        "on": {
          "click": this.onMenuCancel
        }
      }, [_locale.cancelText]), h(packages_button, {
        "attrs": {
          "inline": true,
          "type": "primary"
        },
        "class": "".concat(multiSelectMenuBtnsCls, "-btn"),
        "on": {
          "click": this.onMenuOk
        }
      }, [_locale.okText])])]);
    }
  }]);

  return Menu;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-menu'
})], src_Menu.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-sub-menu'
})], src_Menu.prototype, "subMenuPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-radio'
})], src_Menu.prototype, "radioPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-multi-select-btns'
})], src_Menu.prototype, "multiSelectMenuBtnsCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-menu-select-container'
})], src_Menu.prototype, "MenuSelectContanerPrefixCls", void 0);

__decorate([Prop({
  default: function _default() {
    return [];
  }
})], src_Menu.prototype, "data", void 0);

__decorate([Prop({})], src_Menu.prototype, "defaultValue", void 0);

__decorate([Prop({})], src_Menu.prototype, "value", void 0);

__decorate([Prop({
  default: 2
})], src_Menu.prototype, "level", void 0);

__decorate([Prop({
  type: Number
})], src_Menu.prototype, "height", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Menu.prototype, "multiSelect", void 0);

__decorate([Watch('value')], src_Menu.prototype, "valueChanged", null);

__decorate([Watch('height')], src_Menu.prototype, "heightChanged", null);

src_Menu = __decorate([vue_class_component_common_default()({
  name: 'Menu'
})], src_Menu);
/* harmony default export */ var menu_src = (src_Menu);
// CONCATENATED MODULE: ./src/packages/menu/index.ts



menu_src.install = function (Vue) {
  Vue.component('MMenu', menu_src);
};

/* harmony default export */ var packages_menu = (menu_src);
// CONCATENATED MODULE: ./src/packages/utils/closest.tsx
function closest(el, selector) {
  var matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;
  var p = el;

  while (p) {
    if (matchesSelector.call(p, selector)) {
      return p;
    }

    p = p.parentElement;
  }

  return null;
}
// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-dialog/index.js
var vc_dialog = __webpack_require__("9dee");
var vc_dialog_default = /*#__PURE__*/__webpack_require__.n(vc_dialog);

// CONCATENATED MODULE: ./src/packages/modal/src/modal.tsx















var modal_ModalComponent =
/*#__PURE__*/
function (_Vue) {
  _inherits(ModalComponent, _Vue);

  function ModalComponent() {
    _classCallCheck(this, ModalComponent);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(ModalComponent).apply(this, arguments));
  }

  return ModalComponent;
}(external_Vue_default.a);

var modal_Modal =
/*#__PURE__*/
function (_ModalComponent) {
  _inherits(Modal, _ModalComponent);

  function Modal() {
    var _this;

    _classCallCheck(this, Modal);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Modal).apply(this, arguments));
    _this.state = {
      visible: _this.visible
    };
    return _this;
  }

  _createClass(Modal, [{
    key: "visibleChanged",
    value: function visibleChanged(visible) {
      this.state.visible = visible;
    }
  }, {
    key: "renderFooterButton",
    value: function renderFooterButton(button, prefixCls, i) {
      var h = this.$createElement;
      var buttonStyle = {};

      if (button.style) {
        buttonStyle = button.style;

        if (typeof buttonStyle === 'string') {
          var styleMap = {
            cancel: {},
            default: {},
            destructive: {
              color: 'red'
            }
          };
          buttonStyle = styleMap[buttonStyle] || {};
        }
      }

      var onClickFn = function onClickFn(e) {
        e.preventDefault();

        if (button.onPress) {
          button.onPress();
        }
      };

      return (// @ts-ignore
        h(feedback, {
          "attrs": {
            "activeClassName": "".concat(prefixCls, "-button-active")
          },
          "key": i
        }, [h("a", {
          "class": "".concat(prefixCls, "-button"),
          "attrs": {
            "role": "button"
          },
          "style": buttonStyle,
          "on": {
            "click": onClickFn
          }
        }, [button.text || "Button"])])
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this,
          _classnames2;

      var h = arguments[0];

      var _a = this.$props,
          prefixCls = _a.prefixCls,
          wrapClassName = _a.wrapClassName,
          transitionName = _a.transitionName,
          maskTransitionName = _a.maskTransitionName,
          platform = _a.platform,
          _a$footer = _a.footer,
          footer = _a$footer === void 0 ? [] : _a$footer,
          operation = _a.operation,
          animated = _a.animated,
          transparent = _a.transparent,
          popup = _a.popup,
          animationType = _a.animationType,
          restProps = __rest(_a, ["prefixCls", "wrapClassName", "transitionName", "maskTransitionName", "platform", "footer", "operation", "animated", "transparent", "popup", "animationType"]);

      var btnGroupClass = classnames_default()("".concat(prefixCls, "-button-group-").concat(footer.length === 2 && !operation ? 'h' : 'v'), "".concat(prefixCls, "-button-group-").concat(operation ? 'operation' : 'normal'));
      var footerDom = footer.length ? h("div", {
        "class": btnGroupClass,
        "attrs": {
          "role": "group"
        }
      }, [footer.map(function (button, i) {
        return (// tslint:disable-next-line:jsx-no-multiline-js
          _this2.renderFooterButton(button, prefixCls, i)
        );
      })]) : null;
      var transName;
      var maskTransName;

      if (animated) {
        // tslint:disable-next-line:prefer-conditional-expression
        if (transparent) {
          transName = maskTransName = 'am-fade';
        } else {
          transName = maskTransName = 'am-slide-up';
        }

        if (popup) {
          transName = animationType === 'slide-up' ? 'am-slide-up' : 'am-slide-down';
          maskTransName = 'am-fade';
        }
      }

      var wrapCls = classnames_default()(wrapClassName, _defineProperty({}, "".concat(prefixCls, "-wrap-popup"), popup));
      var cls = classnames_default()(this.className, (_classnames2 = {}, _defineProperty(_classnames2, "".concat(prefixCls, "-transparent"), transparent), _defineProperty(_classnames2, "".concat(prefixCls, "-popup"), popup), _defineProperty(_classnames2, "".concat(prefixCls, "-operation"), operation), _defineProperty(_classnames2, "".concat(prefixCls, "-popup-").concat(animationType), popup && animationType), _defineProperty(_classnames2, "".concat(prefixCls, "-android"), platform === 'android'), _classnames2));
      return (// @ts-ignore
        h(vc_dialog_default.a, helper_default()([{}, {
          "attrs": assign_default()({}, restProps)
        }, {
          "attrs": {
            "maskClosable": this.maskClosable,
            "visible": this.visible,
            "prefixCls": prefixCls,
            "title": this.title,
            "closable": this.closable,
            "wrapClassName": wrapCls,
            "transitionName": transitionName || transName,
            "maskTransitionName": maskTransitionName || maskTransName,
            "footer": footerDom
          },
          "class": cls,
          "on": {
            "close": this.onClose || function (e) {
              _this2.$emit('change', false);

              _this2.$emit('close', e);
            }
          }
        }]), [this.$slots.default])
      );
    }
  }]);

  return Modal;
}(modal_ModalComponent);

__decorate([Prop({
  default: 'am-modal'
})], modal_Modal.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], modal_Modal.prototype, "transitionName", void 0);

__decorate([Prop({
  type: String
})], modal_Modal.prototype, "maskTransitionName", void 0);

__decorate([Prop({
  type: String
})], modal_Modal.prototype, "wrapClassName", void 0);

__decorate([Prop()], modal_Modal.prototype, "wrapProps", void 0);

__decorate([Prop({
  type: String,
  default: 'ios'
})], modal_Modal.prototype, "platform", void 0);

__decorate([Prop()], modal_Modal.prototype, "bodyStyle", void 0);

__decorate([Prop()], modal_Modal.prototype, "title", void 0);

__decorate([Model('change', {
  type: Boolean,
  default: false
})], modal_Modal.prototype, "visible", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], modal_Modal.prototype, "maskClosable", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], modal_Modal.prototype, "closable", void 0);

__decorate([Prop({
  default: function _default() {
    return [];
  }
})], modal_Modal.prototype, "footer", void 0);

__decorate([Prop({
  type: [String, Object]
})], modal_Modal.prototype, "className", void 0);

__decorate([Prop()], modal_Modal.prototype, "onClose", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], modal_Modal.prototype, "transparent", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], modal_Modal.prototype, "popup", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], modal_Modal.prototype, "animated", void 0);

__decorate([Prop({
  type: String,
  default: 'slide-down'
})], modal_Modal.prototype, "animationType", void 0);

__decorate([Prop()], modal_Modal.prototype, "onAnimationEnd", void 0);

__decorate([Prop({
  type: Boolean
})], modal_Modal.prototype, "animateAppear", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], modal_Modal.prototype, "operation", void 0);

__decorate([Watch('visible')], modal_Modal.prototype, "visibleChanged", null);

modal_Modal = __decorate([vue_class_component_common_default()({
  name: 'Modal'
})], modal_Modal);
/* harmony default export */ var src_modal = (modal_Modal);
// CONCATENATED MODULE: ./src/packages/modal/src/alert.tsx




function alert_alert(title, message) {
  var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [{
    text: '确定'
  }];
  var platform = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ios';
  var closed = false;

  if (!title && !message) {
    // console.log('Must specify either an alert title, or message, or both');
    return {
      close: function close() {}
    };
  }

  var div = document.createElement('div');
  document.body.appendChild(div);
  var modal = null;

  function close() {
    if (modal && modal.$destroy) {
      modal.$destroy();
    }

    if (div && div.parentNode) {
      div.parentNode.removeChild(div);
    }
  }

  return new promise_default.a(function (resolve, reject) {
    var footer = actions.map(function (button, index) {
      // tslint:disable-next-line:only-arrow-functions
      var orginPress = button.onPress || function () {};

      button.onPress = function () {
        if (closed) {
          return;
        }

        var res = orginPress();

        if (res && res.then) {
          res.then(function () {
            closed = true;
            close();

            if (actions.length === 2 && index === 0) {
              reject();
            } else {
              resolve();
            }
          }).catch(function (err) {
            reject(err);
          });
        } else {
          closed = true;
          close();

          if (actions.length === 2 && index === 0) {
            reject();
          } else {
            resolve();
          }
        }
      };

      return button;
    });
    var prefixCls = 'am-modal';

    function onWrapTouchStart(e) {
      if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {
        return;
      }

      var pNode = closest(e.target, ".".concat(prefixCls, "-footer"));

      if (!pNode) {
        e.preventDefault();
      }
    }

    modal = new external_Vue_default.a({
      el: div,
      render: function render() {
        var h = arguments[0];
        // @ts-ignore
        return h(src_modal, {
          "attrs": {
            "visible": true,
            "transparent": true,
            "title": title,
            "transitionName": "am-zoom",
            "closable": false,
            "maskClosable": false,
            "footer": footer,
            "maskTransitionName": "am-fade",
            "platform": platform,
            "wrapProps": {
              onTouchStart: onWrapTouchStart
            }
          }
        }, [h("div", {
          "class": "".concat(prefixCls, "-alert-content")
        }, [message])]);
      }
    });
    return {
      close: close
    };
  });
}
// CONCATENATED MODULE: ./src/packages/modal/src/operation.tsx



function operation_operation() {
  var actions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [{
    text: '确定'
  }];
  var platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ios';
  var closed = false;
  var prefixCls = 'am-modal';
  var div = document.createElement('div');
  document.body.appendChild(div);
  var modal = null;

  function close() {
    if (modal && modal.$destroy) {
      modal.$destroy();
    }

    if (div && div.parentNode) {
      div.parentNode.removeChild(div);
    }
  }

  var footer = actions.map(function (button) {
    // tslint:disable-next-line:only-arrow-functions
    var orginPress = button.onPress || function () {};

    button.onPress = function () {
      if (closed) {
        return;
      }

      var res = orginPress();

      if (res && res.then) {
        res.then(function () {
          closed = true;
          close();
        }).catch(function () {});
      } else {
        closed = true;
        close();
      }
    };

    return button;
  });

  function onWrapTouchStart(e) {
    if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {
      return;
    }

    var pNode = closest(e.target, ".am-modal-footer");

    if (!pNode) {
      e.preventDefault();
    }
  }

  modal = new external_Vue_default.a({
    el: div,
    render: function render() {
      var h = arguments[0];
      // @ts-ignore
      return h(src_modal, {
        "attrs": {
          "visible": true,
          "operation": true,
          "transparent": true,
          "prefixCls": prefixCls,
          "transitionName": "am-zoom",
          "closable": false,
          "maskClosable": true,
          "footer": footer,
          "maskTransitionName": "am-fade",
          "platform": platform,
          "wrapProps": {
            onTouchStart: onWrapTouchStart
          }
        },
        "on": {
          "close": close
        },
        "class": "am-modal-operation"
      }, [this.$slots.default]);
    }
  });
  return {
    close: close
  };
}
// CONCATENATED MODULE: ./src/packages/modal/src/prompt.tsx





function prompt_prompt(title, message) {
  var callbackOrActions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [{
    text: '取消'
  }, {
    text: '确认'
  }];
  var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'default';
  var defaultValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
  var placeholders = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ['', ''];
  var platform = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'ios';
  var closed = false;
  return new promise_default.a(function (resolve, reject) {
    var copyDefaultValue = typeof defaultValue === 'string' ? defaultValue : typeof defaultValue === 'number' ? "".concat(defaultValue) : '';
    var prefixCls = 'am-modal';
    var data = {
      text: copyDefaultValue
    };

    function onChange(e) {
      var target = e.target;
      var inputType = target.getAttribute('type');

      if (inputType !== null) {
        data[inputType] = target.value;
      }
    } // hotfix issue: https://github.com/ant-design/ant-design-mobile/issues/2177


    function onClick(e) {
      var target = e.currentTarget || e.target;

      if (target) {
        target.focus();
      }
    }

    var focusFn = function focusFn(input) {
      setTimeout(function () {
        if (input) {
          input.focus();
        }
      }, 500);
    };

    var div = document.createElement('div');
    document.body.appendChild(div);
    var modal = null;

    function close() {
      if (modal && modal.$destroy) {
        modal.$destroy();
      }

      if (div && div.parentNode) {
        div.parentNode.removeChild(div);
      }
    }

    function handleConfirm() {
      var _data$text = data.text,
          text = _data$text === void 0 ? '' : _data$text,
          _data$password = data.password,
          password = _data$password === void 0 ? '' : _data$password;
      var callbackArgs = type === 'login-password' ? [text, password] : type === 'secure-text' ? [password] : [text];
      return resolve(callbackArgs[0]);
    }

    var actions = typeof callbackOrActions === 'function' ? [{
      text: '取消'
    }, {
      text: '确定',
      onPress: callbackOrActions
    }] : callbackOrActions.map(function (item, index) {
      return {
        text: item.text,
        onPress: item.onPress || function () {
          if (index === 1) {
            return handleConfirm();
          }
        }
      };
    });
    var footer = actions.map(function (button) {
      // tslint:disable-next-line:only-arrow-functions
      var orginPress = button.onPress || function () {};

      button.onPress = function () {
        if (closed) {
          return;
        }

        var args = [];

        if (type === 'secure-text') {
          args.push(data['password']);
        } else if (type === 'login-password') {
          args.push(data['text']);
          args.push(data['password']);
        } else {
          args.push(data['text']);
        }

        var res = orginPress.apply(void 0, args);

        if (res && res.then) {
          res.then(function () {
            closed = true;
            close();
          }).catch(function () {});
        } else {
          closed = true;
          close();
        }
      };

      return button;
    });

    function onWrapTouchStart(e) {
      // exclude input element for focus
      if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {
        return;
      }

      var pNode = closest(e.target, ".".concat(prefixCls, "-content"));

      if (!pNode) {
        e.preventDefault();
      }
    }

    modal = new external_Vue_default.a({
      el: div,
      methods: {
        createContent: function createContent() {
          var _this = this;

          var h = this.$createElement;
          var inputDom;

          switch (type) {
            case 'login-password':
              inputDom = h("div", {
                "class": "".concat(prefixCls, "-input-container")
              }, [h("div", {
                "class": "".concat(prefixCls, "-input")
              }, [h("label", [h("input", {
                "attrs": {
                  "type": "text",
                  "defaultValue": data.text,
                  "placeholder": placeholders[0]
                },
                "ref": function ref(input) {
                  return focusFn(input);
                },
                "on": {
                  "click": onClick,
                  "change": onChange
                }
              })])]), h("div", {
                "class": "".concat(prefixCls, "-input")
              }, [h("label", [h("input", {
                "attrs": {
                  "type": "password",
                  "defaultValue": data.password,
                  "placeholder": placeholders[1]
                },
                "on": {
                  "click": onClick,
                  "change": onChange
                }
              })])])]);
              break;

            case 'secure-text':
              inputDom = h("div", {
                "class": "".concat(prefixCls, "-input-container")
              }, [h("div", {
                "class": "".concat(prefixCls, "-input")
              }, [h("label", [h("input", {
                "attrs": {
                  "type": "password",
                  "defaultValue": data.password,
                  "placeholder": placeholders[0]
                },
                "ref": function ref(input) {
                  return focusFn(input);
                },
                "on": {
                  "click": onClick,
                  "change": onChange
                }
              })])])]);
              break;

            case 'default':
            default:
              inputDom = h("div", {
                "class": "".concat(prefixCls, "-input-container")
              }, [h("div", {
                "class": "".concat(prefixCls, "-input")
              }, [h("label", [h("input", helper_default()([{
                "attrs": {
                  "type": "text"
                },
                "domProps": {
                  "value": data.text
                },
                "ref": "input"
              }, {
                "hook": {
                  mounted: function mounted() {
                    focusFn(_this.$refs['input']);
                  }
                }
              }, {
                "on": {
                  "click": onClick,
                  "change": onChange
                },
                "attrs": {
                  "placeholder": placeholders[0]
                }
              }]))])])]);
          }

          return h("div", [message, inputDom]);
        }
      },
      render: function render() {
        var h = arguments[0];
        // @ts-ignore
        return h(src_modal, {
          "attrs": {
            "visible": true,
            "transparent": true,
            "prefixCls": prefixCls,
            "title": title,
            "closable": false,
            "maskClosable": false,
            "transitionName": "am-zoom",
            "footer": footer,
            "maskTransitionName": "am-fade",
            "platform": platform,
            "wrapProps": {
              onTouchStart: onWrapTouchStart
            }
          }
        }, [h("div", {
          "class": "".concat(prefixCls, "-propmt-content")
        }, [this.createContent()])]);
      }
    });
    return {
      close: close
    };
  });
}
// CONCATENATED MODULE: ./src/packages/modal/src/confirm.tsx

function confirm_confirm(title, message) {
  var actions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [{
    text: '取消'
  }, {
    text: '确定'
  }];
  var platform = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ios';
  return alert_alert(title, message, actions, platform);
}
// CONCATENATED MODULE: ./src/packages/modal/src/index.tsx





src_modal.alert = alert_alert;
src_modal.confirm = confirm_confirm;
src_modal.prompt = prompt_prompt;
src_modal.operation = operation_operation;
/* harmony default export */ var modal_src = (src_modal);
// EXTERNAL MODULE: ./src/packages/modal/style/index.less
var modal_style = __webpack_require__("9e2d");

// CONCATENATED MODULE: ./src/packages/modal/style/index.tsx


// CONCATENATED MODULE: ./src/packages/modal/index.ts




modal_src.install = function (Vue) {
  Vue.component('MModal', modal_src);
};

external_Vue_default.a.prototype.$malert = modal_src.alert;
external_Vue_default.a.prototype.$mconfirm = modal_src.confirm;
external_Vue_default.a.prototype.$mprompt = modal_src.prompt;
external_Vue_default.a.prototype.$moperation = modal_src.operation;
/* harmony default export */ var packages_modal = (modal_src);
// EXTERNAL MODULE: ./src/packages/nav-bar/style/index.less
var nav_bar_style = __webpack_require__("6692");

// CONCATENATED MODULE: ./src/packages/nav-bar/style/index.ts


// CONCATENATED MODULE: ./src/packages/nav-bar/src/index.tsx












var src_NavBar =
/*#__PURE__*/
function (_Vue) {
  _inherits(NavBar, _Vue);

  function NavBar() {
    _classCallCheck(this, NavBar);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(NavBar).apply(this, arguments));
  }

  _createClass(NavBar, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          className = this.className,
          mode = this.mode,
          icon = this.icon;
      var rightContent = this.$slots.rightContent || this.$slots['right-content'] || this.rightContent;
      var leftContent = this.$slots.leftContent || this.$slots['left-content'] || this.leftContent;
      return h("div", {
        "class": classnames_default()(className, prefixCls, "".concat(prefixCls, "-").concat(mode))
      }, [h("div", {
        "class": "".concat(prefixCls, "-left"),
        "attrs": {
          "role": "button"
        },
        "on": {
          "click": function click(e) {
            _this.$emit('left-click', e);

            _this.$emit('leftClick', e);
          }
        }
      }, [icon ? h("span", {
        "class": "".concat(prefixCls, "-left-icon"),
        "attrs": {
          "aria-hidden": "true"
        }
      }, [typeof icon === 'string' ? h(packages_icon, {
        "attrs": {
          "type": icon
        }
      }) : icon]) : this.$slots.icon, leftContent]), h("div", {
        "class": "".concat(prefixCls, "-title")
      }, [this.$slots.default]), h("div", {
        "class": "".concat(prefixCls, "-right")
      }, [rightContent])]);
    }
  }]);

  return NavBar;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-navbar'
})], src_NavBar.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], src_NavBar.prototype, "className", void 0);

__decorate([Prop({
  default: 'dark'
})], src_NavBar.prototype, "mode", void 0);

__decorate([Prop({})], src_NavBar.prototype, "icon", void 0);

__decorate([Prop({})], src_NavBar.prototype, "leftContent", void 0);

__decorate([Prop({})], src_NavBar.prototype, "rightContent", void 0);

src_NavBar = __decorate([vue_class_component_common_default()({
  name: 'NavBar'
})], src_NavBar);
/* harmony default export */ var nav_bar_src = (src_NavBar);
// CONCATENATED MODULE: ./src/packages/nav-bar/index.ts



nav_bar_src.install = function (Vue) {
  Vue.component('MNavBar', nav_bar_src);
};

/* harmony default export */ var nav_bar = (nav_bar_src);
// CONCATENATED MODULE: ./src/packages/notice-bar/src/marquee.tsx











var marquee_Marquee =
/*#__PURE__*/
function (_Vue) {
  _inherits(Marquee, _Vue);

  function Marquee() {
    var _this;

    _classCallCheck(this, Marquee);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Marquee).apply(this, arguments));
    _this.state = {
      animatedWidth: 0,
      overflowWidth: 0
    };
    return _this;
  }

  _createClass(Marquee, [{
    key: "mounted",
    value: function mounted() {
      this._measureText();

      this._startAnimation();
    }
  }, {
    key: "updated",
    value: function updated() {
      this._measureText();

      if (!this._marqueeTimer) {
        this._startAnimation();
      }
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      clearTimeout(this._marqueeTimer);
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls,
          text = this.text;
      var style = {
        position: 'relative',
        right: this.state.animatedWidth + 'px',
        whiteSpace: 'nowrap',
        display: 'inline-block'
      };
      return h("div", {
        "class": "".concat(prefixCls, "-marquee-wrap"),
        "style": {
          overflow: 'hidden'
        },
        "attrs": {
          "role": "marquee"
        }
      }, [h("div", {
        "ref": "textRef",
        "class": "".concat(prefixCls, "-marquee"),
        "style": style
      }, [text])]);
    }
  }, {
    key: "_startAnimation",
    value: function _startAnimation() {
      var _this2 = this;

      if (this._marqueeTimer) {
        window.clearTimeout(this._marqueeTimer);
      }

      var fps = this.fps;
      var TIMEOUT = 1 / fps * 1000;
      var isLeading = this.state.animatedWidth === 0;
      var timeout = isLeading ? this.leading : TIMEOUT;

      var animate = function animate() {
        var overflowWidth = _this2.state.overflowWidth;
        var animatedWidth = _this2.state.animatedWidth + 1;
        var isRoundOver = animatedWidth > overflowWidth;

        if (isRoundOver) {
          if (_this2.loop) {
            animatedWidth = 0;
          } else {
            return;
          }
        }

        if (isRoundOver && _this2.trailing) {
          _this2._marqueeTimer = window.setTimeout(function () {
            _this2.state.animatedWidth = animatedWidth;
            _this2._marqueeTimer = window.setTimeout(animate, TIMEOUT);
          }, _this2.trailing);
        } else {
          _this2.state.animatedWidth = animatedWidth;
          _this2._marqueeTimer = window.setTimeout(animate, TIMEOUT);
        }
      };

      if (this.state.overflowWidth !== 0) {
        this._marqueeTimer = window.setTimeout(animate, timeout);
      }
    }
  }, {
    key: "_measureText",
    value: function _measureText() {
      var container = this.$el;
      var node = this.textRef;

      if (container && node) {
        var containerWidth = container.offsetWidth;
        var textWidth = node.offsetWidth;
        this.state.overflowWidth = textWidth - containerWidth;
      }
    }
  }, {
    key: "textRef",
    get: function get() {
      return this.$refs.textRef;
    }
  }]);

  return Marquee;
}(external_Vue_default.a);

__decorate([Prop({
  type: String
})], marquee_Marquee.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: [String, Object],
  default: ''
})], marquee_Marquee.prototype, "text", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], marquee_Marquee.prototype, "loop", void 0);

__decorate([Prop({
  type: Number,
  default: 500
})], marquee_Marquee.prototype, "leading", void 0);

__decorate([Prop({
  type: Number,
  default: 800
})], marquee_Marquee.prototype, "trailing", void 0);

__decorate([Prop({
  type: Number,
  default: 40
})], marquee_Marquee.prototype, "fps", void 0);

marquee_Marquee = __decorate([vue_class_component_common_default()({
  name: 'Marquee'
})], marquee_Marquee);
/* harmony default export */ var marquee = (marquee_Marquee);
// CONCATENATED MODULE: ./src/packages/notice-bar/src/index.tsx














var src_NoticeBar =
/*#__PURE__*/
function (_Vue) {
  _inherits(NoticeBar, _Vue);

  function NoticeBar() {
    var _this;

    _classCallCheck(this, NoticeBar);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(NoticeBar).apply(this, arguments));
    _this.show = true;
    return _this;
  }

  _createClass(NoticeBar, [{
    key: "onClick",
    value: function onClick() {
      var mode = this.mode;
      this.$emit('click');

      if (mode === 'closable') {
        this.show = false;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _a = this,
          mode = _a.mode,
          prefixCls = _a.prefixCls,
          action = _a.action,
          marqueeProps = _a.marqueeProps,
          restProps = __rest(_a, ["mode", "prefixCls", "action", "marqueeProps"]);

      var icon = this.icon || h(packages_icon, {
        "attrs": {
          "type": "voice",
          "size": "xxs"
        }
      });
      var extraProps = {};
      var operationDom = null;

      if (mode === 'closable') {
        operationDom = h("div", {
          "class": "".concat(prefixCls, "-operation"),
          "on": {
            "click": this.onClick
          },
          "attrs": {
            "role": "button",
            "aria-label": "close"
          }
        }, [action ? action : h(packages_icon, {
          "attrs": {
            "type": "cross",
            "size": "md"
          }
        })]);
      } else {
        if (mode === 'link') {
          operationDom = h("div", {
            "class": "".concat(prefixCls, "-operation"),
            "attrs": {
              "role": "button",
              "aria-label": "go to detail"
            }
          }, [action ? action : h(packages_icon, {
            "attrs": {
              "type": "right",
              "size": "md"
            }
          })]);
        }

        extraProps.onClick = this.onClick;
      }

      var wrapCls = classnames_default()(prefixCls);
      return this.show ? h("div", {
        "class": wrapCls,
        "on": {
          "click": function click(e) {
            if (extraProps.onClick) {
              extraProps.onClick(e);
            }
          }
        },
        "attrs": {
          "role": "alert"
        }
      }, [icon && // tslint:disable-next-line:jsx-no-multiline-js
      h("div", {
        "class": "".concat(prefixCls, "-icon"),
        "attrs": {
          "aria-hidden": "true"
        }
      }, [icon]), h("div", {
        "class": "".concat(prefixCls, "-content")
      }, [h(marquee, helper_default()([{
        "attrs": {
          "prefixCls": prefixCls,
          "text": this.$slots.default ? this.$slots.default[0] : null
        }
      }, {
        "props": marqueeProps
      }]))]), operationDom]) : null;
    }
  }]);

  return NoticeBar;
}(external_Vue_default.a);

__decorate([Prop({})], src_NoticeBar.prototype, "marqueeProps", void 0);

__decorate([Prop({
  type: String,
  default: 'am-notice-bar'
})], src_NoticeBar.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: ''
})], src_NoticeBar.prototype, "mode", void 0);

__decorate([Prop()], src_NoticeBar.prototype, "icon", void 0);

__decorate([Prop({})], src_NoticeBar.prototype, "action", void 0);

src_NoticeBar = __decorate([vue_class_component_common_default()({
  name: 'NoticeBar'
})], src_NoticeBar);
/* harmony default export */ var notice_bar_src = (src_NoticeBar);
// EXTERNAL MODULE: ./src/packages/notice-bar/style/index.css
var notice_bar_style = __webpack_require__("545c");

// CONCATENATED MODULE: ./src/packages/notice-bar/style/index.ts

// CONCATENATED MODULE: ./src/packages/notice-bar/index.ts



notice_bar_src.install = function (Vue) {
  Vue.component('MNoticeBar', notice_bar_src);
};

/* harmony default export */ var notice_bar = (notice_bar_src);
// CONCATENATED MODULE: ./src/packages/pagination/src/index.tsx
















var src_Pagination =
/*#__PURE__*/
function (_Vue) {
  _inherits(Pagination, _Vue);

  function Pagination() {
    var _this;

    _classCallCheck(this, Pagination);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Pagination).apply(this, arguments));
    _this.state = {
      current: _this.value
    };
    return _this;
  }

  _createClass(Pagination, [{
    key: "valueChanged",
    value: function valueChanged(value) {
      if (this.state.current !== value) {
        this.state.current = value;
      }
    }
  }, {
    key: "onChange",
    value: function onChange(p) {
      this.state.current = p;
      this.$emit('input', p);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          mode = this.mode,
          total = this.total,
          simple = this.simple;
      var current = this.state.current;
      var locale = getComponentLocale(this.$props, this.$root, 'Pagination', function () {
        return __webpack_require__("78e1");
      });
      var prevText = locale.prevText,
          nextText = locale.nextText;
      var markup = h(packages_flex, [h(packages_flex.Item, {
        "class": "".concat(prefixCls, "-wrap-btn ").concat(prefixCls, "-wrap-btn-prev")
      }, [h(packages_button, {
        "attrs": {
          "inline": true,
          "disabled": current <= 1
        },
        "on": {
          "click": function click() {
            return _this2.onChange(current - 1);
          }
        }
      }, [this.$slots.prevText || this.$slots['prev-text'] || prevText])]), this.$slots.default ? h(packages_flex.Item, [this.$slots.default]) : !simple && h(packages_flex.Item, {
        "class": "".concat(prefixCls, "-wrap"),
        "attrs": {
          "aria-live": "assertive"
        }
      }, [h("span", {
        "class": "active"
      }, [current]), "/", h("span", [total])]), h(packages_flex.Item, {
        "class": "".concat(prefixCls, "-wrap-btn ").concat(prefixCls, "-wrap-btn-next")
      }, [h(packages_button, {
        "attrs": {
          "inline": true,
          "disabled": current >= total
        },
        "on": {
          "click": function click() {
            return _this2.onChange(_this2.state.current + 1);
          }
        }
      }, [this.$slots.nextText || this.$slots['next-text'] || nextText])])]);

      if (mode === 'number') {
        markup = h("div", {
          "class": "".concat(prefixCls, "-wrap")
        }, [h("span", {
          "class": "active"
        }, [current]), "/", h("span", [total])]);
      } else if (mode === 'pointer') {
        var arr = [];

        for (var i = 0; i < total; i++) {
          arr.push(h("div", {
            "key": "dot-".concat(i),
            "class": classnames_default()("".concat(prefixCls, "-wrap-dot"), _defineProperty({}, "".concat(prefixCls, "-wrap-dot-active"), i + 1 === current))
          }, [h("span")]));
        }

        markup = h("div", {
          "class": "".concat(prefixCls, "-wrap")
        }, [arr]);
      }

      var cls = classnames_default()(prefixCls);
      return h("div", {
        "class": cls
      }, [markup]);
    }
  }]);

  return Pagination;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-pagination'
})], src_Pagination.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: 'button'
})], src_Pagination.prototype, "mode", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Pagination.prototype, "simple", void 0);

__decorate([Prop({
  type: Number,
  default: 1
})], src_Pagination.prototype, "value", void 0);

__decorate([Prop({
  type: Number,
  default: 0
})], src_Pagination.prototype, "total", void 0);

__decorate([Prop({
  type: String
})], src_Pagination.prototype, "prevText", void 0);

__decorate([Prop({
  type: String
})], src_Pagination.prototype, "nextText", void 0);

__decorate([Watch('value')], src_Pagination.prototype, "valueChanged", null);

src_Pagination = __decorate([vue_class_component_common_default()({
  name: 'Pagination'
})], src_Pagination);
/* harmony default export */ var pagination_src = (src_Pagination);
// EXTERNAL MODULE: ./src/packages/pagination/style/index.css
var pagination_style = __webpack_require__("7477");

// CONCATENATED MODULE: ./src/packages/pagination/style/index.ts

// CONCATENATED MODULE: ./src/packages/pagination/index.ts



pagination_src.install = function (Vue) {
  Vue.component('MPagination', pagination_src);
};

/* harmony default export */ var pagination = (pagination_src);
// EXTERNAL MODULE: ./node_modules/array-tree-filter/lib/index.js
var lib = __webpack_require__("b8ad");
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// CONCATENATED MODULE: ./src/packages/vmc-cascader/cascader.tsx













var cascader_Cascader =
/*#__PURE__*/
function (_Vue) {
  _inherits(Cascader, _Vue);

  function Cascader() {
    var _this;

    _classCallCheck(this, Cascader);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Cascader).apply(this, arguments));
    _this.state = {
      value: _this.getValue(_this.data, _this.defaultValue || _this.value)
    };
    return _this;
  }

  _createClass(Cascader, [{
    key: "onOk",
    value: function onOk() {
      this.$emit('input', this.state.value);
      this.$emit('change', this.state.value);
    }
  }, {
    key: "onDismiss",
    value: function onDismiss() {
      this.state.value = this.getValue(this.data, this.defaultValue || this.value);
      this.$emit('dismiss', this.state.value);
    }
  }, {
    key: "created",
    value: function created() {
      if (this.store) {
        this.store.onOk = this.onOk;
        this.store.onDismiss = this.onDismiss;
      }
    }
  }, {
    key: "onScrollChange",
    value: function onScrollChange() {
      this.$emit('scroll-change');
    }
  }, {
    key: "beforeUpdate",
    value: function beforeUpdate() {
      if (this.value !== undefined) {
        this.value = this.getValue(this.data, this.value);
      }
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(value, index) {
      var children = lib_default()(this.data, function (c, level) {
        return level <= index && c.value === value[level];
      });
      var data = children[index];
      var i;

      for (i = index + 1; data && data.children && data.children.length && i < this.cols; i++) {
        data = data.children[0];
        value[i] = data.value;
      }

      value.length = i;
      this.state.value = value;
      this.$emit('change', value, index);
    }
  }, {
    key: "getValue",
    value: function getValue(d, val) {
      var data = d || this.data;
      var value = val || this.value || this.defaultValue;

      if (!value || !value.length || value.indexOf(undefined) > -1) {
        value = [];

        for (var i = 0; i < this.cols; i++) {
          if (data && data.length) {
            value[i] = data[0].value;
            data = data[0].children;
          }
        }
      }

      return value;
    }
  }, {
    key: "getCols",
    value: function getCols() {
      var h = this.$createElement;
      var data = this.data,
          cols = this.cols,
          pickerPrefixCls = this.pickerPrefixCls,
          disabled = this.disabled,
          pickerItemStyle = this.pickerItemStyle,
          indicatorStyle = this.indicatorStyle;
      var value = this.state.value;
      var childrenTree = lib_default()(data, function (c, level) {
        return c.value === value[level];
      }).map(function (c) {
        return c.children;
      }); // in case the users data is async get when select change

      var needPad = cols - childrenTree.length;

      if (needPad > 0) {
        for (var i = 0; i < needPad; i++) {
          childrenTree.push([]);
        }
      }

      childrenTree.length = cols - 1;
      childrenTree.unshift(data);
      return childrenTree.map(function () {
        var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var level = arguments.length > 1 ? arguments[1] : undefined;
        return (// @ts-ignore
          h(vmc_picker_picker, {
            "key": level,
            "attrs": {
              "prefixCls": pickerPrefixCls,
              "disabled": disabled,
              "itemStyle": pickerItemStyle,
              "indicatorStyle": indicatorStyle
            },
            "style": {
              flex: 1
            }
          }, [children.map(function (item) {
            // @ts-ignore
            return h(vmc_picker_picker.Item, {
              "attrs": {
                "value": item.value,
                "label": item.label
              },
              "key": item.value
            });
          })])
        );
      });
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var props = this.$props;
      var prefixCls = props.prefixCls;
      var cols = this.getCols();
      var multiStyle = {
        flexDirection: 'row',
        alignItems: 'center'
      };
      return (// @ts-ignore
        h(multi_picker, {
          "style": multiStyle,
          "attrs": {
            "prefixCls": prefixCls,
            "selectedValue": this.state.value
          },
          "on": {
            "valueChange": this.onValueChange,
            "input": this.onValueChange,
            "scrollChange": this.onScrollChange
          }
        }, [cols])
      );
    }
  }]);

  return Cascader;
}(external_Vue_default.a);

__decorate([Prop()], cascader_Cascader.prototype, "defaultValue", void 0);

__decorate([Prop()], cascader_Cascader.prototype, "value", void 0);

__decorate([Prop({
  default: function _default() {
    return [];
  }
})], cascader_Cascader.prototype, "data", void 0);

__decorate([Prop({
  default: 3
})], cascader_Cascader.prototype, "cols", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], cascader_Cascader.prototype, "disabled", void 0);

__decorate([Prop()], cascader_Cascader.prototype, "pickerItemStyle", void 0);

__decorate([Prop()], cascader_Cascader.prototype, "indicatorStyle", void 0);

__decorate([Prop({
  default: 'rmc-cascader'
})], cascader_Cascader.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: 'rmc-picker'
})], cascader_Cascader.prototype, "pickerPrefixCls", void 0);

__decorate([Inject({
  from: 'store',
  default: undefined
})], cascader_Cascader.prototype, "store", void 0);

cascader_Cascader = __decorate([vue_class_component_common_default()({
  name: 'Cascader'
})], cascader_Cascader);
/* harmony default export */ var vmc_cascader_cascader = (cascader_Cascader);
// CONCATENATED MODULE: ./src/packages/vmc-cascader/popup.tsx













var popup_PopupCascader =
/*#__PURE__*/
function (_Vue) {
  _inherits(PopupCascader, _Vue);

  function PopupCascader() {
    _classCallCheck(this, PopupCascader);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PopupCascader).apply(this, arguments));
  }

  _createClass(PopupCascader, [{
    key: "onDismiss",
    value: function onDismiss() {
      if (this.store.onDismiss) {
        this.store.onDismiss();
      }

      this.$emit('dismiss');
    }
  }, {
    key: "onChange",
    value: function onChange(v) {
      this.$emit('change', v);
    }
  }, {
    key: "onOk",
    value: function onOk(v) {
      if (this.store.onOk) {
        this.store.onOk(v);
      }

      this.$emit('change', v);
      this.$emit('ok');
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      // @ts-ignore
      return h(vmc_picker_popup, helper_default()([{}, {
        "attrs": assign_default()({
          picker: this.cascader
        }, this.$props, this.$attrs)
      }, {
        "on": {
          "dismiss": this.onDismiss,
          "change": this.onChange,
          "ok": this.onOk
        }
      }]), [h("template", {
        "slot": 'picker'
      }, [this.cascader]), this.$slots.default]);
    }
  }]);

  return PopupCascader;
}(external_Vue_default.a);

__decorate([Prop({
  type: Object
})], popup_PopupCascader.prototype, "cascader", void 0);

__decorate([Inject({
  from: 'store',
  default: undefined
})], popup_PopupCascader.prototype, "store", void 0);

popup_PopupCascader = __decorate([vue_class_component_common_default()({
  name: 'PopupCascader'
})], popup_PopupCascader);
/* harmony default export */ var vmc_cascader_popup = (popup_PopupCascader);
// CONCATENATED MODULE: ./src/packages/picker/src/index.tsx










/* tslint:disable:jsx-no-multiline-js */











var src_Picker =
/*#__PURE__*/
function (_Vue) {
  _inherits(Picker, _Vue);

  function Picker() {
    var _this;

    _classCallCheck(this, Picker);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Picker).apply(this, arguments));
    _this.currentValue = [];
    _this.store = {
      onOk: null
    };
    return _this;
  }

  _createClass(Picker, [{
    key: "valueChanged",
    value: function valueChanged(v) {
      if (v && v !== this.currentValue) {
        this.currentValue = v;
      }
    }
  }, {
    key: "onClick",
    value: function onClick(e) {
      return this.$emit('click', e);
    }
  }, {
    key: "getSel",
    value: function getSel() {
      var value = this.currentValue || [];
      var treeChildren;
      var data = this.data;

      if (this.cascade) {
        treeChildren = lib_default()(data, function (c, level) {
          return c.value === value[level];
        });
      } else {
        treeChildren = value.map(function (v, i) {
          return data[i].filter(function (d) {
            return d.value === v;
          })[0];
        });
      }

      var extra = this.format && this.format(treeChildren.map(function (v) {
        return v.label;
      }));

      if (is_array_default()(extra)) {
        return extra[0];
      }

      return extra;
    }
  }, {
    key: "getPickerCol",
    value: function getPickerCol() {
      var h = this.$createElement;
      var data = this.data,
          pickerPrefixCls = this.pickerPrefixCls,
          itemStyle = this.itemStyle,
          indicatorStyle = this.indicatorStyle;
      return data.map(function (col, index) {
        return (// @ts-ignore
          h(vmc_picker_picker, {
            "key": index,
            "attrs": {
              "prefixCls": pickerPrefixCls,
              "itemStyle": itemStyle,
              "indicatorStyle": indicatorStyle
            },
            "style": {
              flex: 1
            }
          }, [col.map(function (item) {
            return (// @ts-ignore
              h(vmc_picker_picker.Item, {
                "key": item.value,
                "attrs": {
                  "value": item.value
                }
              }, [item.label])
            );
          })])
        );
      });
    }
  }, {
    key: "onOk",
    value: function onOk(v) {
      var value = v;

      if (this.scrollValue !== undefined) {
        value = this.scrollValue;
      }

      if (this.onChange) {
        this.onChange(value);
      }

      this.$emit('ok', value);
    }
  }, {
    key: "setScrollValue",
    value: function setScrollValue(v) {
      this.scrollValue = v;
    }
  }, {
    key: "setCasecadeScrollValue",
    value: function setCasecadeScrollValue(v) {
      // 级联情况下保证数据正确性，滚动过程中只有当最后一级变化时才变更数据
      if (v && this.scrollValue) {
        var length = this.scrollValue.length;

        if (length === v.length && this.scrollValue[length - 1] === v[length - 1]) {
          return;
        }
      }

      this.setScrollValue(v);
    }
  }, {
    key: "fixOnOk",
    value: function fixOnOk(cascader) {
      if (cascader && cascader.onOk !== this.onOk.bind(this)) {
        cascader.onOk = this.onOk;
        cascader.forceUpdate();
      }
    }
  }, {
    key: "onPickerChange",
    value: function onPickerChange(v, i) {
      this.setScrollValue(v);
      this.$emit('pickerChange', v, i);
    }
  }, {
    key: "onVisibleChange",
    value: function onVisibleChange(visible) {
      this.setScrollValue(undefined);
      this.$emit('visibleChange', visible);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];

      var _a = this.$props,
          popupPrefixCls = _a.popupPrefixCls,
          itemStyle = _a.itemStyle,
          indicatorStyle = _a.indicatorStyle,
          okText = _a.okText,
          dismissText = _a.dismissText,
          extra = _a.extra,
          cascade = _a.cascade,
          prefixCls = _a.prefixCls,
          pickerPrefixCls = _a.pickerPrefixCls,
          data = _a.data,
          cols = _a.cols,
          onOk = _a.onOk,
          restProps = __rest(_a, ["popupPrefixCls", "itemStyle", "indicatorStyle", "okText", "dismissText", "extra", "cascade", "prefixCls", "pickerPrefixCls", "data", "cols", "onOk"]);

      var cascader;
      var popupMoreProps = {};

      if (cascade) {
        cascader = // @ts-ignore
        h(vmc_cascader_cascader, {
          "slot": "cascader",
          "attrs": {
            "prefixCls": prefixCls,
            "pickerPrefixCls": pickerPrefixCls,
            "data": data,
            "cols": cols,
            "pickerItemStyle": itemStyle,
            "indicatorStyle": indicatorStyle
          },
          "on": {
            "input": function input(v) {
              _this2.onInput(v);
            },
            "change": this.onPickerChange,
            "scrollChange": this.setCasecadeScrollValue
          }
        });
      } else {
        cascader = // @ts-ignore
        h(multi_picker, {
          "slot": "cascader",
          "style": {
            flexDirection: 'row',
            alignItems: 'center'
          },
          "attrs": {
            "prefixCls": prefixCls
          },
          "on": {
            "input": function input(v) {
              _this2.onInput(v);
            },
            "scrollChange": this.setScrollValue
          }
        }, [this.getPickerCol()]);
        popupMoreProps = {
          pickerValueProp: 'selectedValue',
          pickerValueChangeProp: 'onValueChange'
        };
      }

      var props = assign_default()({}, this.popupProps, {
        cascader: cascader
      }, restProps, {
        prefixCls: popupPrefixCls,
        value: this.currentValue,
        dismissText: dismissText,
        okText: okText
      }, popupMoreProps);

      var childExtra = this.getSel() || extra || this.getPlaceholder() || '';
      return (// @ts-ignore
        h(vmc_cascader_popup, helper_default()([{}, {
          "attrs": props
        }]), [cascader, this.$slots.default && this.$slots.default.map(function (child) {
          var node = vnode_cloneVNode(child, true);
          setProps(node, {
            extra: childExtra,
            arrow: 'horizontal'
          });
          return node;
        })])
      );
    }
  }, {
    key: "currentValueChanged",
    value: function currentValueChanged(currentValue) {
      if (currentValue !== this.value) {
        this.$emit('input', currentValue);
        this.$emit('change', currentValue);
      }
    }
  }, {
    key: "onInput",
    value: function onInput(v) {
      this.currentValue = v;
    }
  }, {
    key: "getPlaceholder",
    value: function getPlaceholder() {
      return this.placeholder || '';
    }
  }]);

  return Picker;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: ''
})], src_Picker.prototype, "placeholder", void 0);

__decorate([Prop({
  type: String,
  default: '取消'
})], src_Picker.prototype, "dismissText", void 0);

__decorate([Prop({
  type: String,
  default: '确定'
})], src_Picker.prototype, "okText", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker'
})], src_Picker.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'click'
})], src_Picker.prototype, "triggerType", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker-col'
})], src_Picker.prototype, "pickerPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-picker-popup'
})], src_Picker.prototype, "popupPrefixCls", void 0);

__decorate([Prop({
  type: String,
  default: ''
})], src_Picker.prototype, "title", void 0);

__decorate([Prop()], src_Picker.prototype, "data", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Picker.prototype, "cascade", void 0);

__decorate([Prop()], src_Picker.prototype, "value", void 0);

__decorate([Prop({
  type: Function,
  default: function _default(values) {
    // label is JSX.Element or other
    if (values.length > 0 && typeof values[0] !== 'string') {
      return values;
    }

    return values.join(',');
  }
})], src_Picker.prototype, "format", void 0);

__decorate([Prop({
  type: Number,
  default: 3
})], src_Picker.prototype, "cols", void 0);

__decorate([Prop()], src_Picker.prototype, "extra", void 0);

__decorate([Prop()], src_Picker.prototype, "onChange", void 0);

__decorate([Prop()], src_Picker.prototype, "itemStyle", void 0);

__decorate([Prop()], src_Picker.prototype, "indicatorStyle", void 0);

__decorate([Provide('store')], src_Picker.prototype, "store", void 0);

__decorate([Watch('value', {
  immediate: true
})], src_Picker.prototype, "valueChanged", null);

__decorate([Watch('currentValue')], src_Picker.prototype, "currentValueChanged", null);

src_Picker = __decorate([vue_class_component_common_default()({
  name: 'Picker'
})], src_Picker);
/* harmony default export */ var picker_src = (src_Picker);
// CONCATENATED MODULE: ./src/packages/picker/index.ts


var picker_Plugin = picker_src;

picker_Plugin.install = function (Vue) {
  Vue.component('MPicker', picker_src);
};

/* harmony default export */ var packages_picker = (picker_Plugin);
// EXTERNAL MODULE: ./node_modules/ant-design-vue/es/popover/style/index.less
var popover_style = __webpack_require__("8f3c");

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/popover/style/index.js


// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/Dom/contains.js
function contains(root, n) {
  var node = n;
  while (node) {
    if (node === root) {
      return true;
    }
    node = node.parentNode;
  }

  return false;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/getRequestAnimationFrame.js
var availablePrefixs = ['moz', 'ms', 'webkit'];

function requestAnimationFramePolyfill() {
  var lastTime = 0;
  return function (callback) {
    var currTime = new Date().getTime();
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
    var id = window.setTimeout(function () {
      callback(currTime + timeToCall);
    }, timeToCall);
    lastTime = currTime + timeToCall;
    return id;
  };
}

function getRequestAnimationFrame() {
  if (typeof window === 'undefined') {
    return function () {};
  }
  if (window.requestAnimationFrame) {
    // https://github.com/vuejs/vue/issues/4465
    return window.requestAnimationFrame.bind(window);
  }

  var prefix = availablePrefixs.filter(function (key) {
    return key + 'RequestAnimationFrame' in window;
  })[0];

  return prefix ? window[prefix + 'RequestAnimationFrame'] : requestAnimationFramePolyfill();
}

function cancelRequestAnimationFrame(id) {
  if (typeof window === 'undefined') {
    return null;
  }
  if (window.cancelAnimationFrame) {
    return window.cancelAnimationFrame(id);
  }
  var prefix = availablePrefixs.filter(function (key) {
    return key + 'CancelAnimationFrame' in window || key + 'CancelRequestAnimationFrame' in window;
  })[0];

  return prefix ? (window[prefix + 'CancelAnimationFrame'] || window[prefix + 'CancelRequestAnimationFrame']).call(this, id) : clearTimeout(id);
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/requestAnimationTimeout.js

var requestAnimationTimeout_raf = getRequestAnimationFrame();

var requestAnimationTimeout_cancelAnimationTimeout = function cancelAnimationTimeout(frame) {
  return cancelRequestAnimationFrame(frame.id);
};

var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {
  var start = Date.now();
  function timeout() {
    if (Date.now() - start >= delay) {
      callback.call();
    } else {
      frame.id = requestAnimationTimeout_raf(timeout);
    }
  }

  var frame = {
    id: requestAnimationTimeout_raf(timeout)
  };

  return frame;
};
// EXTERNAL MODULE: ./node_modules/add-dom-event-listener/lib/index.js
var add_dom_event_listener_lib = __webpack_require__("2c80");
var add_dom_event_listener_lib_default = /*#__PURE__*/__webpack_require__.n(add_dom_event_listener_lib);

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/Dom/addEventListener.js


function addEventListenerWrap(target, eventType, cb, option) {
  return add_dom_event_listener_lib_default()(target, eventType, cb, option);
}
// CONCATENATED MODULE: ./node_modules/dom-align/es/propertyUtils.js
var vendorPrefix = void 0;

var jsCssMap = {
  Webkit: '-webkit-',
  Moz: '-moz-',
  // IE did it wrong again ...
  ms: '-ms-',
  O: '-o-'
};

function getVendorPrefix() {
  if (vendorPrefix !== undefined) {
    return vendorPrefix;
  }
  vendorPrefix = '';
  var style = document.createElement('p').style;
  var testProp = 'Transform';
  for (var key in jsCssMap) {
    if (key + testProp in style) {
      vendorPrefix = key;
    }
  }
  return vendorPrefix;
}

function propertyUtils_getTransitionName() {
  return getVendorPrefix() ? getVendorPrefix() + 'TransitionProperty' : 'transitionProperty';
}

function getTransformName() {
  return getVendorPrefix() ? getVendorPrefix() + 'Transform' : 'transform';
}

function setTransitionProperty(node, value) {
  var name = propertyUtils_getTransitionName();
  if (name) {
    node.style[name] = value;
    if (name !== 'transitionProperty') {
      node.style.transitionProperty = value;
    }
  }
}

function propertyUtils_setTransform(node, value) {
  var name = getTransformName();
  if (name) {
    node.style[name] = value;
    if (name !== 'transform') {
      node.style.transform = value;
    }
  }
}

function getTransitionProperty(node) {
  return node.style.transitionProperty || node.style[propertyUtils_getTransitionName()];
}

function getTransformXY(node) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
  if (transform && transform !== 'none') {
    var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',');
    return { x: parseFloat(matrix[12] || matrix[4], 0), y: parseFloat(matrix[13] || matrix[5], 0) };
  }
  return {
    x: 0,
    y: 0
  };
}

var matrix2d = /matrix\((.*)\)/;
var matrix3d = /matrix3d\((.*)\)/;

function setTransformXY(node, xy) {
  var style = window.getComputedStyle(node, null);
  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
  if (transform && transform !== 'none') {
    var arr = void 0;
    var match2d = transform.match(matrix2d);
    if (match2d) {
      match2d = match2d[1];
      arr = match2d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[4] = xy.x;
      arr[5] = xy.y;
      propertyUtils_setTransform(node, 'matrix(' + arr.join(',') + ')');
    } else {
      var match3d = transform.match(matrix3d)[1];
      arr = match3d.split(',').map(function (item) {
        return parseFloat(item, 10);
      });
      arr[12] = xy.x;
      arr[13] = xy.y;
      propertyUtils_setTransform(node, 'matrix3d(' + arr.join(',') + ')');
    }
  } else {
    propertyUtils_setTransform(node, 'translateX(' + xy.x + 'px) translateY(' + xy.y + 'px) translateZ(0)');
  }
}
// CONCATENATED MODULE: ./node_modules/dom-align/es/utils.js
var utils_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;

var getComputedStyleX = void 0;

// https://stackoverflow.com/a/3485654/3040605
function forceRelayout(elem) {
  var originalStyle = elem.style.display;
  elem.style.display = 'none';
  elem.offsetHeight; // eslint-disable-line
  elem.style.display = originalStyle;
}

function css(el, name, v) {
  var value = v;
  if ((typeof name === 'undefined' ? 'undefined' : utils_typeof(name)) === 'object') {
    for (var i in name) {
      if (name.hasOwnProperty(i)) {
        css(el, i, name[i]);
      }
    }
    return undefined;
  }
  if (typeof value !== 'undefined') {
    if (typeof value === 'number') {
      value = value + 'px';
    }
    el.style[name] = value;
    return undefined;
  }
  return getComputedStyleX(el, name);
}

function getClientPosition(elem) {
  var box = void 0;
  var x = void 0;
  var y = void 0;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
  box = elem.getBoundingClientRect();

  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin

  x = box.left;
  y = box.top;

  // In IE, most of the time, 2 extra pixels are added to the top and left
  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
  // IE6 standards mode, this border can be overridden by setting the
  // document element's border to zero -- thus, we cannot rely on the
  // offset always being 2 pixels.

  // In quirks mode, the offset can be determined by querying the body's
  // clientLeft/clientTop, but in standards mode, it is found by querying
  // the document element's clientLeft/clientTop.  Since we already called
  // getClientBoundingRect we have already forced a reflow, so it is not
  // too expensive just to query them all.

  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
  // 窗口边框标准是设 documentElement ,quirks 时设置 body
  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
  // 标准 ie 下 docElem.clientTop 就是 border-top
  // ie7 html 即窗口边框改变不了。永远为 2
  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0

  x -= docElem.clientLeft || body.clientLeft || 0;
  y -= docElem.clientTop || body.clientTop || 0;

  return {
    left: x,
    top: y
  };
}

function getScroll(w, top) {
  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
  var method = 'scroll' + (top ? 'Top' : 'Left');
  if (typeof ret !== 'number') {
    var d = w.document;
    // ie6,7,8 standard mode
    ret = d.documentElement[method];
    if (typeof ret !== 'number') {
      // quirks mode
      ret = d.body[method];
    }
  }
  return ret;
}

function getScrollLeft(w) {
  return getScroll(w);
}

function getScrollTop(w) {
  return getScroll(w, true);
}

function utils_getOffset(el) {
  var pos = getClientPosition(el);
  var doc = el.ownerDocument;
  var w = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft(w);
  pos.top += getScrollTop(w);
  return pos;
}

/**
 * A crude way of determining if an object is a window
 * @member util
 */
function isWindow(obj) {
  // must use == for ie8
  /* eslint eqeqeq:0 */
  return obj !== null && obj !== undefined && obj == obj.window;
}

function getDocument(node) {
  if (isWindow(node)) {
    return node.document;
  }
  if (node.nodeType === 9) {
    return node;
  }
  return node.ownerDocument;
}

function _getComputedStyle(elem, name, cs) {
  var computedStyle = cs;
  var val = '';
  var d = getDocument(elem);
  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);

  // https://github.com/kissyteam/kissy/issues/61
  if (computedStyle) {
    val = computedStyle.getPropertyValue(name) || computedStyle[name];
  }

  return val;
}

var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
var RE_POS = /^(top|right|bottom|left)$/;
var CURRENT_STYLE = 'currentStyle';
var RUNTIME_STYLE = 'runtimeStyle';
var LEFT = 'left';
var PX = 'px';

function _getComputedStyleIE(elem, name) {
  // currentStyle maybe null
  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];

  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
  // 在 ie 下不对，需要直接用 offset 方式
  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了

  // From the awesome hack by Dean Edwards
  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
  // If we're not dealing with a regular pixel number
  // but a number that has a weird ending, we need to convert it to pixels
  // exclude left right for relativity
  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
    // Remember the original values
    var style = elem.style;
    var left = style[LEFT];
    var rsLeft = elem[RUNTIME_STYLE][LEFT];

    // prevent flashing of content
    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];

    // Put in the new values to get a computed value out
    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
    ret = style.pixelLeft + PX;

    // Revert the changed values
    style[LEFT] = left;

    elem[RUNTIME_STYLE][LEFT] = rsLeft;
  }
  return ret === '' ? 'auto' : ret;
}

if (typeof window !== 'undefined') {
  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
}

function getOffsetDirection(dir, option) {
  if (dir === 'left') {
    return option.useCssRight ? 'right' : dir;
  }
  return option.useCssBottom ? 'bottom' : dir;
}

function oppositeOffsetDirection(dir) {
  if (dir === 'left') {
    return 'right';
  } else if (dir === 'right') {
    return 'left';
  } else if (dir === 'top') {
    return 'bottom';
  } else if (dir === 'bottom') {
    return 'top';
  }
}

// 设置 elem 相对 elem.ownerDocument 的坐标
function setLeftTop(elem, offset, option) {
  // set position first, in-case top/left are set even on static elem
  if (css(elem, 'position') === 'static') {
    elem.style.position = 'relative';
  }
  var presetH = -999;
  var presetV = -999;
  var horizontalProperty = getOffsetDirection('left', option);
  var verticalProperty = getOffsetDirection('top', option);
  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);

  if (horizontalProperty !== 'left') {
    presetH = 999;
  }

  if (verticalProperty !== 'top') {
    presetV = 999;
  }
  var originalTransition = '';
  var originalOffset = utils_getOffset(elem);
  if ('left' in offset || 'top' in offset) {
    originalTransition = getTransitionProperty(elem) || '';
    setTransitionProperty(elem, 'none');
  }
  if ('left' in offset) {
    elem.style[oppositeHorizontalProperty] = '';
    elem.style[horizontalProperty] = presetH + 'px';
  }
  if ('top' in offset) {
    elem.style[oppositeVerticalProperty] = '';
    elem.style[verticalProperty] = presetV + 'px';
  }
  // force relayout
  forceRelayout(elem);
  var old = utils_getOffset(elem);
  var originalStyle = {};
  for (var key in offset) {
    if (offset.hasOwnProperty(key)) {
      var dir = getOffsetDirection(key, option);
      var preset = key === 'left' ? presetH : presetV;
      var off = originalOffset[key] - old[key];
      if (dir === key) {
        originalStyle[dir] = preset + off;
      } else {
        originalStyle[dir] = preset - off;
      }
    }
  }
  css(elem, originalStyle);
  // force relayout
  forceRelayout(elem);
  if ('left' in offset || 'top' in offset) {
    setTransitionProperty(elem, originalTransition);
  }
  var ret = {};
  for (var _key in offset) {
    if (offset.hasOwnProperty(_key)) {
      var _dir = getOffsetDirection(_key, option);
      var _off = offset[_key] - originalOffset[_key];
      if (_key === _dir) {
        ret[_dir] = originalStyle[_dir] + _off;
      } else {
        ret[_dir] = originalStyle[_dir] - _off;
      }
    }
  }
  css(elem, ret);
}

function utils_setTransform(elem, offset) {
  var originalOffset = utils_getOffset(elem);
  var originalXY = getTransformXY(elem);
  var resultXY = { x: originalXY.x, y: originalXY.y };
  if ('left' in offset) {
    resultXY.x = originalXY.x + offset.left - originalOffset.left;
  }
  if ('top' in offset) {
    resultXY.y = originalXY.y + offset.top - originalOffset.top;
  }
  setTransformXY(elem, resultXY);
}

function setOffset(elem, offset, option) {
  if (option.ignoreShake) {
    var oriOffset = utils_getOffset(elem);

    var oLeft = oriOffset.left.toFixed(0);
    var oTop = oriOffset.top.toFixed(0);
    var tLeft = offset.left.toFixed(0);
    var tTop = offset.top.toFixed(0);

    if (oLeft === tLeft && oTop === tTop) {
      return;
    }
  }

  if (option.useCssRight || option.useCssBottom) {
    setLeftTop(elem, offset, option);
  } else if (option.useCssTransform && getTransformName() in document.body.style) {
    utils_setTransform(elem, offset, option);
  } else {
    setLeftTop(elem, offset, option);
  }
}

function each(arr, fn) {
  for (var i = 0; i < arr.length; i++) {
    fn(arr[i]);
  }
}

function isBorderBoxFn(elem) {
  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
}

var BOX_MODELS = ['margin', 'border', 'padding'];
var CONTENT_INDEX = -1;
var PADDING_INDEX = 2;
var BORDER_INDEX = 1;
var MARGIN_INDEX = 0;

function swap(elem, options, callback) {
  var old = {};
  var style = elem.style;
  var name = void 0;

  // Remember the old values, and insert the new ones
  for (name in options) {
    if (options.hasOwnProperty(name)) {
      old[name] = style[name];
      style[name] = options[name];
    }
  }

  callback.call(elem);

  // Revert the old values
  for (name in options) {
    if (options.hasOwnProperty(name)) {
      style[name] = old[name];
    }
  }
}

function getPBMWidth(elem, props, which) {
  var value = 0;
  var prop = void 0;
  var j = void 0;
  var i = void 0;
  for (j = 0; j < props.length; j++) {
    prop = props[j];
    if (prop) {
      for (i = 0; i < which.length; i++) {
        var cssProp = void 0;
        if (prop === 'border') {
          cssProp = '' + prop + which[i] + 'Width';
        } else {
          cssProp = prop + which[i];
        }
        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
      }
    }
  }
  return value;
}

var domUtils = {};

each(['Width', 'Height'], function (name) {
  domUtils['doc' + name] = function (refWin) {
    var d = refWin.document;
    return Math.max(
    // firefox chrome documentElement.scrollHeight< body.scrollHeight
    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
    d.documentElement['scroll' + name],
    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
    d.body['scroll' + name], domUtils['viewport' + name](d));
  };

  domUtils['viewport' + name] = function (win) {
    // pc browser includes scrollbar in window.innerWidth
    var prop = 'client' + name;
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop];
    // 标准模式取 documentElement
    // backcompat 取 body
    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
  };
});

/*
 得到元素的大小信息
 @param elem
 @param name
 @param {String} [extra]  'padding' : (css width) + padding
 'border' : (css width) + padding + border
 'margin' : (css width) + padding + border + margin
 */
function getWH(elem, name, ex) {
  var extra = ex;
  if (isWindow(elem)) {
    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
  }
  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
  var borderBoxValue = name === 'width' ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;
  var computedStyle = getComputedStyleX(elem);
  var isBorderBox = isBorderBoxFn(elem, computedStyle);
  var cssBoxValue = 0;
  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
    borderBoxValue = undefined;
    // Fall back to computed then un computed css if necessary
    cssBoxValue = getComputedStyleX(elem, name);
    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    }
    // Normalize '', auto, and prepare for extra
    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }
  if (extra === undefined) {
    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
  }
  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
  var val = borderBoxValue || cssBoxValue;
  if (extra === CONTENT_INDEX) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
    }
    return cssBoxValue;
  } else if (borderBoxValueOrIsBorderBox) {
    if (extra === BORDER_INDEX) {
      return val;
    }
    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));
  }
  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
}

var cssShow = {
  position: 'absolute',
  visibility: 'hidden',
  display: 'block'
};

// fix #119 : https://github.com/kissyteam/kissy/issues/119
function getWHIgnoreDisplay() {
  for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
    args[_key2] = arguments[_key2];
  }

  var val = void 0;
  var elem = args[0];
  // in case elem is window
  // elem.offsetWidth === undefined
  if (elem.offsetWidth !== 0) {
    val = getWH.apply(undefined, args);
  } else {
    swap(elem, cssShow, function () {
      val = getWH.apply(undefined, args);
    });
  }
  return val;
}

each(['width', 'height'], function (name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);
  domUtils['outer' + first] = function (el, includeMargin) {
    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
  };
  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];

  domUtils[name] = function (elem, v) {
    var val = v;
    if (val !== undefined) {
      if (elem) {
        var computedStyle = getComputedStyleX(elem);
        var isBorderBox = isBorderBoxFn(elem);
        if (isBorderBox) {
          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
        }
        return css(elem, name, val);
      }
      return undefined;
    }
    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
  };
});

function mix(to, from) {
  for (var i in from) {
    if (from.hasOwnProperty(i)) {
      to[i] = from[i];
    }
  }
  return to;
}

var utils_utils = {
  getWindow: function getWindow(node) {
    if (node && node.document && node.setTimeout) {
      return node;
    }
    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },

  getDocument: getDocument,
  offset: function offset(el, value, option) {
    if (typeof value !== 'undefined') {
      setOffset(el, value, option || {});
    } else {
      return utils_getOffset(el);
    }
  },

  isWindow: isWindow,
  each: each,
  css: css,
  clone: function clone(obj) {
    var i = void 0;
    var ret = {};
    for (i in obj) {
      if (obj.hasOwnProperty(i)) {
        ret[i] = obj[i];
      }
    }
    var overflow = obj.overflow;
    if (overflow) {
      for (i in obj) {
        if (obj.hasOwnProperty(i)) {
          ret.overflow[i] = obj.overflow[i];
        }
      }
    }
    return ret;
  },

  mix: mix,
  getWindowScrollLeft: function getWindowScrollLeft(w) {
    return getScrollLeft(w);
  },
  getWindowScrollTop: function getWindowScrollTop(w) {
    return getScrollTop(w);
  },
  merge: function merge() {
    var ret = {};

    for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
      args[_key3] = arguments[_key3];
    }

    for (var i = 0; i < args.length; i++) {
      utils_utils.mix(ret, args[i]);
    }
    return ret;
  },

  viewportWidth: 0,
  viewportHeight: 0
};

mix(utils_utils, domUtils);

/* harmony default export */ var es_utils = (utils_utils);
// CONCATENATED MODULE: ./node_modules/dom-align/es/getOffsetParent.js


/**
 * 得到会导致元素显示不全的祖先元素
 */

function getOffsetParent(element) {
  if (es_utils.isWindow(element) || element.nodeType === 9) {
    return null;
  }
  // ie 这个也不是完全可行
  /*
   <div style="width: 50px;height: 100px;overflow: hidden">
   <div style="width: 50px;height: 100px;position: relative;" id="d6">
   元素 6 高 100px 宽 50px<br/>
   </div>
   </div>
   */
  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
  //  In other browsers it only includes elements with position absolute, relative or
  // fixed, not elements with overflow set to auto or scroll.
  //        if (UA.ie && ieMode < 8) {
  //            return element.offsetParent;
  //        }
  // 统一的 offsetParent 方法
  var doc = es_utils.getDocument(element);
  var body = doc.body;
  var parent = void 0;
  var positionStyle = es_utils.css(element, 'position');
  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';

  if (!skipStatic) {
    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;
  }

  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
    positionStyle = es_utils.css(parent, 'position');
    if (positionStyle !== 'static') {
      return parent;
    }
  }
  return null;
}

/* harmony default export */ var es_getOffsetParent = (getOffsetParent);
// CONCATENATED MODULE: ./node_modules/dom-align/es/isAncestorFixed.js


function isAncestorFixed(element) {
  if (es_utils.isWindow(element) || element.nodeType === 9) {
    return false;
  }

  var doc = es_utils.getDocument(element);
  var body = doc.body;
  var parent = null;
  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
    var positionStyle = es_utils.css(parent, 'position');
    if (positionStyle === 'fixed') {
      return true;
    }
  }
  return false;
}
// CONCATENATED MODULE: ./node_modules/dom-align/es/getVisibleRectForElement.js




/**
 * 获得元素的显示部分的区域
 */
function getVisibleRectForElement(element) {
  var visibleRect = {
    left: 0,
    right: Infinity,
    top: 0,
    bottom: Infinity
  };
  var el = es_getOffsetParent(element);
  var doc = es_utils.getDocument(element);
  var win = doc.defaultView || doc.parentWindow;
  var body = doc.body;
  var documentElement = doc.documentElement;

  // Determine the size of the visible rect by climbing the dom accounting for
  // all scrollable containers.
  while (el) {
    // clientWidth is zero for inline block elements in ie.
    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&
    // body may have overflow set on it, yet we still get the entire
    // viewport. In some browsers, el.offsetParent may be
    // document.documentElement, so check for that too.
    el !== body && el !== documentElement && es_utils.css(el, 'overflow') !== 'visible') {
      var pos = es_utils.offset(el);
      // add border
      pos.left += el.clientLeft;
      pos.top += el.clientTop;
      visibleRect.top = Math.max(visibleRect.top, pos.top);
      visibleRect.right = Math.min(visibleRect.right,
      // consider area without scrollBar
      pos.left + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.left);
    } else if (el === body || el === documentElement) {
      break;
    }
    el = es_getOffsetParent(el);
  }

  // Set element position to fixed
  // make sure absolute element itself don't affect it's visible area
  // https://github.com/ant-design/ant-design/issues/7601
  var originalPosition = null;
  if (!es_utils.isWindow(element) && element.nodeType !== 9) {
    originalPosition = element.style.position;
    var position = es_utils.css(element, 'position');
    if (position === 'absolute') {
      element.style.position = 'fixed';
    }
  }

  var scrollX = es_utils.getWindowScrollLeft(win);
  var scrollY = es_utils.getWindowScrollTop(win);
  var viewportWidth = es_utils.viewportWidth(win);
  var viewportHeight = es_utils.viewportHeight(win);
  var documentWidth = documentElement.scrollWidth;
  var documentHeight = documentElement.scrollHeight;

  // scrollXXX on html is sync with body which means overflow: hidden on body gets wrong scrollXXX.
  // We should cut this ourself.
  var bodyStyle = window.getComputedStyle(body);
  if (bodyStyle.overflowX === 'hidden') {
    documentWidth = win.innerWidth;
  }
  if (bodyStyle.overflowY === 'hidden') {
    documentHeight = win.innerHeight;
  }

  // Reset element position after calculate the visible area
  if (element.style) {
    element.style.position = originalPosition;
  }

  if (isAncestorFixed(element)) {
    // Clip by viewport's size.
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY);
    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);
    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);
  } else {
    // Clip by document's size.
    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);
    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);

    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);
    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);
  }

  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
}

/* harmony default export */ var es_getVisibleRectForElement = (getVisibleRectForElement);
// CONCATENATED MODULE: ./node_modules/dom-align/es/adjustForViewport.js


function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
  var pos = es_utils.clone(elFuturePos);
  var size = {
    width: elRegion.width,
    height: elRegion.height
  };

  if (overflow.adjustX && pos.left < visibleRect.left) {
    pos.left = visibleRect.left;
  }

  // Left edge inside and right edge outside viewport, try to resize it.
  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
    size.width -= pos.left + size.width - visibleRect.right;
  }

  // Right edge outside viewport, try to move it.
  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
    // 保证左边界和可视区域左边界对齐
    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
  }

  // Top edge outside viewport, try to move it.
  if (overflow.adjustY && pos.top < visibleRect.top) {
    pos.top = visibleRect.top;
  }

  // Top edge inside and bottom edge outside viewport, try to resize it.
  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
    size.height -= pos.top + size.height - visibleRect.bottom;
  }

  // Bottom edge outside viewport, try to move it.
  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
    // 保证上边界和可视区域上边界对齐
    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
  }

  return es_utils.mix(pos, size);
}

/* harmony default export */ var es_adjustForViewport = (adjustForViewport);
// CONCATENATED MODULE: ./node_modules/dom-align/es/getRegion.js


function getRegion(node) {
  var offset = void 0;
  var w = void 0;
  var h = void 0;
  if (!es_utils.isWindow(node) && node.nodeType !== 9) {
    offset = es_utils.offset(node);
    w = es_utils.outerWidth(node);
    h = es_utils.outerHeight(node);
  } else {
    var win = es_utils.getWindow(node);
    offset = {
      left: es_utils.getWindowScrollLeft(win),
      top: es_utils.getWindowScrollTop(win)
    };
    w = es_utils.viewportWidth(win);
    h = es_utils.viewportHeight(win);
  }
  offset.width = w;
  offset.height = h;
  return offset;
}

/* harmony default export */ var es_getRegion = (getRegion);
// CONCATENATED MODULE: ./node_modules/dom-align/es/getAlignOffset.js
/**
 * 获取 node 上的 align 对齐点 相对于页面的坐标
 */

function getAlignOffset(region, align) {
  var V = align.charAt(0);
  var H = align.charAt(1);
  var w = region.width;
  var h = region.height;

  var x = region.left;
  var y = region.top;

  if (V === 'c') {
    y += h / 2;
  } else if (V === 'b') {
    y += h;
  }

  if (H === 'c') {
    x += w / 2;
  } else if (H === 'r') {
    x += w;
  }

  return {
    left: x,
    top: y
  };
}

/* harmony default export */ var es_getAlignOffset = (getAlignOffset);
// CONCATENATED MODULE: ./node_modules/dom-align/es/getElFuturePos.js


function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
  var p1 = es_getAlignOffset(refNodeRegion, points[1]);
  var p2 = es_getAlignOffset(elRegion, points[0]);
  var diff = [p2.left - p1.left, p2.top - p1.top];

  return {
    left: elRegion.left - diff[0] + offset[0] - targetOffset[0],
    top: elRegion.top - diff[1] + offset[1] - targetOffset[1]
  };
}

/* harmony default export */ var es_getElFuturePos = (getElFuturePos);
// CONCATENATED MODULE: ./node_modules/dom-align/es/align/align.js
/**
 * align dom node flexibly
 * @author yiminghe@gmail.com
 */







// http://yiminghe.iteye.com/blog/1124720

function isFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
}

function isFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
}

function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
}

function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
}

function flip(points, reg, map) {
  var ret = [];
  es_utils.each(points, function (p) {
    ret.push(p.replace(reg, function (m) {
      return map[m];
    }));
  });
  return ret;
}

function flipOffset(offset, index) {
  offset[index] = -offset[index];
  return offset;
}

function convertOffset(str, offsetLen) {
  var n = void 0;
  if (/%$/.test(str)) {
    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
  } else {
    n = parseInt(str, 10);
  }
  return n || 0;
}

function normalizeOffset(offset, el) {
  offset[0] = convertOffset(offset[0], el.width);
  offset[1] = convertOffset(offset[1], el.height);
}

/**
 * @param el
 * @param tgtRegion 参照节点所占的区域: { left, top, width, height }
 * @param align
 */
function doAlign(el, tgtRegion, align, isTgtRegionVisible) {
  var points = align.points;
  var offset = align.offset || [0, 0];
  var targetOffset = align.targetOffset || [0, 0];
  var overflow = align.overflow;
  var source = align.source || el;
  offset = [].concat(offset);
  targetOffset = [].concat(targetOffset);
  overflow = overflow || {};
  var newOverflowCfg = {};
  var fail = 0;
  // 当前节点可以被放置的显示区域
  var visibleRect = es_getVisibleRectForElement(source);
  // 当前节点所占的区域, left/top/width/height
  var elRegion = es_getRegion(source);
  // 将 offset 转换成数值，支持百分比
  normalizeOffset(offset, elRegion);
  normalizeOffset(targetOffset, tgtRegion);
  // 当前节点将要被放置的位置
  var elFuturePos = es_getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);
  // 当前节点将要所处的区域
  var newElRegion = es_utils.merge(elRegion, elFuturePos);

  // 如果可视区域不能完全放置当前节点时允许调整
  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {
    if (overflow.adjustX) {
      // 如果横向不能放下
      if (isFailX(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var newPoints = flip(points, /[lr]/ig, {
          l: 'r',
          r: 'l'
        });
        // 偏移量也反下
        var newOffset = flipOffset(offset, 0);
        var newTargetOffset = flipOffset(targetOffset, 0);
        var newElFuturePos = es_getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);

        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = newPoints;
          offset = newOffset;
          targetOffset = newTargetOffset;
        }
      }
    }

    if (overflow.adjustY) {
      // 如果纵向不能放下
      if (isFailY(elFuturePos, elRegion, visibleRect)) {
        // 对齐位置反下
        var _newPoints = flip(points, /[tb]/ig, {
          t: 'b',
          b: 't'
        });
        // 偏移量也反下
        var _newOffset = flipOffset(offset, 1);
        var _newTargetOffset = flipOffset(targetOffset, 1);
        var _newElFuturePos = es_getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);

        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = _newPoints;
          offset = _newOffset;
          targetOffset = _newTargetOffset;
        }
      }
    }

    // 如果失败，重新计算当前节点将要被放置的位置
    if (fail) {
      elFuturePos = es_getElFuturePos(elRegion, tgtRegion, points, offset, targetOffset);
      es_utils.mix(newElRegion, elFuturePos);
    }
    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);
    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);
    // 检查反下后的位置是否可以放下了，如果仍然放不下：
    // 1. 复原修改过的定位参数
    if (isStillFailX || isStillFailY) {
      points = align.points;
      offset = align.offset || [0, 0];
      targetOffset = align.targetOffset || [0, 0];
    }
    // 2. 只有指定了可以调整当前方向才调整
    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;
    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY;

    // 确实要调整，甚至可能会调整高度宽度
    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
      newElRegion = es_adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);
    }
  }

  // need judge to in case set fixed with in css on height auto element
  if (newElRegion.width !== elRegion.width) {
    es_utils.css(source, 'width', es_utils.width(source) + newElRegion.width - elRegion.width);
  }

  if (newElRegion.height !== elRegion.height) {
    es_utils.css(source, 'height', es_utils.height(source) + newElRegion.height - elRegion.height);
  }

  // https://github.com/kissyteam/kissy/issues/190
  // 相对于屏幕位置没变，而 left/top 变了
  // 例如 <div 'relative'><el absolute></div>
  es_utils.offset(source, {
    left: newElRegion.left,
    top: newElRegion.top
  }, {
    useCssRight: align.useCssRight,
    useCssBottom: align.useCssBottom,
    useCssTransform: align.useCssTransform,
    ignoreShake: align.ignoreShake
  });

  return {
    points: points,
    offset: offset,
    targetOffset: targetOffset,
    overflow: newOverflowCfg
  };
}

/* harmony default export */ var align_align = (doAlign);
/**
 *  2012-04-26 yiminghe@gmail.com
 *   - 优化智能对齐算法
 *   - 慎用 resizeXX
 *
 *  2011-07-13 yiminghe@gmail.com note:
 *   - 增加智能对齐，以及大小调整选项
 **/
// CONCATENATED MODULE: ./node_modules/dom-align/es/align/alignElement.js





function isOutOfVisibleRect(target) {
  var visibleRect = es_getVisibleRectForElement(target);
  var targetRegion = es_getRegion(target);

  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;
}

function alignElement(el, refNode, align) {
  var target = align.target || refNode;
  var refNodeRegion = es_getRegion(target);

  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target);

  return align_align(el, refNodeRegion, align, isTargetNotOutOfVisible);
}

alignElement.__getOffsetParent = es_getOffsetParent;

alignElement.__getVisibleRectForElement = es_getVisibleRectForElement;

/* harmony default export */ var align_alignElement = (alignElement);
// CONCATENATED MODULE: ./node_modules/dom-align/es/align/alignPoint.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };




/**
 * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.
 * If client position provided, will internal convert to page position.
 */

function alignPoint_alignPoint(el, tgtPoint, align) {
  var pageX = void 0;
  var pageY = void 0;

  var doc = es_utils.getDocument(el);
  var win = doc.defaultView || doc.parentWindow;

  var scrollX = es_utils.getWindowScrollLeft(win);
  var scrollY = es_utils.getWindowScrollTop(win);
  var viewportWidth = es_utils.viewportWidth(win);
  var viewportHeight = es_utils.viewportHeight(win);

  if ('pageX' in tgtPoint) {
    pageX = tgtPoint.pageX;
  } else {
    pageX = scrollX + tgtPoint.clientX;
  }

  if ('pageY' in tgtPoint) {
    pageY = tgtPoint.pageY;
  } else {
    pageY = scrollY + tgtPoint.clientY;
  }

  var tgtRegion = {
    left: pageX,
    top: pageY,
    width: 0,
    height: 0
  };

  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;

  // Provide default target point
  var points = [align.points[0], 'cc'];

  return align_align(el, tgtRegion, _extends({}, align, { points: points }), pointInView);
}

/* harmony default export */ var align_alignPoint = (alignPoint_alignPoint);
// CONCATENATED MODULE: ./node_modules/dom-align/es/index.js





/* harmony default export */ var dom_align_es = (align_alignElement);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-align/util.js

function buffer(fn, ms) {
  var timer = void 0;

  function clear() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }

  function bufferFn() {
    clear();
    timer = setTimeout(fn, ms);
  }

  bufferFn.clear = clear;

  return bufferFn;
}

function isSamePoint(prev, next) {
  if (prev === next) return true;
  if (!prev || !next) return false;

  if ('pageX' in next && 'pageY' in next) {
    return prev.pageX === next.pageX && prev.pageY === next.pageY;
  }

  if ('clientX' in next && 'clientY' in next) {
    return prev.clientX === next.clientX && prev.clientY === next.clientY;
  }

  return false;
}

function util_isWindow(obj) {
  return obj && (typeof obj === 'undefined' ? 'undefined' : typeof_default()(obj)) === 'object' && obj.window === obj;
}
// EXTERNAL MODULE: ./node_modules/lodash/cloneDeep.js
var cloneDeep = __webpack_require__("0644");
var cloneDeep_default = /*#__PURE__*/__webpack_require__.n(cloneDeep);

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-align/Align.js









function getElement(func) {
  if (typeof func !== 'function' || !func) return null;
  return func();
}

function getPoint(point) {
  if ((typeof point === 'undefined' ? 'undefined' : typeof_default()(point)) !== 'object' || !point) return null;
  return point;
}

/* harmony default export */ var Align = ({
  props: {
    childrenProps: vue_types.object,
    align: vue_types.object.isRequired,
    target: vue_types.oneOfType([vue_types.func, vue_types.object]).def(function () {
      return window;
    }),
    monitorBufferTime: vue_types.number.def(50),
    monitorWindowResize: vue_types.bool.def(false),
    disabled: vue_types.bool.def(false)
  },
  data: function data() {
    this.aligned = false;
    return {};
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      _this.prevProps = extends_default()({}, _this.$props);
      var props = _this.$props;
      // if parent ref not attached .... use document.getElementById
      !_this.aligned && _this.forceAlign();
      if (!props.disabled && props.monitorWindowResize) {
        _this.startMonitorWindowResize();
      }
    });
  },
  updated: function updated() {
    var _this2 = this;

    this.$nextTick(function () {
      var prevProps = _this2.prevProps;
      var props = _this2.$props;
      var reAlign = false;
      if (!props.disabled) {
        var source = _this2.$el;
        var sourceRect = source ? source.getBoundingClientRect() : null;

        if (prevProps.disabled) {
          reAlign = true;
        } else {
          var lastElement = getElement(prevProps.target);
          var currentElement = getElement(props.target);
          var lastPoint = getPoint(prevProps.target);
          var currentPoint = getPoint(props.target);
          if (util_isWindow(lastElement) && util_isWindow(currentElement)) {
            // Skip if is window
            reAlign = false;
          } else if (lastElement !== currentElement || // Element change
          lastElement && !currentElement && currentPoint || // Change from element to point
          lastPoint && currentPoint && currentElement || // Change from point to element
          currentPoint && !isSamePoint(lastPoint, currentPoint)) {
            reAlign = true;
          }

          // If source element size changed
          var preRect = _this2.sourceRect || {};
          if (!reAlign && source && (preRect.width !== sourceRect.width || preRect.height !== sourceRect.height)) {
            reAlign = true;
          }
        }
        _this2.sourceRect = sourceRect;
      }

      if (reAlign) {
        _this2.forceAlign();
      }

      if (props.monitorWindowResize && !props.disabled) {
        _this2.startMonitorWindowResize();
      } else {
        _this2.stopMonitorWindowResize();
      }
      _this2.prevProps = extends_default()({}, _this2.$props, { align: cloneDeep_default()(_this2.$props.align) });
    });
  },
  beforeDestroy: function beforeDestroy() {
    this.stopMonitorWindowResize();
  },

  methods: {
    startMonitorWindowResize: function startMonitorWindowResize() {
      if (!this.resizeHandler) {
        this.bufferMonitor = buffer(this.forceAlign, this.$props.monitorBufferTime);
        this.resizeHandler = addEventListenerWrap(window, 'resize', this.bufferMonitor);
      }
    },
    stopMonitorWindowResize: function stopMonitorWindowResize() {
      if (this.resizeHandler) {
        this.bufferMonitor.clear();
        this.resizeHandler.remove();
        this.resizeHandler = null;
      }
    },
    forceAlign: function forceAlign() {
      var _$props = this.$props,
          disabled = _$props.disabled,
          target = _$props.target,
          align = _$props.align;

      if (!disabled && target) {
        var source = this.$el;

        var result = void 0;
        var element = getElement(target);
        var point = getPoint(target);

        if (element) {
          result = align_alignElement(source, element, align);
        } else if (point) {
          result = align_alignPoint(source, point, align);
        }
        this.aligned = true;
        this.$listeners.align && this.$listeners.align(source, result);
      }
    }
  },

  render: function render() {
    var childrenProps = this.$props.childrenProps;

    var child = this.$slots['default'][0];
    if (childrenProps) {
      return cloneElement(child, { props: childrenProps });
    }
    return child;
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-align/index.js
// based on vc-align 2.4.3

/* harmony default export */ var vc_align = (Align);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/LazyRenderBox.js


/* harmony default export */ var LazyRenderBox = ({
  props: {
    visible: vue_types.bool,
    hiddenClassName: vue_types.string
  },
  render: function render() {
    var h = arguments[0];
    var _$props = this.$props,
        hiddenClassName = _$props.hiddenClassName,
        visible = _$props.visible;

    var children = null;
    if (hiddenClassName || !this.$slots['default'] || this.$slots['default'].length > 1) {
      var cls = '';
      if (!visible && hiddenClassName) {
        // cls += ` ${hiddenClassName}`
      }
      children = h(
        'div',
        { 'class': cls },
        [this.$slots['default']]
      );
    } else {
      children = this.$slots['default'][0];
    }
    return children;
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/PopupInner.js




/* harmony default export */ var PopupInner = ({
  props: {
    hiddenClassName: vue_types.string.def(''),
    prefixCls: vue_types.string,
    visible: vue_types.bool
  },
  render: function render() {
    var h = arguments[0];
    var _$props = this.$props,
        prefixCls = _$props.prefixCls,
        visible = _$props.visible,
        hiddenClassName = _$props.hiddenClassName;
    var $listeners = this.$listeners;

    var divProps = {
      on: $listeners
    };

    return h(
      'div',
      babel_helper_vue_jsx_merge_props_default()([divProps, { 'class': !visible ? hiddenClassName : '' }]),
      [h(
        LazyRenderBox,
        { 'class': prefixCls + '-content', attrs: { visible: visible }
        },
        [this.$slots['default']]
      )]
    );
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/css-animation/Event.js
var START_EVENT_NAME_MAP = {
  transitionstart: {
    transition: 'transitionstart',
    WebkitTransition: 'webkitTransitionStart',
    MozTransition: 'mozTransitionStart',
    OTransition: 'oTransitionStart',
    msTransition: 'MSTransitionStart'
  },

  animationstart: {
    animation: 'animationstart',
    WebkitAnimation: 'webkitAnimationStart',
    MozAnimation: 'mozAnimationStart',
    OAnimation: 'oAnimationStart',
    msAnimation: 'MSAnimationStart'
  }
};

var END_EVENT_NAME_MAP = {
  transitionend: {
    transition: 'transitionend',
    WebkitTransition: 'webkitTransitionEnd',
    MozTransition: 'mozTransitionEnd',
    OTransition: 'oTransitionEnd',
    msTransition: 'MSTransitionEnd'
  },

  animationend: {
    animation: 'animationend',
    WebkitAnimation: 'webkitAnimationEnd',
    MozAnimation: 'mozAnimationEnd',
    OAnimation: 'oAnimationEnd',
    msAnimation: 'MSAnimationEnd'
  }
};

var startEvents = [];
var endEvents = [];

function detectEvents() {
  var testEl = document.createElement('div');
  var style = testEl.style;

  if (!('AnimationEvent' in window)) {
    delete START_EVENT_NAME_MAP.animationstart.animation;
    delete END_EVENT_NAME_MAP.animationend.animation;
  }

  if (!('TransitionEvent' in window)) {
    delete START_EVENT_NAME_MAP.transitionstart.transition;
    delete END_EVENT_NAME_MAP.transitionend.transition;
  }

  function process(EVENT_NAME_MAP, events) {
    for (var baseEventName in EVENT_NAME_MAP) {
      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
        var baseEvents = EVENT_NAME_MAP[baseEventName];
        for (var styleName in baseEvents) {
          if (styleName in style) {
            events.push(baseEvents[styleName]);
            break;
          }
        }
      }
    }
  }

  process(START_EVENT_NAME_MAP, startEvents);
  process(END_EVENT_NAME_MAP, endEvents);
}

if (typeof window !== 'undefined' && typeof document !== 'undefined') {
  detectEvents();
}

function Event_addEventListener(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}

function Event_removeEventListener(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}

var TransitionEvents = {
  // Start events
  startEvents: startEvents,

  addStartEventListener: function addStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    startEvents.forEach(function (startEvent) {
      Event_addEventListener(node, startEvent, eventListener);
    });
  },
  removeStartEventListener: function removeStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      return;
    }
    startEvents.forEach(function (startEvent) {
      Event_removeEventListener(node, startEvent, eventListener);
    });
  },


  // End events
  endEvents: endEvents,

  addEndEventListener: function addEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    endEvents.forEach(function (endEvent) {
      Event_addEventListener(node, endEvent, eventListener);
    });
  },
  removeEndEventListener: function removeEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }
    endEvents.forEach(function (endEvent) {
      Event_removeEventListener(node, endEvent, eventListener);
    });
  }
};

/* harmony default export */ var Event = (TransitionEvents);
// EXTERNAL MODULE: ./node_modules/component-classes/index.js
var component_classes = __webpack_require__("3c55");
var component_classes_default = /*#__PURE__*/__webpack_require__.n(component_classes);

// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/css-animation/index.js

// https://github.com/yiminghe/css-animation 1.5.0





var isCssAnimationSupported = Event.endEvents.length !== 0;
var capitalPrefixes = ['Webkit', 'Moz', 'O',
// ms is special .... !
'ms'];
var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];

function getStyleProperty(node, name) {
  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
  var style = window.getComputedStyle(node, null);
  var ret = '';
  for (var i = 0; i < prefixes.length; i++) {
    ret = style.getPropertyValue(prefixes[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
}

function fixBrowserByTimeout(node) {
  if (isCssAnimationSupported) {
    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
    // sometimes, browser bug
    node.rcEndAnimTimeout = setTimeout(function () {
      node.rcEndAnimTimeout = null;
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }, time * 1000 + 200);
  }
}

function clearBrowserBugTimeout(node) {
  if (node.rcEndAnimTimeout) {
    clearTimeout(node.rcEndAnimTimeout);
    node.rcEndAnimTimeout = null;
  }
}

var css_animation_cssAnimation = function cssAnimation(node, transitionName, endCallback) {
  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : typeof_default()(transitionName)) === 'object';
  var className = nameIsObj ? transitionName.name : transitionName;
  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';
  var end = endCallback;
  var start = void 0;
  var active = void 0;
  var nodeClasses = component_classes_default()(node);

  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
    end = endCallback.end;
    start = endCallback.start;
    active = endCallback.active;
  }

  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      requestAnimationTimeout_cancelAnimationTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);

    nodeClasses.remove(className);
    nodeClasses.remove(activeClassName);

    Event.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;

    // Usually this optional end is used for informing an owner of
    // a leave animation and telling it to remove the child.
    if (end) {
      end();
    }
  };

  Event.addEndEventListener(node, node.rcEndListener);

  if (start) {
    start();
  }
  nodeClasses.add(className);

  node.rcAnimTimeout = requestAnimationTimeout(function () {
    node.rcAnimTimeout = null;
    nodeClasses.add(activeClassName);
    if (active) {
      requestAnimationTimeout(active, 0);
    }
    fixBrowserByTimeout(node);
    // 30ms for firefox
  }, 30);

  return {
    stop: function stop() {
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }
  };
};

css_animation_cssAnimation.style = function (node, style, callback) {
  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      requestAnimationTimeout_cancelAnimationTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);

    Event.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;

    // Usually this optional callback is used for informing an owner of
    // a leave animation and telling it to remove the child.
    if (callback) {
      callback();
    }
  };

  Event.addEndEventListener(node, node.rcEndListener);

  node.rcAnimTimeout = requestAnimationTimeout(function () {
    for (var s in style) {
      if (style.hasOwnProperty(s)) {
        node.style[s] = style[s];
      }
    }
    node.rcAnimTimeout = null;
    fixBrowserByTimeout(node);
  }, 0);
};

css_animation_cssAnimation.setTransition = function (node, p, value) {
  var property = p;
  var v = value;
  if (value === undefined) {
    v = property;
    property = '';
  }
  property = property || '';
  capitalPrefixes.forEach(function (prefix) {
    node.style[prefix + 'Transition' + property] = v;
  });
};

css_animation_cssAnimation.isCssAnimationSupported = isCssAnimationSupported;



/* harmony default export */ var css_animation = (css_animation_cssAnimation);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/Popup.js









/* harmony default export */ var Popup = ({
  mixins: [BaseMixin],
  props: {
    visible: vue_types.bool,
    getClassNameFromAlign: vue_types.func,
    getRootDomNode: vue_types.func,
    align: vue_types.any,
    destroyPopupOnHide: vue_types.bool,
    prefixCls: vue_types.string,
    getContainer: vue_types.func,
    transitionName: vue_types.string,
    animation: vue_types.any,
    maskAnimation: vue_types.string,
    maskTransitionName: vue_types.string,
    mask: vue_types.bool,
    zIndex: vue_types.number,
    popupClassName: vue_types.any,
    popupStyle: vue_types.object.def({}),
    stretch: vue_types.string,
    point: vue_types.shape({
      pageX: vue_types.number,
      pageY: vue_types.number
    })
  },
  data: function data() {
    return {
      // Used for stretch
      stretchChecked: false,
      targetWidth: undefined,
      targetHeight: undefined
    };
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      _this.rootNode = _this.getPopupDomNode();
      _this.setStretchSize();
    });
  },
  updated: function updated() {
    var _this2 = this;

    this.$nextTick(function () {
      _this2.setStretchSize();
    });
  },
  beforeDestroy: function beforeDestroy() {
    if (this.$el.parentNode) {
      this.$el.parentNode.removeChild(this.$el);
    } else if (this.$el.remove) {
      this.$el.remove();
    }
  },

  methods: {
    onAlign: function onAlign(popupDomNode, align) {
      var props = this.$props;
      var currentAlignClassName = props.getClassNameFromAlign(align);
      // FIX: https://github.com/react-component/trigger/issues/56
      // FIX: https://github.com/react-component/tooltip/issues/79
      if (this.currentAlignClassName !== currentAlignClassName) {
        this.currentAlignClassName = currentAlignClassName;
        popupDomNode.className = this.getClassName(currentAlignClassName);
      }
      this.$listeners.align && this.$listeners.align(popupDomNode, align);
    },


    // Record size if stretch needed
    setStretchSize: function setStretchSize() {
      var _$props = this.$props,
          stretch = _$props.stretch,
          getRootDomNode = _$props.getRootDomNode,
          visible = _$props.visible;
      var _$data = this.$data,
          stretchChecked = _$data.stretchChecked,
          targetHeight = _$data.targetHeight,
          targetWidth = _$data.targetWidth;


      if (!stretch || !visible) {
        if (stretchChecked) {
          this.setState({ stretchChecked: false });
        }
        return;
      }

      var $ele = getRootDomNode();
      if (!$ele) return;

      var height = $ele.offsetHeight;
      var width = $ele.offsetWidth;

      if (targetHeight !== height || targetWidth !== width || !stretchChecked) {
        this.setState({
          stretchChecked: true,
          targetHeight: height,
          targetWidth: width
        });
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.popupInstance ? this.$refs.popupInstance.$el : null;
    },
    getTargetElement: function getTargetElement() {
      return this.$props.getRootDomNode();
    },


    // `target` on `rc-align` can accept as a function to get the bind element or a point.
    // ref: https://www.npmjs.com/package/rc-align
    getAlignTarget: function getAlignTarget() {
      var point = this.$props.point;

      if (point) {
        return point;
      }
      return this.getTargetElement;
    },
    getMaskTransitionName: function getMaskTransitionName() {
      var props = this.$props;
      var transitionName = props.maskTransitionName;
      var animation = props.maskAnimation;
      if (!transitionName && animation) {
        transitionName = props.prefixCls + '-' + animation;
      }
      return transitionName;
    },
    getTransitionName: function getTransitionName() {
      var props = this.$props;
      var transitionName = props.transitionName;
      var animation = props.animation;
      if (!transitionName) {
        if (typeof animation === 'string') {
          transitionName = '' + animation;
        } else if (animation && animation.props && animation.props.name) {
          transitionName = animation.props.name;
        }
      }
      return transitionName;
    },
    getClassName: function getClassName(currentAlignClassName) {
      return this.$props.prefixCls + ' ' + this.$props.popupClassName + ' ' + currentAlignClassName;
    },
    getPopupElement: function getPopupElement() {
      var _this3 = this;

      var h = this.$createElement;
      var props = this.$props,
          $slots = this.$slots,
          $listeners = this.$listeners,
          getTransitionName = this.getTransitionName;
      var _$data2 = this.$data,
          stretchChecked = _$data2.stretchChecked,
          targetHeight = _$data2.targetHeight,
          targetWidth = _$data2.targetWidth;
      var align = props.align,
          visible = props.visible,
          prefixCls = props.prefixCls,
          animation = props.animation,
          popupStyle = props.popupStyle,
          getClassNameFromAlign = props.getClassNameFromAlign,
          destroyPopupOnHide = props.destroyPopupOnHide,
          stretch = props.stretch;
      // const { mouseenter, mouseleave } = $listeners

      var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align));
      // const hiddenClassName = `${prefixCls}-hidden`
      if (!visible) {
        this.currentAlignClassName = null;
      }
      var sizeStyle = {};
      if (stretch) {
        // Stretch with target
        if (stretch.indexOf('height') !== -1) {
          sizeStyle.height = typeof targetHeight === 'number' ? targetHeight + 'px' : targetHeight;
        } else if (stretch.indexOf('minHeight') !== -1) {
          sizeStyle.minHeight = typeof targetHeight === 'number' ? targetHeight + 'px' : targetHeight;
        }
        if (stretch.indexOf('width') !== -1) {
          sizeStyle.width = typeof targetWidth === 'number' ? targetWidth + 'px' : targetWidth;
        } else if (stretch.indexOf('minWidth') !== -1) {
          sizeStyle.minWidth = typeof targetWidth === 'number' ? targetWidth + 'px' : targetWidth;
        }

        // Delay force align to makes ui smooth
        if (!stretchChecked) {
          // sizeStyle.visibility = 'hidden'
          setTimeout(function () {
            if (_this3.$refs.alignInstance) {
              _this3.$refs.alignInstance.forceAlign();
            }
          }, 0);
        }
      }
      var popupInnerProps = {
        props: {
          prefixCls: prefixCls,
          visible: visible
          // hiddenClassName,
        },
        'class': className,
        on: $listeners,
        ref: 'popupInstance',
        style: extends_default()({}, sizeStyle, popupStyle, this.getZIndexStyle())
      };
      var transitionProps = {
        props: extends_default()({
          appear: true,
          css: false
        })
      };
      var transitionName = getTransitionName();
      var useTransition = !!transitionName;
      var transitionEvent = {
        beforeEnter: function beforeEnter() {
          // el.style.display = el.__vOriginalDisplay
          // this.$refs.alignInstance.forceAlign()
        },
        enter: function enter(el, done) {
          // align updated后执行动画
          _this3.$nextTick(function () {
            if (_this3.$refs.alignInstance) {
              _this3.$refs.alignInstance.$nextTick(function () {
                css_animation(el, transitionName + '-enter', done);
              });
            }
          });
        },
        leave: function leave(el, done) {
          css_animation(el, transitionName + '-leave', done);
        }
      };

      if ((typeof animation === 'undefined' ? 'undefined' : typeof_default()(animation)) === 'object') {
        useTransition = true;

        var _animation$on = animation.on,
            on = _animation$on === undefined ? {} : _animation$on,
            _animation$props = animation.props,
            _props = _animation$props === undefined ? {} : _animation$props;

        transitionProps.props = extends_default()({}, transitionProps.props, _props);
        transitionProps.on = extends_default()({}, transitionEvent, on);
      } else {
        transitionProps.on = transitionEvent;
      }
      if (!useTransition) {
        transitionProps = {};
      }
      if (destroyPopupOnHide) {
        return h(
          'transition',
          transitionProps,
          [visible ? h(
            vc_align,
            {
              attrs: {
                target: this.getAlignTarget(),

                monitorWindowResize: true,
                align: align
              },
              key: 'popup',
              ref: 'alignInstance', on: {
                'align': this.onAlign
              }
            },
            [h(
              PopupInner,
              popupInnerProps,
              [$slots['default']]
            )]
          ) : null]
        );
      }
      return h(
        'transition',
        transitionProps,
        [h(
          vc_align,
          {
            directives: [{
              name: 'show',
              value: visible
            }],
            attrs: {
              target: this.getAlignTarget(),

              monitorWindowResize: true,
              disabled: !visible,
              align: align
            },
            key: 'popup',
            ref: 'alignInstance', on: {
              'align': this.onAlign
            }
          },
          [h(
            PopupInner,
            popupInnerProps,
            [$slots['default']]
          )]
        )]
      );
    },
    getZIndexStyle: function getZIndexStyle() {
      var style = {};
      var props = this.$props;
      if (props.zIndex !== undefined) {
        style.zIndex = props.zIndex;
      }
      return style;
    },
    getMaskElement: function getMaskElement() {
      var h = this.$createElement;

      var props = this.$props;
      var maskElement = null;
      if (props.mask) {
        var maskTransition = this.getMaskTransitionName();
        maskElement = h(LazyRenderBox, {
          directives: [{
            name: 'show',
            value: props.visible
          }],

          style: this.getZIndexStyle(),
          key: 'mask',
          'class': props.prefixCls + '-mask',
          attrs: { visible: props.visible
          }
        });
        if (maskTransition) {
          maskElement = h(
            'transition',
            {
              attrs: { appear: true, name: maskTransition }
            },
            [maskElement]
          );
        }
      }
      return maskElement;
    }
  },

  render: function render() {
    var h = arguments[0];
    var getMaskElement = this.getMaskElement,
        getPopupElement = this.getPopupElement;

    return h('div', [getMaskElement(), getPopupElement()]);
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/utils.js

function isPointsEq(a1, a2, isAlignPoint) {
  if (isAlignPoint) {
    return a1[0] === a2[0];
  }
  return a1[0] === a2[0] && a1[1] === a2[1];
}

function getAlignFromPlacement(builtinPlacements, placementStr, align) {
  var baseAlign = builtinPlacements[placementStr] || {};
  return extends_default()({}, baseAlign, align);
}

function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {
  var points = align.points;
  for (var placement in builtinPlacements) {
    if (builtinPlacements.hasOwnProperty(placement)) {
      if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {
        return prefixCls + '-placement-' + placement;
      }
    }
  }
  return '';
}
function vc_trigger_utils_noop() {}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/Trigger.js















external_Vue_default.a.use(vue_ref_default.a, { name: 'ant-ref' });

function returnEmptyString() {
  return '';
}

function returnDocument() {
  return window.document;
}
var ALL_HANDLERS = ['click', 'mousedown', 'touchstart', 'mouseenter', 'mouseleave', 'focus', 'blur', 'contextmenu'];

/* harmony default export */ var Trigger = ({
  name: 'Trigger',
  mixins: [BaseMixin],
  props: {
    action: vue_types.oneOfType([vue_types.string, vue_types.arrayOf(vue_types.string)]).def([]),
    showAction: vue_types.any.def([]),
    hideAction: vue_types.any.def([]),
    getPopupClassNameFromAlign: vue_types.any.def(returnEmptyString),
    // onPopupVisibleChange: PropTypes.func.def(noop),
    afterPopupVisibleChange: vue_types.func.def(vc_trigger_utils_noop),
    popup: vue_types.any,
    popupStyle: vue_types.object.def({}),
    prefixCls: vue_types.string.def('rc-trigger-popup'),
    popupClassName: vue_types.string.def(''),
    popupPlacement: vue_types.string,
    builtinPlacements: vue_types.object,
    popupTransitionName: vue_types.oneOfType([vue_types.string, vue_types.object]),
    popupAnimation: vue_types.any,
    mouseEnterDelay: vue_types.number.def(0),
    mouseLeaveDelay: vue_types.number.def(0.1),
    zIndex: vue_types.number,
    focusDelay: vue_types.number.def(0),
    blurDelay: vue_types.number.def(0.15),
    getPopupContainer: vue_types.func,
    getDocument: vue_types.func.def(returnDocument),
    forceRender: vue_types.bool,
    destroyPopupOnHide: vue_types.bool.def(false),
    mask: vue_types.bool.def(false),
    maskClosable: vue_types.bool.def(true),
    // onPopupAlign: PropTypes.func.def(noop),
    popupAlign: vue_types.object.def({}),
    popupVisible: vue_types.bool,
    defaultPopupVisible: vue_types.bool.def(false),
    maskTransitionName: vue_types.oneOfType([vue_types.string, vue_types.object]),
    maskAnimation: vue_types.string,
    stretch: vue_types.string,
    alignPoint: vue_types.bool // Maybe we can support user pass position in the future
  },
  provide: function provide() {
    return {
      vcTriggerContext: this
    };
  },

  inject: {
    vcTriggerContext: { 'default': function _default() {
        return {};
      } }
  },
  data: function data() {
    var props = this.$props;
    var popupVisible = void 0;
    if (hasProp(this, 'popupVisible')) {
      popupVisible = !!props.popupVisible;
    } else {
      popupVisible = !!props.defaultPopupVisible;
    }
    return {
      sPopupVisible: popupVisible,
      point: null
    };
  },

  watch: {
    popupVisible: function popupVisible(val) {
      if (val !== undefined) {
        this.sPopupVisible = val;
      }
    },
    sPopupVisible: function sPopupVisible(val) {
      var _this = this;

      this.$nextTick(function () {
        _this.renderComponent(null, function () {
          _this.afterPopupVisibleChange(val);
        });
      });
    }
  },

  beforeCreate: function beforeCreate() {
    var _this2 = this;

    ALL_HANDLERS.forEach(function (h) {
      _this2['fire' + h] = function (e) {
        _this2.fireEvents(h, e);
      };
    });
  },
  mounted: function mounted() {
    var _this3 = this;

    this.$nextTick(function () {
      _this3.renderComponent(null);
      _this3.updatedCal();
    });
  },
  updated: function updated() {
    var _this4 = this;

    this.$nextTick(function () {
      _this4.updatedCal();
    });
  },
  beforeDestroy: function beforeDestroy() {
    this.clearDelayTimer();
    this.clearOutsideHandler();
    clearTimeout(this.mouseDownTimeout);
  },

  methods: {
    updatedCal: function updatedCal() {
      var props = this.$props;
      var state = this.$data;

      // We must listen to `mousedown` or `touchstart`, edge case:
      // https://github.com/ant-design/ant-design/issues/5804
      // https://github.com/react-component/calendar/issues/250
      // https://github.com/react-component/trigger/issues/50
      if (state.sPopupVisible) {
        var currentDocument = void 0;
        if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextmenuToShow())) {
          currentDocument = props.getDocument();
          this.clickOutsideHandler = addEventListenerWrap(currentDocument, 'mousedown', this.onDocumentClick);
        }
        // always hide on mobile
        if (!this.touchOutsideHandler) {
          currentDocument = currentDocument || props.getDocument();
          this.touchOutsideHandler = addEventListenerWrap(currentDocument, 'touchstart', this.onDocumentClick);
        }
        // close popup when trigger type contains 'onContextmenu' and document is scrolling.
        if (!this.contextmenuOutsideHandler1 && this.isContextmenuToShow()) {
          currentDocument = currentDocument || props.getDocument();
          this.contextmenuOutsideHandler1 = addEventListenerWrap(currentDocument, 'scroll', this.onContextmenuClose);
        }
        // close popup when trigger type contains 'onContextmenu' and window is blur.
        if (!this.contextmenuOutsideHandler2 && this.isContextmenuToShow()) {
          this.contextmenuOutsideHandler2 = addEventListenerWrap(window, 'blur', this.onContextmenuClose);
        }
      } else {
        this.clearOutsideHandler();
      }
    },
    onMouseenter: function onMouseenter(e) {
      var mouseEnterDelay = this.$props.mouseEnterDelay;

      this.fireEvents('mouseenter', e);
      this.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);
    },
    onMouseMove: function onMouseMove(e) {
      this.fireEvents('mousemove', e);
      this.setPoint(e);
    },
    onMouseleave: function onMouseleave(e) {
      this.fireEvents('mouseleave', e);
      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onPopupMouseenter: function onPopupMouseenter() {
      this.clearDelayTimer();
    },
    onPopupMouseleave: function onPopupMouseleave(e) {
      if (e && e.relatedTarget && !e.relatedTarget.setTimeout && this._component && this._component.getPopupDomNode && contains(this._component.getPopupDomNode(), e.relatedTarget)) {
        return;
      }
      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onFocus: function onFocus(e) {
      this.fireEvents('focus', e);
      // incase focusin and focusout
      this.clearDelayTimer();
      if (this.isFocusToShow()) {
        this.focusTime = Date.now();
        this.delaySetPopupVisible(true, this.$props.focusDelay);
      }
    },
    onMousedown: function onMousedown(e) {
      this.fireEvents('mousedown', e);
      this.preClickTime = Date.now();
    },
    onTouchstart: function onTouchstart(e) {
      this.fireEvents('touchstart', e);
      this.preTouchTime = Date.now();
    },
    onBlur: function onBlur(e) {
      this.fireEvents('blur', e);
      this.clearDelayTimer();
      if (this.isBlurToHide()) {
        this.delaySetPopupVisible(false, this.$props.blurDelay);
      }
    },
    onContextmenu: function onContextmenu(e) {
      e.preventDefault();
      this.fireEvents('contextmenu', e);
      this.setPopupVisible(true, e);
    },
    onContextmenuClose: function onContextmenuClose() {
      if (this.isContextmenuToShow()) {
        this.close();
      }
    },
    onClick: function onClick(event) {
      this.fireEvents('click', event);
      // focus will trigger click
      if (this.focusTime) {
        var preTime = void 0;
        if (this.preClickTime && this.preTouchTime) {
          preTime = Math.min(this.preClickTime, this.preTouchTime);
        } else if (this.preClickTime) {
          preTime = this.preClickTime;
        } else if (this.preTouchTime) {
          preTime = this.preTouchTime;
        }
        if (Math.abs(preTime - this.focusTime) < 20) {
          return;
        }
        this.focusTime = 0;
      }
      this.preClickTime = 0;
      this.preTouchTime = 0;
      if (event && event.preventDefault) {
        event.preventDefault();
      }
      if (event && event.domEvent) {
        event.domEvent.preventDefault();
      }
      var nextVisible = !this.$data.sPopupVisible;
      if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
        this.setPopupVisible(!this.$data.sPopupVisible, event);
      }
    },
    onPopupMouseDown: function onPopupMouseDown() {
      var _this5 = this;

      var _vcTriggerContext = this.vcTriggerContext,
          vcTriggerContext = _vcTriggerContext === undefined ? {} : _vcTriggerContext;

      this.hasPopupMouseDown = true;

      clearTimeout(this.mouseDownTimeout);
      this.mouseDownTimeout = setTimeout(function () {
        _this5.hasPopupMouseDown = false;
      }, 0);

      if (vcTriggerContext.onPopupMouseDown) {
        vcTriggerContext.onPopupMouseDown.apply(vcTriggerContext, arguments);
      }
    },
    onDocumentClick: function onDocumentClick(event) {
      if (this.$props.mask && !this.$props.maskClosable) {
        return;
      }
      var target = event.target;
      var root = this.$el;
      if (!contains(root, target) && !this.hasPopupMouseDown) {
        this.close();
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      if (this._component && this._component.getPopupDomNode) {
        return this._component.getPopupDomNode();
      }
      return null;
    },
    getRootDomNode: function getRootDomNode() {
      return this.$el;
      // return this.$el.children[0] || this.$el
    },
    handleGetPopupClassFromAlign: function handleGetPopupClassFromAlign(align) {
      var className = [];
      var props = this.$props;
      var popupPlacement = props.popupPlacement,
          builtinPlacements = props.builtinPlacements,
          prefixCls = props.prefixCls,
          alignPoint = props.alignPoint,
          getPopupClassNameFromAlign = props.getPopupClassNameFromAlign;

      if (popupPlacement && builtinPlacements) {
        className.push(getAlignPopupClassName(builtinPlacements, prefixCls, align, alignPoint));
      }
      if (getPopupClassNameFromAlign) {
        className.push(getPopupClassNameFromAlign(align));
      }
      return className.join(' ');
    },
    getPopupAlign: function getPopupAlign() {
      var props = this.$props;
      var popupPlacement = props.popupPlacement,
          popupAlign = props.popupAlign,
          builtinPlacements = props.builtinPlacements;

      if (popupPlacement && builtinPlacements) {
        return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);
      }
      return popupAlign;
    },
    savePopup: function savePopup(node) {
      this._component = node;
    },
    getComponent: function getComponent() {
      var h = this.$createElement;

      var self = this;
      var mouseProps = {};
      if (this.isMouseEnterToShow()) {
        mouseProps.mouseenter = self.onPopupMouseenter;
      }
      if (this.isMouseLeaveToHide()) {
        mouseProps.mouseleave = self.onPopupMouseleave;
      }
      mouseProps.mousedown = this.onPopupMouseDown;
      mouseProps.touchstart = this.onPopupMouseDown;
      var handleGetPopupClassFromAlign = self.handleGetPopupClassFromAlign,
          getRootDomNode = self.getRootDomNode,
          getContainer = self.getContainer,
          $listeners = self.$listeners;
      var _self$$props = self.$props,
          prefixCls = _self$$props.prefixCls,
          destroyPopupOnHide = _self$$props.destroyPopupOnHide,
          popupClassName = _self$$props.popupClassName,
          action = _self$$props.action,
          popupAnimation = _self$$props.popupAnimation,
          popupTransitionName = _self$$props.popupTransitionName,
          popupStyle = _self$$props.popupStyle,
          mask = _self$$props.mask,
          maskAnimation = _self$$props.maskAnimation,
          maskTransitionName = _self$$props.maskTransitionName,
          zIndex = _self$$props.zIndex,
          stretch = _self$$props.stretch,
          alignPoint = _self$$props.alignPoint;
      var _$data = this.$data,
          sPopupVisible = _$data.sPopupVisible,
          point = _$data.point;

      var align = this.getPopupAlign();
      var popupProps = {
        props: {
          prefixCls: prefixCls,
          destroyPopupOnHide: destroyPopupOnHide,
          visible: sPopupVisible,
          point: alignPoint && point,
          action: action,
          align: align,
          animation: popupAnimation,
          getClassNameFromAlign: handleGetPopupClassFromAlign,
          stretch: stretch,
          getRootDomNode: getRootDomNode,
          mask: mask,
          zIndex: zIndex,
          transitionName: popupTransitionName,
          maskAnimation: maskAnimation,
          maskTransitionName: maskTransitionName,
          getContainer: getContainer,
          popupClassName: popupClassName,
          popupStyle: popupStyle
        },
        on: extends_default()({
          align: $listeners.popupAlign || vc_trigger_utils_noop
        }, mouseProps),
        directives: [{
          name: 'ant-ref',
          value: this.savePopup
        }]
      };
      return h(
        Popup,
        popupProps,
        [getComponentFromProp(self, 'popup')]
      );
    },
    getContainer: function getContainer() {
      var props = this.$props;

      var popupContainer = document.createElement('div');
      // Make sure default popup container will never cause scrollbar appearing
      // https://github.com/react-component/trigger/issues/41
      popupContainer.style.position = 'absolute';
      popupContainer.style.top = '0';
      popupContainer.style.left = '0';
      popupContainer.style.width = '100%';
      var mountNode = props.getPopupContainer ? props.getPopupContainer(this.$el) : props.getDocument().body;
      mountNode.appendChild(popupContainer);
      this.popupContainer = popupContainer;
      return popupContainer;
    },
    setPopupVisible: function setPopupVisible(sPopupVisible, event) {
      var alignPoint = this.$props.alignPoint;

      this.clearDelayTimer();
      if (this.$data.sPopupVisible !== sPopupVisible) {
        if (!hasProp(this, 'popupVisible')) {
          this.setState({
            sPopupVisible: sPopupVisible
          });
        }
        this.$listeners.popupVisibleChange && this.$listeners.popupVisibleChange(sPopupVisible);
      }
      // Always record the point position since mouseEnterDelay will delay the show
      if (sPopupVisible && alignPoint && event) {
        this.setPoint(event);
      }
    },
    setPoint: function setPoint(point) {
      var alignPoint = this.$props.alignPoint;

      if (!alignPoint || !point) return;

      this.setState({
        point: {
          pageX: point.pageX,
          pageY: point.pageY
        }
      });
    },
    delaySetPopupVisible: function delaySetPopupVisible(visible, delayS, event) {
      var _this6 = this;

      var delay = delayS * 1000;
      this.clearDelayTimer();
      if (delay) {
        var point = event ? { pageX: event.pageX, pageY: event.pageY } : null;
        this.delayTimer = requestAnimationTimeout(function () {
          _this6.setPopupVisible(visible, point);
          _this6.clearDelayTimer();
        }, delay);
      } else {
        this.setPopupVisible(visible, event);
      }
    },
    clearDelayTimer: function clearDelayTimer() {
      if (this.delayTimer) {
        requestAnimationTimeout_cancelAnimationTimeout(this.delayTimer);
        this.delayTimer = null;
      }
    },
    clearOutsideHandler: function clearOutsideHandler() {
      if (this.clickOutsideHandler) {
        this.clickOutsideHandler.remove();
        this.clickOutsideHandler = null;
      }

      if (this.contextmenuOutsideHandler1) {
        this.contextmenuOutsideHandler1.remove();
        this.contextmenuOutsideHandler1 = null;
      }

      if (this.contextmenuOutsideHandler2) {
        this.contextmenuOutsideHandler2.remove();
        this.contextmenuOutsideHandler2 = null;
      }

      if (this.touchOutsideHandler) {
        this.touchOutsideHandler.remove();
        this.touchOutsideHandler = null;
      }
    },
    createTwoChains: function createTwoChains(event) {
      var fn = function fn() {};
      var events = this.$listeners;
      if (this.childOriginEvents[event] && events[event]) {
        return this['fire' + event];
      }
      fn = this.childOriginEvents[event] || events[event] || fn;
      return fn;
    },
    isClickToShow: function isClickToShow() {
      var _$props = this.$props,
          action = _$props.action,
          showAction = _$props.showAction;

      return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
    },
    isContextmenuToShow: function isContextmenuToShow() {
      var _$props2 = this.$props,
          action = _$props2.action,
          showAction = _$props2.showAction;

      return action.indexOf('contextmenu') !== -1 || showAction.indexOf('contextmenu') !== -1;
    },
    isClickToHide: function isClickToHide() {
      var _$props3 = this.$props,
          action = _$props3.action,
          hideAction = _$props3.hideAction;

      return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
    },
    isMouseEnterToShow: function isMouseEnterToShow() {
      var _$props4 = this.$props,
          action = _$props4.action,
          showAction = _$props4.showAction;

      return action.indexOf('hover') !== -1 || showAction.indexOf('mouseenter') !== -1;
    },
    isMouseLeaveToHide: function isMouseLeaveToHide() {
      var _$props5 = this.$props,
          action = _$props5.action,
          hideAction = _$props5.hideAction;

      return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseleave') !== -1;
    },
    isFocusToShow: function isFocusToShow() {
      var _$props6 = this.$props,
          action = _$props6.action,
          showAction = _$props6.showAction;

      return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
    },
    isBlurToHide: function isBlurToHide() {
      var _$props7 = this.$props,
          action = _$props7.action,
          hideAction = _$props7.hideAction;

      return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
    },
    forcePopupAlign: function forcePopupAlign() {
      if (this.$data.sPopupVisible && this._component && this._component.$refs.alignInstance) {
        this._component.$refs.alignInstance.forceAlign();
      }
    },
    fireEvents: function fireEvents(type, e) {
      if (this.childOriginEvents[type]) {
        this.childOriginEvents[type](e);
      }
      this.__emit(type, e);
    },
    close: function close() {
      this.setPopupVisible(false);
    }
  },
  render: function render() {
    var _this7 = this;

    var h = arguments[0];
    var sPopupVisible = this.sPopupVisible;

    var children = filterEmpty(this.$slots['default']);
    var _$props8 = this.$props,
        forceRender = _$props8.forceRender,
        alignPoint = _$props8.alignPoint;


    if (children.length > 1) {
      warning(false, 'Trigger $slots.default.length > 1, just support only one default', true);
    }
    var child = children[0];
    this.childOriginEvents = getEvents(child);
    var newChildProps = {
      props: {},
      on: {},
      key: 'trigger'
    };

    if (this.isContextmenuToShow()) {
      newChildProps.on.contextmenu = this.onContextmenu;
    } else {
      newChildProps.on.contextmenu = this.createTwoChains('contextmenu');
    }

    if (this.isClickToHide() || this.isClickToShow()) {
      newChildProps.on.click = this.onClick;
      newChildProps.on.mousedown = this.onMousedown;
      newChildProps.on.touchstart = this.onTouchstart;
    } else {
      newChildProps.on.click = this.createTwoChains('click');
      newChildProps.on.mousedown = this.createTwoChains('mousedown');
      newChildProps.on.touchstart = this.createTwoChains('onTouchstart');
    }
    if (this.isMouseEnterToShow()) {
      newChildProps.on.mouseenter = this.onMouseenter;
      if (alignPoint) {
        newChildProps.on.mousemove = this.onMouseMove;
      }
    } else {
      newChildProps.on.mouseenter = this.createTwoChains('mouseenter');
    }
    if (this.isMouseLeaveToHide()) {
      newChildProps.on.mouseleave = this.onMouseleave;
    } else {
      newChildProps.on.mouseleave = this.createTwoChains('mouseleave');
    }

    if (this.isFocusToShow() || this.isBlurToHide()) {
      newChildProps.on.focus = this.onFocus;
      newChildProps.on.blur = this.onBlur;
    } else {
      newChildProps.on.focus = this.createTwoChains('focus');
      newChildProps.on.blur = function (e) {
        if (e && (!e.relatedTarget || !contains(e.target, e.relatedTarget))) {
          _this7.createTwoChains('blur')(e);
        }
      };
    }

    var trigger = cloneElement(child, newChildProps);

    return h(ContainerRender, {
      attrs: {
        parent: this,
        visible: sPopupVisible,
        autoMount: false,
        forceRender: forceRender,
        getComponent: this.getComponent,
        getContainer: this.getContainer,
        children: function children(_ref) {
          var renderComponent = _ref.renderComponent;

          _this7.renderComponent = renderComponent;
          return trigger;
        }
      }
    });
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-trigger/index.js
// based on rc-trigger 2.6.2

/* harmony default export */ var vc_trigger = (Trigger);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/placements.js
var placements_autoAdjustOverflow = {
  adjustX: 1,
  adjustY: 1
};

var placements_targetOffset = [0, 0];

var placements = {
  left: {
    points: ['cr', 'cl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: placements_targetOffset
  },
  right: {
    points: ['cl', 'cr'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: placements_targetOffset
  },
  top: {
    points: ['bc', 'tc'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: placements_targetOffset
  },
  bottom: {
    points: ['tc', 'bc'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: placements_targetOffset
  },
  topLeft: {
    points: ['bl', 'tl'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: placements_targetOffset
  },
  leftTop: {
    points: ['tr', 'tl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: placements_targetOffset
  },
  topRight: {
    points: ['br', 'tr'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, -4],
    targetOffset: placements_targetOffset
  },
  rightTop: {
    points: ['tl', 'tr'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: placements_targetOffset
  },
  bottomRight: {
    points: ['tr', 'br'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: placements_targetOffset
  },
  rightBottom: {
    points: ['bl', 'br'],
    overflow: placements_autoAdjustOverflow,
    offset: [4, 0],
    targetOffset: placements_targetOffset
  },
  bottomLeft: {
    points: ['tl', 'bl'],
    overflow: placements_autoAdjustOverflow,
    offset: [0, 4],
    targetOffset: placements_targetOffset
  },
  leftBottom: {
    points: ['br', 'bl'],
    overflow: placements_autoAdjustOverflow,
    offset: [-4, 0],
    targetOffset: placements_targetOffset
  }
};

/* harmony default export */ var vc_tooltip_placements = (placements);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/Content.js


/* harmony default export */ var Content = ({
  props: {
    prefixCls: vue_types.string,
    overlay: vue_types.any,
    trigger: vue_types.any
  },
  updated: function updated() {
    var trigger = this.trigger;

    if (trigger) {
      trigger.forcePopupAlign();
    }
  },
  render: function render() {
    var h = arguments[0];
    var overlay = this.overlay,
        prefixCls = this.prefixCls;

    return h(
      'div',
      { 'class': prefixCls + '-inner', attrs: { role: 'tooltip' }
      },
      [typeof overlay === 'function' ? overlay() : overlay]
    );
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/Tooltip.js







function Tooltip_noop() {}
/* harmony default export */ var Tooltip = ({
  props: {
    trigger: vue_types.any.def(['hover']),
    defaultVisible: vue_types.bool,
    visible: vue_types.bool,
    placement: vue_types.string.def('right'),
    transitionName: vue_types.oneOfType([vue_types.string, vue_types.object]),
    animation: vue_types.any,
    afterVisibleChange: vue_types.func.def(function () {}),
    overlay: vue_types.any,
    overlayStyle: vue_types.object,
    overlayClassName: vue_types.string,
    prefixCls: vue_types.string.def('rc-tooltip'),
    mouseEnterDelay: vue_types.number.def(0),
    mouseLeaveDelay: vue_types.number.def(0.1),
    getTooltipContainer: vue_types.func,
    destroyTooltipOnHide: vue_types.bool.def(false),
    align: vue_types.object.def({}),
    arrowContent: vue_types.any.def(null),
    tipId: vue_types.string,
    builtinPlacements: vue_types.object
  },
  methods: {
    getPopupElement: function getPopupElement() {
      var h = this.$createElement;
      var _$props = this.$props,
          prefixCls = _$props.prefixCls,
          tipId = _$props.tipId;

      return [h(
        'div',
        { 'class': prefixCls + '-arrow', key: 'arrow' },
        [getComponentFromProp(this, 'arrowContent')]
      ), h(Content, {
        key: 'content',
        attrs: { trigger: this.$refs.trigger,
          prefixCls: prefixCls,
          id: tipId,
          overlay: getComponentFromProp(this, 'overlay')
        }
      })];
    },
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.trigger.getPopupDomNode();
    }
  },
  render: function render(h) {
    var _getOptionProps = props_util_getOptionProps(this),
        overlayClassName = _getOptionProps.overlayClassName,
        trigger = _getOptionProps.trigger,
        mouseEnterDelay = _getOptionProps.mouseEnterDelay,
        mouseLeaveDelay = _getOptionProps.mouseLeaveDelay,
        overlayStyle = _getOptionProps.overlayStyle,
        prefixCls = _getOptionProps.prefixCls,
        afterVisibleChange = _getOptionProps.afterVisibleChange,
        transitionName = _getOptionProps.transitionName,
        animation = _getOptionProps.animation,
        placement = _getOptionProps.placement,
        align = _getOptionProps.align,
        destroyTooltipOnHide = _getOptionProps.destroyTooltipOnHide,
        defaultVisible = _getOptionProps.defaultVisible,
        getTooltipContainer = _getOptionProps.getTooltipContainer,
        restProps = objectWithoutProperties_default()(_getOptionProps, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'afterVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);

    var extraProps = extends_default()({}, restProps);
    if (hasProp(this, 'visible')) {
      extraProps.popupVisible = this.$props.visible;
    }
    var triggerProps = {
      props: extends_default()({
        popupClassName: overlayClassName,
        prefixCls: prefixCls,
        action: trigger,
        builtinPlacements: placements,
        popupPlacement: placement,
        popupAlign: align,
        getPopupContainer: getTooltipContainer,
        afterPopupVisibleChange: afterVisibleChange,
        popupTransitionName: transitionName,
        popupAnimation: animation,
        defaultPopupVisible: defaultVisible,
        destroyPopupOnHide: destroyTooltipOnHide,
        mouseLeaveDelay: mouseLeaveDelay,
        popupStyle: overlayStyle,
        mouseEnterDelay: mouseEnterDelay
      }, extraProps),
      on: extends_default()({}, this.$listeners, {
        popupVisibleChange: this.$listeners.visibleChange || Tooltip_noop,
        popupAlign: this.$listeners.popupAlign || Tooltip_noop
      }),
      ref: 'trigger'
    };
    return h(
      vc_trigger,
      triggerProps,
      [h(
        'template',
        { slot: 'popup' },
        [this.getPopupElement(h)]
      ), this.$slots['default']]
    );
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-tooltip/index.js
// based on rc-tooltip 3.7.3


/* harmony default export */ var vc_tooltip = (Tooltip);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/placements.js



var autoAdjustOverflowEnabled = {
  adjustX: 1,
  adjustY: 1
};

var autoAdjustOverflowDisabled = {
  adjustX: 0,
  adjustY: 0
};

var tooltip_placements_targetOffset = [0, 0];

function getOverflowOptions(autoAdjustOverflow) {
  if (typeof autoAdjustOverflow === 'boolean') {
    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;
  }
  return extends_default()({}, autoAdjustOverflowDisabled, autoAdjustOverflow);
}

function placements_getPlacements(config) {
  var _config$arrowWidth = config.arrowWidth,
      arrowWidth = _config$arrowWidth === undefined ? 5 : _config$arrowWidth,
      _config$horizontalArr = config.horizontalArrowShift,
      horizontalArrowShift = _config$horizontalArr === undefined ? 16 : _config$horizontalArr,
      _config$verticalArrow = config.verticalArrowShift,
      verticalArrowShift = _config$verticalArrow === undefined ? 12 : _config$verticalArrow,
      _config$autoAdjustOve = config.autoAdjustOverflow,
      autoAdjustOverflow = _config$autoAdjustOve === undefined ? true : _config$autoAdjustOve;

  var placementMap = {
    left: {
      points: ['cr', 'cl'],
      offset: [-4, 0]
    },
    right: {
      points: ['cl', 'cr'],
      offset: [4, 0]
    },
    top: {
      points: ['bc', 'tc'],
      offset: [0, -4]
    },
    bottom: {
      points: ['tc', 'bc'],
      offset: [0, 4]
    },
    topLeft: {
      points: ['bl', 'tc'],
      offset: [-(horizontalArrowShift + arrowWidth), -4]
    },
    leftTop: {
      points: ['tr', 'cl'],
      offset: [-4, -(verticalArrowShift + arrowWidth)]
    },
    topRight: {
      points: ['br', 'tc'],
      offset: [horizontalArrowShift + arrowWidth, -4]
    },
    rightTop: {
      points: ['tl', 'cr'],
      offset: [4, -(verticalArrowShift + arrowWidth)]
    },
    bottomRight: {
      points: ['tr', 'bc'],
      offset: [horizontalArrowShift + arrowWidth, 4]
    },
    rightBottom: {
      points: ['bl', 'cr'],
      offset: [4, verticalArrowShift + arrowWidth]
    },
    bottomLeft: {
      points: ['tl', 'bc'],
      offset: [-(horizontalArrowShift + arrowWidth), 4]
    },
    leftBottom: {
      points: ['br', 'cl'],
      offset: [-4, verticalArrowShift + arrowWidth]
    }
  };
  Object.keys(placementMap).forEach(function (key) {
    placementMap[key] = config.arrowPointAtCenter ? extends_default()({}, placementMap[key], {
      overflow: getOverflowOptions(autoAdjustOverflow),
      targetOffset: tooltip_placements_targetOffset
    }) : extends_default()({}, placements[key], {
      overflow: getOverflowOptions(autoAdjustOverflow)
    });
    placementMap[key].ignoreShake = true;
  });
  return placementMap;
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/abstractTooltipProps.js

var triggerType = vue_types.oneOf(['hover', 'focus', 'click', 'contextmenu']);
/* harmony default export */ var abstractTooltipProps = (function () {
  return {
    trigger: vue_types.oneOfType([triggerType, vue_types.arrayOf(triggerType)]).def('hover'),
    visible: vue_types.bool,
    defaultVisible: vue_types.bool,
    placement: vue_types.oneOf(['top', 'left', 'right', 'bottom', 'topLeft', 'topRight', 'bottomLeft', 'bottomRight', 'leftTop', 'leftBottom', 'rightTop', 'rightBottom']).def('top'),
    transitionName: vue_types.string.def('zoom-big-fast'),
    // onVisibleChange: PropTypes.func,
    overlayStyle: vue_types.object.def({}),
    overlayClassName: vue_types.string,
    prefixCls: vue_types.string.def('ant-tooltip'),
    mouseEnterDelay: vue_types.number.def(0.1),
    mouseLeaveDelay: vue_types.number.def(0.1),
    getPopupContainer: vue_types.func,
    arrowPointAtCenter: vue_types.bool.def(false),
    autoAdjustOverflow: vue_types.oneOfType([vue_types.bool, vue_types.object]).def(true),
    destroyTooltipOnHide: vue_types.bool.def(false),
    align: vue_types.object.def({})
  };
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/Tooltip.js









var Tooltip_splitObject = function splitObject(obj, keys) {
  var picked = {};
  var omitted = extends_default()({}, obj);
  keys.forEach(function (key) {
    if (obj && key in obj) {
      picked[key] = obj[key];
      delete omitted[key];
    }
  });
  return { picked: picked, omitted: omitted };
};
var Tooltip_props = abstractTooltipProps();
/* harmony default export */ var tooltip_Tooltip = ({
  name: 'ATooltip',
  model: {
    prop: 'visible',
    event: 'visibleChange'
  },
  props: extends_default()({}, Tooltip_props, {
    title: vue_types.any
  }),
  inject: {
    configProvider: { 'default': function _default() {
        return {};
      } }
  },
  data: function data() {
    return {
      sVisible: !!this.$props.visible
    };
  },

  watch: {
    visible: function visible(val) {
      this.sVisible = val;
    }
  },
  methods: {
    onVisibleChange: function onVisibleChange(visible) {
      if (!hasProp(this, 'visible')) {
        this.sVisible = this.isNoTitle() ? false : visible;
      }
      if (!this.isNoTitle()) {
        this.$emit('visibleChange', visible);
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.tooltip.getPopupDomNode();
    },
    getPlacements: function getPlacements() {
      var _$props = this.$props,
          builtinPlacements = _$props.builtinPlacements,
          arrowPointAtCenter = _$props.arrowPointAtCenter,
          autoAdjustOverflow = _$props.autoAdjustOverflow;

      return builtinPlacements || placements_getPlacements({
        arrowPointAtCenter: arrowPointAtCenter,
        verticalArrowShift: 8,
        autoAdjustOverflow: autoAdjustOverflow
      });
    },


    // Fix Tooltip won't hide at disabled button
    // mouse events don't trigger at disabled button in Chrome
    // https://github.com/react-component/tooltip/issues/18
    getDisabledCompatibleChildren: function getDisabledCompatibleChildren(ele) {
      var h = this.$createElement;

      var isAntBtn = ele.componentOptions && ele.componentOptions.Ctor.options.__ANT_BUTTON;
      if (isAntBtn && (ele.componentOptions.propsData.disabled || ele.componentOptions.propsData.disabled === '') || ele.tag === 'button' && ele.data && ele.data.attrs.disabled !== false) {
        // Pick some layout related style properties up to span
        // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254
        var _splitObject = Tooltip_splitObject(getStyle(ele), ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),
            picked = _splitObject.picked,
            omitted = _splitObject.omitted;

        var spanStyle = extends_default()({
          display: 'inline-block' }, picked, {
          cursor: 'not-allowed',
          width: isAntBtn && ele.componentOptions.propsData.block ? '100%' : null
        });
        var buttonStyle = extends_default()({}, omitted, {
          pointerEvents: 'none'
        });
        var spanCls = getClass(ele);
        var child = cloneElement(ele, {
          style: buttonStyle,
          'class': null
        });
        return h(
          'span',
          { style: spanStyle, 'class': spanCls },
          [child]
        );
      }
      return ele;
    },
    isNoTitle: function isNoTitle() {
      var $slots = this.$slots,
          title = this.title;

      return !$slots.title && !title;
    },


    // 动态设置动画点
    onPopupAlign: function onPopupAlign(domNode, align) {
      var placements = this.getPlacements();
      // 当前返回的位置
      var placement = Object.keys(placements).filter(function (key) {
        return placements[key].points[0] === align.points[0] && placements[key].points[1] === align.points[1];
      })[0];
      if (!placement) {
        return;
      }
      // 根据当前坐标设置动画点
      var rect = domNode.getBoundingClientRect();
      var transformOrigin = {
        top: '50%',
        left: '50%'
      };
      if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {
        transformOrigin.top = rect.height - align.offset[1] + 'px';
      } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {
        transformOrigin.top = -align.offset[1] + 'px';
      }
      if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {
        transformOrigin.left = rect.width - align.offset[0] + 'px';
      } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {
        transformOrigin.left = -align.offset[0] + 'px';
      }
      domNode.style.transformOrigin = transformOrigin.left + ' ' + transformOrigin.top;
    }
  },

  render: function render() {
    var h = arguments[0];
    var $props = this.$props,
        $data = this.$data,
        $slots = this.$slots,
        $listeners = this.$listeners;
    var prefixCls = $props.prefixCls,
        openClassName = $props.openClassName,
        getPopupContainer = $props.getPopupContainer;
    var getContextPopupContainer = this.configProvider.getPopupContainer;

    var children = ($slots['default'] || []).filter(function (c) {
      return c.tag || c.text.trim() !== '';
    });
    children = children.length === 1 ? children[0] : children;
    var sVisible = $data.sVisible;
    // Hide tooltip when there is no title
    if (!hasProp(this, 'visible') && this.isNoTitle()) {
      sVisible = false;
    }
    if (!children) {
      return null;
    }
    var child = this.getDisabledCompatibleChildren(isValidElement(children) ? children : h('span', [children]));
    var childCls = defineProperty_default()({}, openClassName || prefixCls + '-open', true);
    var tooltipProps = {
      props: extends_default()({}, $props, {
        getTooltipContainer: getPopupContainer || getContextPopupContainer,
        builtinPlacements: this.getPlacements(),
        visible: sVisible
      }),
      ref: 'tooltip',
      on: extends_default()({}, $listeners, {
        visibleChange: this.onVisibleChange,
        popupAlign: this.onPopupAlign
      })
    };
    return h(
      vc_tooltip,
      tooltipProps,
      [h(
        'template',
        { slot: 'overlay' },
        [getComponentFromProp(this, 'title')]
      ), sVisible ? cloneElement(child, { 'class': childCls }) : child]
    );
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/tooltip/index.js


/* istanbul ignore next */
tooltip_Tooltip.install = function (Vue) {
  Vue.component(tooltip_Tooltip.name, tooltip_Tooltip);
};

/* harmony default export */ var es_tooltip = (tooltip_Tooltip);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/popover/index.js






var popover_props = abstractTooltipProps();
var Popover = {
  name: 'APopover',
  props: extends_default()({}, popover_props, {
    prefixCls: vue_types.string.def('ant-popover'),
    transitionName: vue_types.string.def('zoom-big'),
    content: vue_types.any,
    title: vue_types.any
  }),
  model: {
    prop: 'visible',
    event: 'visibleChange'
  },
  methods: {
    getPopupDomNode: function getPopupDomNode() {
      return this.$refs.tooltip.getPopupDomNode();
    }
  },

  render: function render() {
    var h = arguments[0];
    var title = this.title,
        prefixCls = this.prefixCls,
        $slots = this.$slots;

    var props = props_util_getOptionProps(this);
    delete props.title;
    delete props.content;
    var tooltipProps = {
      props: extends_default()({}, props),
      ref: 'tooltip',
      on: this.$listeners
    };
    return h(
      es_tooltip,
      tooltipProps,
      [h(
        'template',
        { slot: 'title' },
        [h('div', [(title || $slots.title) && h(
          'div',
          { 'class': prefixCls + '-title' },
          [getComponentFromProp(this, 'title')]
        ), h(
          'div',
          { 'class': prefixCls + '-inner-content' },
          [getComponentFromProp(this, 'content')]
        )])]
      ), this.$slots['default']]
    );
  }
};

/* istanbul ignore next */
Popover.install = function (Vue) {
  Vue.component(Popover.name, Popover);
};

/* harmony default export */ var popover = (Popover);
// CONCATENATED MODULE: ./src/packages/popover/src/index.tsx
















function recursiveCloneChildren(children) {
  var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (ch, _) {
    return ch;
  };
  return children.map(function (child, index) {
    var newChild = cb(child, index);

    if (typeof newChild !== 'string' && typeof newChild !== 'number' && newChild && newChild.children) {
      return vnode_cloneElement(newChild, {}, recursiveCloneChildren(newChild.children, cb));
    }

    return newChild;
  });
}

var src_MPopover =
/*#__PURE__*/
function (_Vue) {
  _inherits(MPopover, _Vue);

  function MPopover() {
    var _this;

    _classCallCheck(this, MPopover);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MPopover).apply(this, arguments));
    _this.currentValue = _this.value;
    return _this;
  }

  _createClass(MPopover, [{
    key: "valueChanged",
    value: function valueChanged(value) {
      this.currentValue = value;
    }
  }, {
    key: "currentValueChanged",
    value: function currentValueChanged(currentValue) {
      this.$emit('input', currentValue);
      this.$emit('change', currentValue);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];
      var maskClass = classnames_default()(this.prefixCls + '-mask', _defineProperty({}, this.prefixCls + '-mask-hidden', !this.currentValue)); // @ts-ignore

      return h(popover, helper_default()([{}, {
        "attrs": this.$attrs
      }, {
        "attrs": {
          "prefixCls": this.prefixCls,
          "trigger": "click"
        }
      }, {
        "on": this.$listeners
      }, {
        "scopedSlots": this.$scopedSlots,
        "attrs": {
          "slots": this.$slots
        },
        "model": {
          value: _this2.currentValue,
          callback: function callback($$v) {
            _this2.currentValue = $$v;
          }
        }
      }]), [this.$slots.default, this.mask ? h("div", {
        "on": {
          "click": function click(e) {
            if (!_this2.maskClosable) {
              e.stopPropagation();
              e.preventDefault();
            }
          }
        },
        "class": maskClass
      }) : null]);
    }
  }]);

  return MPopover;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_MPopover.prototype, "value", void 0);

__decorate([Prop({
  type: String,
  default: 'am-popover'
})], src_MPopover.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_MPopover.prototype, "mask", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_MPopover.prototype, "maskClosable", void 0);

__decorate([Watch('value')], src_MPopover.prototype, "valueChanged", null);

__decorate([Watch('currentValue')], src_MPopover.prototype, "currentValueChanged", null);

src_MPopover = __decorate([vue_class_component_common_default()({
  name: 'MPopover'
})], src_MPopover);
/* harmony default export */ var popover_src = (src_MPopover);
// CONCATENATED MODULE: ./src/packages/popover/src/item.tsx














var src_item_Item =
/*#__PURE__*/
function (_Vue) {
  _inherits(Item, _Vue);

  function Item() {
    _classCallCheck(this, Item);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Item).apply(this, arguments));
  }

  _createClass(Item, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          icon = _a.icon,
          disabled = _a.disabled,
          firstItem = _a.firstItem,
          activeStyle = _a.activeStyle,
          restProps = __rest(_a, ["prefixCls", "icon", "disabled", "firstItem", "activeStyle"]);

      var cls = classnames_default()("".concat(prefixCls, "-item"), _defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled));
      var activeClass = "".concat(prefixCls, "-item-active");

      if (firstItem) {
        activeClass += "".concat(prefixCls, "-item-fix-active-arrow");
      }

      return h(feedback, {
        "attrs": {
          "disabled": disabled,
          "activeClassName": activeClass,
          "activeStyle": activeStyle
        }
      }, [h("div", helper_default()([{
        "class": cls
      }, restProps, {
        "on": {
          "click": function click(e) {
            if (!_this.disabled) {
              _this.$emit('click', e);
            }
          }
        }
      }]), [h("div", {
        "class": "".concat(prefixCls, "-item-container")
      }, [icon ? // tslint:disable-next-line:jsx-no-multiline-js
      h("span", {
        "class": "".concat(prefixCls, "-item-icon"),
        "attrs": {
          "aria-hidden": "true"
        }
      }, [icon]) : null, h("span", {
        "class": "".concat(prefixCls, "-item-content")
      }, [this.$slots.default])])])]);
    }
  }]);

  return Item;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-popover'
})], src_item_Item.prototype, "prefixCls", void 0);

__decorate([Prop()], src_item_Item.prototype, "icon", void 0);

__decorate([Prop({
  type: Boolean
})], src_item_Item.prototype, "disabled", void 0);

__decorate([Prop({
  type: String
})], src_item_Item.prototype, "firstItem", void 0);

__decorate([Prop()], src_item_Item.prototype, "activeStyle", void 0);

src_item_Item = __decorate([vue_class_component_common_default()({
  name: 'PopoverItem'
})], src_item_Item);
/* harmony default export */ var popover_src_item = (src_item_Item);
// EXTERNAL MODULE: ./src/packages/popover/style/index.less
var packages_popover_style = __webpack_require__("87d7");

// CONCATENATED MODULE: ./src/packages/popover/style/index.tsx


// CONCATENATED MODULE: ./src/packages/popover/index.ts



popover_src.Item = popover_src_item;

popover_src.install = function (Vue) {
  Vue.component('MPopover', popover_src);
  Vue.component('MPopoverItem', popover_src.Item);
};

/* harmony default export */ var packages_popover = (popover_src);
// CONCATENATED MODULE: ./src/packages/progress/src/index.tsx














var src_Progress =
/*#__PURE__*/
function (_Vue) {
  _inherits(Progress, _Vue);

  function Progress() {
    var _this;

    _classCallCheck(this, Progress);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Progress).apply(this, arguments));
    _this.noAppearTransition = true;
    return _this;
  }

  _createClass(Progress, [{
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      if (this.appearTransition) {
        setTimeout(function () {
          if (_this2.barRef) {
            _this2.barRef.style.width = "".concat(_this2.percent, "%");
          }
        }, 10);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames,
          _this3 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          position = this.position,
          unfilled = this.unfilled,
          _this$barStyle = this.barStyle,
          barStyle = _this$barStyle === void 0 ? {} : _this$barStyle;
      var percentStyle = {
        width: this.noAppearTransition || !this.appearTransition ? "".concat(this.percent, "%") : 0,
        height: 0
      };
      var wrapCls = classnames_default()("".concat(prefixCls, "-outer"), (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-fixed-outer"), position === 'fixed'), _defineProperty(_classnames, "".concat(prefixCls, "-hide-outer"), !unfilled), _classnames));
      return h("div", {
        "class": wrapCls,
        "attrs": {
          "role": "progressbar",
          "aria-valuenow": this.percent,
          "aria-valuemin": 0,
          "aria-valuemax": 100
        }
      }, [h("div", {
        "ref": function ref(el) {
          return _this3.barRef = el;
        },
        "class": "".concat(prefixCls, "-bar"),
        "style": assign_default()({}, barStyle, percentStyle)
      })]);
    }
  }]);

  return Progress;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-progress'
})], src_Progress.prototype, "prefixCls", void 0);

__decorate([Prop({})], src_Progress.prototype, "barStyle", void 0);

__decorate([Prop({
  type: Number,
  default: 0
})], src_Progress.prototype, "percent", void 0);

__decorate([Prop({
  default: 'fixed'
})], src_Progress.prototype, "position", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_Progress.prototype, "unfilled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Progress.prototype, "appearTransition", void 0);

src_Progress = __decorate([vue_class_component_common_default()({
  name: 'Progress'
})], src_Progress);
/* harmony default export */ var progress_src = (src_Progress);
// EXTERNAL MODULE: ./src/packages/progress/style/index.css
var progress_style = __webpack_require__("e170");

// CONCATENATED MODULE: ./src/packages/progress/style/index.ts

// CONCATENATED MODULE: ./src/packages/progress/index.ts



progress_src.install = function (Vue) {
  Vue.component('MProgress', progress_src);
};

/* harmony default export */ var progress = (progress_src);
// CONCATENATED MODULE: ./src/packages/pull-refresh/src/util.ts
/**
 * 这个文件来自vant
 *
 * @author wuhao
 * @since 2019/04/21
 */
// get nearest scroll element
// http://w3help.org/zh-cn/causes/SD9013
// http://stackoverflow.com/questions/17016740/onscroll-function-is-not-working-for-chrome
function getScrollEventTarget(element) {
  var rootParent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
  var node = element;

  while (node && node.tagName !== 'HTML' && node.tagName !== 'BODY' && node.nodeType === 1 && node !== rootParent) {
    var _window$getComputedSt = window.getComputedStyle(node),
        overflowY = _window$getComputedSt.overflowY;

    if (overflowY === 'scroll' || overflowY === 'auto') {
      return node;
    }

    node = node.parentNode;
  }

  return rootParent;
}
function util_getScrollTop(element) {
  return 'scrollTop' in element ? element.scrollTop : element.pageYOffset;
}
function setScrollTop(element, value) {
  'scrollTop' in element ? element.scrollTop = value : element.scrollTo(element.scrollX, value);
} // get distance from element top to page top

function getElementTop(element) {
  return (element === window ? 0 : element.getBoundingClientRect().top) + util_getScrollTop(window);
}
function getVisibleHeight(element) {
  return element === window ? element.innerHeight : element.getBoundingClientRect().height;
}
// CONCATENATED MODULE: ./src/packages/pull-refresh/src/index.tsx


















function src_setTransform(nodeStyle, value) {
  nodeStyle.transform = value;
  nodeStyle.webkitTransform = value;
  nodeStyle.MozTransform = value;
}

var isWebView = typeof navigator !== 'undefined' && /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);
var DOWN = 'down';
var UP = 'up';
var INDICATOR = {
  activate: 'release',
  deactivate: 'pull',
  release: 'loading',
  finish: 'finish'
};
var supportsPassive = false;

try {
  var opts = define_property_default()({}, 'passive', {
    get: function get() {
      supportsPassive = true;
    }
  });

  window.addEventListener('test', null, opts);
} catch (e) {// empty
}

var src_willPreventDefault = supportsPassive ? {
  passive: false
} : false;

var src_PullToRefresh =
/*#__PURE__*/
function (_Vue) {
  _inherits(PullToRefresh, _Vue);

  function PullToRefresh() {
    var _this;

    _classCallCheck(this, PullToRefresh);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(PullToRefresh).apply(this, arguments)); // https://github.com/yiminghe/zscroller/blob/2d97973287135745818a0537712235a39a6a62a1/src/Scroller.js#L355
    // currSt: `activate` / `deactivate` / `release` / `finish`

    _this.currSt = 'deactivate';
    _this.dragOnEdge = false;
    _this._isMounted = false;
    return _this;
  }

  _createClass(PullToRefresh, [{
    key: "updated",
    value: function updated() {
      if (!this.value) {
        // triggerPullToRefresh 需要尽可能减少 setState 次数
        this.triggerPullToRefresh();
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      this.scrollEl = getScrollEventTarget(this.$el); // `getScrollContainer` most likely return React.Node at the next tick. Need setTimeout

      setTimeout(function () {
        _this2.init(_this2.getScrollContainer() || _this2.containerRef);

        _this2.triggerPullToRefresh();

        _this2._isMounted = true;
      });
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      // Should have no setTimeout here!
      this.destroy(this.getScrollContainer() || this.containerRef);
    }
  }, {
    key: "triggerPullToRefresh",
    value: function triggerPullToRefresh() {
      // 在初始化时、用代码 自动 触发 pullToRefresh
      // 注意：当 direction 为 up 时，当 visible length < content length 时、则看不到效果
      // 添加this._isMounted的判断，否则组建一实例化，currSt就会是finish
      if (!this.dragOnEdge && this._isMounted) {
        if (this.value) {
          if (this.direction === UP) {
            this._lastScreenY = -this.distanceToRefresh - 1;
          }

          if (this.direction === DOWN) {
            this._lastScreenY = this.distanceToRefresh + 1;
          } // change dom need after setState


          this.currSt = 'release';
          this.setContentStyle(this._lastScreenY);
        } else {
          this.currSt = 'finish';
          this.reset();
        }
      }
    }
  }, {
    key: "init",
    value: function init(ele) {
      var _this3 = this;

      if (!ele) {
        // like return in destroy fn ???!!
        return;
      }

      this._to = {
        touchstart: this.onTouchStart.bind(this).bind(this, ele),
        touchmove: this.onTouchMove.bind(this).bind(this, ele),
        touchend: this.onTouchEnd.bind(this).bind(this, ele),
        touchcancel: this.onTouchEnd.bind(this).bind(this, ele)
      };

      keys_default()(this._to).forEach(function (key) {
        ele.addEventListener(key, _this3._to[key], src_willPreventDefault);
      });
    }
  }, {
    key: "destroy",
    value: function destroy(ele) {
      var _this4 = this;

      if (!this._to || !ele) {
        // componentWillUnmount fire before componentDidMount, like forceUpdate ???!!
        return;
      }

      keys_default()(this._to).forEach(function (key) {
        ele.removeEventListener(key, _this4._to[key]);
      });
    }
  }, {
    key: "onTouchStart",
    value: function onTouchStart(_ele, e) {
      this._ScreenY = this._startScreenY = e.touches[0].screenY; // 一开始 value 为 true 时 this._lastScreenY 有值

      this._lastScreenY = this._lastScreenY || 0;
    }
  }, {
    key: "isEdge",
    value: function isEdge() {
      var direction = this.direction;
      var container = this.getScrollContainer() || this.containerRef;

      if (container && container === document.body) {
        // In chrome61 `document.body.scrollTop` is invalid
        var scrollNode = document.scrollingElement ? document.scrollingElement : document.body;

        if (direction === UP) {
          return scrollNode.scrollHeight - scrollNode.scrollTop <= window.innerHeight;
        }

        if (direction === DOWN) {
          return scrollNode.scrollTop <= 0;
        }
      }

      var scrollTop = util_getScrollTop(this.scrollEl);

      if (direction === UP) {
        return this.scrollEl.scrollHeight - scrollTop === this.scrollEl.clientHeight;
      }

      if (direction === DOWN) {
        return scrollTop <= 0;
      }

      return undefined;
    }
  }, {
    key: "dampingFunc",
    value: function dampingFunc(dy) {
      if (Math.abs(this._lastScreenY) > this.damping) {
        return 0;
      }

      var ratio = Math.abs(this._ScreenY - this._startScreenY) / window.screen.height;
      return dy * (1 - ratio) * 0.6;
    }
  }, {
    key: "onTouchMove",
    value: function onTouchMove(ele, e) {
      // 使用 pageY 对比有问题
      var _screenY = e.touches[0].screenY; // 拖动方向不符合的不处理

      if (this.direction === UP && this._startScreenY < _screenY || this.direction === DOWN && this._startScreenY > _screenY) {
        return;
      }

      if (this.isEdge()) {
        if (!this.dragOnEdge) {
          // 当用户开始往上滑的时候isEdge还是false的话，会导致this._ScreenY不是想要的，只有当isEdge为true时，再上滑，才有意义
          // 下面这行代码解决了上面这个问题
          this._ScreenY = this._startScreenY = e.touches[0].screenY;
          this.dragOnEdge = true;
        }

        e.preventDefault(); // add stopPropagation with fastclick will trigger content onClick event. why?
        // ref https://github.com/ant-design/ant-design-mobile/issues/2141
        // e.stopPropagation();

        var _diff = Math.round(_screenY - this._ScreenY);

        this._ScreenY = _screenY;
        this._lastScreenY += this.dampingFunc(_diff);
        this.setContentStyle(this._lastScreenY);

        if (Math.abs(this._lastScreenY) < this.distanceToRefresh) {
          if (this.currSt !== 'deactivate') {
            this.currSt = 'deactivate';
          }
        } else {
          if (this.currSt === 'deactivate') {
            this.currSt = 'activate';
          }
        } // https://github.com/ant-design/ant-design-mobile/issues/573#issuecomment-339560829
        // iOS UIWebView issue, It seems no problem in WKWebView


        if (isWebView && e.changedTouches[0].clientY < 0) {
          this.onTouchEnd();
        }
      }
    }
  }, {
    key: "onTouchEnd",
    value: function onTouchEnd() {
      var _this5 = this;

      if (this.dragOnEdge) {
        this.dragOnEdge = false;
      }

      if (this.currSt === 'activate') {
        this.currSt = 'release';
        this._timer = setTimeout(function () {
          if (!_this5.value) {
            _this5.currSt = 'finish';

            _this5.reset();
          }

          _this5._timer = undefined;
        }, 1000);
        this.setContentStyle(this.indicatorHeight);
        this.$emit('refresh');
        this.$emit('input', true);
      } else {
        this.reset();
      }
    }
  }, {
    key: "reset",
    value: function reset() {
      this._lastScreenY = 0;
      this.setContentStyle(0);
    }
  }, {
    key: "setContentStyle",
    value: function setContentStyle(ty) {
      // todos: Why sometimes do not have `this.contentRef` ?
      if (this.contentRef) {
        src_setTransform(this.contentRef.style, "translate3d(0px,".concat(ty, "px,0)"));
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this6 = this;

      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          getScrollContainer = _a.getScrollContainer,
          direction = _a.direction,
          value = _a.value,
          indicator = _a.indicator,
          distanceToRefresh = _a.distanceToRefresh,
          restProps = __rest(_a, ["prefixCls", "getScrollContainer", "direction", "value", "indicator", "distanceToRefresh"]);

      var renderChildren = h("div", [this.$slots.default]);

      var renderRefresh = function renderRefresh(cls) {
        var cla = classnames_default()(cls, !_this6.dragOnEdge && "".concat(prefixCls, "-transition"));
        return h("div", {
          "class": "".concat(prefixCls, "-content-wrapper")
        }, [h("div", {
          "class": cla,
          "ref": 'content'
        }, [direction === UP ? renderChildren : null, h("div", {
          "class": "".concat(prefixCls, "-indicator")
        }, [indicator[_this6.currSt] || INDICATOR[_this6.currSt]]), direction === DOWN ? renderChildren : null])]);
      };

      if (getScrollContainer()) {
        return renderRefresh("".concat(prefixCls, "-content ").concat(prefixCls, "-").concat(direction));
      }

      return h("div", helper_default()([{
        "ref": 'container',
        "class": classnames_default()(this.className, prefixCls, "".concat(prefixCls, "-").concat(direction))
      }, restProps]), [renderRefresh("".concat(prefixCls, "-content"))]);
    }
  }, {
    key: "containerRef",
    get: function get() {
      return this.$refs['container'];
    }
  }, {
    key: "contentRef",
    get: function get() {
      return this.$refs['content'];
    }
  }, {
    key: "indicator",
    get: function get() {
      var h = this.$createElement;
      return {
        activate: this.activateText,
        deactivate: this.deactivateText,
        release: h(packages_icon, {
          "attrs": {
            "type": 'loading'
          }
        }),
        finish: this.finishText
      };
    }
  }]);

  return PullToRefresh;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: '松开刷新'
})], src_PullToRefresh.prototype, "activateText", void 0);

__decorate([Prop({
  type: String,
  default: '取消刷新'
})], src_PullToRefresh.prototype, "deactivateText", void 0);

__decorate([Prop({
  type: String,
  default: '刷新完成'
})], src_PullToRefresh.prototype, "finishText", void 0);

__decorate([Prop({
  default: function _default() {
    return function () {
      return undefined;
    };
  }
})], src_PullToRefresh.prototype, "getScrollContainer", void 0);

__decorate([Prop({
  type: String,
  default: DOWN
})], src_PullToRefresh.prototype, "direction", void 0);

__decorate([Prop()], src_PullToRefresh.prototype, "value", void 0);

__decorate([Prop({
  type: Number,
  default: 35
})], src_PullToRefresh.prototype, "distanceToRefresh", void 0);

__decorate([Prop({
  type: String,
  default: 'am-pull-to-refresh'
})], src_PullToRefresh.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Number,
  default: 80
})], src_PullToRefresh.prototype, "damping", void 0);

__decorate([Prop({
  type: Number,
  default: 40
})], src_PullToRefresh.prototype, "indicatorHeight", void 0);

__decorate([Prop()], src_PullToRefresh.prototype, "className", void 0);

src_PullToRefresh = __decorate([vue_class_component_common_default()({
  name: 'PullToRefresh'
})], src_PullToRefresh);
/* harmony default export */ var pull_refresh_src = (src_PullToRefresh);
// EXTERNAL MODULE: ./src/packages/pull-refresh/style/index.less
var pull_refresh_style = __webpack_require__("0fc5");

// CONCATENATED MODULE: ./src/packages/pull-refresh/style/index.tsx


// CONCATENATED MODULE: ./src/packages/pull-refresh/index.ts


var pull_refresh_Plugin = pull_refresh_src;

pull_refresh_Plugin.install = function (Vue) {
  Vue.component('MPullRefresh', pull_refresh_src);
};

/* harmony default export */ var pull_refresh = (pull_refresh_Plugin);
// EXTERNAL MODULE: ./node_modules/ant-design-vue/lib/vc-slider/src/Range.js
var src_Range = __webpack_require__("d22a");
var Range_default = /*#__PURE__*/__webpack_require__.n(src_Range);

// CONCATENATED MODULE: ./src/packages/range/src/index.tsx













var range_src_Range =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(Range, _FormComponent);

  function Range() {
    _classCallCheck(this, Range);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Range).apply(this, arguments));
  }

  _createClass(Range, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      return h("div", {
        "class": "".concat(this.prefixCls, "-wrapper")
      }, [h(Range_default.a, helper_default()([{}, {
        "props": this.$props
      }, {
        "attrs": {
          "value": this.currentValue
        }
      }, {
        "on": {
          change: function change(v) {
            _this.currentValue = v;
          }
        }
      }]))]);
    }
  }]);

  return Range;
}(form_component_FormComponent);

__decorate([Prop({
  type: String,
  default: 'am-slider'
})], range_src_Range.prototype, "prefixCls", void 0);

__decorate([Prop({})], range_src_Range.prototype, "handleStyle", void 0);

__decorate([Prop({})], range_src_Range.prototype, "trackStyle", void 0);

__decorate([Prop({})], range_src_Range.prototype, "railStyle", void 0);

__decorate([Prop({})], range_src_Range.prototype, "onChange", void 0);

__decorate([Prop({})], range_src_Range.prototype, "onAfterChange", void 0);

__decorate([Prop({})], range_src_Range.prototype, "tipFormatter", void 0);

__decorate([Prop({
  type: Number
})], range_src_Range.prototype, "min", void 0);

__decorate([Prop({
  type: Number
})], range_src_Range.prototype, "max", void 0);

__decorate([Prop({
  type: Number
})], range_src_Range.prototype, "step", void 0);

range_src_Range = __decorate([vue_class_component_common_default()({
  name: 'Range'
})], range_src_Range);
/* harmony default export */ var range_src = (range_src_Range);
// CONCATENATED MODULE: ./src/packages/range/src/item.tsx














var item_RangeItem =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(RangeItem, _FormComponent);

  function RangeItem() {
    _classCallCheck(this, RangeItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(RangeItem).apply(this, arguments));
  }

  _createClass(RangeItem, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      return h(list.Item, {
        "attrs": {
          "multipleLine": true,
          "disabled": this.isDisabled
        }
      }, [this.title, h(list.Item.Brief, {
        "style": {
          padding: '15px',
          flex: 1
        }
      }, [h(range_src, helper_default()([{}, {
        "attrs": assign_default()({}, this.$attrs, this.$props)
      }, {
        "attrs": {
          "disabled": this.isDisabled,
          "value": this.currentValue
        }
      }, {
        "on": {
          change: function change(v) {
            _this.currentValue = v;
          }
        }
      }]))])]);
    }
  }]);

  return RangeItem;
}(form_component_FormComponent);

__decorate([Prop({
  type: [String, Object]
})], item_RangeItem.prototype, "title", void 0);

item_RangeItem = __decorate([vue_class_component_common_default()({
  name: 'RangeItem'
})], item_RangeItem);
/* harmony default export */ var range_src_item = (item_RangeItem);
// EXTERNAL MODULE: ./src/packages/range/style/index.less
var range_style = __webpack_require__("70b3");

// CONCATENATED MODULE: ./src/packages/range/style/index.ts


// CONCATENATED MODULE: ./src/packages/range/index.ts



range_src.Item = range_src_item;

range_src.install = function (Vue) {
  Vue.component('MRange', range_src);
  Vue.component('MRangeItem', range_src_item);
};

/* harmony default export */ var packages_range = (range_src);
// CONCATENATED MODULE: ./src/packages/result/src/index.tsx






/* tslint:disable:jsx-no-multiline-js */







var src_Result =
/*#__PURE__*/
function (_Vue) {
  _inherits(Result, _Vue);

  function Result() {
    _classCallCheck(this, Result);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Result).apply(this, arguments));
  }

  _createClass(Result, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          imgUrl = this.imgUrl,
          buttonText = this.buttonText,
          buttonType = this.buttonType;
      var imgContent = null;
      var img = this.$slots.img || this.img;
      var title = this.$slots.title || this.title;
      var message = this.$slots.message || this.message;

      if (img) {
        imgContent = h("div", {
          "class": "".concat(prefixCls, "-pic")
        }, [img]);
      } else if (imgUrl) {
        imgContent = h("div", {
          "class": "".concat(prefixCls, "-pic"),
          "style": {
            backgroundImage: "url(".concat(imgUrl, ")")
          }
        });
      }

      return h("div", {
        "class": classnames_default()(prefixCls),
        "attrs": {
          "role": "alert"
        }
      }, [imgContent, title ? h("div", {
        "class": "".concat(prefixCls, "-title")
      }, [title]) : null, message ? h("div", {
        "class": "".concat(prefixCls, "-message")
      }, [message]) : null, buttonText ? h("div", {
        "class": "".concat(prefixCls, "-button")
      }, [// @ts-ignore
      h(packages_button, {
        "attrs": {
          "type": buttonType
        },
        "on": {
          "click": function click() {
            _this.$emit('click');
          }
        }
      }, [buttonText])]) : null]);
    }
  }]);

  return Result;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-result'
})], src_Result.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], src_Result.prototype, "imgUrl", void 0);

__decorate([Prop({
  type: [String, Object]
})], src_Result.prototype, "img", void 0);

__decorate([Prop({
  type: [String, Object]
})], src_Result.prototype, "title", void 0);

__decorate([Prop({
  type: [String, Object]
})], src_Result.prototype, "message", void 0);

__decorate([Prop({
  type: String
})], src_Result.prototype, "buttonText", void 0);

__decorate([Prop({
  default: ''
})], src_Result.prototype, "buttonType", void 0);

src_Result = __decorate([vue_class_component_common_default()({
  name: 'MResult'
})], src_Result);
/* harmony default export */ var result_src = (src_Result);
// EXTERNAL MODULE: ./src/packages/result/style/index.js
var result_style = __webpack_require__("5486");

// CONCATENATED MODULE: ./src/packages/result/index.ts



result_src.install = function (Vue) {
  Vue.component('MResult', result_src);
};

/* harmony default export */ var packages_result = (result_src);
// CONCATENATED MODULE: ./src/packages/search-bar/src/index.tsx















function onNextFrame(cb) {
  if (window.requestAnimationFrame) {
    return window.requestAnimationFrame(cb);
  }

  return window.setTimeout(cb, 1);
}

function clearNextFrameAction(nextFrameId) {
  if (window.cancelAnimationFrame) {
    window.cancelAnimationFrame(nextFrameId);
  } else {
    window.clearTimeout(nextFrameId);
  }
}

var src_SearchBar =
/*#__PURE__*/
function (_Vue) {
  _inherits(SearchBar, _Vue);

  function SearchBar() {
    var _this;

    _classCallCheck(this, SearchBar);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(SearchBar).apply(this, arguments));
    _this.state = {
      value: _this.value || '',
      focus: false
    };
    return _this;
  }

  _createClass(SearchBar, [{
    key: "mounted",
    value: function mounted() {
      if (this.rightBtnRef) {
        var initBtn = window.getComputedStyle(this.rightBtnRef);
        this.rightBtnInitMarginleft = initBtn.marginLeft;
      }

      this.update();
    }
  }, {
    key: "updated",
    value: function updated() {
      this.update();
    }
  }, {
    key: "update",
    value: function update() {
      if (this.syntheticPhRef) {
        if (this.inputContainerRef && this.inputContainerRef.className.indexOf("".concat(this.prefixCls, "-start")) > -1) {
          // 检测是否包含名为 ${this.props.prefixCls}-start 样式，生成动画
          // offsetWidth 某些时候是向上取整，某些时候是向下取整，不能用
          if (this.syntheticPhContainerRef) {
            var realWidth = this.syntheticPhContainerRef.getBoundingClientRect().width; // 包含小数

            this.syntheticPhRef.style.width = "".concat(Math.ceil(realWidth), "px");
          }

          if (!this.showCancelButton && this.rightBtnRef) {
            this.rightBtnRef.style.marginRight = '0';
          }
        } else {
          this.syntheticPhRef.style.width = '100%';

          if (!this.showCancelButton && this.rightBtnRef) {
            this.rightBtnRef.style.marginRight = "-".concat(this.rightBtnRef.offsetWidth + (this.rightBtnInitMarginleft != null ? parse_int_default()(this.rightBtnInitMarginleft, 10) : 0), "px");
          }
        }
      }
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      this.state.value = value;
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.onBlurTimeout) {
        clearNextFrameAction(this.onBlurTimeout);
        this.onBlurTimeout = null;
      }
    }
  }, {
    key: "onSubmit",
    value: function onSubmit(e) {
      e.preventDefault();
      this.$emit('submit', this.state.value || '');

      if (this.inputRef) {
        this.inputRef.blur();
      }
    }
  }, {
    key: "stateValueChanged",
    value: function stateValueChanged(value) {
      this.$emit('input', value);
    }
  }, {
    key: "onChange",
    value: function onChange(e) {
      if (!this.state.focus) {
        this.state.focus = true;
      }

      var value = e.target.value;
      this.state.value = value;
      this.$emit('change', value);
    }
  }, {
    key: "onFocus",
    value: function onFocus() {
      this.state.focus = true;
      this.firstFocus = true;
      this.$emit('focus');
    }
  }, {
    key: "onBlur",
    value: function onBlur() {
      var _this2 = this;

      this.onBlurTimeout = onNextFrame(function () {
        if (!_this2.blurFromOnClear) {
          if (document.activeElement !== _this2.inputRef) {
            _this2.state.focus = false;
          }
        }

        _this2.blurFromOnClear = false;
      }); // fix autoFocus item blur with flash

      if (this.$listeners && this.$listeners.blur) {
        setTimeout(function () {
          // fix ios12 wechat browser click failure after input
          if (document.body) {
            document.body.scrollTop = document.body.scrollTop;
          }
        }, 100);
        this.$emit('blur');
      }
    }
  }, {
    key: "onClear",
    value: function onClear() {
      this.doClear();
    }
  }, {
    key: "doClear",
    value: function doClear() {
      var blurFromOnClear = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this.blurFromOnClear = blurFromOnClear;
      this.state.value = '';
      this.$emit('clear');
      this.$emit('change');

      if (blurFromOnClear) {
        this.focus();
      }
    }
  }, {
    key: "onCancel",
    value: function onCancel() {
      this.$emit('cancel');
      this.doClear(false);
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.inputRef) {
        this.inputRef.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames3;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          showCancelButton = this.showCancelButton,
          disabled = this.disabled,
          placeholder = this.placeholder,
          maxLength = this.maxLength; // tslint:disable-next-line:variable-name

      var cancelText = '取消';
      var _this$state = this.state,
          value = _this$state.value,
          focus = _this$state.focus;
      var wrapCls = classnames_default()(prefixCls, _defineProperty({}, "".concat(prefixCls, "-start"), focus || value && value.length > 0));
      var clearCls = classnames_default()("".concat(prefixCls, "-clear"), _defineProperty({}, "".concat(prefixCls, "-clear-show"), focus && value && value.length > 0));
      var cancelCls = classnames_default()("".concat(prefixCls, "-cancel"), (_classnames3 = {}, _defineProperty(_classnames3, "".concat(prefixCls, "-cancel-show"), showCancelButton || focus || value && value.length > 0), _defineProperty(_classnames3, "".concat(prefixCls, "-cancel-anim"), this.firstFocus), _classnames3));
      var TouchFeedback2 = feedback;
      return h("form", {
        "on": {
          "submit": this.onSubmit
        },
        "class": wrapCls,
        "ref": "inputContainer",
        "attrs": {
          "action": "#"
        }
      }, [h("div", {
        "class": "".concat(prefixCls, "-input")
      }, [h("div", {
        "class": "".concat(prefixCls, "-synthetic-ph"),
        "ref": "syntheticPh"
      }, [h("span", {
        "class": "".concat(prefixCls, "-synthetic-ph-container"),
        "ref": "syntheticPhContainer"
      }, [h("i", {
        "class": "".concat(prefixCls, "-synthetic-ph-icon")
      }), h("span", {
        "class": "".concat(prefixCls, "-synthetic-ph-placeholder"),
        "style": {
          visibility: placeholder && !value ? 'visible' : 'hidden'
        }
      }, [placeholder])])]), h("input", {
        "attrs": {
          "type": "search",
          "disabled": disabled,
          "placeholder": placeholder,
          "maxLength": maxLength
        },
        "class": "".concat(prefixCls, "-value"),
        "domProps": {
          "value": value
        },
        "on": {
          "input": this.onChange,
          "change": this.onChange,
          "focus": this.onFocus,
          "blur": this.onBlur
        },
        "ref": "input"
      }), h(TouchFeedback2, {
        "attrs": {
          "activeclass": "".concat(prefixCls, "-clear-active")
        }
      }, [h("a", {
        "on": {
          "click": this.onClear
        },
        "class": clearCls
      })])]), h("div", {
        "class": cancelCls,
        "on": {
          "click": this.onCancel
        },
        "ref": "rightBtn"
      }, [this.cancelText || cancelText])]);
    }
  }, {
    key: "inputRef",
    get: function get() {
      return this.$refs['input'];
    }
  }, {
    key: "rightBtnRef",
    get: function get() {
      return this.$refs['rightBtn'];
    }
  }, {
    key: "syntheticPhContainerRef",
    get: function get() {
      return this.$refs['syntheticPhContainer'];
    }
  }, {
    key: "syntheticPhRef",
    get: function get() {
      return this.$refs['syntheticPh'];
    }
  }, {
    key: "inputContainerRef",
    get: function get() {
      return this.$refs['inputContainer'];
    }
  }]);

  return SearchBar;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-search'
})], src_SearchBar.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], src_SearchBar.prototype, "defaultValue", void 0);

__decorate([Prop({
  type: String
})], src_SearchBar.prototype, "value", void 0);

__decorate([Prop({
  type: String
})], src_SearchBar.prototype, "placeholder", void 0);

__decorate([Prop({
  type: Boolean
})], src_SearchBar.prototype, "showCancelButton", void 0);

__decorate([Prop({
  type: String
})], src_SearchBar.prototype, "cancelText", void 0);

__decorate([Prop({
  type: Boolean
})], src_SearchBar.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean
})], src_SearchBar.prototype, "autoFocus", void 0);

__decorate([Prop({
  type: Boolean
})], src_SearchBar.prototype, "focused", void 0);

__decorate([Prop({
  type: Number
})], src_SearchBar.prototype, "maxLength", void 0);

__decorate([Watch('value')], src_SearchBar.prototype, "valueChanged", null);

__decorate([Watch('state.value')], src_SearchBar.prototype, "stateValueChanged", null);

src_SearchBar = __decorate([vue_class_component_common_default()({
  name: 'SearchBar'
})], src_SearchBar);
/* harmony default export */ var search_bar_src = (src_SearchBar);
// EXTERNAL MODULE: ./src/packages/search-bar/style/index.less
var search_bar_style = __webpack_require__("8fcf");

// CONCATENATED MODULE: ./src/packages/search-bar/style/index.tsx


// CONCATENATED MODULE: ./src/packages/search-bar/index.ts


var search_bar_Plugin = search_bar_src;

search_bar_Plugin.install = function (Vue) {
  Vue.component('MSearchBar', search_bar_src);
};

/* harmony default export */ var search_bar = (search_bar_Plugin);
// CONCATENATED MODULE: ./src/packages/segmented-control/src/index.tsx
















var src_SegmentedControl =
/*#__PURE__*/
function (_Vue) {
  _inherits(SegmentedControl, _Vue);

  function SegmentedControl() {
    var _this;

    _classCallCheck(this, SegmentedControl);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(SegmentedControl).apply(this, arguments));
    _this.state = {
      selectedIndex: _this.value
    };
    return _this;
  }

  _createClass(SegmentedControl, [{
    key: "selectedIndexChanged",
    value: function selectedIndexChanged(value) {
      this.state.selectedIndex = value;
    }
  }, {
    key: "onClick",
    value: function onClick(e, index, value) {
      var disabled = this.disabled;

      if (!disabled && this.state.selectedIndex !== index) {
        // just do a mock so that the api to be the same as react-native
        e.nativeEvent = e.nativeEvent ? e.nativeEvent : {};
        e.nativeEvent.selectedSegmentIndex = index;
        e.nativeEvent.value = value;
        this.state.selectedIndex = index;
        this.$emit('input', index);
        this.$emit('change', index);
      }
    }
  }, {
    key: "renderSegmentItem",
    value: function renderSegmentItem(idx, value, selected) {
      var _this2 = this;

      var h = this.$createElement;
      var prefixCls = this.prefixCls,
          disabled = this.disabled,
          tintColor = this.tintColor;
      var itemCls = classnames_default()("".concat(prefixCls, "-item"), _defineProperty({}, "".concat(prefixCls, "-item-selected"), selected));
      var itemStyle = {
        color: selected ? '#fff' : tintColor,
        backgroundColor: selected ? tintColor : 'transparent',
        borderColor: tintColor
      };
      var activeInnerStyle = tintColor ? {
        backgroundColor: tintColor
      } : {};
      return h(feedback, {
        "key": idx,
        "attrs": {
          "disabled": disabled,
          "activeClassName": "".concat(prefixCls, "-item-active")
        }
      }, [h("div", {
        "class": itemCls,
        "style": itemStyle,
        "attrs": {
          "role": "tab",
          "aria-selected": selected && !disabled,
          "aria-disabled": disabled
        },
        "on": {
          "click": disabled ? undefined : function (e) {
            return _this2.onClick(e, idx, value);
          }
        }
      }, [h("div", {
        "class": "".concat(prefixCls, "-item-inner"),
        "style": activeInnerStyle
      }), value])]);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          disabled = this.disabled,
          _this$values = this.values,
          values = _this$values === void 0 ? [] : _this$values;
      var wrapCls = classnames_default()(prefixCls, _defineProperty({}, "".concat(prefixCls, "-disabled"), disabled));
      return h("div", {
        "class": wrapCls,
        "attrs": {
          "role": "tablist"
        }
      }, [values.map(function (value, idx) {
        return (// tslint:disable-next-line:jsx-no-multiline-js
          _this3.renderSegmentItem(idx, value, idx === _this3.state.selectedIndex)
        );
      })]);
    }
  }]);

  return SegmentedControl;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-segment'
})], src_SegmentedControl.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: ''
})], src_SegmentedControl.prototype, "tintColor", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_SegmentedControl.prototype, "disabled", void 0);

__decorate([Prop({
  type: Number,
  default: 0
})], src_SegmentedControl.prototype, "value", void 0);

__decorate([Prop({
  default: function _default() {
    return [];
  }
})], src_SegmentedControl.prototype, "values", void 0);

__decorate([Watch('value')], src_SegmentedControl.prototype, "selectedIndexChanged", null);

src_SegmentedControl = __decorate([vue_class_component_common_default()({
  name: 'SegmentedControl'
})], src_SegmentedControl);
/* harmony default export */ var segmented_control_src = (src_SegmentedControl);
// EXTERNAL MODULE: ./src/packages/segmented-control/style/index.less
var segmented_control_style = __webpack_require__("03ee");

// CONCATENATED MODULE: ./src/packages/segmented-control/style/index.js


// CONCATENATED MODULE: ./src/packages/segmented-control/index.ts



segmented_control_src.install = function (Vue) {
  Vue.component('MSegmentedControl', segmented_control_src);
};

/* harmony default export */ var segmented_control = (segmented_control_src);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/Track.js

/* eslint-disable */
var Track = {
  functional: true,
  render: function render(createElement, context) {
    var h = arguments[0];
    var _context$props = context.props,
        included = _context$props.included,
        vertical = _context$props.vertical,
        offset = _context$props.offset,
        length = _context$props.length;
    var _context$data = context.data,
        style = _context$data.style,
        className = _context$data["class"];


    var positonStyle = vertical ? {
      bottom: offset + "%",
      height: length + "%"
    } : {
      left: offset + "%",
      width: length + "%"
    };

    var elStyle = extends_default()({}, style, positonStyle);
    return included ? h("div", { "class": className, style: elStyle }) : null;
  }
};

/* harmony default export */ var common_Track = (Track);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/Steps.js





var Steps_calcPoints = function calcPoints(vertical, marks, dots, step, min, max) {
  warning(dots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
  var points = Object.keys(marks).map(parseFloat).sort(function (a, b) {
    return a - b;
  });
  if (dots) {
    for (var i = min; i <= max; i += step) {
      if (points.indexOf(i) === -1) {
        points.push(i);
      }
    }
  }
  return points;
};

var Steps_Steps = {
  functional: true,
  render: function render(h, context) {
    var _context$props = context.props,
        prefixCls = _context$props.prefixCls,
        vertical = _context$props.vertical,
        marks = _context$props.marks,
        dots = _context$props.dots,
        step = _context$props.step,
        included = _context$props.included,
        lowerBound = _context$props.lowerBound,
        upperBound = _context$props.upperBound,
        max = _context$props.max,
        min = _context$props.min,
        dotStyle = _context$props.dotStyle,
        activeDotStyle = _context$props.activeDotStyle;

    var range = max - min;
    var elements = Steps_calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
      var _classNames;

      var offset = Math.abs(point - min) / range * 100 + '%';

      var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
      var style = vertical ? extends_default()({ bottom: offset }, dotStyle) : extends_default()({ left: offset }, dotStyle);
      if (isActived) {
        style = extends_default()({}, style, activeDotStyle);
      }

      var pointClassName = classnames_default()((_classNames = {}, defineProperty_default()(_classNames, prefixCls + '-dot', true), defineProperty_default()(_classNames, prefixCls + '-dot-active', isActived), _classNames));

      return h('span', { 'class': pointClassName, style: style, key: point });
    });

    return h(
      'div',
      { 'class': prefixCls + '-step' },
      [elements]
    );
  }
};

/* harmony default export */ var common_Steps = (Steps_Steps);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/Marks.js






var Marks = {
  functional: true,
  render: function render(h, context) {
    var _context$props = context.props,
        className = _context$props.className,
        vertical = _context$props.vertical,
        marks = _context$props.marks,
        included = _context$props.included,
        upperBound = _context$props.upperBound,
        lowerBound = _context$props.lowerBound,
        max = _context$props.max,
        min = _context$props.min;
    var clickLabel = context.listeners.clickLabel;

    var marksKeys = Object.keys(marks);
    var marksCount = marksKeys.length;
    var unit = marksCount > 1 ? 100 / (marksCount - 1) : 100;
    var markWidth = unit * 0.9;

    var range = max - min;
    var elements = marksKeys.map(parseFloat).sort(function (a, b) {
      return a - b;
    }).map(function (point) {
      var _classNames;

      var markPoint = typeof marks[point] === 'function' ? marks[point](h) : marks[point];
      var markPointIsObject = (typeof markPoint === 'undefined' ? 'undefined' : typeof_default()(markPoint)) === 'object' && !isValidElement(markPoint);
      var markLabel = markPointIsObject ? markPoint.label : markPoint;
      if (!markLabel && markLabel !== 0) {
        return null;
      }

      var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
      var markClassName = classnames_default()((_classNames = {}, defineProperty_default()(_classNames, className + '-text', true), defineProperty_default()(_classNames, className + '-text-active', isActive), _classNames));

      var bottomStyle = {
        marginBottom: '-50%',
        bottom: (point - min) / range * 100 + '%'
      };

      var leftStyle = {
        width: markWidth + '%',
        marginLeft: -markWidth / 2 + '%',
        left: (point - min) / range * 100 + '%'
      };

      var style = vertical ? bottomStyle : leftStyle;
      var markStyle = markPointIsObject ? extends_default()({}, style, markPoint.style) : style;
      return h(
        'span',
        {
          'class': markClassName,
          style: markStyle,
          key: point,
          on: {
            'mousedown': function mousedown(e) {
              return clickLabel(e, point);
            },
            'touchstart': function touchstart(e) {
              return clickLabel(e, point);
            }
          }
        },
        [markLabel]
      );
    });

    return h(
      'div',
      { 'class': className },
      [elements]
    );
  }
};

/* harmony default export */ var common_Marks = (Marks);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/Handle.js








/* harmony default export */ var Handle = ({
  name: 'Handle',
  mixins: [BaseMixin],
  props: {
    prefixCls: vue_types.string,
    vertical: vue_types.bool,
    offset: vue_types.number,
    disabled: vue_types.bool,
    min: vue_types.number,
    max: vue_types.number,
    value: vue_types.number,
    tabIndex: vue_types.number,
    className: vue_types.string
    // handleFocus: PropTypes.func.def(noop),
    // handleBlur: PropTypes.func.def(noop),
  },
  data: function data() {
    return {
      clickFocused: false
    };
  },
  mounted: function mounted() {
    // mouseup won't trigger if mouse moved out of handle
    // so we listen on document here.
    this.onMouseUpListener = addEventListenerWrap(document, 'mouseup', this.handleMouseUp);
  },
  beforeDestroy: function beforeDestroy() {
    if (this.onMouseUpListener) {
      this.onMouseUpListener.remove();
    }
  },

  methods: {
    setClickFocus: function setClickFocus(focused) {
      this.setState({ clickFocused: focused });
    },
    handleMouseUp: function handleMouseUp() {
      if (document.activeElement === this.$refs.handle) {
        this.setClickFocus(true);
      }
    },
    handleBlur: function handleBlur(e) {
      this.setClickFocus(false);
      this.__emit('blur', e);
    },
    handleKeyDown: function handleKeyDown() {
      this.setClickFocus(false);
    },
    clickFocus: function clickFocus() {
      this.setClickFocus(true);
      this.focus();
    },
    focus: function focus() {
      this.$refs.handle.focus();
    },
    blur: function blur() {
      this.$refs.handle.blur();
    },

    // when click can not focus in vue, use mousedown trigger focus
    handleMousedown: function handleMousedown(e) {
      this.focus();
      this.__emit('mousedown', e);
    }
  },
  render: function render() {
    var h = arguments[0];

    var _getOptionProps = props_util_getOptionProps(this),
        prefixCls = _getOptionProps.prefixCls,
        vertical = _getOptionProps.vertical,
        offset = _getOptionProps.offset,
        disabled = _getOptionProps.disabled,
        min = _getOptionProps.min,
        max = _getOptionProps.max,
        value = _getOptionProps.value,
        tabIndex = _getOptionProps.tabIndex;

    var className = classnames_default()(this.$props.className, defineProperty_default()({}, prefixCls + '-handle-click-focused', this.clickFocused));

    var postionStyle = vertical ? { bottom: offset + '%' } : { left: offset + '%' };

    var ariaProps = {
      'aria-valuemin': min,
      'aria-valuemax': max,
      'aria-valuenow': value,
      'aria-disabled': !!disabled
    };

    var handleProps = {
      attrs: extends_default()({
        role: 'slider',
        tabIndex: disabled ? null : tabIndex || 0
      }, ariaProps),
      'class': className,
      on: extends_default()({}, this.$listeners, {
        blur: this.handleBlur,
        keydown: this.handleKeyDown,
        mousedown: this.handleMousedown
      }),
      ref: 'handle',
      style: postionStyle
    };
    return h('div', handleProps);
  }
});
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/_util/KeyCode.js
/**
 * @ignore
 * some key-codes definition and utils from closure-library
 * @author yiminghe@gmail.com
 */

var KeyCode = {
  /**
   * MAC_ENTER
   */
  MAC_ENTER: 3,
  /**
   * BACKSPACE
   */
  BACKSPACE: 8,
  /**
   * TAB
   */
  TAB: 9,
  /**
   * NUMLOCK on FF/Safari Mac
   */
  NUM_CENTER: 12, // NUMLOCK on FF/Safari Mac
  /**
   * ENTER
   */
  ENTER: 13,
  /**
   * SHIFT
   */
  SHIFT: 16,
  /**
   * CTRL
   */
  CTRL: 17,
  /**
   * ALT
   */
  ALT: 18,
  /**
   * PAUSE
   */
  PAUSE: 19,
  /**
   * CAPS_LOCK
   */
  CAPS_LOCK: 20,
  /**
   * ESC
   */
  ESC: 27,
  /**
   * SPACE
   */
  SPACE: 32,
  /**
   * PAGE_UP
   */
  PAGE_UP: 33, // also NUM_NORTH_EAST
  /**
   * PAGE_DOWN
   */
  PAGE_DOWN: 34, // also NUM_SOUTH_EAST
  /**
   * END
   */
  END: 35, // also NUM_SOUTH_WEST
  /**
   * HOME
   */
  HOME: 36, // also NUM_NORTH_WEST
  /**
   * LEFT
   */
  LEFT: 37, // also NUM_WEST
  /**
   * UP
   */
  UP: 38, // also NUM_NORTH
  /**
   * RIGHT
   */
  RIGHT: 39, // also NUM_EAST
  /**
   * DOWN
   */
  DOWN: 40, // also NUM_SOUTH
  /**
   * PRINT_SCREEN
   */
  PRINT_SCREEN: 44,
  /**
   * INSERT
   */
  INSERT: 45, // also NUM_INSERT
  /**
   * DELETE
   */
  DELETE: 46, // also NUM_DELETE
  /**
   * ZERO
   */
  ZERO: 48,
  /**
   * ONE
   */
  ONE: 49,
  /**
   * TWO
   */
  TWO: 50,
  /**
   * THREE
   */
  THREE: 51,
  /**
   * FOUR
   */
  FOUR: 52,
  /**
   * FIVE
   */
  FIVE: 53,
  /**
   * SIX
   */
  SIX: 54,
  /**
   * SEVEN
   */
  SEVEN: 55,
  /**
   * EIGHT
   */
  EIGHT: 56,
  /**
   * NINE
   */
  NINE: 57,
  /**
   * QUESTION_MARK
   */
  QUESTION_MARK: 63, // needs localization
  /**
   * A
   */
  A: 65,
  /**
   * B
   */
  B: 66,
  /**
   * C
   */
  C: 67,
  /**
   * D
   */
  D: 68,
  /**
   * E
   */
  E: 69,
  /**
   * F
   */
  F: 70,
  /**
   * G
   */
  G: 71,
  /**
   * H
   */
  H: 72,
  /**
   * I
   */
  I: 73,
  /**
   * J
   */
  J: 74,
  /**
   * K
   */
  K: 75,
  /**
   * L
   */
  L: 76,
  /**
   * M
   */
  M: 77,
  /**
   * N
   */
  N: 78,
  /**
   * O
   */
  O: 79,
  /**
   * P
   */
  P: 80,
  /**
   * Q
   */
  Q: 81,
  /**
   * R
   */
  R: 82,
  /**
   * S
   */
  S: 83,
  /**
   * T
   */
  T: 84,
  /**
   * U
   */
  U: 85,
  /**
   * V
   */
  V: 86,
  /**
   * W
   */
  W: 87,
  /**
   * X
   */
  X: 88,
  /**
   * Y
   */
  Y: 89,
  /**
   * Z
   */
  Z: 90,
  /**
   * META
   */
  META: 91, // WIN_KEY_LEFT
  /**
   * WIN_KEY_RIGHT
   */
  WIN_KEY_RIGHT: 92,
  /**
   * CONTEXT_MENU
   */
  CONTEXT_MENU: 93,
  /**
   * NUM_ZERO
   */
  NUM_ZERO: 96,
  /**
   * NUM_ONE
   */
  NUM_ONE: 97,
  /**
   * NUM_TWO
   */
  NUM_TWO: 98,
  /**
   * NUM_THREE
   */
  NUM_THREE: 99,
  /**
   * NUM_FOUR
   */
  NUM_FOUR: 100,
  /**
   * NUM_FIVE
   */
  NUM_FIVE: 101,
  /**
   * NUM_SIX
   */
  NUM_SIX: 102,
  /**
   * NUM_SEVEN
   */
  NUM_SEVEN: 103,
  /**
   * NUM_EIGHT
   */
  NUM_EIGHT: 104,
  /**
   * NUM_NINE
   */
  NUM_NINE: 105,
  /**
   * NUM_MULTIPLY
   */
  NUM_MULTIPLY: 106,
  /**
   * NUM_PLUS
   */
  NUM_PLUS: 107,
  /**
   * NUM_MINUS
   */
  NUM_MINUS: 109,
  /**
   * NUM_PERIOD
   */
  NUM_PERIOD: 110,
  /**
   * NUM_DIVISION
   */
  NUM_DIVISION: 111,
  /**
   * F1
   */
  F1: 112,
  /**
   * F2
   */
  F2: 113,
  /**
   * F3
   */
  F3: 114,
  /**
   * F4
   */
  F4: 115,
  /**
   * F5
   */
  F5: 116,
  /**
   * F6
   */
  F6: 117,
  /**
   * F7
   */
  F7: 118,
  /**
   * F8
   */
  F8: 119,
  /**
   * F9
   */
  F9: 120,
  /**
   * F10
   */
  F10: 121,
  /**
   * F11
   */
  F11: 122,
  /**
   * F12
   */
  F12: 123,
  /**
   * NUMLOCK
   */
  NUMLOCK: 144,
  /**
   * SEMICOLON
   */
  SEMICOLON: 186, // needs localization
  /**
   * DASH
   */
  DASH: 189, // needs localization
  /**
   * EQUALS
   */
  EQUALS: 187, // needs localization
  /**
   * COMMA
   */
  COMMA: 188, // needs localization
  /**
   * PERIOD
   */
  PERIOD: 190, // needs localization
  /**
   * SLASH
   */
  SLASH: 191, // needs localization
  /**
   * APOSTROPHE
   */
  APOSTROPHE: 192, // needs localization
  /**
   * SINGLE_QUOTE
   */
  SINGLE_QUOTE: 222, // needs localization
  /**
   * OPEN_SQUARE_BRACKET
   */
  OPEN_SQUARE_BRACKET: 219, // needs localization
  /**
   * BACKSLASH
   */
  BACKSLASH: 220, // needs localization
  /**
   * CLOSE_SQUARE_BRACKET
   */
  CLOSE_SQUARE_BRACKET: 221, // needs localization
  /**
   * WIN_KEY
   */
  WIN_KEY: 224,
  /**
   * MAC_FF_META
   */
  MAC_FF_META: 224, // Firefox (Gecko) fires this for the meta key instead of 91
  /**
   * WIN_IME
   */
  WIN_IME: 229
};

/*
 whether text and modified key is entered at the same time.
 */
KeyCode.isTextModifyingKeyEvent = function isTextModifyingKeyEvent(e) {
  var keyCode = e.keyCode;
  if (e.altKey && !e.ctrlKey || e.metaKey ||
  // Function keys don't generate text
  keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {
    return false;
  }

  // The following keys are quite harmless, even in combination with
  // CTRL, ALT or SHIFT.
  switch (keyCode) {
    case KeyCode.ALT:
    case KeyCode.CAPS_LOCK:
    case KeyCode.CONTEXT_MENU:
    case KeyCode.CTRL:
    case KeyCode.DOWN:
    case KeyCode.END:
    case KeyCode.ESC:
    case KeyCode.HOME:
    case KeyCode.INSERT:
    case KeyCode.LEFT:
    case KeyCode.MAC_FF_META:
    case KeyCode.META:
    case KeyCode.NUMLOCK:
    case KeyCode.NUM_CENTER:
    case KeyCode.PAGE_DOWN:
    case KeyCode.PAGE_UP:
    case KeyCode.PAUSE:
    case KeyCode.PRINT_SCREEN:
    case KeyCode.RIGHT:
    case KeyCode.SHIFT:
    case KeyCode.UP:
    case KeyCode.WIN_KEY:
    case KeyCode.WIN_KEY_RIGHT:
      return false;
    default:
      return true;
  }
};

/*
 whether character is entered.
 */
KeyCode.isCharacterKey = function isCharacterKey(keyCode) {
  if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {
    return true;
  }

  if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {
    return true;
  }

  if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {
    return true;
  }

  // Safari sends zero key code for non-latin characters.
  if (window.navigation.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {
    return true;
  }

  switch (keyCode) {
    case KeyCode.SPACE:
    case KeyCode.QUESTION_MARK:
    case KeyCode.NUM_PLUS:
    case KeyCode.NUM_MINUS:
    case KeyCode.NUM_PERIOD:
    case KeyCode.NUM_DIVISION:
    case KeyCode.SEMICOLON:
    case KeyCode.DASH:
    case KeyCode.EQUALS:
    case KeyCode.COMMA:
    case KeyCode.PERIOD:
    case KeyCode.SLASH:
    case KeyCode.APOSTROPHE:
    case KeyCode.SINGLE_QUOTE:
    case KeyCode.OPEN_SQUARE_BRACKET:
    case KeyCode.BACKSLASH:
    case KeyCode.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false;
  }
};

/* harmony default export */ var _util_KeyCode = (KeyCode);
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/utils.js



function isDev() {
  return "production" !== 'production';
}

function isEventFromHandle(e, handles) {
  try {
    return Object.keys(handles).some(function (key) {
      return e.target === handles[key].$el || e.target === handles[key];
    });
  } catch (error) {
    return false;
  }
}

function isValueOutOfRange(value, _ref) {
  var min = _ref.min,
      max = _ref.max;

  return value < min || value > max;
}

function isNotTouchEvent(e) {
  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
}

function getClosestPoint(val, _ref2) {
  var marks = _ref2.marks,
      step = _ref2.step,
      min = _ref2.min;

  var points = Object.keys(marks).map(parseFloat);
  if (step !== null) {
    var closestStep = Math.round((val - min) / step) * step + min;
    points.push(closestStep);
  }
  var diffs = points.map(function (point) {
    return Math.abs(val - point);
  });
  return points[diffs.indexOf(Math.min.apply(Math, toConsumableArray_default()(diffs)))];
}

function utils_getPrecision(step) {
  var stepString = step.toString();
  var precision = 0;
  if (stepString.indexOf('.') >= 0) {
    precision = stepString.length - stepString.indexOf('.') - 1;
  }
  return precision;
}

function getMousePosition(vertical, e) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical ? e.clientY : e.pageX) / zoom;
}

function getTouchPosition(vertical, e) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical ? e.touches[0].clientY : e.touches[0].pageX) / zoom;
}

function getHandleCenterPosition(vertical, handle) {
  var coords = handle.getBoundingClientRect();
  return vertical ? coords.top + coords.height * 0.5 : window.pageXOffset + coords.left + coords.width * 0.5;
}

function ensureValueInRange(val, _ref3) {
  var max = _ref3.max,
      min = _ref3.min;

  if (val <= min) {
    return min;
  }
  if (val >= max) {
    return max;
  }
  return val;
}

function ensureValuePrecision(val, props) {
  var step = props.step;

  var closestPoint = isFinite(getClosestPoint(val, props)) ? getClosestPoint(val, props) : 0; // eslint-disable-line
  return step === null ? closestPoint : parseFloat(closestPoint.toFixed(utils_getPrecision(step)));
}

function pauseEvent(e) {
  e.stopPropagation();
  e.preventDefault();
}

function calculateNextValue(func, value, props) {
  var operations = {
    increase: function increase(a, b) {
      return a + b;
    },
    decrease: function decrease(a, b) {
      return a - b;
    }
  };

  var indexToGet = operations[func](Object.keys(props.marks).indexOf(JSON.stringify(value)), 1);
  var keyToGet = Object.keys(props.marks)[indexToGet];

  if (props.step) {
    return operations[func](value, props.step);
  } else if (!!Object.keys(props.marks).length && !!props.marks[keyToGet]) {
    return props.marks[keyToGet];
  }
  return value;
}

function getKeyboardValueMutator(e) {
  switch (e.keyCode) {
    case _util_KeyCode.UP:
    case _util_KeyCode.RIGHT:
      return function (value, props) {
        return calculateNextValue('increase', value, props);
      };

    case _util_KeyCode.DOWN:
    case _util_KeyCode.LEFT:
      return function (value, props) {
        return calculateNextValue('decrease', value, props);
      };

    case _util_KeyCode.END:
      return function (value, props) {
        return props.max;
      };
    case _util_KeyCode.HOME:
      return function (value, props) {
        return props.min;
      };
    case _util_KeyCode.PAGE_UP:
      return function (value, props) {
        return value + props.step * 2;
      };
    case _util_KeyCode.PAGE_DOWN:
      return function (value, props) {
        return value - props.step * 2;
      };

    default:
      return undefined;
  }
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/common/createSlider.js













function createSlider_noop() {}

function createSlider(Component) {
  // const displayName = `ComponentEnhancer(${Component.displayName})`
  var propTypes = {
    min: vue_types.number,
    max: vue_types.number,
    step: vue_types.number,
    marks: vue_types.object,
    included: vue_types.bool,
    prefixCls: vue_types.string,
    disabled: vue_types.bool,
    handle: vue_types.func,
    dots: vue_types.bool,
    vertical: vue_types.bool,
    minimumTrackStyle: vue_types.object, // just for compatibility, will be deperecate
    maximumTrackStyle: vue_types.object, // just for compatibility, will be deperecate
    handleStyle: vue_types.oneOfType([vue_types.object, vue_types.arrayOf(vue_types.object)]),
    trackStyle: vue_types.oneOfType([vue_types.object, vue_types.arrayOf(vue_types.object)]),
    railStyle: vue_types.object,
    dotStyle: vue_types.object,
    activeDotStyle: vue_types.object,
    autoFocus: vue_types.bool
  };
  return {
    name: 'createSlider',
    mixins: [Component],
    model: {
      prop: 'value',
      event: 'change'
    },
    props: initDefaultProps(propTypes, {
      prefixCls: 'rc-slider',
      min: 0,
      max: 100,
      step: 1,
      marks: {},
      // handle ({ index, ref, className, style, ...restProps }) {
      //   delete restProps.dragging
      //   const handleProps = {
      //     props: {
      //       ...restProps,
      //     },
      //     class: className,
      //     style,
      //     key: index,
      //     ref,
      //   }
      //   return <Handle {...handleProps} />
      // },
      included: true,
      disabled: false,
      dots: false,
      vertical: false,
      trackStyle: [{}],
      handleStyle: [{}],
      railStyle: {},
      dotStyle: {},
      activeDotStyle: {}
    }),
    data: function data() {
      if (isDev()) {
        var step = this.step,
            max = this.max,
            min = this.min;

        var isPointDiffEven = isFinite(max - min) ? (max - min) % step === 0 : true; // eslint-disable-line
        warning(step && Math.floor(step) === step ? isPointDiffEven : true, 'Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)', max - min, step);
      }
      this.handlesRefs = {};
      return {};
    },
    mounted: function mounted() {
      var _this = this;

      this.$nextTick(function () {
        // Snapshot testing cannot handle refs, so be sure to null-check this.
        _this.document = _this.$refs.sliderRef && _this.$refs.sliderRef.ownerDocument;
        // this.setHandleRefs()
      });
    },
    beforeDestroy: function beforeDestroy() {
      var _this2 = this;

      this.$nextTick(function () {
        // if (super.componentWillUnmount) super.componentWillUnmount()
        _this2.removeDocumentEvents();
      });
    },

    methods: {
      defaultHandle: function defaultHandle(_ref) {
        var index = _ref.index,
            directives = _ref.directives,
            className = _ref.className,
            style = _ref.style,
            on = _ref.on,
            restProps = objectWithoutProperties_default()(_ref, ['index', 'directives', 'className', 'style', 'on']);

        var h = this.$createElement;

        delete restProps.dragging;
        if (restProps.value === null) {
          return null;
        }
        var handleProps = {
          props: extends_default()({}, restProps),
          'class': className,
          style: style,
          key: index,
          directives: directives,
          on: on
        };
        return h(Handle, handleProps);
      },
      onMouseDown: function onMouseDown(e) {
        if (e.button !== 0) {
          return;
        }
        var isVertical = this.vertical;
        var position = getMousePosition(isVertical, e);
        if (!isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.removeDocumentEvents();
        this.onStart(position);
        this.addDocumentMouseEvents();
        pauseEvent(e);
      },
      onTouchStart: function onTouchStart(e) {
        if (isNotTouchEvent(e)) return;

        var isVertical = this.vertical;
        var position = getTouchPosition(isVertical, e);
        if (!isEventFromHandle(e, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical, e.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.onStart(position);
        this.addDocumentTouchEvents();
        pauseEvent(e);
      },
      onFocus: function onFocus(e) {
        var vertical = this.vertical;

        if (isEventFromHandle(e, this.handlesRefs)) {
          var handlePosition = getHandleCenterPosition(vertical, e.target);
          this.dragOffset = 0;
          this.onStart(handlePosition);
          pauseEvent(e);
          this.$emit('focus', e);
        }
      },
      onBlur: function onBlur(e) {
        this.onEnd(e);
        this.$emit('blur', e);
      },
      onMouseUp: function onMouseUp() {
        if (this.handlesRefs[this.prevMovedHandleIndex]) {
          this.handlesRefs[this.prevMovedHandleIndex].clickFocus();
        }
      },
      onMouseMove: function onMouseMove(e) {
        if (!this.$refs.sliderRef) {
          this.onEnd();
          return;
        }
        var position = getMousePosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onTouchMove: function onTouchMove(e) {
        if (isNotTouchEvent(e) || !this.$refs.sliderRef) {
          this.onEnd();
          return;
        }

        var position = getTouchPosition(this.vertical, e);
        this.onMove(e, position - this.dragOffset);
      },
      onKeyDown: function onKeyDown(e) {
        if (this.$refs.sliderRef && isEventFromHandle(e, this.handlesRefs)) {
          this.onKeyboard(e);
        }
      },
      onClickMarkLabel: function onClickMarkLabel(e, value) {
        e.stopPropagation();
        this.onChange({ sValue: value });
        this.onEnd();
      },
      getSliderStart: function getSliderStart() {
        var slider = this.$refs.sliderRef;
        var rect = slider.getBoundingClientRect();

        return this.vertical ? rect.top : rect.left + window.pageXOffset;
      },
      getSliderLength: function getSliderLength() {
        var slider = this.$refs.sliderRef;
        if (!slider) {
          return 0;
        }

        var coords = slider.getBoundingClientRect();
        return this.vertical ? coords.height : coords.width;
      },
      addDocumentTouchEvents: function addDocumentTouchEvents() {
        // just work for Chrome iOS Safari and Android Browser
        this.onTouchMoveListener = addEventListenerWrap(this.document, 'touchmove', this.onTouchMove);
        this.onTouchUpListener = addEventListenerWrap(this.document, 'touchend', this.onEnd);
      },
      addDocumentMouseEvents: function addDocumentMouseEvents() {
        this.onMouseMoveListener = addEventListenerWrap(this.document, 'mousemove', this.onMouseMove);
        this.onMouseUpListener = addEventListenerWrap(this.document, 'mouseup', this.onEnd);
      },
      removeDocumentEvents: function removeDocumentEvents() {
        /* eslint-disable no-unused-expressions */
        this.onTouchMoveListener && this.onTouchMoveListener.remove();
        this.onTouchUpListener && this.onTouchUpListener.remove();

        this.onMouseMoveListener && this.onMouseMoveListener.remove();
        this.onMouseUpListener && this.onMouseUpListener.remove();
        /* eslint-enable no-unused-expressions */
      },
      focus: function focus() {
        if (!this.disabled) {
          this.handlesRefs[0].focus();
        }
      },
      blur: function blur() {
        var _this3 = this;

        if (!this.disabled) {
          Object.keys(this.handlesRefs).forEach(function (key) {
            if (_this3.handlesRefs[key] && _this3.handlesRefs[key].blur) {
              _this3.handlesRefs[key].blur();
            }
          });
        }
      },
      calcValue: function calcValue(offset) {
        var vertical = this.vertical,
            min = this.min,
            max = this.max;

        var ratio = Math.abs(Math.max(offset, 0) / this.getSliderLength());
        var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
        return value;
      },
      calcValueByPos: function calcValueByPos(position) {
        var pixelOffset = position - this.getSliderStart();
        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
        return nextValue;
      },
      calcOffset: function calcOffset(value) {
        var min = this.min,
            max = this.max;

        var ratio = (value - min) / (max - min);
        return ratio * 100;
      },
      saveHandle: function saveHandle(index, handle) {
        this.handlesRefs[index] = handle;
      }
    },
    render: function render(h) {
      var _classNames;

      var prefixCls = this.prefixCls,
          marks = this.marks,
          dots = this.dots,
          step = this.step,
          included = this.included,
          disabled = this.disabled,
          vertical = this.vertical,
          min = this.min,
          max = this.max,
          maximumTrackStyle = this.maximumTrackStyle,
          railStyle = this.railStyle,
          dotStyle = this.dotStyle,
          activeDotStyle = this.activeDotStyle;

      var _renderSlider = this.renderSlider(h),
          tracks = _renderSlider.tracks,
          handles = _renderSlider.handles;

      var sliderClassName = classnames_default()(prefixCls, (_classNames = {}, defineProperty_default()(_classNames, prefixCls + '-with-marks', Object.keys(marks).length), defineProperty_default()(_classNames, prefixCls + '-disabled', disabled), defineProperty_default()(_classNames, prefixCls + '-vertical', vertical), _classNames));
      var markProps = {
        props: {
          vertical: vertical,
          marks: marks,
          included: included,
          lowerBound: this.getLowerBound(),
          upperBound: this.getUpperBound(),
          max: max,
          min: min,
          className: prefixCls + '-mark'
        },
        on: {
          clickLabel: disabled ? createSlider_noop : this.onClickMarkLabel
        }
      };
      return h(
        'div',
        {
          ref: 'sliderRef',
          attrs: { tabIndex: '-1'
          },
          'class': sliderClassName,
          on: {
            'touchstart': disabled ? createSlider_noop : this.onTouchStart,
            'mousedown': disabled ? createSlider_noop : this.onMouseDown,
            'mouseup': disabled ? createSlider_noop : this.onMouseUp,
            'keydown': disabled ? createSlider_noop : this.onKeyDown,
            'focus': disabled ? createSlider_noop : this.onFocus,
            'blur': disabled ? createSlider_noop : this.onBlur
          }
        },
        [h('div', {
          'class': prefixCls + '-rail',
          style: extends_default()({}, maximumTrackStyle, railStyle)
        }), tracks, h(common_Steps, {
          attrs: {
            prefixCls: prefixCls,
            vertical: vertical,
            marks: marks,
            dots: dots,
            step: step,
            included: included,
            lowerBound: this.getLowerBound(),
            upperBound: this.getUpperBound(),
            max: max,
            min: min,
            dotStyle: dotStyle,
            activeDotStyle: activeDotStyle
          }
        }), handles, h(common_Marks, markProps), this.$slots['default']]
      );
    }
  };
}
// CONCATENATED MODULE: ./node_modules/ant-design-vue/es/vc-slider/src/Slider.js









var Slider_Slider = {
  name: 'Slider',
  mixins: [BaseMixin],
  props: {
    defaultValue: vue_types.number,
    value: vue_types.number,
    disabled: vue_types.bool,
    autoFocus: vue_types.bool,
    tabIndex: vue_types.number,
    min: vue_types.number,
    max: vue_types.number
  },
  data: function data() {
    var defaultValue = this.defaultValue !== undefined ? this.defaultValue : this.min;
    var value = this.value !== undefined ? this.value : defaultValue;

    if (isDev()) {
      warning(!hasProp(this, 'minimumTrackStyle'), 'minimumTrackStyle will be deprecate, please use trackStyle instead.');
      warning(!hasProp(this, 'maximumTrackStyle'), 'maximumTrackStyle will be deprecate, please use railStyle instead.');
    }
    return {
      sValue: this.trimAlignValue(value),
      dragging: false
    };
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      var autoFocus = _this.autoFocus,
          disabled = _this.disabled;

      if (autoFocus && !disabled) {
        _this.focus();
      }
    });
  },

  watch: {
    value: {
      handler: function handler(val) {
        var min = this.min,
            max = this.max;

        this.setChangeValue(val, min, max);
      },

      deep: true
    },
    min: function min(val) {
      var sValue = this.sValue,
          max = this.max;

      this.setChangeValue(sValue, val, max);
    },
    max: function max(val) {
      var sValue = this.sValue,
          min = this.min;

      this.setChangeValue(sValue, min, val);
    }
  },
  methods: {
    setChangeValue: function setChangeValue(value, min, max) {
      var minAmaxProps = {
        min: min,
        max: max
      };
      var newValue = value !== undefined ? value : this.sValue;
      var nextValue = this.trimAlignValue(newValue, minAmaxProps);
      if (nextValue === this.sValue) return;

      this.setState({ sValue: nextValue });
      if (isValueOutOfRange(newValue, minAmaxProps)) {
        this.$emit('change', nextValue);
      }
    },
    onChange: function onChange(state) {
      var isNotControlled = !hasProp(this, 'value');
      if (isNotControlled) {
        this.setState(state);
      }

      var changedValue = state.sValue;
      this.$emit('change', changedValue);
    },
    onStart: function onStart(position) {
      this.setState({ dragging: true });
      var sValue = this.sValue;

      this.$emit('beforeChange', sValue);

      var value = this.calcValueByPos(position);

      this.startValue = value;
      this.startPosition = position;
      if (value === sValue) return;

      this.prevMovedHandleIndex = 0;
      this.onChange({ sValue: value });
    },
    onEnd: function onEnd() {
      this.setState({ dragging: false });
      this.removeDocumentEvents();
      this.$emit('afterChange', this.sValue);
    },
    onMove: function onMove(e, position) {
      pauseEvent(e);
      var sValue = this.sValue;

      var value = this.calcValueByPos(position);
      if (value === sValue) return;

      this.onChange({ sValue: value });
    },
    onKeyboard: function onKeyboard(e) {
      var valueMutator = getKeyboardValueMutator(e);

      if (valueMutator) {
        pauseEvent(e);
        var sValue = this.sValue;

        var mutatedValue = valueMutator(sValue, this.$props);
        var value = this.trimAlignValue(mutatedValue);
        if (value === sValue) return;

        this.onChange({ sValue: value });
      }
    },
    getLowerBound: function getLowerBound() {
      return this.min;
    },
    getUpperBound: function getUpperBound() {
      return this.sValue;
    },
    trimAlignValue: function trimAlignValue(v) {
      var nextProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (v === null) {
        return null;
      }
      var mergedProps = extends_default()({}, this.$props, nextProps);
      var val = ensureValueInRange(v, mergedProps);
      return ensureValuePrecision(val, mergedProps);
    },
    getTrack: function getTrack(_ref) {
      var prefixCls = _ref.prefixCls,
          vertical = _ref.vertical,
          included = _ref.included,
          offset = _ref.offset,
          minimumTrackStyle = _ref.minimumTrackStyle,
          _trackStyle = _ref._trackStyle;
      var h = this.$createElement;

      return h(common_Track, {
        'class': prefixCls + '-track',
        attrs: { vertical: vertical,
          included: included,
          offset: 0,
          length: offset
        },
        style: extends_default()({}, minimumTrackStyle, _trackStyle)
      });
    },
    renderSlider: function renderSlider() {
      var _this2 = this;

      var prefixCls = this.prefixCls,
          vertical = this.vertical,
          included = this.included,
          disabled = this.disabled,
          minimumTrackStyle = this.minimumTrackStyle,
          trackStyle = this.trackStyle,
          handleStyle = this.handleStyle,
          tabIndex = this.tabIndex,
          min = this.min,
          max = this.max,
          handle = this.handle,
          defaultHandle = this.defaultHandle;

      var handleGenerator = handle || defaultHandle;
      var sValue = this.sValue,
          dragging = this.dragging;

      var offset = this.calcOffset(sValue);
      var handles = handleGenerator({
        className: prefixCls + '-handle',
        prefixCls: prefixCls,
        vertical: vertical,
        offset: offset,
        value: sValue,
        dragging: dragging,
        disabled: disabled,
        min: min,
        max: max,
        index: 0,
        tabIndex: tabIndex,
        style: handleStyle[0] || handleStyle,
        directives: [{
          name: 'ant-ref',
          value: function value(h) {
            return _this2.saveHandle(0, h);
          }
        }],
        on: {
          focus: this.onFocus,
          blur: this.onBlur
        }
      });

      var _trackStyle = trackStyle[0] || trackStyle;
      return {
        tracks: this.getTrack({
          prefixCls: prefixCls,
          vertical: vertical,
          included: included,
          offset: offset,
          minimumTrackStyle: minimumTrackStyle,
          _trackStyle: _trackStyle
        }),
        handles: handles
      };
    }
  }
};

/* harmony default export */ var src_Slider = (createSlider(Slider_Slider));
// CONCATENATED MODULE: ./src/packages/slider/src/index.tsx














var slider_src_Slider =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(Slider, _FormComponent);

  function Slider() {
    _classCallCheck(this, Slider);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Slider).apply(this, arguments));
  }

  _createClass(Slider, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];

      var props = assign_default()({}, this.$props, {
        disabled: this.isDisabled
      });

      return h("div", {
        "class": "".concat(this.prefixCls, "-wrapper")
      }, [h(src_Slider, helper_default()([{}, {
        "props": props
      }, {
        "attrs": {
          "value": this.currentValue
        }
      }, {
        "on": {
          change: function change(value) {
            _this.currentValue = value;
          }
        }
      }]))]);
    }
  }]);

  return Slider;
}(form_component_FormComponent);

__decorate([Prop({
  type: String,
  default: 'am-slider'
})], slider_src_Slider.prototype, "prefixCls", void 0);

__decorate([Prop({})], slider_src_Slider.prototype, "marks", void 0);

__decorate([Prop({
  type: Boolean
})], slider_src_Slider.prototype, "dots", void 0);

__decorate([Prop({
  type: Boolean
})], slider_src_Slider.prototype, "included", void 0);

__decorate([Prop({})], slider_src_Slider.prototype, "handleStyle", void 0);

__decorate([Prop({})], slider_src_Slider.prototype, "trackStyle", void 0);

__decorate([Prop({})], slider_src_Slider.prototype, "railStyle", void 0);

__decorate([Prop({})], slider_src_Slider.prototype, "tipFormatter", void 0);

__decorate([Prop({
  type: Number
})], slider_src_Slider.prototype, "min", void 0);

__decorate([Prop({
  type: Number
})], slider_src_Slider.prototype, "max", void 0);

__decorate([Prop({
  type: Number
})], slider_src_Slider.prototype, "step", void 0);

__decorate([Prop({})], slider_src_Slider.prototype, "handle", void 0);

slider_src_Slider = __decorate([vue_class_component_common_default()({
  name: 'Slider'
})], slider_src_Slider);
/* harmony default export */ var slider_src = (slider_src_Slider);
// CONCATENATED MODULE: ./src/packages/slider/src/slider-item.tsx














var slider_item_SliderItem =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(SliderItem, _FormComponent);

  function SliderItem() {
    _classCallCheck(this, SliderItem);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(SliderItem).apply(this, arguments));
  }

  _createClass(SliderItem, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      return h(list.Item, {
        "attrs": {
          "multipleLine": true,
          "disabled": this.isDisabled
        }
      }, [this.title, h(list.Item.Brief, {
        "style": {
          padding: '15px'
        }
      }, [h(slider_src, helper_default()([{}, {
        "props": this.$props
      }, {
        "attrs": {
          "disabled": this.isDisabled,
          "value": this.currentValue
        }
      }, {
        "on": {
          change: function change(v) {
            _this.currentValue = v;
          }
        }
      }]))])]);
    }
  }]);

  return SliderItem;
}(form_component_FormComponent);

__decorate([Prop({
  type: String,
  default: 'am-slider'
})], slider_item_SliderItem.prototype, "prefixCls", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "marks", void 0);

__decorate([Prop({
  type: Boolean
})], slider_item_SliderItem.prototype, "dots", void 0);

__decorate([Prop({
  type: Boolean
})], slider_item_SliderItem.prototype, "included", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "maximumTrackStyle", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "minimumTrackStyle", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "handleStyle", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "trackStyle", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "railStyle", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "tipFormatter", void 0);

__decorate([Prop({
  type: Number
})], slider_item_SliderItem.prototype, "min", void 0);

__decorate([Prop({
  type: Number
})], slider_item_SliderItem.prototype, "max", void 0);

__decorate([Prop({
  type: Number
})], slider_item_SliderItem.prototype, "step", void 0);

__decorate([Prop({})], slider_item_SliderItem.prototype, "handle", void 0);

__decorate([Prop({
  type: String
})], slider_item_SliderItem.prototype, "title", void 0);

slider_item_SliderItem = __decorate([vue_class_component_common_default()({
  name: 'SliderItem'
})], slider_item_SliderItem);
/* harmony default export */ var slider_item = (slider_item_SliderItem);
// EXTERNAL MODULE: ./src/packages/slider/style/index.less
var slider_style = __webpack_require__("e82a");

// CONCATENATED MODULE: ./src/packages/slider/style/index.ts

// CONCATENATED MODULE: ./src/packages/slider/index.ts



slider_src.Item = slider_item;

slider_src.install = function (Vue) {
  Vue.component('MSlider', slider_src);
  Vue.component('MSliderItem', slider_src.Item);
};

/* harmony default export */ var slider = (slider_src);
// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/parse-float.js
var parse_float = __webpack_require__("59ad");
var parse_float_default = /*#__PURE__*/__webpack_require__.n(parse_float);

// EXTERNAL MODULE: ./node_modules/@babel/runtime-corejs2/core-js/number/max-safe-integer.js
var max_safe_integer = __webpack_require__("8bd2");
var max_safe_integer_default = /*#__PURE__*/__webpack_require__.n(max_safe_integer);

// CONCATENATED MODULE: ./src/packages/vmc-input-number/base.tsx
















function defaultParser(input) {
  if (typeof input === 'number') {
    return input;
  }

  return input.replace(/[^\w\.-]+/g, '');
}
/**
 * When click and hold on a button - the speed of auto changin the value.
 */


var SPEED = 200;
/**
 * When click and hold on a button - the delay before auto changin the value.
 */

var DELAY = 600;
/**
 * Max Safe Integer -- on IE this is not available, so manually set the number in that case.
 * The reason this is used, instead of Infinity is because numbers above the MSI are unstable
 */

var MAX_SAFE_INTEGER = max_safe_integer_default.a || Math.pow(2, 53) - 1;

var base_BaseComponent =
/*#__PURE__*/
function (_Vue) {
  _inherits(BaseComponent, _Vue);

  function BaseComponent() {
    var _this;

    _classCallCheck(this, BaseComponent);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(BaseComponent).apply(this, arguments));
    _this.state = {
      inputValue: null,
      focused: _this.autoFocus
    };
    return _this;
  }

  _createClass(BaseComponent, [{
    key: "created",
    value: function created() {
      var _this2 = this;

      var value = this.value !== undefined ? this.toNumber(this.value) : this.defaultValue;
      this.state.inputValue = this.toPrecisionAsStep(value);
      this.$watch(function () {
        return _this2.value;
      }, function () {
        _this2.state.inputValue = _this2.state.focused ? _this2.value : _this2.getValidValue(_this2.value);
      });
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      this.stop();
    }
  }, {
    key: "onChange",
    value: function onChange(e) {
      var parser = this.parser;
      var input = typeof e === 'number' ? e : parser && parser(e.target.value);
      this.state.inputValue = parse_float_default()(input);
      this.$emit('change', this.toNumberWhenUserInput(input));
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      var v = value !== undefined ? this.toNumber(value) : this.defaultValue;
      this.state.inputValue = this.toPrecisionAsStep(v);
    }
  }, {
    key: "onFocus",
    value: function onFocus() {
      this.state.focused = true;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      this.$emit.apply(this, ['focus'].concat(args));
    }
  }, {
    key: "onBlur",
    value: function onBlur(e) {
      var _this3 = this;

      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      this.state.focused = false;
      var value = this.getCurrentValidValue(this.state.inputValue);

      if (e.persist) {
        e.persist(); // fix https://github.com/react-component/input-number/issues/51
      }

      this.setValue(value, function () {
        _this3.$emit.apply(_this3, ['blur', e].concat(args));
      });
    }
  }, {
    key: "getCurrentValidValue",
    value: function getCurrentValidValue(value) {
      var val = value;

      if (val === '') {
        val = '';
      } else if (!this.isNotCompleteNumber(val)) {
        val = this.getValidValue(val);
      } else {
        val = this.state.inputValue;
      }

      return this.toNumber(val);
    }
  }, {
    key: "getValidValue",
    value: function getValidValue(value) {
      var val = parse_float_default()(value.toString());

      if (isNaN(val)) {
        return value;
      }

      if (val < this.min) {
        val = this.min;
      }

      if (val > this.max) {
        val = this.max;
      }

      return val;
    }
  }, {
    key: "setValue",
    value: function setValue(v, callback) {
      // trigger onChange
      var newValue = this.isNotCompleteNumber(parse_float_default()(v)) ? undefined : parse_float_default()(v);
      var changed = newValue !== this.state.inputValue || "".concat(newValue) !== "".concat(this.state.inputValue); // https://github.com/ant-design/ant-design/issues/7363

      if (this.value === undefined) {
        this.state.inputValue = this.toPrecisionAsStep(v);
        callback && callback();
      } else {
        // always set input value same as value
        this.state.inputValue = this.toPrecisionAsStep(v);
        callback && callback();
      }

      if (changed) {
        this.$emit('change', newValue);
      }
    }
  }, {
    key: "stateValueChanged",
    value: function stateValueChanged(v) {
      this.$emit('input', v);
    }
  }, {
    key: "getPrecision",
    value: function getPrecision(value) {
      if (this.precision) {
        return this.precision;
      }

      var valueString = value.toString();

      if (valueString.indexOf('e-') >= 0) {
        return parse_int_default()(valueString.slice(valueString.indexOf('e-') + 2), 10);
      }

      var precision = 0;

      if (valueString.indexOf('.') >= 0) {
        precision = valueString.length - valueString.indexOf('.') - 1;
      }

      return precision;
    }
  }, {
    key: "getMaxPrecision",
    value: function getMaxPrecision(currentValue) {
      var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

      if (this.precision) {
        return this.precision;
      }

      var step = this.step;
      var ratioPrecision = this.getPrecision(ratio);
      var stepPrecision = this.getPrecision(step);
      var currentValuePrecision = this.getPrecision(currentValue);

      if (!currentValue) {
        return ratioPrecision + stepPrecision;
      }

      return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);
    }
  }, {
    key: "getPrecisionFactor",
    value: function getPrecisionFactor(currentValue) {
      var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var precision = this.getMaxPrecision(currentValue, ratio);
      return Math.pow(10, precision);
    }
  }, {
    key: "toPrecisionAsStep",
    value: function toPrecisionAsStep(num) {
      if (this.isNotCompleteNumber(num)) {
        return num;
      }

      var precision = Math.abs(this.getMaxPrecision(num));

      if (!isNaN(precision)) {
        return parse_float_default()(Number(num).toFixed(precision));
      }

      return num;
    }
  }, {
    key: "isNotCompleteNumber",
    value: function isNotCompleteNumber(num) {
      return isNaN(num) || num === '' || num === null || num && num.toString().indexOf('.') === num.toString().length - 1;
    }
  }, {
    key: "toNumber",
    value: function toNumber(num) {
      if (this.isNotCompleteNumber(num)) {
        return num;
      }

      if (this.precision) {
        return Number(Number(num).toFixed(this.precision));
      }

      return Number(num);
    }
  }, {
    key: "toNumberWhenUserInput",
    value: function toNumberWhenUserInput(num) {
      // num.length > 16 => prevent input large number will became Infinity
      if ((/\.\d*0$/.test(num) || num.length > 16) && this.state.focused) {
        return num;
      }

      return this.toNumber(num);
    }
  }, {
    key: "stepCompute",
    value: function stepCompute(type, val, rat) {
      var step = this.step,
          min = this.min;
      var precisionFactor = this.getPrecisionFactor(val, rat);
      var precision = Math.abs(this.getMaxPrecision(val, rat));
      var result;
      var direct = type === 'up' ? 1 : -1;

      if (typeof val === 'number') {
        result = ((precisionFactor * val + direct * precisionFactor * +step * rat) / precisionFactor).toFixed(precision);
      } else {
        result = min === -Infinity ? direct * +step : min;
      }

      return this.toNumber(result);
    }
  }, {
    key: "stepTo",
    value: function stepTo(type, e) {
      var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

      if (e) {
        e.preventDefault();
      }

      var props = this;

      if (this.disabled) {
        return false;
      }

      var value = this.getCurrentValidValue(this.state.inputValue) || 0;

      if (this.isNotCompleteNumber(value)) {
        return false;
      }

      var val = this.stepCompute(type, value, ratio);
      var outOfRange = val > props.max || val < props.min;

      if (val > props.max) {
        val = props.max;
      } else if (val < props.min) {
        val = props.min;
      }

      this.setValue(val);
      this.state.focused = true;
      return !outOfRange;
    }
  }, {
    key: "stop",
    value: function stop() {
      if (this.autoStepTimer) {
        clearTimeout(this.autoStepTimer);
      }
    }
  }, {
    key: "action",
    value: function action(type, e, ratio, recursive) {
      var _this4 = this;

      if (e.persist) {
        e.persist();
      }

      this.stop();

      if (this.stepTo(type, e, ratio)) {
        this.autoStepTimer = setTimeout(function () {
          _this4.action(type, e, ratio, true);
        }, recursive ? SPEED : DELAY);
      }
    }
  }, {
    key: "down",
    value: function down(e, ratio, recursive) {
      this.action('down', e, ratio, recursive);
    }
  }, {
    key: "up",
    value: function up(e, ratio, recursive) {
      this.action('up', e, ratio, recursive);
    }
  }]);

  return BaseComponent;
}(external_Vue_default.a);

__decorate([Prop([String, Number])], base_BaseComponent.prototype, "step", void 0);

__decorate([Prop({
  type: Function,
  default: defaultParser
})], base_BaseComponent.prototype, "parser", void 0);

__decorate([Prop(Number)], base_BaseComponent.prototype, "value", void 0);

__decorate([Prop(Number)], base_BaseComponent.prototype, "defaultValue", void 0);

__decorate([Prop(Number)], base_BaseComponent.prototype, "min", void 0);

__decorate([Prop(Number)], base_BaseComponent.prototype, "max", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], base_BaseComponent.prototype, "autoFocus", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], base_BaseComponent.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], base_BaseComponent.prototype, "readOnly", void 0);

__decorate([Prop(Number)], base_BaseComponent.prototype, "precision", void 0);

__decorate([Watch('value')], base_BaseComponent.prototype, "valueChanged", null);

__decorate([Watch('state.inputValue')], base_BaseComponent.prototype, "stateValueChanged", null);

base_BaseComponent = __decorate([vue_class_component_common_default()({
  name: 'BaseComponent'
})], base_BaseComponent);
/* harmony default export */ var vmc_input_number_base = (base_BaseComponent);
// CONCATENATED MODULE: ./src/packages/vmc-input-number/input-handler.tsx














var input_handler_InputHandler =
/*#__PURE__*/
function (_Vue) {
  _inherits(InputHandler, _Vue);

  function InputHandler() {
    var _this;

    _classCallCheck(this, InputHandler);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(InputHandler).apply(this, arguments));
    _this.active = false;
    return _this;
  }

  _createClass(InputHandler, [{
    key: "disabledChange",
    value: function disabledChange(disabled) {
      if (!disabled) {
        this.active = false;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];

      var _a = this.$props,
          prefixCls = _a.prefixCls,
          disabled = _a.disabled,
          otherProps = __rest(_a, ["prefixCls", "disabled"]);

      return h(feedback, helper_default()([{
        "attrs": {
          "disabled": disabled
        }
      }, {
        "on": {
          touchstart: function touchstart() {
            _this2.active = true;

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            _this2.$emit.apply(_this2, ['touchstart'].concat(args));
          },
          touchend: function touchend() {
            _this2.active = false;

            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            _this2.$emit.apply(_this2, ['touchend'].concat(args));
          }
        }
      }]), [h("span", helper_default()([{
        "class": _defineProperty({}, "".concat(prefixCls, "-handler-active"), this.active && !this.disabled)
      }, otherProps, {
        "on": {
          "click": function click() {
            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              args[_key3] = arguments[_key3];
            }

            _this2.$emit.apply(_this2, ['click'].concat(args));
          }
        }
      }]), [this.$slots.default])]);
    }
  }]);

  return InputHandler;
}(external_Vue_default.a);

__decorate([Prop({
  type: String
})], input_handler_InputHandler.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean
})], input_handler_InputHandler.prototype, "disabled", void 0);

__decorate([Prop({
  type: String
})], input_handler_InputHandler.prototype, "role", void 0);

__decorate([Prop({
  type: Boolean
})], input_handler_InputHandler.prototype, "unselectable", void 0);

__decorate([Watch('disabled')], input_handler_InputHandler.prototype, "disabledChange", null);

input_handler_InputHandler = __decorate([vue_class_component_common_default()({
  name: 'InputHandler'
})], input_handler_InputHandler);
/* harmony default export */ var input_handler = (input_handler_InputHandler);
// CONCATENATED MODULE: ./src/packages/vmc-input-number/index.tsx

















function vmc_input_number_noop() {}

function preventDefault(e) {
  e.preventDefault();
}

var vmc_input_number_InputNumber =
/*#__PURE__*/
function (_BaseComponent) {
  _inherits(InputNumber, _BaseComponent);

  function InputNumber() {
    _classCallCheck(this, InputNumber);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(InputNumber).apply(this, arguments));
  }

  _createClass(InputNumber, [{
    key: "update",
    value: function update() {
      if (this.focusOnUpDown && this.state.focused) {
        var selectionRange = this.input.setSelectionRange;

        if (selectionRange && typeof selectionRange === 'function' && this.start !== undefined && this.end !== undefined && this.start !== this.end) {
          this.input.setSelectionRange(this.start, this.end);
        } else {
          this.focus();
        }
      }
    }
  }, {
    key: "mounted",
    value: function mounted() {
      this.update();
    }
  }, {
    key: "beforeUpdate",
    value: function beforeUpdate() {
      try {
        this.start = this.input.selectionStart;
        this.end = this.input.selectionEnd;
      } catch (e) {// Fix error in Chrome:
        // Failed to read the 'selectionStart' property from 'HTMLInputElement'
        // http://stackoverflow.com/q/21177489/3040605
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      this.input.focus();
    }
  }, {
    key: "formatWrapper",
    value: function formatWrapper(num) {
      if (this.formatter) {
        return this.formatter(num);
      }

      return num;
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames,
          _this = this;

      var h = arguments[0];
      var _this$prefixCls = this.prefixCls,
          prefixCls = _this$prefixCls === void 0 ? '' : _this$prefixCls,
          disabled = this.disabled,
          readOnly = this.readOnly,
          max = this.max,
          step = this.step,
          valueEditable = this.valueEditable,
          autoFocus = this.autoFocus,
          tabIndex = this.tabIndex,
          min = this.min;
      var classes = classnames_default()((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, "".concat(prefixCls, "-disabled"), disabled), _defineProperty(_classNames, "".concat(prefixCls, "-focused"), this.state.focused), _classNames));
      var upDisabledClass = '';
      var downDisabledClass = '';
      var inputValue = this.state.inputValue;

      if (inputValue || inputValue === 0) {
        if (!isNaN(inputValue)) {
          var val = Number(inputValue);

          if (val >= max) {
            upDisabledClass = "".concat(prefixCls, "-handler-up-disabled");
          }

          if (val <= min) {
            downDisabledClass = "".concat(prefixCls, "-handler-down-disabled");
          }
        } else {
          upDisabledClass = "".concat(prefixCls, "-handler-up-disabled");
          downDisabledClass = "".concat(prefixCls, "-handler-down-disabled");
        }
      }

      var editable = !readOnly && !disabled; // focus state, show input value
      // unfocus state, show valid value

      var inputDisplayValue;

      if (this.state.focused) {
        inputDisplayValue = this.state.inputValue;
      } else {
        inputDisplayValue = this.toPrecisionAsStep(this.state.inputValue);
      }

      if (inputDisplayValue === undefined || inputDisplayValue === null) {
        inputDisplayValue = '';
      }

      var upEvents;
      var downEvents;
      upEvents = {
        touchstart: editable && !upDisabledClass ? this.up : vmc_input_number_noop,
        touchend: this.stop,
        click: function click() {
          if (editable && !upDisabledClass) {
            // @ts-ignore
            _this.up.apply(_this, arguments);

            _this.stop();
          }
        }
      };
      downEvents = {
        touchstart: editable && !downDisabledClass ? this.down : vmc_input_number_noop,
        touchend: this.stop,
        click: function click() {
          if (editable && !upDisabledClass) {
            // @ts-ignore
            _this.down.apply(_this, arguments);

            _this.stop();
          }
        }
      };
      var inputDisplayValueFormat = this.formatWrapper(inputDisplayValue);
      var isUpDisabled = !!upDisabledClass || disabled || readOnly;
      var isDownDisabled = !!downDisabledClass || disabled || readOnly;
      return h("div", {
        "class": classes
      }, [h("div", {
        "class": "".concat(prefixCls, "-handler-wrap")
      }, [h(input_handler, helper_default()([{
        "attrs": {
          "disabled": isUpDisabled,
          "prefixCls": prefixCls,
          "unselectable": "unselectable"
        }
      }, {
        "on": assign_default()({}, upEvents)
      }, {
        "attrs": {
          "role": "button",
          "aria-label": "Increase Value",
          "aria-disabled": isUpDisabled
        },
        "class": "".concat(prefixCls, "-handler ").concat(prefixCls, "-handler-up ").concat(upDisabledClass)
      }]), [this.upHandler || h("span", {
        "attrs": {
          "unselectable": "unselectable"
        },
        "class": "".concat(prefixCls, "-handler-up-inner"),
        "on": {
          "click": preventDefault
        }
      })]), h(input_handler, helper_default()([{
        "attrs": {
          "disabled": isDownDisabled,
          "prefixCls": prefixCls,
          "unselectable": "unselectable"
        }
      }, {
        "on": assign_default()({}, downEvents)
      }, {
        "attrs": {
          "role": "button",
          "aria-label": "Decrease Value",
          "aria-disabled": isDownDisabled
        },
        "class": "".concat(prefixCls, "-handler ").concat(prefixCls, "-handler-down ").concat(downDisabledClass)
      }]), [this.downHandler || h("span", {
        "attrs": {
          "unselectable": "unselectable"
        },
        "class": "".concat(prefixCls, "-handler-down-inner"),
        "on": {
          "click": preventDefault
        }
      })])]), h("div", {
        "class": "".concat(prefixCls, "-input-wrap"),
        "attrs": {
          "role": "spinbutton",
          "aria-valuemin": min,
          "aria-valuemax": max,
          "aria-valuenow": inputValue
        }
      }, [h("input", {
        "class": "".concat(prefixCls, "-input"),
        "attrs": {
          "tabIndex": tabIndex,
          "autoComplete": "off",
          "autoFocus": autoFocus,
          "readOnly": readOnly || !valueEditable,
          "disabled": disabled,
          "max": max,
          "min": min,
          "step": step
        },
        "on": {
          "focus": this.onFocus,
          "blur": this.onBlur,
          "change": this.onChange
        },
        "ref": "input",
        "domProps": {
          "value": inputDisplayValueFormat
        }
      })])]);
    }
  }, {
    key: "input",
    get: function get() {
      return this.$refs.input;
    }
  }]);

  return InputNumber;
}(vmc_input_number_base);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_input_number_InputNumber.prototype, "valueEditable", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], vmc_input_number_InputNumber.prototype, "focusOnUpDown", void 0);

__decorate([Prop({
  type: String,
  default: 'rmc-input-number'
})], vmc_input_number_InputNumber.prototype, "prefixCls", void 0);

__decorate([Prop(Number)], vmc_input_number_InputNumber.prototype, "tabIndex", void 0);

__decorate([Prop(Object)], vmc_input_number_InputNumber.prototype, "upHandler", void 0);

__decorate([Prop(Object)], vmc_input_number_InputNumber.prototype, "downHandler", void 0);

__decorate([Prop(Function)], vmc_input_number_InputNumber.prototype, "formatter", void 0);

vmc_input_number_InputNumber = __decorate([vue_class_component_common_default()({
  name: 'InputNumber'
})], vmc_input_number_InputNumber);
/* harmony default export */ var vmc_input_number = (vmc_input_number_InputNumber);
// CONCATENATED MODULE: ./src/packages/stepper/src/index.tsx















var src_MStepper =
/*#__PURE__*/
function (_Vue) {
  _inherits(MStepper, _Vue);

  function MStepper() {
    _classCallCheck(this, MStepper);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(MStepper).apply(this, arguments));
  }

  _createClass(MStepper, [{
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _a = this.$props,
          showNumber = _a.showNumber,
          restProps = __rest(_a, ["showNumber"]);

      var stepperClass = classnames_default()({
        showNumber: !!showNumber
      });
      restProps.upHandler = h(packages_icon, {
        "attrs": {
          "type": "plus",
          "size": "xxs"
        }
      });
      restProps.downHandler = h(packages_icon, {
        "attrs": {
          "type": "minus",
          "size": "xxs"
        }
      });
      return h(vmc_input_number, helper_default()([{}, {
        "on": this.$listeners
      }, {}, {
        "props": restProps
      }, {
        "class": stepperClass
      }]));
    }
  }]);

  return MStepper;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-stepper'
})], src_MStepper.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: true
})], src_MStepper.prototype, "showNumber", void 0);

__decorate([Prop({
  type: Number
})], src_MStepper.prototype, "min", void 0);

__decorate([Prop({
  type: Number
})], src_MStepper.prototype, "max", void 0);

__decorate([Prop({
  default: 1
})], src_MStepper.prototype, "step", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_MStepper.prototype, "readOnly", void 0);

__decorate([Prop({
  type: Boolean
})], src_MStepper.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean
})], src_MStepper.prototype, "autoFocus", void 0);

__decorate([Prop({
  type: Number
})], src_MStepper.prototype, "value", void 0);

__decorate([Prop({
  type: Number
})], src_MStepper.prototype, "defaultValue", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_MStepper.prototype, "valueEditable", void 0);

__decorate([Prop({})], src_MStepper.prototype, "upStyle", void 0);

__decorate([Prop({})], src_MStepper.prototype, "downStyle", void 0);

__decorate([Prop({})], src_MStepper.prototype, "inputStyle", void 0);

__decorate([Prop({
  type: String
})], src_MStepper.prototype, "name", void 0);

src_MStepper = __decorate([vue_class_component_common_default()({
  name: 'MStepper'
})], src_MStepper);
/* harmony default export */ var stepper_src = (src_MStepper);
// EXTERNAL MODULE: ./src/packages/stepper/style/index.less
var stepper_style = __webpack_require__("44e6");

// CONCATENATED MODULE: ./src/packages/stepper/style/index.tsx



// CONCATENATED MODULE: ./src/packages/stepper/index.ts



stepper_src.install = function (Vue) {
  Vue.component('MStepper', stepper_src);
};

/* harmony default export */ var stepper = (stepper_src);
// CONCATENATED MODULE: ./src/packages/steps/src/index.tsx

















var src_Steps =
/*#__PURE__*/
function (_Vue) {
  _inherits(Steps, _Vue);

  function Steps() {
    var _this;

    _classCallCheck(this, Steps);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Steps).apply(this, arguments));
    _this.steps = _assertThisInitialized(_this);
    return _this;
  }

  _createClass(Steps, [{
    key: "render",
    value: function render() {
      var _classNames,
          _this2 = this;

      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          direction = _a.direction,
          labelPlacement = _a.labelPlacement,
          iconPrefix = _a.iconPrefix,
          status = _a.status,
          size = _a.size,
          current = _a.current,
          progressDot = _a.progressDot,
          restProps = __rest(_a, ["prefixCls", "direction", "labelPlacement", "iconPrefix", "status", "size", "current", "progressDot"]);

      var adjustedlabelPlacement = !!progressDot ? 'vertical' : labelPlacement;
      var classString = classnames_default()(prefixCls, "".concat(prefixCls, "-").concat(direction), (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-").concat(size), size), _defineProperty(_classNames, "".concat(prefixCls, "-label-").concat(adjustedlabelPlacement), direction === 'horizontal'), _defineProperty(_classNames, "".concat(prefixCls, "-dot"), !!progressDot), _classNames));
      return h("div", helper_default()([{
        "class": classString
      }, restProps]), [this.$slots.default.map(function (child, index) {
        if (!child) {
          return null;
        }

        var childProps = {
          stepNumber: index + 1,
          prefixCls: prefixCls,
          iconPrefix: iconPrefix,
          icon: child.componentOptions.propsData['icon'] || '',
          wrapperStyle: {},
          progressDot: progressDot,
          status: child.componentOptions.propsData['status'] || '',
          class: ''
        };
        var icon = _this2.icon;

        if (!icon) {
          if (index < current) {
            // 对应 state: finish
            icon = 'check-circle-o';
          } else if (index > current) {
            // 对应 state: wait
            icon = 'ellipsis';
            childProps.class = 'ellipsis-item';
          }

          if (status === 'error' && index === current || child.componentOptions.propsData['status'] === 'error') {
            icon = 'cross-circle-o';
          }
        }

        if (icon) {
          childProps.icon = icon;
        } // fix tail color


        if (status === 'error' && index === current - 1) {
          childProps.class = "".concat(prefixCls, "-next-error");
        }

        if (!child.componentOptions.propsData['status']) {
          if (index === current) {
            childProps.status = status;
          } else if (index < current) {
            childProps.status = 'finish';
          } else {
            childProps.status = 'wait';
          }
        }

        keys_default()(childProps).forEach(function (key) {
          child.componentOptions.propsData[key] = childProps[key];
        });

        return child;
      })]);
    }
  }]);

  return Steps;
}(external_Vue_default.a);

__decorate([Prop(String)], src_Steps.prototype, "icon", void 0);

__decorate([Prop({
  type: String,
  default: 'am-steps'
})], src_Steps.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'ant'
})], src_Steps.prototype, "iconPrefix", void 0);

__decorate([Prop({
  type: String,
  default: 'vertical'
})], src_Steps.prototype, "direction", void 0);

__decorate([Prop({
  type: String,
  default: 'vertical'
})], src_Steps.prototype, "labelPlacement", void 0);

__decorate([Prop({
  type: String,
  default: 'process'
})], src_Steps.prototype, "status", void 0);

__decorate([Prop({
  type: String,
  default: ''
})], src_Steps.prototype, "size", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Steps.prototype, "progressDot", void 0);

__decorate([Prop({
  type: Number,
  default: 0
})], src_Steps.prototype, "current", void 0);

__decorate([Provide('steps')], src_Steps.prototype, "steps", void 0);

src_Steps = __decorate([vue_class_component_common_default()({
  name: 'Step'
})], src_Steps);
/* harmony default export */ var steps_src = (src_Steps);
// CONCATENATED MODULE: ./src/packages/steps/src/step.tsx















function step_isString(str) {
  return typeof str === 'string';
}

var statusIcon = {
  finish: 'check-circle',
  error: 'cross-circle-o',
  wait: 'ellipsis'
};

var step_Step =
/*#__PURE__*/
function (_Vue) {
  _inherits(Step, _Vue);

  function Step() {
    _classCallCheck(this, Step);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Step).apply(this, arguments));
  }

  _createClass(Step, [{
    key: "renderIconNode",
    value: function renderIconNode() {
      var _classNames;

      var h = this.$createElement;
      var prefixCls = this.prefixCls,
          progressDot = this.progressDot,
          stepNumber = this.stepNumber,
          status = this.status,
          title = this.title,
          description = this.description,
          icon = this.icon,
          iconPrefix = this.iconPrefix;

      if (this.$slots.icon) {
        return h("span", {
          "class": "".concat(prefixCls, "-icon")
        }, [this.$slots.icon]);
      }

      var iconNode;
      var iconClassName = classnames_default()("".concat(prefixCls, "-icon"), "".concat(iconPrefix, "icon"), (_classNames = {}, _defineProperty(_classNames, "".concat(iconPrefix, "icon-").concat(icon), icon && step_isString(icon)), _defineProperty(_classNames, "".concat(iconPrefix, "icon-check"), !icon && status === 'finish'), _defineProperty(_classNames, "".concat(iconPrefix, "icon-cross"), !icon && status === 'error'), _classNames));
      var iconStyle = {
        position: 'relative',
        left: '-1px'
      };
      var iconDot = h("span", {
        "class": "".concat(prefixCls, "-icon-dot")
      }); // `progressDot` enjoy the highest priority

      if (progressDot) {
        if (typeof progressDot === 'function') {
          iconNode = h("span", {
            "class": "".concat(prefixCls, "-icon")
          }, [progressDot(iconDot, {
            index: stepNumber - 1,
            status: status,
            title: title,
            description: description
          })]);
        } else {
          iconNode = h("span", {
            "class": "".concat(prefixCls, "-icon")
          }, [iconDot]);
        }
      } else if (icon && step_isString(icon)) {
        iconNode = h("span", {
          "class": "".concat(prefixCls, "-icon")
        }, [h(packages_icon, {
          "style": iconStyle,
          "attrs": {
            "size": this.iconSize,
            "type": icon
          }
        })]);
      } else if (icon || status === 'finish' || status === 'error') {
        iconNode = h("span", {
          "class": iconClassName
        });
      } else {
        iconNode = h("span", {
          "class": "".concat(prefixCls, "-icon")
        }, [stepNumber]);
      }

      return iconNode;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          itemWidth = _a.itemWidth,
          _a$status = _a.status,
          status = _a$status === void 0 ? 'wait' : _a$status,
          iconPrefix = _a.iconPrefix,
          icon = _a.icon,
          wrapperStyle = _a.wrapperStyle,
          adjustMarginRight = _a.adjustMarginRight,
          stepNumber = _a.stepNumber,
          description = _a.description,
          title = _a.title,
          progressDot = _a.progressDot,
          restProps = __rest(_a, ["prefixCls", "itemWidth", "status", "iconPrefix", "icon", "wrapperStyle", "adjustMarginRight", "stepNumber", "description", "title", "progressDot"]);

      var classString = classnames_default()("".concat(prefixCls, "-item"), "".concat(prefixCls, "-item-").concat(status), _defineProperty({}, "".concat(prefixCls, "-item-custom"), icon));
      var stepItemStyle = {};

      if (itemWidth) {
        stepItemStyle.width = itemWidth;
      }

      if (adjustMarginRight) {
        stepItemStyle.marginRight = adjustMarginRight;
      }

      return h("div", helper_default()([{}, restProps, {
        "class": classString,
        "style": stepItemStyle
      }]), [h("div", {
        "class": "".concat(prefixCls, "-item-tail")
      }), h("div", {
        "class": "".concat(prefixCls, "-item-icon")
      }, [this.renderIconNode()]), h("div", {
        "class": "".concat(prefixCls, "-item-content")
      }, [h("div", {
        "class": "".concat(prefixCls, "-item-title")
      }, [this.$slots.title ? this.$slots.title : title]), (description || this.$slots.description) && h("div", {
        "class": "".concat(prefixCls, "-item-description")
      }, [this.$slots.description ? this.$slots.description : description])])]);
    }
  }, {
    key: "iconSize",
    get: function get() {
      if (this.steps.size === 'small') {
        return 18;
      } else {
        return 22;
      }
    }
  }]);

  return Step;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-step'
})], step_Step.prototype, "prefixCls", void 0);

__decorate([Prop()], step_Step.prototype, "wrapperStyle", void 0);

__decorate([Prop([Number, String])], step_Step.prototype, "itemWidth", void 0);

__decorate([Prop(String)], step_Step.prototype, "status", void 0);

__decorate([Prop({
  type: String,
  default: 'ant'
})], step_Step.prototype, "iconPrefix", void 0);

__decorate([Prop(String)], step_Step.prototype, "icon", void 0);

__decorate([Prop([Number, String])], step_Step.prototype, "adjustMarginRight", void 0);

__decorate([Prop(Number)], step_Step.prototype, "stepNumber", void 0);

__decorate([Prop(String)], step_Step.prototype, "description", void 0);

__decorate([Prop(String)], step_Step.prototype, "title", void 0);

__decorate([Prop()], step_Step.prototype, "progressDot", void 0);

__decorate([Inject('steps')], step_Step.prototype, "steps", void 0);

step_Step = __decorate([vue_class_component_common_default()({
  name: 'Step'
})], step_Step);
/* harmony default export */ var src_step = (step_Step);
// EXTERNAL MODULE: ./src/packages/steps/style/index.less
var steps_style = __webpack_require__("d0ed");

// CONCATENATED MODULE: ./src/packages/steps/style/index.tsx


// CONCATENATED MODULE: ./src/packages/steps/index.ts



var steps_Plugin = steps_src;

steps_Plugin.install = function (Vue) {
  Vue.component('MSteps', steps_src);
  Vue.component('MStep', src_step);
};

/* harmony default export */ var steps = (steps_Plugin);
// CONCATENATED MODULE: ./src/packages/switch/src/switch.tsx
















var switch_Switch =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(Switch, _FormComponent);

  function Switch() {
    _classCallCheck(this, Switch);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Switch).apply(this, arguments));
  }

  _createClass(Switch, [{
    key: "onChange",
    value: function onChange(e) {
      this.currentValue = e.target.checked;
    }
  }, {
    key: "onClick",
    value: function onClick(e) {
      var val; // tslint:disable-next-line:prefer-conditional-expression

      if (e && e.target && e.target.checked !== undefined) {
        val = e.target.checked;
      } else {
        val = this.value;
      }

      this.currentValue = val;
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];

      var _a = this,
          prefixCls = _a.prefixCls,
          name = _a.name,
          disabled = _a.disabled,
          platform = _a.platform,
          color = _a.color,
          restProps = __rest(_a, ["prefixCls", "name", "disabled", "platform", "color"]);

      var wrapCls = classnames_default()(prefixCls, _defineProperty({}, "".concat(prefixCls, "-android"), platform === 'android'));
      var fackInputCls = classnames_default()('checkbox', _defineProperty({}, "checkbox-disabled", disabled));

      var globalProps = keys_default()(restProps).reduce(function (prev, key) {
        if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
          prev[key] = restProps[key];
        }

        return prev;
      }, {});

      var style = {};

      if (color && this.currentValue) {
        style.backgroundColor = color;
      }

      return h("label", {
        "class": wrapCls
      }, [h("input", helper_default()([{
        "attrs": {
          "type": "checkbox",
          "name": name,
          "disabled": disabled
        },
        "class": "".concat(prefixCls, "-checkbox"),
        "domProps": {
          "checked": this.currentValue,
          "value": this.currentValue ? 'on' : 'off'
        },
        "on": {
          "change": this.onChange
        }
      }, !disabled ? {
        onClick: this.onClick
      } : {}, {}, globalProps])), h("div", helper_default()([{
        "class": fackInputCls,
        "style": style
      }, disabled ? {
        onClick: this.onClick
      } : {}]))]);
    }
  }]);

  return Switch;
}(form_component_FormComponent);

__decorate([Prop({
  type: String
})], switch_Switch.prototype, "color", void 0);

__decorate([Prop({
  type: String
})], switch_Switch.prototype, "name", void 0);

__decorate([Prop({
  type: String,
  default: 'am-switch'
})], switch_Switch.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'ios'
})], switch_Switch.prototype, "platform", void 0);

switch_Switch = __decorate([vue_class_component_common_default()({
  name: 'MSwitch'
})], switch_Switch);
/* harmony default export */ var src_switch = (switch_Switch);
// CONCATENATED MODULE: ./src/packages/switch/src/switch-item.tsx

















var switch_item_ListItem = list.Item;

var switch_item_SwitchItem =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(SwitchItem, _FormComponent);

  function SwitchItem() {
    var _this;

    _classCallCheck(this, SwitchItem);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(SwitchItem).apply(this, arguments));
    _this.state = {
      value: _this.value
    };
    return _this;
  }

  _createClass(SwitchItem, [{
    key: "valueChanged",
    value: function valueChanged(value) {
      this.state.value = value;
    }
  }, {
    key: "stateValueChanged",
    value: function stateValueChanged(value, oldValue) {
      this.$emit('input', value);

      if (value !== oldValue) {
        this.$emit('change', value);
      }
    }
  }, {
    key: "onClick",
    value: function onClick(e) {
      if (!this.disabled) {
        this.$emit('click');
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var h = arguments[0];

      var _a = this.$props,
          listPrefixCls = _a.listPrefixCls,
          disabled = _a.disabled,
          switchProps = _a.switchProps,
          otherProps = __rest(_a, ["listPrefixCls", "disabled", "switchProps"]);

      var prefixCls = otherProps.prefixCls;
      var wrapCls = classnames_default()("".concat(prefixCls, "-item"), _defineProperty({}, "".concat(prefixCls, "-item-disabled"), disabled === true));
      var extraProps = {};
      ['name', 'disabled'].forEach(function (i) {
        if (i in _this2.$props) {
          extraProps[i] = _this2.$props[i];
        }
      }); // @ts-ignore

      var extra = h(src_switch, helper_default()([{}, {
        "attrs": assign_default()({}, switchProps, extraProps, this.$attrs)
      }, {
        "attrs": {
          "disabled": this.isDisabled
        },
        "on": {
          "click": this.onClick
        },
        "model": {
          value: _this2.state.value,
          callback: function callback($$v) {
            _this2.state.value = $$v;
          }
        }
      }]));
      return h(switch_item_ListItem, helper_default()([{}, {
        "attrs": assign_default()({}, otherProps)
      }, {
        "attrs": {
          "disabled": this.isDisabled,
          "prefixCls": listPrefixCls,
          "extra": extra
        },
        "class": wrapCls
      }]), [this.$slots.default]);
    }
  }]);

  return SwitchItem;
}(form_component_FormComponent);

__decorate([Prop({
  default: 'am-switch'
})], switch_item_SwitchItem.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: 'am-list'
})], switch_item_SwitchItem.prototype, "listPrefixCls", void 0);

__decorate([Prop({
  default: function _default() {
    return {};
  }
})], switch_item_SwitchItem.prototype, "switchProps", void 0);

__decorate([Prop({
  type: String
})], switch_item_SwitchItem.prototype, "title", void 0);

__decorate([Watch('value')], switch_item_SwitchItem.prototype, "valueChanged", null);

__decorate([Watch('state.value')], switch_item_SwitchItem.prototype, "stateValueChanged", null);

switch_item_SwitchItem = __decorate([vue_class_component_common_default()({
  name: 'SwitchItem'
})], switch_item_SwitchItem);
/* harmony default export */ var switch_item = (switch_item_SwitchItem);
// EXTERNAL MODULE: ./src/packages/switch/style/index.less
var switch_style = __webpack_require__("b084");

// CONCATENATED MODULE: ./src/packages/switch/style/index.tsx


// CONCATENATED MODULE: ./src/packages/switch/index.ts



var switch_Plugin = src_switch;

switch_Plugin.install = function (Vue) {
  Vue.component('MSwitch', src_switch);
  Vue.component('MSwitchItem', switch_item);
};

/* harmony default export */ var packages_switch = (switch_Plugin);
// EXTERNAL MODULE: ./src/packages/tabs/style/index.less
var tabs_style = __webpack_require__("cd3f");

// CONCATENATED MODULE: ./src/packages/tabs/style/index.tsx


// CONCATENATED MODULE: ./src/packages/tabs/index.ts


var tabs_Plugin = tabs_src;

tabs_Plugin.install = function (Vue) {
  Vue.component('MTabs', tabs_src);
};

/* harmony default export */ var packages_tabs = (tabs_Plugin);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.find-index.js
var es6_array_find_index = __webpack_require__("20d6");

// CONCATENATED MODULE: ./src/packages/tab-bar/src/tab.tsx
















var tab_Tab =
/*#__PURE__*/
function (_Vue) {
  _inherits(Tab, _Vue);

  function Tab() {
    _classCallCheck(this, Tab);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Tab).apply(this, arguments));
  }

  _createClass(Tab, [{
    key: "renderIcon",
    value: function renderIcon() {
      var h = this.$createElement;
      var dot = this.dot,
          badge = this.badge,
          selected = this.selected,
          selectedIcon = this.selectedIcon,
          icon = this.icon,
          title = this.title,
          prefixCls = this.prefixCls;
      var realIcon = selected ? selectedIcon : icon;
      var iconDom = realIcon ? isVNode(realIcon) ? realIcon : h(icon_res, helper_default()([{
        "class": "".concat(prefixCls, "-image")
      }, {
        "props": {
          type: realIcon
        }
      }])) : null;

      if (badge) {
        return h(packages_badge, {
          "attrs": {
            "text": badge
          },
          "class": "".concat(prefixCls, "-badge tab-badge")
        }, [' ', iconDom, ' ']);
      }

      if (dot) {
        return h(packages_badge, {
          "attrs": {
            "dot": true
          },
          "class": "".concat(prefixCls, "-badge tab-dot")
        }, [iconDom]);
      }

      return iconDom;
    }
  }, {
    key: "onClick",
    value: function onClick() {
      this.$emit('click');
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var title = this.title,
          prefixCls = this.prefixCls,
          selected = this.selected,
          unselectedTintColor = this.unselectedTintColor,
          tintColor = this.tintColor;
      var iconColor = selected ? tintColor : unselectedTintColor;
      return h("div", helper_default()([{}, this.dataAttrs, {
        "on": {
          "click": this.onClick
        },
        "class": "".concat(prefixCls)
      }]), [h("div", {
        "class": "".concat(prefixCls, "-icon"),
        "style": {
          color: iconColor
        }
      }, [this.renderIcon()]), h("p", {
        "class": "".concat(prefixCls, "-title"),
        "style": {
          color: selected ? tintColor : unselectedTintColor
        }
      }, [title])]);
    }
  }]);

  return Tab;
}(external_Vue_default.a);

__decorate([Prop({
  type: Boolean
})], tab_Tab.prototype, "dot", void 0);

__decorate([Prop({
  type: [String, Number]
})], tab_Tab.prototype, "badge", void 0);

__decorate([Prop({
  type: Boolean
})], tab_Tab.prototype, "selected", void 0);

__decorate([Prop()], tab_Tab.prototype, "selectedIcon", void 0);

__decorate([Prop()], tab_Tab.prototype, "icon", void 0);

__decorate([Prop({
  type: String
})], tab_Tab.prototype, "title", void 0);

__decorate([Prop({
  type: String,
  default: 'am-tab-item'
})], tab_Tab.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String
})], tab_Tab.prototype, "unselectedTintColor", void 0);

__decorate([Prop({
  type: String
})], tab_Tab.prototype, "tintColor", void 0);

__decorate([Prop()], tab_Tab.prototype, "dataAttrs", void 0);

tab_Tab = __decorate([vue_class_component_common_default()({
  name: 'Tab'
})], tab_Tab);
/* harmony default export */ var src_tab = (tab_Tab);
// CONCATENATED MODULE: ./src/packages/tab-bar/src/item.tsx
















var tab_bar_src_item_Item =
/*#__PURE__*/
function (_Vue) {
  _inherits(Item, _Vue);

  function Item() {
    var _this;

    _classCallCheck(this, Item);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Item).apply(this, arguments));
    _this.index = -1;
    return _this;
  }

  _createClass(Item, [{
    key: "mounted",
    value: function mounted() {
      var _this2 = this;

      var tabs = this.$parent.$children.filter(function (it) {
        return it.$vnode.componentOptions.tag === _this2.$vnode.componentOptions.tag;
      });
      this.index = tabs.findIndex(function (it) {
        return it['_uid'] === _this2['_uid'];
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var h = arguments[0];
      var _this$tabBar = this.tabBar,
          tintColor = _this$tabBar.tintColor,
          unselectedTintColor = _this$tabBar.unselectedTintColor;
      var icon = this.$slots.icon ? this.$slots.icon[0] : this.icon;
      var selectedIcon = this.$slots.selectedIcon ? this.$slots.selectedIcon : this.selectedIcon || icon;

      var props = assign_default()({}, this.$props, {
        prefixCls: "".concat(this.prefixCls, "-tab"),
        tintColor: tintColor,
        unselectedTintColor: unselectedTintColor,
        icon: icon,
        selectedIcon: selectedIcon,
        selected: this.sSelected
      });

      return h(src_tab, helper_default()([{}, {
        "props": props
      }, {
        "on": {
          "click": function click(e) {
            _this3.tabBar.setCurrentTab(_this3.index);

            _this3.$emit('click');
          }
        },
        "attrs": {
          "dataAttrs": get_data_attr(this.$props)
        }
      }]), [this.$slots.default]);
    }
  }, {
    key: "sSelected",
    get: function get() {
      return this.selected !== undefined ? this.selected : this.index === this.store.currentTab;
    }
  }]);

  return Item;
}(external_Vue_default.a);

__decorate([Prop({
  type: [String, Number]
})], tab_bar_src_item_Item.prototype, "badge", void 0);

__decorate([Prop({
  type: Boolean,
  default: undefined
})], tab_bar_src_item_Item.prototype, "selected", void 0);

__decorate([Prop({
  type: [String, Object]
})], tab_bar_src_item_Item.prototype, "icon", void 0);

__decorate([Prop({
  type: [String, Object]
})], tab_bar_src_item_Item.prototype, "selectedIcon", void 0);

__decorate([Prop({
  type: String,
  default: ''
})], tab_bar_src_item_Item.prototype, "title", void 0);

__decorate([Prop({
  type: Boolean
})], tab_bar_src_item_Item.prototype, "dot", void 0);

__decorate([Prop({
  type: String,
  default: 'am-tab-bar'
})], tab_bar_src_item_Item.prototype, "prefixCls", void 0);

__decorate([Inject('store')], tab_bar_src_item_Item.prototype, "store", void 0);

__decorate([Inject('tabBar')], tab_bar_src_item_Item.prototype, "tabBar", void 0);

tab_bar_src_item_Item = __decorate([vue_class_component_common_default()({
  name: 'Item'
})], tab_bar_src_item_Item);
/* harmony default export */ var tab_bar_src_item = (tab_bar_src_item_Item);
// CONCATENATED MODULE: ./src/packages/tab-bar/src/index.tsx















var src_TabBar =
/*#__PURE__*/
function (_Vue) {
  _inherits(TabBar, _Vue);

  function TabBar() {
    var _this;

    _classCallCheck(this, TabBar);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(TabBar).apply(this, arguments));
    _this.tabBar = _assertThisInitialized(_this);
    _this.store = {
      currentTab: -10000
    };
    _this.content = [];
    return _this;
  }

  _createClass(TabBar, [{
    key: "valueChanged",
    value: function valueChanged(value) {
      this.store.currentTab = value;
    }
  }, {
    key: "setCurrentTab",
    value: function setCurrentTab(tab) {
      this.store.currentTab = tab;
    }
  }, {
    key: "currentTabChanged",
    value: function currentTabChanged(value) {
      if (this.$listeners.input) {
        this.$emit('input', value);
      }

      console.log(this.store.currentTab);
    }
  }, {
    key: "renderTabBar",
    value: function renderTabBar() {
      var h = this.$createElement;
      var cls = "".concat(this.prefixCls, "-bar");

      if (this.hidden) {
        cls += " ".concat(this.prefixCls, "-bar-hidden-").concat(this.tabBarPosition);
      }

      return h("div", {
        "class": cls,
        "style": {
          backgroundColor: this.barTintColor
        }
      }, [this.$slots.default]);
    }
  }, {
    key: "getTabs",
    value: function getTabs() {
      var _this2 = this;

      return this.$slots.default.map(function (c, index) {
        var props = assign_default()({}, c.componentOptions.propsData);

        if (props.icon && !props.selectedIcon) {
          props.selectedIcon = props.icon;
        }

        return {
          props: props,
          onClick: function onClick() {
            _this2.store.currentTab = index;
          }
        };
      });
    }
  }, {
    key: "mounted",
    value: function mounted() {
      if (this.$slots.default) {
        this.content = this.$slots.default.filter(function (it) {
          return it.context;
        }).map(function (it) {
          return it.componentInstance.$slots.default || it.componentInstance.$slots.content || '';
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls,
          animated = this.animated,
          swipeable = this.swipeable,
          noRenderContent = this.noRenderContent,
          prerenderingSiblingsNumber = this.prerenderingSiblingsNumber,
          tabBarPosition = this.tabBarPosition;
      var tabs = this.getTabs();
      return h("div", {
        "class": prefixCls
      }, [h(packages_tabs, {
        "attrs": {
          "tabs": tabs,
          "renderTabBar": this.renderTabBar,
          "tabBarPosition": tabBarPosition,
          "page": this.store.currentTab < 0 ? undefined : this.store.currentTab,
          "animated": animated,
          "swipeable": swipeable,
          "noRenderContent": noRenderContent,
          "prerenderingSiblingsNumber": prerenderingSiblingsNumber
        }
      }, [this.content])]);
    }
  }]);

  return TabBar;
}(external_Vue_default.a);

src_TabBar.Item = tab_bar_src_item;

__decorate([Prop({
  default: 'am-tab-bar'
})], src_TabBar.prototype, "prefixCls", void 0);

__decorate([Prop()], src_TabBar.prototype, "className", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_TabBar.prototype, "hidden", void 0);

__decorate([Prop({
  type: String,
  default: '正在加载'
})], src_TabBar.prototype, "placeholder", void 0);

__decorate([Prop()], src_TabBar.prototype, "noRenderContent", void 0);

__decorate([Prop({
  type: Number,
  default: 1
})], src_TabBar.prototype, "prerenderingSiblingsNumber", void 0);

__decorate([Prop({
  type: String,
  default: 'white'
})], src_TabBar.prototype, "barTintColor", void 0);

__decorate([Prop({
  type: String,
  default: '#108ee9'
})], src_TabBar.prototype, "tintColor", void 0);

__decorate([Prop({
  type: String,
  default: '#888'
})], src_TabBar.prototype, "unselectedTintColor", void 0);

__decorate([Prop({
  type: String,
  default: 'bottom'
})], src_TabBar.prototype, "tabBarPosition", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_TabBar.prototype, "animated", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_TabBar.prototype, "swipeable", void 0);

__decorate([Provide('tabBar')], src_TabBar.prototype, "tabBar", void 0);

__decorate([Provide('store')], src_TabBar.prototype, "store", void 0);

__decorate([Prop({
  type: [Number, String]
})], src_TabBar.prototype, "value", void 0);

__decorate([Watch('value', {
  immediate: true
})], src_TabBar.prototype, "valueChanged", null);

__decorate([Watch('store.currentTab')], src_TabBar.prototype, "currentTabChanged", null);

src_TabBar = __decorate([vue_class_component_common_default()({
  name: 'MTabBar'
})], src_TabBar);
/* harmony default export */ var tab_bar_src = (src_TabBar);
// EXTERNAL MODULE: ./src/packages/tab-bar/style/index.less
var tab_bar_style = __webpack_require__("267e");

// CONCATENATED MODULE: ./src/packages/tab-bar/style/index.tsx




// CONCATENATED MODULE: ./src/packages/tab-bar/index.ts


var tab_bar_Plugin = tab_bar_src;

tab_bar_Plugin.install = function (Vue) {
  Vue.component('MTabBar', tab_bar_src);
  Vue.component('MTabBarItem', tab_bar_src.Item);
};

/* harmony default export */ var tab_bar = (tab_bar_Plugin);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.small.js
var es6_string_small = __webpack_require__("f386");

// CONCATENATED MODULE: ./src/packages/tag/src/index.tsx

















var src_Tag =
/*#__PURE__*/
function (_Vue) {
  _inherits(Tag, _Vue);

  function Tag() {
    var _this;

    _classCallCheck(this, Tag);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Tag).apply(this, arguments));
    _this.state = {
      selected: _this.selected,
      closed: false
    };
    return _this;
  }

  _createClass(Tag, [{
    key: "selectedChanged",
    value: function selectedChanged(selected) {
      this.state.selected = selected;
    }
  }, {
    key: "onClick",
    value: function onClick() {
      var disabled = this.disabled;

      if (disabled) {
        return;
      }

      var isSelect = this.state.selected;
      this.state.selected = !isSelect;
      this.$emit('change', !isSelect);
    }
  }, {
    key: "onTagClose",
    value: function onTagClose() {
      this.state.closed = true;
      this.$emit('close');
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          disabled = this.disabled,
          closable = this.closable,
          small = this.small;
      var wrapCls = classnames_default()(prefixCls, (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-normal"), !disabled && (!this.state.selected || small || closable)), _defineProperty(_classnames, "".concat(prefixCls, "-small"), small), _defineProperty(_classnames, "".concat(prefixCls, "-active"), this.state.selected && !disabled && !small && !closable), _defineProperty(_classnames, "".concat(prefixCls, "-disabled"), disabled), _defineProperty(_classnames, "".concat(prefixCls, "-closable"), closable), _classnames));
      var closableDom = closable && !disabled && !small ? h(feedback, {
        "attrs": {
          "activeClassName": "".concat(prefixCls, "-close-active")
        }
      }, [h("div", {
        "class": "".concat(prefixCls, "-close"),
        "attrs": {
          "role": "button",
          "aria-label": "remove tag"
        },
        "on": {
          "click": this.onTagClose.bind(this)
        }
      }, [h(packages_icon, {
        "attrs": {
          "type": "cross-circle",
          "size": "xs",
          "aria-hidden": "true"
        }
      })])]) : null;
      return !this.state.closed ? h("div", helper_default()([{}, get_data_attr(this.$props), {
        "class": wrapCls,
        "on": {
          "click": this.onClick.bind(this)
        }
      }]), [h("div", {
        "class": "".concat(prefixCls, "-text")
      }, [this.$slots.default]), closableDom]) : null;
    }
  }]);

  return Tag;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-tag'
})], src_Tag.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Tag.prototype, "disabled", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Tag.prototype, "selected", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Tag.prototype, "closable", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Tag.prototype, "small", void 0);

__decorate([Watch('selected')], src_Tag.prototype, "selectedChanged", null);

src_Tag = __decorate([vue_class_component_common_default()({
  name: 'Tag'
})], src_Tag);
/* harmony default export */ var tag_src = (src_Tag);
// EXTERNAL MODULE: ./src/packages/tag/style/index.css
var tag_style = __webpack_require__("9bac");

// CONCATENATED MODULE: ./src/packages/tag/style/index.ts

// CONCATENATED MODULE: ./src/packages/tag/index.ts



tag_src.install = function (Vue) {
  Vue.component('MTag', tag_src);
};

/* harmony default export */ var tag = (tag_src);
// CONCATENATED MODULE: ./src/packages/textarea/src/index.tsx




















function fixControlledValue(value) {
  if (typeof value === 'undefined' || value === null) {
    return '';
  }

  return value;
}

var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]|\n/g;

function countSymbols() {
  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return text.replace(regexAstralSymbols, '_').length;
}

var src_Textarea =
/*#__PURE__*/
function (_FormComponent) {
  _inherits(Textarea, _FormComponent);

  function Textarea() {
    var _this;

    _classCallCheck(this, Textarea);

    _this = _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(Textarea).apply(this, arguments));
    _this.state = {
      focus: false,
      value: _this.value || ''
    };
    return _this;
  }

  _createClass(Textarea, [{
    key: "focus",
    value: function focus() {
      this.textareaRef.focus();
    }
  }, {
    key: "valueChanged",
    value: function valueChanged(value) {
      this.state.value = fixControlledValue(value);
    }
  }, {
    key: "mounted",
    value: function mounted() {
      if (this.autoHeight) {
        this.reAlignHeight();
      }
    }
  }, {
    key: "updated",
    value: function updated() {
      if (this.autoHeight && this.state.focus) {
        this.reAlignHeight();
      }
    }
  }, {
    key: "reAlignHeight",
    value: function reAlignHeight() {
      var textareaDom = this.textareaRef;
      textareaDom.style.height = ''; // 字数减少时能自动减小高度

      textareaDom.style.height = "".concat(textareaDom.scrollHeight, "px");
    }
  }, {
    key: "beforeDestroy",
    value: function beforeDestroy() {
      if (this.debounceTimeout) {
        clearTimeout(this.debounceTimeout);
        this.debounceTimeout = null;
      }
    }
  }, {
    key: "stateValueChanged",
    value: function stateValueChanged(value) {
      this.$emit('input', value);
    }
  }, {
    key: "onChange",
    value: function onChange(e) {
      var value = e.target.value;
      this.state.value = value;
      this.$emit('change', value);
    }
  }, {
    key: "onBlur",
    value: function onBlur(e) {
      var _this2 = this;

      this.debounceTimeout = setTimeout(function () {
        if (document.activeElement !== _this2.textareaRef) {
          _this2.state.focus = false;
        }
      }, 150);
      var value = e.currentTarget.value; // fix autoFocus item blur with flash

      setTimeout(function () {
        // fix ios12 wechat browser click failure after input
        if (document.body) {
          document.body.scrollTop = document.body.scrollTop;
        }
      }, 100);
      this.$emit('blur', value);
    }
  }, {
    key: "onFocus",
    value: function onFocus(e) {
      if (this.debounceTimeout) {
        clearTimeout(this.debounceTimeout);
        this.debounceTimeout = null;
      }

      this.state.focus = true;
      var value = e.currentTarget.value;
      this.$emit('focus', value);
    }
  }, {
    key: "clearInput",
    value: function clearInput() {
      this.state.value = '';
      this.$emit('change', '');
    }
  }, {
    key: "onInput",
    value: function onInput(e) {
      this.state.value = e.target.value;

      if (this.autoHeight && this.state.focus) {
        this.reAlignHeight();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _classnames;

      var h = arguments[0];
      var prefixCls = this.prefixCls,
          prefixListCls = this.prefixListCls,
          editable = this.editable,
          clearable = this.clearable,
          count = this.count,
          labelNumber = this.labelNumber,
          title = this.title,
          autoHeight = this.autoHeight,
          disabled = this.disabled;
      var _this$state = this.state,
          value = _this$state.value,
          focus = _this$state.focus;
      var hasCount = count > 0 && this.rows > 1;
      var wrapCls = classnames_default()("".concat(prefixListCls, "-item"), "".concat(prefixCls, "-item"), (_classnames = {}, _defineProperty(_classnames, "".concat(prefixCls, "-disabled"), disabled), _defineProperty(_classnames, "".concat(prefixCls, "-item-single-line"), this.rows === 1 && !autoHeight), _defineProperty(_classnames, "".concat(prefixCls, "-focus"), focus), _defineProperty(_classnames, "".concat(prefixCls, "-has-count"), hasCount), _classnames));
      var characterLength = countSymbols(value);
      var lengthCtrlProps = {};

      if (count > 0) {
        // Note: If in the iOS environment of dev-tools, It will fail.
        if (IS_IOS) {
          var entValue = value ? value.replace(regexAstralSymbols, '_') : '';
          var entLen = entValue ? entValue.split('_').length - 1 : 0;
          lengthCtrlProps.maxLength = count + entLen - characterLength + (value ? value.length : 0);
        } else {
          lengthCtrlProps.maxLength = count - characterLength + (value ? value.length : 0);
        }
      }

      return h(list.Item, {
        "class": wrapCls,
        "attrs": {
          "required": this.required,
          "disabled": this.isDisabled,
          "title": title
        }
      }, [h("div", {
        "class": "".concat(prefixCls, "-control"),
        "slot": "extra"
      }, [h("textarea", helper_default()([{
        "ref": "textarea"
      }, lengthCtrlProps, {
        "attrs": {
          "rows": this.rows,
          "disabled": this.isDisabled,
          "name": this.name,
          "placeholder": this.placeholder,
          "readOnly": !editable
        },
        "domProps": {
          "value": value
        },
        "on": {
          "input": this.onInput,
          "change": this.onChange,
          "blur": this.onBlur,
          "focus": this.onFocus
        }
      }])), clearable && editable && value && characterLength > 0 && // @ts-ignore
      h(feedback, {
        "attrs": {
          "activeClassName": "".concat(prefixCls, "-clear-active")
        }
      }, [h("div", {
        "class": "".concat(prefixCls, "-clear"),
        "on": {
          "click": this.clearInput
        }
      })]), hasCount && h("span", {
        "class": "".concat(prefixCls, "-count")
      }, [h("span", [value ? characterLength : 0]), "/", count])])]);
    }
  }, {
    key: "textareaRef",
    get: function get() {
      return this.$refs['textarea'];
    }
  }]);

  return Textarea;
}(form_component_FormComponent);

__decorate([Prop({
  type: String,
  default: 'am-textarea'
})], src_Textarea.prototype, "prefixCls", void 0);

__decorate([Prop({
  type: String,
  default: 'am-list'
})], src_Textarea.prototype, "prefixListCls", void 0);

__decorate([Prop({
  type: String
})], src_Textarea.prototype, "title", void 0);

__decorate([Prop({
  type: Number
})], src_Textarea.prototype, "maxLength", void 0);

__decorate([Prop({
  type: String
})], src_Textarea.prototype, "name", void 0);

__decorate([Prop({
  default: ''
})], src_Textarea.prototype, "placeholder", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Textarea.prototype, "clearable", void 0);

__decorate([Prop({
  type: Number,
  default: 1
})], src_Textarea.prototype, "rows", void 0);

__decorate([Prop()], src_Textarea.prototype, "count", void 0);

__decorate([Prop({
  type: Boolean,
  default: false
})], src_Textarea.prototype, "autoHeight", void 0);

__decorate([Prop({
  type: Number,
  default: 5
})], src_Textarea.prototype, "labelNumber", void 0);

__decorate([Watch('value')], src_Textarea.prototype, "valueChanged", null);

__decorate([Watch('state.value')], src_Textarea.prototype, "stateValueChanged", null);

src_Textarea = __decorate([vue_class_component_common_default()({
  name: 'MTextarea'
})], src_Textarea);
/* harmony default export */ var textarea_src = (src_Textarea);
// EXTERNAL MODULE: ./src/packages/textarea/style/index.less
var textarea_style = __webpack_require__("e6ea");

// CONCATENATED MODULE: ./src/packages/textarea/style/index.tsx



// CONCATENATED MODULE: ./src/packages/textarea/index.ts


var textarea_Plugin = textarea_src;

textarea_Plugin.install = function (Vue) {
  Vue.component('MTextarea', textarea_src);
};

/* harmony default export */ var packages_textarea = (textarea_Plugin);
// CONCATENATED MODULE: ./src/packages/time-directive/src/index.ts
var src_createContent = function createContent(el, binding, vnode) {
  var bindValue = binding.value;
  var text = '';
  var format = 'YYYY-MM-DD HH:mm:ss';
  var date;

  if (typeof bindValue === 'string') {
    var reg1 = /\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z/;

    if (reg1.test(bindValue)) {
      date = moment(bindValue, 'YYYY-MM-DDTHH:mm:ss.sZ').toDate();
      date.setHours(date.getHours() + 8);
    } else {
      text = bindValue;
    }
  } else {
    var value = binding.value;
    date = new Date(value);

    if (!value) {
      text = '';
    } else {
      text = moment(value).format(format);

      if (vnode.data.attrs) {
        if (vnode.data.attrs.format) {
          text = moment(value).format(vnode.data.attrs.format);
        }
      }
    }
  } // @ts-ignore


  if (binding.modifiers.pretty && date) {
    var now = new Date();
    var nowTime = now.getTime();
    var difference = nowTime - date.getTime();

    if (difference > 0) {
      if (difference < 1000) {
        text = '刚刚';
      } else if (difference < 60 * 1000) {
        text = "".concat(Math.floor(difference / 1000), "\u79D2\u524D");
      } else if (difference < 60 * 1000 * 60) {
        text = "".concat(Math.floor(difference / 1000 / 60), "\u5206\u949F\u524D");
      } else if (now.getFullYear() === date.getFullYear()) {
        if (now.getMonth() === date.getMonth() && now.getDay() === date.getDay()) {
          text = moment(date).format('HH:mm:ss');
        } else {
          text = moment(date).format('MM-DD HH:mm:ss');
        }
      }
    } else if (now.getFullYear() === date.getFullYear()) {
      if (now.getMonth() === date.getMonth() && now.getDay() === date.getDay()) {
        text = moment(date).format('HH:mm:ss');
      } else {
        text = moment(date).format('MM-DD HH:mm:ss');
      }
    }
  }

  el.innerHTML = text;
};

/* harmony default export */ var time_directive_src = ({
  bind: function bind(el, binding, vnode) {
    src_createContent(el, binding, vnode);
  },
  update: function update(el, binding, vnode) {
    src_createContent(el, binding, vnode);
  }
});
// CONCATENATED MODULE: ./src/packages/time-directive/index.ts

/* harmony default export */ var time_directive = ({
  install: function install(Vue) {
    Vue.directive('time', time_directive_src);
  }
});
// CONCATENATED MODULE: ./src/packages/white-space/src/index.tsx











var src_WhiteSpace =
/*#__PURE__*/
function (_Vue) {
  _inherits(WhiteSpace, _Vue);

  function WhiteSpace() {
    _classCallCheck(this, WhiteSpace);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(WhiteSpace).apply(this, arguments));
  }

  _createClass(WhiteSpace, [{
    key: "render",
    value: function render() {
      var _this = this;

      var h = arguments[0];
      var wrapCls = classnames_default()(this.prefixCls, "".concat(this.prefixCls, "-").concat(this.size));
      return h("div", {
        "class": wrapCls,
        "on": {
          "click": function click(e) {
            _this.$emit('click', e);
          }
        }
      });
    }
  }]);

  return WhiteSpace;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'md'
})], src_WhiteSpace.prototype, "size", void 0);

__decorate([Prop({
  type: String,
  default: 'am-whitespace'
})], src_WhiteSpace.prototype, "prefixCls", void 0);

src_WhiteSpace = __decorate([vue_class_component_common_default()({
  name: 'WhiteSpace'
})], src_WhiteSpace);
/* harmony default export */ var white_space_src = (src_WhiteSpace);
// EXTERNAL MODULE: ./src/packages/white-space/style/index.less
var white_space_style = __webpack_require__("86e5");

// CONCATENATED MODULE: ./src/packages/white-space/style/index.tsx


// CONCATENATED MODULE: ./src/packages/white-space/index.ts


var white_space_Plugin = white_space_src;

white_space_Plugin.install = function (Vue) {
  Vue.component('MWhiteSpace', white_space_src);
};

/* harmony default export */ var white_space = (white_space_Plugin);
// CONCATENATED MODULE: ./src/packages/wing-blank/src/index.tsx











var src_WingBlank =
/*#__PURE__*/
function (_Vue) {
  _inherits(WingBlank, _Vue);

  function WingBlank() {
    _classCallCheck(this, WingBlank);

    return _possibleConstructorReturn(this, getPrototypeOf_getPrototypeOf(WingBlank).apply(this, arguments));
  }

  _createClass(WingBlank, [{
    key: "render",
    value: function render() {
      var h = arguments[0];
      var prefixCls = this.prefixCls,
          size = this.size;
      var wrapCls = classnames_default()(prefixCls, "".concat(prefixCls, "-").concat(size));
      return h("div", {
        "class": wrapCls
      }, [this.$slots.default]);
    }
  }]);

  return WingBlank;
}(external_Vue_default.a);

__decorate([Prop({
  type: String,
  default: 'am-wingblank'
})], src_WingBlank.prototype, "prefixCls", void 0);

__decorate([Prop({
  default: 'lg'
})], src_WingBlank.prototype, "size", void 0);

src_WingBlank = __decorate([vue_class_component_common_default()({
  name: 'WingBlank'
})], src_WingBlank);
/* harmony default export */ var wing_blank_src = (src_WingBlank);
// EXTERNAL MODULE: ./src/packages/wing-blank/style/index.less
var wing_blank_style = __webpack_require__("eef0");

// CONCATENATED MODULE: ./src/packages/wing-blank/style/index.tsx


// CONCATENATED MODULE: ./src/packages/wing-blank/index.ts



wing_blank_src.install = function (Vue) {
  Vue.component('MWingBlank', wing_blank_src);
};

/* harmony default export */ var wing_blank = (wing_blank_src);
// CONCATENATED MODULE: ./src/packages/index.ts


// 导入颜色选择器组件



















































 // 注册moment中文国际化文案

if (window.moment) {
  window.moment.updateLocale('zh-cn', moment_zh_CN);
}

if (window.AntDesignIcons) {
  // 注册 ant design icons, 共721个icon
  var packages_icons = window.AntDesignIcons;

  keys_default()(packages_icons).forEach(function (icon) {
    es.add(packages_icons[icon]);
  });
} // 存储组件列表


var components = [accordion, action_sheet, activity_indicator, packages_badge, packages_button, packages_calendar, card, packages_carousel, packages_chart, packages_checkbox, packages_date_picker, packages_date_picker_view, packages_drawer, packages_flex, grid, packages_icon, image_picker, packages_input, list, loading_directive, packages_menu, packages_modal, nav_bar, notice_bar, pagination, packages_picker, packages_popover, packages_popup, progress, pull_refresh, packages_radio, packages_range, packages_result, search_bar, segmented_control, slider, stepper, steps, packages_switch, tab_bar, packages_tabs, tag, packages_textarea, time_directive, packages_toast, white_space, wing_blank]; // 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册

var packages_install = function install(Vue) {
  // 判断是否可以安装
  // if (install.installed) return
  // 遍历注册全局组件
  components.map(function (component) {
    return Vue.use(component);
  });
}; // 判断是否是直接引入文件


if (typeof window !== 'undefined' && window.Vue) {
  packages_install(window.Vue);
}


/* harmony default export */ var src_packages = ({
  // 导出的对象必须具有 install，才能被 Vue.use() 方法安装
  install: packages_install,
  Global: global,
  HttpMethod: http_method,
  Accordion: accordion,
  ActionSheet: action_sheet,
  ActivityIndicator: activity_indicator,
  ApiProxy: api_proxy,
  Badge: packages_badge,
  Button: packages_button,
  Calendar: packages_calendar,
  Card: card,
  Carousel: packages_carousel,
  Chart: packages_chart,
  Checkbox: packages_checkbox,
  DatePicker: packages_date_picker,
  DatePickerView: packages_date_picker_view,
  Drawer: packages_drawer,
  Flex: packages_flex,
  Grid: grid,
  Icon: packages_icon,
  ImagePicker: image_picker,
  Input: packages_input,
  List: list,
  LoadingDirective: loading_directive,
  Menu: packages_menu,
  Modal: packages_modal,
  NavBar: nav_bar,
  NoticeBar: notice_bar,
  Pagination: pagination,
  Picker: packages_picker,
  Popover: packages_popover,
  Popup: packages_popup,
  Progress: progress,
  PullRefresh: pull_refresh,
  Radio: packages_radio,
  Range: packages_range,
  Result: packages_result,
  SearchBar: search_bar,
  SegmentedControl: segmented_control,
  Slider: slider,
  Stepper: stepper,
  Steps: steps,
  Switch: packages_switch,
  TabBar: tab_bar,
  Tabs: packages_tabs,
  Tag: tag,
  Textarea: packages_textarea,
  TimeDirective: time_directive,
  Toast: packages_toast,
  WhiteSpace: white_space,
  WingBlank: wing_blank
});
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js
/* concated harmony reexport Global */__webpack_require__.d(__webpack_exports__, "Global", function() { return global; });
/* concated harmony reexport HttpMethod */__webpack_require__.d(__webpack_exports__, "HttpMethod", function() { return http_method; });
/* concated harmony reexport Accordion */__webpack_require__.d(__webpack_exports__, "Accordion", function() { return accordion; });
/* concated harmony reexport ActionSheet */__webpack_require__.d(__webpack_exports__, "ActionSheet", function() { return action_sheet; });
/* concated harmony reexport ActivityIndicator */__webpack_require__.d(__webpack_exports__, "ActivityIndicator", function() { return activity_indicator; });
/* concated harmony reexport ApiProxy */__webpack_require__.d(__webpack_exports__, "ApiProxy", function() { return api_proxy; });
/* concated harmony reexport Badge */__webpack_require__.d(__webpack_exports__, "Badge", function() { return packages_badge; });
/* concated harmony reexport Button */__webpack_require__.d(__webpack_exports__, "Button", function() { return packages_button; });
/* concated harmony reexport Calendar */__webpack_require__.d(__webpack_exports__, "Calendar", function() { return packages_calendar; });
/* concated harmony reexport Card */__webpack_require__.d(__webpack_exports__, "Card", function() { return card; });
/* concated harmony reexport Carousel */__webpack_require__.d(__webpack_exports__, "Carousel", function() { return packages_carousel; });
/* concated harmony reexport Chart */__webpack_require__.d(__webpack_exports__, "Chart", function() { return packages_chart; });
/* concated harmony reexport Checkbox */__webpack_require__.d(__webpack_exports__, "Checkbox", function() { return packages_checkbox; });
/* concated harmony reexport DatePicker */__webpack_require__.d(__webpack_exports__, "DatePicker", function() { return packages_date_picker; });
/* concated harmony reexport DatePickerView */__webpack_require__.d(__webpack_exports__, "DatePickerView", function() { return packages_date_picker_view; });
/* concated harmony reexport Drawer */__webpack_require__.d(__webpack_exports__, "Drawer", function() { return packages_drawer; });
/* concated harmony reexport Flex */__webpack_require__.d(__webpack_exports__, "Flex", function() { return packages_flex; });
/* concated harmony reexport Grid */__webpack_require__.d(__webpack_exports__, "Grid", function() { return grid; });
/* concated harmony reexport Icon */__webpack_require__.d(__webpack_exports__, "Icon", function() { return packages_icon; });
/* concated harmony reexport ImagePicker */__webpack_require__.d(__webpack_exports__, "ImagePicker", function() { return image_picker; });
/* concated harmony reexport Input */__webpack_require__.d(__webpack_exports__, "Input", function() { return packages_input; });
/* concated harmony reexport List */__webpack_require__.d(__webpack_exports__, "List", function() { return list; });
/* concated harmony reexport LoadingDirective */__webpack_require__.d(__webpack_exports__, "LoadingDirective", function() { return loading_directive; });
/* concated harmony reexport Menu */__webpack_require__.d(__webpack_exports__, "Menu", function() { return packages_menu; });
/* concated harmony reexport Modal */__webpack_require__.d(__webpack_exports__, "Modal", function() { return packages_modal; });
/* concated harmony reexport NavBar */__webpack_require__.d(__webpack_exports__, "NavBar", function() { return nav_bar; });
/* concated harmony reexport NoticeBar */__webpack_require__.d(__webpack_exports__, "NoticeBar", function() { return notice_bar; });
/* concated harmony reexport Pagination */__webpack_require__.d(__webpack_exports__, "Pagination", function() { return pagination; });
/* concated harmony reexport Picker */__webpack_require__.d(__webpack_exports__, "Picker", function() { return packages_picker; });
/* concated harmony reexport Popover */__webpack_require__.d(__webpack_exports__, "Popover", function() { return packages_popover; });
/* concated harmony reexport Popup */__webpack_require__.d(__webpack_exports__, "Popup", function() { return packages_popup; });
/* concated harmony reexport Progress */__webpack_require__.d(__webpack_exports__, "Progress", function() { return progress; });
/* concated harmony reexport PullRefresh */__webpack_require__.d(__webpack_exports__, "PullRefresh", function() { return pull_refresh; });
/* concated harmony reexport Radio */__webpack_require__.d(__webpack_exports__, "Radio", function() { return packages_radio; });
/* concated harmony reexport Range */__webpack_require__.d(__webpack_exports__, "Range", function() { return packages_range; });
/* concated harmony reexport Result */__webpack_require__.d(__webpack_exports__, "Result", function() { return packages_result; });
/* concated harmony reexport SearchBar */__webpack_require__.d(__webpack_exports__, "SearchBar", function() { return search_bar; });
/* concated harmony reexport SegmentedControl */__webpack_require__.d(__webpack_exports__, "SegmentedControl", function() { return segmented_control; });
/* concated harmony reexport Slider */__webpack_require__.d(__webpack_exports__, "Slider", function() { return slider; });
/* concated harmony reexport Stepper */__webpack_require__.d(__webpack_exports__, "Stepper", function() { return stepper; });
/* concated harmony reexport Steps */__webpack_require__.d(__webpack_exports__, "Steps", function() { return steps; });
/* concated harmony reexport Switch */__webpack_require__.d(__webpack_exports__, "Switch", function() { return packages_switch; });
/* concated harmony reexport TabBar */__webpack_require__.d(__webpack_exports__, "TabBar", function() { return tab_bar; });
/* concated harmony reexport Tabs */__webpack_require__.d(__webpack_exports__, "Tabs", function() { return packages_tabs; });
/* concated harmony reexport Tag */__webpack_require__.d(__webpack_exports__, "Tag", function() { return tag; });
/* concated harmony reexport Textarea */__webpack_require__.d(__webpack_exports__, "Textarea", function() { return packages_textarea; });
/* concated harmony reexport TimeDirective */__webpack_require__.d(__webpack_exports__, "TimeDirective", function() { return time_directive; });
/* concated harmony reexport Toast */__webpack_require__.d(__webpack_exports__, "Toast", function() { return packages_toast; });
/* concated harmony reexport WhiteSpace */__webpack_require__.d(__webpack_exports__, "WhiteSpace", function() { return white_space; });
/* concated harmony reexport WingBlank */__webpack_require__.d(__webpack_exports__, "WingBlank", function() { return wing_blank; });


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src_packages);



/***/ }),

/***/ "fba5":
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__("cb5a");

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),

/***/ "fde4":
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__("bf90");
var $Object = __webpack_require__("584a").Object;
module.exports = function getOwnPropertyDescriptor(it, key) {
  return $Object.getOwnPropertyDescriptor(it, key);
};


/***/ }),

/***/ "fdef":
/***/ (function(module, exports) {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "fe1e":
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
__webpack_require__("7075")('Map');


/***/ }),

/***/ "ffc9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  year: '年',
  month: '月',
  day: '日',
  hour: '时',
  minute: '分',
  am: '上午',
  pm: '下午'
});

/***/ })

/******/ });
//# sourceMappingURL=antdm.common.js.map